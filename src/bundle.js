var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __require = ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});

// node_modules/@babel/runtime/helpers/arrayWithHoles.js
var require_arrayWithHoles = __commonJS((exports, module) => {
  var _arrayWithHoles = function(arr) {
    if (Array.isArray(arr))
      return arr;
  };
  module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/iterableToArrayLimit.js
var require_iterableToArrayLimit = __commonJS((exports, module) => {
  var _iterableToArrayLimit = function(r, l) {
    var t = r == null ? null : typeof Symbol != "undefined" && r[Symbol.iterator] || r["@@iterator"];
    if (t != null) {
      var e2, n, i, u, a = [], f = true, o = false;
      try {
        if (i = (t = t.call(r)).next, l === 0) {
          if (Object(t) !== t)
            return;
          f = false;
        } else
          for (;!(f = (e2 = i.call(t)).done) && (a.push(e2.value), a.length !== l); f = true)
            ;
      } catch (r2) {
        o = true, n = r2;
      } finally {
        try {
          if (!f && t["return"] != null && (u = t["return"](), Object(u) !== u))
            return;
        } finally {
          if (o)
            throw n;
        }
      }
      return a;
    }
  };
  module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS((exports, module) => {
  var _arrayLikeToArray = function(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len);i < len; i++)
      arr2[i] = arr[i];
    return arr2;
  };
  module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS((exports, module) => {
  var _unsupportedIterableToArray = function(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return arrayLikeToArray(o, minLen);
  };
  var arrayLikeToArray = require_arrayLikeToArray();
  module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/nonIterableRest.js
var require_nonIterableRest = __commonJS((exports, module) => {
  var _nonIterableRest = function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  };
  module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/slicedToArray.js
var require_slicedToArray = __commonJS((exports, module) => {
  var _slicedToArray = function(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
  };
  var arrayWithHoles = require_arrayWithHoles();
  var iterableToArrayLimit = require_iterableToArrayLimit();
  var unsupportedIterableToArray = require_unsupportedIterableToArray();
  var nonIterableRest = require_nonIterableRest();
  module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/classCallCheck.js
var require_classCallCheck = __commonJS((exports, module) => {
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS((exports, module) => {
  var _typeof = function(o) {
    "@babel/helpers - typeof";
    return module.exports = _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o2) {
      return typeof o2;
    } : function(o2) {
      return o2 && typeof Symbol == "function" && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
  };
  module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/toPrimitive.js
var require_toPrimitive = __commonJS((exports, module) => {
  var toPrimitive = function(t, r) {
    if (_typeof(t) != "object" || !t)
      return t;
    var e2 = t[Symbol.toPrimitive];
    if (e2 !== undefined) {
      var i = e2.call(t, r || "default");
      if (_typeof(i) != "object")
        return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (r === "string" ? String : Number)(t);
  };
  var _typeof = require_typeof()["default"];
  module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/toPropertyKey.js
var require_toPropertyKey = __commonJS((exports, module) => {
  var toPropertyKey = function(t) {
    var i = toPrimitive(t, "string");
    return _typeof(i) == "symbol" ? i : String(i);
  };
  var _typeof = require_typeof()["default"];
  var toPrimitive = require_toPrimitive();
  module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/@babel/runtime/helpers/createClass.js
var require_createClass = __commonJS((exports, module) => {
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  };
  var toPropertyKey = require_toPropertyKey();
  module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
});

// node_modules/automation-events/build/es5/bundle.js
var require_bundle = __commonJS((exports, module) => {
  (function(global2, factory) {
    typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require_slicedToArray(), require_classCallCheck(), require_createClass()) : typeof define === "function" && define.amd ? define(["exports", "@babel/runtime/helpers/slicedToArray", "@babel/runtime/helpers/classCallCheck", "@babel/runtime/helpers/createClass"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.automationEvents = {}, global2._slicedToArray, global2._classCallCheck, global2._createClass));
  })(exports, function(exports2, _slicedToArray, _classCallCheck, _createClass) {
    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {
      return {
        endTime,
        insertTime,
        type: "exponentialRampToValue",
        value
      };
    };
    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {
      return {
        endTime,
        insertTime,
        type: "linearRampToValue",
        value
      };
    };
    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {
      return {
        startTime,
        type: "setValue",
        value
      };
    };
    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {
      return {
        duration,
        startTime,
        type: "setValueCurve",
        values
      };
    };
    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {
      var { startTime, target, timeConstant } = _ref;
      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);
    };
    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {
      return automationEvent.type === "exponentialRampToValue";
    };
    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {
      return automationEvent.type === "linearRampToValue";
    };
    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {
      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);
    };
    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {
      return automationEvent.type === "setValue";
    };
    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {
      return automationEvent.type === "setValueCurve";
    };
    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {
      var automationEvent = automationEvents[index];
      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);
    };
    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {
      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];
    };
    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {
      return automationEvent.type === "cancelAndHold";
    };
    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {
      return automationEvent.type === "cancelScheduledValues";
    };
    var getEventTime = function getEventTime(automationEvent) {
      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
        return automationEvent.cancelTime;
      }
      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {
        return automationEvent.endTime;
      }
      return automationEvent.startTime;
    };
    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
      var { endTime, value } = _ref;
      if (valueAtStartTime === value) {
        return value;
      }
      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {
        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));
      }
      return 0;
    };
    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
      var { endTime, value } = _ref;
      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);
    };
    var interpolateValue = function interpolateValue(values, theoreticIndex) {
      var lowerIndex = Math.floor(theoreticIndex);
      var upperIndex = Math.ceil(theoreticIndex);
      if (lowerIndex === upperIndex) {
        return values[lowerIndex];
      }
      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
    };
    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {
      var { duration, startTime, values } = _ref;
      var theoreticIndex = (time - startTime) / duration * (values.length - 1);
      return interpolateValue(values, theoreticIndex);
    };
    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {
      return automationEvent.type === "setTarget";
    };
    var AutomationEventList = function(_Symbol$iterator) {
      function AutomationEventList2(defaultValue) {
        _classCallCheck(this, AutomationEventList2);
        this._automationEvents = [];
        this._currenTime = 0;
        this._defaultValue = defaultValue;
      }
      _createClass(AutomationEventList2, [{
        key: _Symbol$iterator,
        value: function value() {
          return this._automationEvents[Symbol.iterator]();
        }
      }, {
        key: "add",
        value: function add(automationEvent) {
          var eventTime = getEventTime(automationEvent);
          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
            var index = this._automationEvents.findIndex(function(currentAutomationEvent) {
              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {
                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;
              }
              return getEventTime(currentAutomationEvent) >= eventTime;
            });
            var removedAutomationEvent = this._automationEvents[index];
            if (index !== -1) {
              this._automationEvents = this._automationEvents.slice(0, index);
            }
            if (isCancelAndHoldAutomationEvent(automationEvent)) {
              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];
              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {
                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {
                  throw new Error("The internal list is malformed.");
                }
                var startTime = lastAutomationEvent === undefined ? removedAutomationEvent.insertTime : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);
                var startValue = lastAutomationEvent === undefined ? this._defaultValue : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;
                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);
                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);
                this._automationEvents.push(truncatedAutomationEvent);
              }
              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {
                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));
              }
              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {
                var duration = eventTime - lastAutomationEvent.startTime;
                var ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;
                var length = Math.max(2, 1 + Math.ceil(duration * ratio));
                var fraction = duration / (length - 1) * ratio;
                var values = lastAutomationEvent.values.slice(0, length);
                if (fraction < 1) {
                  for (var i = 1;i < length; i += 1) {
                    var factor = fraction * i % 1;
                    values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;
                  }
                }
                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);
              }
            }
          } else {
            var _index = this._automationEvents.findIndex(function(currentAutomationEvent) {
              return getEventTime(currentAutomationEvent) > eventTime;
            });
            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];
            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {
              return false;
            }
            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;
            if (_index === -1) {
              this._automationEvents.push(persistentAutomationEvent);
            } else {
              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {
                return false;
              }
              this._automationEvents.splice(_index, 0, persistentAutomationEvent);
            }
          }
          return true;
        }
      }, {
        key: "flush",
        value: function flush(time) {
          var index = this._automationEvents.findIndex(function(currentAutomationEvent) {
            return getEventTime(currentAutomationEvent) > time;
          });
          if (index > 1) {
            var remainingAutomationEvents = this._automationEvents.slice(index - 1);
            var firstRemainingAutomationEvent = remainingAutomationEvents[0];
            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {
              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));
            }
            this._automationEvents = remainingAutomationEvents;
          }
        }
      }, {
        key: "getValue",
        value: function getValue(time) {
          if (this._automationEvents.length === 0) {
            return this._defaultValue;
          }
          var indexOfNextEvent = this._automationEvents.findIndex(function(automationEvent) {
            return getEventTime(automationEvent) > time;
          });
          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];
          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;
          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];
          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {
            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);
          }
          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
            return currentAutomationEvent.value;
          }
          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {
            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {
              return getValueCurveValueAtTime(time, currentAutomationEvent);
            }
            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];
          }
          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
            return currentAutomationEvent.value;
          }
          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {
            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue), _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2), startTime = _getEndTimeAndValueOf2[0], value = _getEndTimeAndValueOf2[1];
            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);
          }
          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {
            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue), _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2), _startTime = _getEndTimeAndValueOf4[0], _value = _getEndTimeAndValueOf4[1];
            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);
          }
          return this._defaultValue;
        }
      }]);
      return AutomationEventList2;
    }(Symbol.iterator);
    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {
      return {
        cancelTime,
        type: "cancelAndHold"
      };
    };
    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {
      return {
        cancelTime,
        type: "cancelScheduledValues"
      };
    };
    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {
      return {
        endTime,
        type: "exponentialRampToValue",
        value
      };
    };
    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {
      return {
        endTime,
        type: "linearRampToValue",
        value
      };
    };
    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {
      return {
        startTime,
        target,
        timeConstant,
        type: "setTarget"
      };
    };
    exports2.AutomationEventList = AutomationEventList;
    exports2.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;
    exports2.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;
    exports2.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;
    exports2.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;
    exports2.createSetTargetAutomationEvent = createSetTargetAutomationEvent;
    exports2.createSetValueAutomationEvent = createSetValueAutomationEvent;
    exports2.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;
  });
});

// node_modules/p5/lib/p5.min.js
var require_p5_min = __commonJS((exports, module) => {
  /*! p5.js v1.9.0 November 28, 2023 */
  (function(e2) {
    typeof exports == "object" && typeof module != "undefined" ? module.exports = e2() : typeof define == "function" && define.amd ? define([], e2) : (typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this).p5 = e2();
  })(function() {
    var s, t, r;
    return function o(n, s2, i) {
      function a(t2, e3) {
        if (!s2[t2]) {
          if (!n[t2]) {
            var r2 = typeof __require == "function" && __require;
            if (!e3 && r2)
              return r2(t2, true);
            if (l)
              return l(t2, true);
            throw (e3 = new Error("Cannot find module '" + t2 + "'")).code = "MODULE_NOT_FOUND", e3;
          }
          r2 = s2[t2] = { exports: {} }, n[t2][0].call(r2.exports, function(e4) {
            return a(n[t2][1][e4] || e4);
          }, r2, r2.exports, o, n, s2, i);
        }
        return s2[t2].exports;
      }
      for (var l = typeof __require == "function" && __require, e2 = 0;e2 < i.length; e2++)
        a(i[e2]);
      return a;
    }({ 1: [function(e2, t2, r2) {
      r2.byteLength = function(e3) {
        var e3 = c(e3), t3 = e3[0], e3 = e3[1];
        return 3 * (t3 + e3) / 4 - e3;
      }, r2.toByteArray = function(e3) {
        var t3, r3, o2 = c(e3), n2 = o2[0], o2 = o2[1], s3 = new u(function(e4, t4) {
          return 3 * (e4 + t4) / 4 - t4;
        }(n2, o2)), i = 0, a2 = 0 < o2 ? n2 - 4 : n2;
        for (r3 = 0;r3 < a2; r3 += 4)
          t3 = l[e3.charCodeAt(r3)] << 18 | l[e3.charCodeAt(r3 + 1)] << 12 | l[e3.charCodeAt(r3 + 2)] << 6 | l[e3.charCodeAt(r3 + 3)], s3[i++] = t3 >> 16 & 255, s3[i++] = t3 >> 8 & 255, s3[i++] = 255 & t3;
        o2 === 2 && (t3 = l[e3.charCodeAt(r3)] << 2 | l[e3.charCodeAt(r3 + 1)] >> 4, s3[i++] = 255 & t3);
        o2 === 1 && (t3 = l[e3.charCodeAt(r3)] << 10 | l[e3.charCodeAt(r3 + 1)] << 4 | l[e3.charCodeAt(r3 + 2)] >> 2, s3[i++] = t3 >> 8 & 255, s3[i++] = 255 & t3);
        return s3;
      }, r2.fromByteArray = function(e3) {
        for (var t3, r3 = e3.length, o2 = r3 % 3, n2 = [], s3 = 0, i = r3 - o2;s3 < i; s3 += 16383)
          n2.push(function(e4, t4, r4) {
            for (var o3, n3 = [], s4 = t4;s4 < r4; s4 += 3)
              o3 = (e4[s4] << 16 & 16711680) + (e4[s4 + 1] << 8 & 65280) + (255 & e4[s4 + 2]), n3.push(function(e5) {
                return a[e5 >> 18 & 63] + a[e5 >> 12 & 63] + a[e5 >> 6 & 63] + a[63 & e5];
              }(o3));
            return n3.join("");
          }(e3, s3, i < s3 + 16383 ? i : s3 + 16383));
        o2 == 1 ? (t3 = e3[r3 - 1], n2.push(a[t3 >> 2] + a[t3 << 4 & 63] + "==")) : o2 == 2 && (t3 = (e3[r3 - 2] << 8) + e3[r3 - 1], n2.push(a[t3 >> 10] + a[t3 >> 4 & 63] + a[t3 << 2 & 63] + "="));
        return n2.join("");
      };
      for (var a = [], l = [], u = typeof Uint8Array != "undefined" ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, s2 = o.length;n < s2; ++n)
        a[n] = o[n], l[o.charCodeAt(n)] = n;
      function c(e3) {
        var t3 = e3.length;
        if (0 < t3 % 4)
          throw new Error("Invalid string. Length must be a multiple of 4");
        e3 = e3.indexOf("="), t3 = (e3 = e3 === -1 ? t3 : e3) === t3 ? 0 : 4 - e3 % 4;
        return [e3, t3];
      }
      l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63;
    }, {}], 2: [function(e2, t2, r2) {
    }, {}], 3: [function(e2, t2, r2) {
    }, {}], 4: [function(A, e2, L) {
      (function(d) {
        var S = A("base64-js"), s2 = A("ieee754"), e3 = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null, t2 = (L.Buffer = d, L.SlowBuffer = function(e4) {
          +e4 != e4 && (e4 = 0);
          return d.alloc(+e4);
        }, L.INSPECT_MAX_BYTES = 50, 2147483647);
        function l(e4) {
          if (t2 < e4)
            throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
          e4 = new Uint8Array(e4);
          return Object.setPrototypeOf(e4, d.prototype), e4;
        }
        function d(e4, t3, r3) {
          if (typeof e4 != "number")
            return o(e4, t3, r3);
          if (typeof t3 == "string")
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return i(e4);
        }
        function o(e4, t3, r3) {
          if (typeof e4 == "string") {
            var o2 = e4, n2 = t3;
            if (d.isEncoding(n2 = typeof n2 == "string" && n2 !== "" ? n2 : "utf8"))
              return s3 = 0 | h(o2, n2), i2 = l(s3), i2 = (o2 = i2.write(o2, n2)) !== s3 ? i2.slice(0, o2) : i2;
            throw new TypeError("Unknown encoding: " + n2);
          }
          if (ArrayBuffer.isView(e4))
            return u(e4);
          if (e4 != null) {
            if (C(e4, ArrayBuffer) || e4 && C(e4.buffer, ArrayBuffer)) {
              var s3 = e4, o2 = t3, i2 = r3;
              if (o2 < 0 || s3.byteLength < o2)
                throw new RangeError('"offset" is outside of buffer bounds');
              if (s3.byteLength < o2 + (i2 || 0))
                throw new RangeError('"length" is outside of buffer bounds');
              return s3 = o2 === undefined && i2 === undefined ? new Uint8Array(s3) : i2 === undefined ? new Uint8Array(s3, o2) : new Uint8Array(s3, o2, i2), Object.setPrototypeOf(s3, d.prototype), s3;
            }
            if (typeof e4 == "number")
              throw new TypeError('The "value" argument must not be of type number. Received type number');
            n2 = e4.valueOf && e4.valueOf();
            if (n2 != null && n2 !== e4)
              return d.from(n2, t3, r3);
            var a2 = function(e5) {
              {
                var t4, r4;
                if (d.isBuffer(e5))
                  return t4 = 0 | c(e5.length), (r4 = l(t4)).length !== 0 && e5.copy(r4, 0, 0, t4), r4;
              }
              if (e5.length !== undefined)
                return typeof e5.length != "number" || O(e5.length) ? l(0) : u(e5);
              if (e5.type === "Buffer" && Array.isArray(e5.data))
                return u(e5.data);
            }(e4);
            if (a2)
              return a2;
            if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof e4[Symbol.toPrimitive] == "function")
              return d.from(e4[Symbol.toPrimitive]("string"), t3, r3);
          }
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
        }
        function n(e4) {
          if (typeof e4 != "number")
            throw new TypeError('"size" argument must be of type number');
          if (e4 < 0)
            throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
        }
        function i(e4) {
          return n(e4), l(e4 < 0 ? 0 : 0 | c(e4));
        }
        function u(e4) {
          for (var t3 = e4.length < 0 ? 0 : 0 | c(e4.length), r3 = l(t3), o2 = 0;o2 < t3; o2 += 1)
            r3[o2] = 255 & e4[o2];
          return r3;
        }
        function c(e4) {
          if (t2 <= e4)
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + t2.toString(16) + " bytes");
          return 0 | e4;
        }
        function h(e4, t3) {
          if (d.isBuffer(e4))
            return e4.length;
          if (ArrayBuffer.isView(e4) || C(e4, ArrayBuffer))
            return e4.byteLength;
          if (typeof e4 != "string")
            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e4);
          var r3 = e4.length, o2 = 2 < arguments.length && arguments[2] === true;
          if (!o2 && r3 === 0)
            return 0;
          for (var n2 = false;; )
            switch (t3) {
              case "ascii":
              case "latin1":
              case "binary":
                return r3;
              case "utf8":
              case "utf-8":
                return M(e4).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r3;
              case "hex":
                return r3 >>> 1;
              case "base64":
                return E(e4).length;
              default:
                if (n2)
                  return o2 ? -1 : M(e4).length;
                t3 = ("" + t3).toLowerCase(), n2 = true;
            }
        }
        function r2(e4, t3, r3) {
          var o2, n2 = false;
          if ((t3 = t3 === undefined || t3 < 0 ? 0 : t3) > this.length)
            return "";
          if ((r3 = r3 === undefined || r3 > this.length ? this.length : r3) <= 0)
            return "";
          if ((r3 >>>= 0) <= (t3 >>>= 0))
            return "";
          for (e4 = e4 || "utf8";; )
            switch (e4) {
              case "hex":
                var s3 = this, i2 = t3, a2 = r3, l2 = s3.length;
                (!a2 || a2 < 0 || l2 < a2) && (a2 = l2);
                for (var u2 = "", c2 = i2 = !i2 || i2 < 0 ? 0 : i2;c2 < a2; ++c2)
                  u2 += P[s3[c2]];
                return u2;
              case "utf8":
              case "utf-8":
                return T(this, t3, r3);
              case "ascii":
                var d2 = this, l2 = t3, h2 = r3, f2 = "";
                h2 = Math.min(d2.length, h2);
                for (var p2 = l2;p2 < h2; ++p2)
                  f2 += String.fromCharCode(127 & d2[p2]);
                return f2;
              case "latin1":
              case "binary":
                var m2 = this, i2 = t3, y2 = r3, g2 = "";
                y2 = Math.min(m2.length, y2);
                for (var v2 = i2;v2 < y2; ++v2)
                  g2 += String.fromCharCode(m2[v2]);
                return g2;
              case "base64":
                return b2 = this, o2 = r3, (j2 = t3) === 0 && o2 === b2.length ? S.fromByteArray(b2) : S.fromByteArray(b2.slice(j2, o2));
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                for (var b2 = t3, j2 = r3, _2 = this.slice(b2, j2), x2 = "", w2 = 0;w2 < _2.length; w2 += 2)
                  x2 += String.fromCharCode(_2[w2] + 256 * _2[w2 + 1]);
                return x2;
              default:
                if (n2)
                  throw new TypeError("Unknown encoding: " + e4);
                e4 = (e4 + "").toLowerCase(), n2 = true;
            }
        }
        function a(e4, t3, r3) {
          var o2 = e4[t3];
          e4[t3] = e4[r3], e4[r3] = o2;
        }
        function f(e4, t3, r3, o2, n2) {
          if (e4.length === 0)
            return -1;
          if (typeof r3 == "string" ? (o2 = r3, r3 = 0) : 2147483647 < r3 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), (r3 = (r3 = O(r3 = +r3) ? n2 ? 0 : e4.length - 1 : r3) < 0 ? e4.length + r3 : r3) >= e4.length) {
            if (n2)
              return -1;
            r3 = e4.length - 1;
          } else if (r3 < 0) {
            if (!n2)
              return -1;
            r3 = 0;
          }
          if (typeof t3 == "string" && (t3 = d.from(t3, o2)), d.isBuffer(t3))
            return t3.length === 0 ? -1 : p(e4, t3, r3, o2, n2);
          if (typeof t3 == "number")
            return t3 &= 255, typeof Uint8Array.prototype.indexOf == "function" ? (n2 ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e4, t3, r3) : p(e4, [t3], r3, o2, n2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function p(e4, t3, r3, o2, n2) {
          var s3 = 1, i2 = e4.length, a2 = t3.length;
          if (o2 !== undefined && ((o2 = String(o2).toLowerCase()) === "ucs2" || o2 === "ucs-2" || o2 === "utf16le" || o2 === "utf-16le")) {
            if (e4.length < 2 || t3.length < 2)
              return -1;
            i2 /= s3 = 2, a2 /= 2, r3 /= 2;
          }
          function l2(e5, t4) {
            return s3 === 1 ? e5[t4] : e5.readUInt16BE(t4 * s3);
          }
          if (n2)
            for (var u2 = -1, c2 = r3;c2 < i2; c2++)
              if (l2(e4, c2) === l2(t3, u2 === -1 ? 0 : c2 - u2)) {
                if (c2 - (u2 = u2 === -1 ? c2 : u2) + 1 === a2)
                  return u2 * s3;
              } else
                u2 !== -1 && (c2 -= c2 - u2), u2 = -1;
          else
            for (c2 = r3 = i2 < r3 + a2 ? i2 - a2 : r3;0 <= c2; c2--) {
              for (var d2 = true, h2 = 0;h2 < a2; h2++)
                if (l2(e4, c2 + h2) !== l2(t3, h2)) {
                  d2 = false;
                  break;
                }
              if (d2)
                return c2;
            }
          return -1;
        }
        function y(e4, t3, r3, o2) {
          return k(function(e5) {
            for (var t4 = [], r4 = 0;r4 < e5.length; ++r4)
              t4.push(255 & e5.charCodeAt(r4));
            return t4;
          }(t3), e4, r3, o2);
        }
        function g(e4, t3, r3, o2) {
          return k(function(e5, t4) {
            for (var r4, o3, n2 = [], s3 = 0;s3 < e5.length && !((t4 -= 2) < 0); ++s3)
              o3 = e5.charCodeAt(s3), r4 = o3 >> 8, o3 = o3 % 256, n2.push(o3), n2.push(r4);
            return n2;
          }(t3, e4.length - r3), e4, r3, o2);
        }
        function T(e4, t3, r3) {
          r3 = Math.min(e4.length, r3);
          for (var o2 = [], n2 = t3;n2 < r3; ) {
            var s3, i2, a2, l2, u2 = e4[n2], c2 = null, d2 = 239 < u2 ? 4 : 223 < u2 ? 3 : 191 < u2 ? 2 : 1;
            if (n2 + d2 <= r3)
              switch (d2) {
                case 1:
                  u2 < 128 && (c2 = u2);
                  break;
                case 2:
                  (192 & (s3 = e4[n2 + 1])) == 128 && 127 < (l2 = (31 & u2) << 6 | 63 & s3) && (c2 = l2);
                  break;
                case 3:
                  s3 = e4[n2 + 1], i2 = e4[n2 + 2], (192 & s3) == 128 && (192 & i2) == 128 && 2047 < (l2 = (15 & u2) << 12 | (63 & s3) << 6 | 63 & i2) && (l2 < 55296 || 57343 < l2) && (c2 = l2);
                  break;
                case 4:
                  s3 = e4[n2 + 1], i2 = e4[n2 + 2], a2 = e4[n2 + 3], (192 & s3) == 128 && (192 & i2) == 128 && (192 & a2) == 128 && 65535 < (l2 = (15 & u2) << 18 | (63 & s3) << 12 | (63 & i2) << 6 | 63 & a2) && l2 < 1114112 && (c2 = l2);
              }
            c2 === null ? (c2 = 65533, d2 = 1) : 65535 < c2 && (c2 -= 65536, o2.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), o2.push(c2), n2 += d2;
          }
          var h2 = o2, f2 = h2.length;
          if (f2 <= v)
            return String.fromCharCode.apply(String, h2);
          for (var p2 = "", m2 = 0;m2 < f2; )
            p2 += String.fromCharCode.apply(String, h2.slice(m2, m2 += v));
          return p2;
        }
        L.kMaxLength = t2, (d.TYPED_ARRAY_SUPPORT = function() {
          try {
            var e4 = new Uint8Array(1), t3 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t3, Uint8Array.prototype), Object.setPrototypeOf(e4, t3), e4.foo() === 42;
          } catch (e5) {
            return false;
          }
        }()) || typeof console == "undefined" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", { enumerable: true, get: function() {
          if (d.isBuffer(this))
            return this.buffer;
        } }), Object.defineProperty(d.prototype, "offset", { enumerable: true, get: function() {
          if (d.isBuffer(this))
            return this.byteOffset;
        } }), typeof Symbol != "undefined" && Symbol.species != null && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), d.poolSize = 8192, d.from = o, Object.setPrototypeOf(d.prototype, Uint8Array.prototype), Object.setPrototypeOf(d, Uint8Array), d.alloc = function(e4, t3, r3) {
          return t3 = t3, r3 = r3, n(e4 = e4), !(e4 <= 0) && t3 !== undefined ? typeof r3 == "string" ? l(e4).fill(t3, r3) : l(e4).fill(t3) : l(e4);
        }, d.allocUnsafe = i, d.allocUnsafeSlow = i, d.isBuffer = function(e4) {
          return e4 != null && e4._isBuffer === true && e4 !== d.prototype;
        }, d.compare = function(e4, t3) {
          if (C(e4, Uint8Array) && (e4 = d.from(e4, e4.offset, e4.byteLength)), C(t3, Uint8Array) && (t3 = d.from(t3, t3.offset, t3.byteLength)), !d.isBuffer(e4) || !d.isBuffer(t3))
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e4 === t3)
            return 0;
          for (var r3 = e4.length, o2 = t3.length, n2 = 0, s3 = Math.min(r3, o2);n2 < s3; ++n2)
            if (e4[n2] !== t3[n2]) {
              r3 = e4[n2], o2 = t3[n2];
              break;
            }
          return r3 < o2 ? -1 : o2 < r3 ? 1 : 0;
        }, d.isEncoding = function(e4) {
          switch (String(e4).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, d.concat = function(e4, t3) {
          if (!Array.isArray(e4))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (e4.length === 0)
            return d.alloc(0);
          if (t3 === undefined)
            for (n2 = t3 = 0;n2 < e4.length; ++n2)
              t3 += e4[n2].length;
          for (var r3 = d.allocUnsafe(t3), o2 = 0, n2 = 0;n2 < e4.length; ++n2) {
            var s3 = e4[n2];
            if (C(s3, Uint8Array) && (s3 = d.from(s3)), !d.isBuffer(s3))
              throw new TypeError('"list" argument must be an Array of Buffers');
            s3.copy(r3, o2), o2 += s3.length;
          }
          return r3;
        }, d.byteLength = h, d.prototype._isBuffer = true, d.prototype.swap16 = function() {
          var e4 = this.length;
          if (e4 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t3 = 0;t3 < e4; t3 += 2)
            a(this, t3, t3 + 1);
          return this;
        }, d.prototype.swap32 = function() {
          var e4 = this.length;
          if (e4 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t3 = 0;t3 < e4; t3 += 4)
            a(this, t3, t3 + 3), a(this, t3 + 1, t3 + 2);
          return this;
        }, d.prototype.swap64 = function() {
          var e4 = this.length;
          if (e4 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t3 = 0;t3 < e4; t3 += 8)
            a(this, t3, t3 + 7), a(this, t3 + 1, t3 + 6), a(this, t3 + 2, t3 + 5), a(this, t3 + 3, t3 + 4);
          return this;
        }, d.prototype.toLocaleString = d.prototype.toString = function() {
          var e4 = this.length;
          return e4 === 0 ? "" : arguments.length === 0 ? T(this, 0, e4) : r2.apply(this, arguments);
        }, d.prototype.equals = function(e4) {
          if (d.isBuffer(e4))
            return this === e4 || d.compare(this, e4) === 0;
          throw new TypeError("Argument must be a Buffer");
        }, d.prototype.inspect = function() {
          var e4 = "", t3 = L.INSPECT_MAX_BYTES, e4 = this.toString("hex", 0, t3).replace(/(.{2})/g, "$1 ").trim();
          return this.length > t3 && (e4 += " ... "), "<Buffer " + e4 + ">";
        }, e3 && (d.prototype[e3] = d.prototype.inspect), d.prototype.compare = function(e4, t3, r3, o2, n2) {
          if (C(e4, Uint8Array) && (e4 = d.from(e4, e4.offset, e4.byteLength)), !d.isBuffer(e4))
            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e4);
          if (r3 === undefined && (r3 = e4 ? e4.length : 0), o2 === undefined && (o2 = 0), n2 === undefined && (n2 = this.length), (t3 = t3 === undefined ? 0 : t3) < 0 || r3 > e4.length || o2 < 0 || n2 > this.length)
            throw new RangeError("out of range index");
          if (n2 <= o2 && r3 <= t3)
            return 0;
          if (n2 <= o2)
            return -1;
          if (r3 <= t3)
            return 1;
          if (this === e4)
            return 0;
          for (var s3 = (n2 >>>= 0) - (o2 >>>= 0), i2 = (r3 >>>= 0) - (t3 >>>= 0), a2 = Math.min(s3, i2), l2 = this.slice(o2, n2), u2 = e4.slice(t3, r3), c2 = 0;c2 < a2; ++c2)
            if (l2[c2] !== u2[c2]) {
              s3 = l2[c2], i2 = u2[c2];
              break;
            }
          return s3 < i2 ? -1 : i2 < s3 ? 1 : 0;
        }, d.prototype.includes = function(e4, t3, r3) {
          return this.indexOf(e4, t3, r3) !== -1;
        }, d.prototype.indexOf = function(e4, t3, r3) {
          return f(this, e4, t3, r3, true);
        }, d.prototype.lastIndexOf = function(e4, t3, r3) {
          return f(this, e4, t3, r3, false);
        }, d.prototype.write = function(e4, t3, r3, o2) {
          if (t3 === undefined)
            o2 = "utf8", r3 = this.length, t3 = 0;
          else if (r3 === undefined && typeof t3 == "string")
            o2 = t3, r3 = this.length, t3 = 0;
          else {
            if (!isFinite(t3))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, o2 === undefined && (o2 = "utf8")) : (o2 = r3, r3 = undefined);
          }
          var n2 = this.length - t3;
          if ((r3 === undefined || n2 < r3) && (r3 = n2), 0 < e4.length && (r3 < 0 || t3 < 0) || t3 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          o2 = o2 || "utf8";
          for (var s3, i2, a2, l2 = false;; )
            switch (o2) {
              case "hex":
                var u2 = this, c2 = e4, d2 = t3, h2 = r3, f2 = (d2 = Number(d2) || 0, u2.length - d2);
                (!h2 || f2 < (h2 = Number(h2))) && (h2 = f2), (f2 = c2.length) / 2 < h2 && (h2 = f2 / 2);
                for (var p2 = 0;p2 < h2; ++p2) {
                  var m2 = parseInt(c2.substr(2 * p2, 2), 16);
                  if (O(m2))
                    return p2;
                  u2[d2 + p2] = m2;
                }
                return p2;
              case "utf8":
              case "utf-8":
                return f2 = t3, a2 = r3, k(M(e4, (i2 = this).length - f2), i2, f2, a2);
              case "ascii":
                return y(this, e4, t3, r3);
              case "latin1":
              case "binary":
                return y(this, e4, t3, r3);
              case "base64":
                return i2 = this, a2 = t3, s3 = r3, k(E(e4), i2, a2, s3);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return g(this, e4, t3, r3);
              default:
                if (l2)
                  throw new TypeError("Unknown encoding: " + o2);
                o2 = ("" + o2).toLowerCase(), l2 = true;
            }
        }, d.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var v = 4096;
        function m(e4, t3, r3) {
          if (e4 % 1 != 0 || e4 < 0)
            throw new RangeError("offset is not uint");
          if (r3 < e4 + t3)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function b(e4, t3, r3, o2, n2, s3) {
          if (!d.isBuffer(e4))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (n2 < t3 || t3 < s3)
            throw new RangeError('"value" argument is out of bounds');
          if (r3 + o2 > e4.length)
            throw new RangeError("Index out of range");
        }
        function j(e4, t3, r3, o2) {
          if (r3 + o2 > e4.length)
            throw new RangeError("Index out of range");
          if (r3 < 0)
            throw new RangeError("Index out of range");
        }
        function _(e4, t3, r3, o2, n2) {
          return t3 = +t3, r3 >>>= 0, n2 || j(e4, 0, r3, 4), s2.write(e4, t3, r3, o2, 23, 4), r3 + 4;
        }
        function x(e4, t3, r3, o2, n2) {
          return t3 = +t3, r3 >>>= 0, n2 || j(e4, 0, r3, 8), s2.write(e4, t3, r3, o2, 52, 8), r3 + 8;
        }
        d.prototype.slice = function(e4, t3) {
          var r3 = this.length, r3 = ((e4 = ~~e4) < 0 ? (e4 += r3) < 0 && (e4 = 0) : r3 < e4 && (e4 = r3), (t3 = t3 === undefined ? r3 : ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : r3 < t3 && (t3 = r3), t3 < e4 && (t3 = e4), this.subarray(e4, t3));
          return Object.setPrototypeOf(r3, d.prototype), r3;
        }, d.prototype.readUIntLE = function(e4, t3, r3) {
          e4 >>>= 0, t3 >>>= 0, r3 || m(e4, t3, this.length);
          for (var o2 = this[e4], n2 = 1, s3 = 0;++s3 < t3 && (n2 *= 256); )
            o2 += this[e4 + s3] * n2;
          return o2;
        }, d.prototype.readUIntBE = function(e4, t3, r3) {
          e4 >>>= 0, t3 >>>= 0, r3 || m(e4, t3, this.length);
          for (var o2 = this[e4 + --t3], n2 = 1;0 < t3 && (n2 *= 256); )
            o2 += this[e4 + --t3] * n2;
          return o2;
        }, d.prototype.readUInt8 = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 1, this.length), this[e4];
        }, d.prototype.readUInt16LE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 2, this.length), this[e4] | this[e4 + 1] << 8;
        }, d.prototype.readUInt16BE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 2, this.length), this[e4] << 8 | this[e4 + 1];
        }, d.prototype.readUInt32LE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), (this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16) + 16777216 * this[e4 + 3];
        }, d.prototype.readUInt32BE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), 16777216 * this[e4] + (this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3]);
        }, d.prototype.readIntLE = function(e4, t3, r3) {
          e4 >>>= 0, t3 >>>= 0, r3 || m(e4, t3, this.length);
          for (var o2 = this[e4], n2 = 1, s3 = 0;++s3 < t3 && (n2 *= 256); )
            o2 += this[e4 + s3] * n2;
          return (n2 *= 128) <= o2 && (o2 -= Math.pow(2, 8 * t3)), o2;
        }, d.prototype.readIntBE = function(e4, t3, r3) {
          e4 >>>= 0, t3 >>>= 0, r3 || m(e4, t3, this.length);
          for (var o2 = t3, n2 = 1, s3 = this[e4 + --o2];0 < o2 && (n2 *= 256); )
            s3 += this[e4 + --o2] * n2;
          return (n2 *= 128) <= s3 && (s3 -= Math.pow(2, 8 * t3)), s3;
        }, d.prototype.readInt8 = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 1, this.length), 128 & this[e4] ? -1 * (255 - this[e4] + 1) : this[e4];
        }, d.prototype.readInt16LE = function(e4, t3) {
          e4 >>>= 0, t3 || m(e4, 2, this.length);
          t3 = this[e4] | this[e4 + 1] << 8;
          return 32768 & t3 ? 4294901760 | t3 : t3;
        }, d.prototype.readInt16BE = function(e4, t3) {
          e4 >>>= 0, t3 || m(e4, 2, this.length);
          t3 = this[e4 + 1] | this[e4] << 8;
          return 32768 & t3 ? 4294901760 | t3 : t3;
        }, d.prototype.readInt32LE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16 | this[e4 + 3] << 24;
        }, d.prototype.readInt32BE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), this[e4] << 24 | this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3];
        }, d.prototype.readFloatLE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), s2.read(this, e4, true, 23, 4);
        }, d.prototype.readFloatBE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 4, this.length), s2.read(this, e4, false, 23, 4);
        }, d.prototype.readDoubleLE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 8, this.length), s2.read(this, e4, true, 52, 8);
        }, d.prototype.readDoubleBE = function(e4, t3) {
          return e4 >>>= 0, t3 || m(e4, 8, this.length), s2.read(this, e4, false, 52, 8);
        }, d.prototype.writeUIntLE = function(e4, t3, r3, o2) {
          e4 = +e4, t3 >>>= 0, r3 >>>= 0, o2 || b(this, e4, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var n2 = 1, s3 = 0;
          for (this[t3] = 255 & e4;++s3 < r3 && (n2 *= 256); )
            this[t3 + s3] = e4 / n2 & 255;
          return t3 + r3;
        }, d.prototype.writeUIntBE = function(e4, t3, r3, o2) {
          e4 = +e4, t3 >>>= 0, r3 >>>= 0, o2 || b(this, e4, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var n2 = r3 - 1, s3 = 1;
          for (this[t3 + n2] = 255 & e4;0 <= --n2 && (s3 *= 256); )
            this[t3 + n2] = e4 / s3 & 255;
          return t3 + r3;
        }, d.prototype.writeUInt8 = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 1, 255, 0), this[t3] = 255 & e4, t3 + 1;
        }, d.prototype.writeUInt16LE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 2, 65535, 0), this[t3] = 255 & e4, this[t3 + 1] = e4 >>> 8, t3 + 2;
        }, d.prototype.writeUInt16BE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 2, 65535, 0), this[t3] = e4 >>> 8, this[t3 + 1] = 255 & e4, t3 + 2;
        }, d.prototype.writeUInt32LE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 4, 4294967295, 0), this[t3 + 3] = e4 >>> 24, this[t3 + 2] = e4 >>> 16, this[t3 + 1] = e4 >>> 8, this[t3] = 255 & e4, t3 + 4;
        }, d.prototype.writeUInt32BE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 4, 4294967295, 0), this[t3] = e4 >>> 24, this[t3 + 1] = e4 >>> 16, this[t3 + 2] = e4 >>> 8, this[t3 + 3] = 255 & e4, t3 + 4;
        }, d.prototype.writeIntLE = function(e4, t3, r3, o2) {
          e4 = +e4, t3 >>>= 0, o2 || b(this, e4, t3, r3, (o2 = Math.pow(2, 8 * r3 - 1)) - 1, -o2);
          var n2 = 0, s3 = 1, i2 = 0;
          for (this[t3] = 255 & e4;++n2 < r3 && (s3 *= 256); )
            e4 < 0 && i2 === 0 && this[t3 + n2 - 1] !== 0 && (i2 = 1), this[t3 + n2] = (e4 / s3 >> 0) - i2 & 255;
          return t3 + r3;
        }, d.prototype.writeIntBE = function(e4, t3, r3, o2) {
          e4 = +e4, t3 >>>= 0, o2 || b(this, e4, t3, r3, (o2 = Math.pow(2, 8 * r3 - 1)) - 1, -o2);
          var n2 = r3 - 1, s3 = 1, i2 = 0;
          for (this[t3 + n2] = 255 & e4;0 <= --n2 && (s3 *= 256); )
            e4 < 0 && i2 === 0 && this[t3 + n2 + 1] !== 0 && (i2 = 1), this[t3 + n2] = (e4 / s3 >> 0) - i2 & 255;
          return t3 + r3;
        }, d.prototype.writeInt8 = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 1, 127, -128), this[t3] = 255 & (e4 = e4 < 0 ? 255 + e4 + 1 : e4), t3 + 1;
        }, d.prototype.writeInt16LE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 2, 32767, -32768), this[t3] = 255 & e4, this[t3 + 1] = e4 >>> 8, t3 + 2;
        }, d.prototype.writeInt16BE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 2, 32767, -32768), this[t3] = e4 >>> 8, this[t3 + 1] = 255 & e4, t3 + 2;
        }, d.prototype.writeInt32LE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 4, 2147483647, -2147483648), this[t3] = 255 & e4, this[t3 + 1] = e4 >>> 8, this[t3 + 2] = e4 >>> 16, this[t3 + 3] = e4 >>> 24, t3 + 4;
        }, d.prototype.writeInt32BE = function(e4, t3, r3) {
          return e4 = +e4, t3 >>>= 0, r3 || b(this, e4, t3, 4, 2147483647, -2147483648), this[t3] = (e4 = e4 < 0 ? 4294967295 + e4 + 1 : e4) >>> 24, this[t3 + 1] = e4 >>> 16, this[t3 + 2] = e4 >>> 8, this[t3 + 3] = 255 & e4, t3 + 4;
        }, d.prototype.writeFloatLE = function(e4, t3, r3) {
          return _(this, e4, t3, true, r3);
        }, d.prototype.writeFloatBE = function(e4, t3, r3) {
          return _(this, e4, t3, false, r3);
        }, d.prototype.writeDoubleLE = function(e4, t3, r3) {
          return x(this, e4, t3, true, r3);
        }, d.prototype.writeDoubleBE = function(e4, t3, r3) {
          return x(this, e4, t3, false, r3);
        }, d.prototype.copy = function(e4, t3, r3, o2) {
          if (!d.isBuffer(e4))
            throw new TypeError("argument should be a Buffer");
          if (r3 = r3 || 0, o2 || o2 === 0 || (o2 = this.length), t3 >= e4.length && (t3 = e4.length), (o2 = 0 < o2 && o2 < r3 ? r3 : o2) === r3)
            return 0;
          if (e4.length === 0 || this.length === 0)
            return 0;
          if ((t3 = t3 || 0) < 0)
            throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length)
            throw new RangeError("Index out of range");
          if (o2 < 0)
            throw new RangeError("sourceEnd out of bounds");
          o2 > this.length && (o2 = this.length);
          var n2 = (o2 = e4.length - t3 < o2 - r3 ? e4.length - t3 + r3 : o2) - r3;
          if (this === e4 && typeof Uint8Array.prototype.copyWithin == "function")
            this.copyWithin(t3, r3, o2);
          else if (this === e4 && r3 < t3 && t3 < o2)
            for (var s3 = n2 - 1;0 <= s3; --s3)
              e4[s3 + t3] = this[s3 + r3];
          else
            Uint8Array.prototype.set.call(e4, this.subarray(r3, o2), t3);
          return n2;
        }, d.prototype.fill = function(e4, t3, r3, o2) {
          if (typeof e4 == "string") {
            if (typeof t3 == "string" ? (o2 = t3, t3 = 0, r3 = this.length) : typeof r3 == "string" && (o2 = r3, r3 = this.length), o2 !== undefined && typeof o2 != "string")
              throw new TypeError("encoding must be a string");
            if (typeof o2 == "string" && !d.isEncoding(o2))
              throw new TypeError("Unknown encoding: " + o2);
            var n2;
            e4.length === 1 && (n2 = e4.charCodeAt(0), (o2 === "utf8" && n2 < 128 || o2 === "latin1") && (e4 = n2));
          } else
            typeof e4 == "number" ? e4 &= 255 : typeof e4 == "boolean" && (e4 = Number(e4));
          if (t3 < 0 || this.length < t3 || this.length < r3)
            throw new RangeError("Out of range index");
          var s3;
          if (!(r3 <= t3))
            if (t3 >>>= 0, r3 = r3 === undefined ? this.length : r3 >>> 0, typeof (e4 = e4 || 0) == "number")
              for (s3 = t3;s3 < r3; ++s3)
                this[s3] = e4;
            else {
              var i2 = d.isBuffer(e4) ? e4 : d.from(e4, o2), a2 = i2.length;
              if (a2 === 0)
                throw new TypeError('The value "' + e4 + '" is invalid for argument "value"');
              for (s3 = 0;s3 < r3 - t3; ++s3)
                this[s3 + t3] = i2[s3 % a2];
            }
          return this;
        };
        var w = /[^+/0-9A-Za-z-_]/g;
        function M(e4, t3) {
          t3 = t3 || 1 / 0;
          for (var r3, o2 = e4.length, n2 = null, s3 = [], i2 = 0;i2 < o2; ++i2) {
            if (55295 < (r3 = e4.charCodeAt(i2)) && r3 < 57344) {
              if (!n2) {
                if (56319 < r3) {
                  -1 < (t3 -= 3) && s3.push(239, 191, 189);
                  continue;
                }
                if (i2 + 1 === o2) {
                  -1 < (t3 -= 3) && s3.push(239, 191, 189);
                  continue;
                }
                n2 = r3;
                continue;
              }
              if (r3 < 56320) {
                -1 < (t3 -= 3) && s3.push(239, 191, 189), n2 = r3;
                continue;
              }
              r3 = 65536 + (n2 - 55296 << 10 | r3 - 56320);
            } else
              n2 && -1 < (t3 -= 3) && s3.push(239, 191, 189);
            if (n2 = null, r3 < 128) {
              if (--t3 < 0)
                break;
              s3.push(r3);
            } else if (r3 < 2048) {
              if ((t3 -= 2) < 0)
                break;
              s3.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t3 -= 3) < 0)
                break;
              s3.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112))
                throw new Error("Invalid code point");
              if ((t3 -= 4) < 0)
                break;
              s3.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return s3;
        }
        function E(e4) {
          return S.toByteArray(function(e5) {
            if ((e5 = (e5 = e5.split("=")[0]).trim().replace(w, "")).length < 2)
              return "";
            for (;e5.length % 4 != 0; )
              e5 += "=";
            return e5;
          }(e4));
        }
        function k(e4, t3, r3, o2) {
          for (var n2 = 0;n2 < o2 && !(n2 + r3 >= t3.length || n2 >= e4.length); ++n2)
            t3[n2 + r3] = e4[n2];
          return n2;
        }
        function C(e4, t3) {
          return e4 instanceof t3 || e4 != null && e4.constructor != null && e4.constructor.name != null && e4.constructor.name === t3.name;
        }
        function O(e4) {
          return e4 != e4;
        }
        var P = function() {
          for (var e4 = "0123456789abcdef", t3 = new Array(256), r3 = 0;r3 < 16; ++r3)
            for (var o2 = 16 * r3, n2 = 0;n2 < 16; ++n2)
              t3[o2 + n2] = e4[r3] + e4[n2];
          return t3;
        }();
      }).call(this, A("buffer").Buffer);
    }, { "base64-js": 1, buffer: 4, ieee754: 246 }], 5: [function(e2, t2, r2) {
      t2.exports = function(e3) {
        if (typeof e3 != "function")
          throw TypeError(String(e3) + " is not a function");
        return e3;
      };
    }, {}], 6: [function(e2, t2, r2) {
      var o = e2("../internals/is-object");
      t2.exports = function(e3) {
        if (o(e3) || e3 === null)
          return e3;
        throw TypeError("Can't set " + String(e3) + " as a prototype");
      };
    }, { "../internals/is-object": 74 }], 7: [function(e2, t2, r2) {
      var o = e2("../internals/well-known-symbol"), n = e2("../internals/object-create"), e2 = e2("../internals/object-define-property"), s2 = o("unscopables"), i = Array.prototype;
      i[s2] == null && e2.f(i, s2, { configurable: true, value: n(null) }), t2.exports = function(e3) {
        i[s2][e3] = true;
      };
    }, { "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 8: [function(e2, t2, r2) {
      var o = e2("../internals/string-multibyte").charAt;
      t2.exports = function(e3, t3, r3) {
        return t3 + (r3 ? o(e3, t3).length : 1);
      };
    }, { "../internals/string-multibyte": 123 }], 9: [function(e2, t2, r2) {
      t2.exports = function(e3, t3, r3) {
        if (e3 instanceof t3)
          return e3;
        throw TypeError("Incorrect " + (r3 ? r3 + " " : "") + "invocation");
      };
    }, {}], 10: [function(e2, t2, r2) {
      var o = e2("../internals/is-object");
      t2.exports = function(e3) {
        if (o(e3))
          return e3;
        throw TypeError(String(e3) + " is not an object");
      };
    }, { "../internals/is-object": 74 }], 11: [function(e2, t2, r2) {
      t2.exports = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined";
    }, {}], 12: [function(e2, t2, r2) {
      function o(e3) {
        return l(e3) && u(M, c(e3));
      }
      var n, s2 = e2("../internals/array-buffer-native"), i = e2("../internals/descriptors"), a = e2("../internals/global"), l = e2("../internals/is-object"), u = e2("../internals/has"), c = e2("../internals/classof"), d = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine"), f = e2("../internals/object-define-property").f, p = e2("../internals/object-get-prototype-of"), m = e2("../internals/object-set-prototype-of"), y = e2("../internals/well-known-symbol"), e2 = e2("../internals/uid"), g = a.Int8Array, v = g && g.prototype, b = a.Uint8ClampedArray, b = b && b.prototype, j = g && p(g), _ = v && p(v), x = Object.prototype, w = x.isPrototypeOf, y = y("toStringTag"), S = e2("TYPED_ARRAY_TAG"), T = s2 && !!m && c(a.opera) !== "Opera", e2 = false, M = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 };
      for (n in M)
        a[n] || (T = false);
      if ((!T || typeof j != "function" || j === Function.prototype) && (j = function() {
        throw TypeError("Incorrect invocation");
      }, T))
        for (n in M)
          a[n] && m(a[n], j);
      if ((!T || !_ || _ === x) && (_ = j.prototype, T))
        for (n in M)
          a[n] && m(a[n].prototype, _);
      if (T && p(b) !== _ && m(b, _), i && !u(_, y))
        for (n in e2 = true, f(_, y, { get: function() {
          return l(this) ? this[S] : undefined;
        } }), M)
          a[n] && d(a[n], S, n);
      t2.exports = { NATIVE_ARRAY_BUFFER_VIEWS: T, TYPED_ARRAY_TAG: e2 && S, aTypedArray: function(e3) {
        if (o(e3))
          return e3;
        throw TypeError("Target is not a typed array");
      }, aTypedArrayConstructor: function(e3) {
        if (m) {
          if (w.call(j, e3))
            return e3;
        } else
          for (var t3 in M)
            if (u(M, n)) {
              t3 = a[t3];
              if (t3 && (e3 === t3 || w.call(t3, e3)))
                return e3;
            }
        throw TypeError("Target is not a typed array constructor");
      }, exportTypedArrayMethod: function(e3, t3, r3) {
        if (i) {
          if (r3)
            for (var o2 in M) {
              o2 = a[o2];
              o2 && u(o2.prototype, e3) && delete o2.prototype[e3];
            }
          _[e3] && !r3 || h(_, e3, !r3 && T && v[e3] || t3);
        }
      }, exportTypedArrayStaticMethod: function(e3, t3, r3) {
        var o2, n2;
        if (i) {
          if (m) {
            if (r3)
              for (o2 in M)
                (n2 = a[o2]) && u(n2, e3) && delete n2[e3];
            if (j[e3] && !r3)
              return;
            try {
              return h(j, e3, !r3 && T && g[e3] || t3);
            } catch (e4) {
            }
          }
          for (o2 in M)
            !(n2 = a[o2]) || n2[e3] && !r3 || h(n2, e3, t3);
        }
      }, isView: function(e3) {
        e3 = c(e3);
        return e3 === "DataView" || u(M, e3);
      }, isTypedArray: o, TypedArray: j, TypedArrayPrototype: _ };
    }, { "../internals/array-buffer-native": 11, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/global": 59, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-define-property": 92, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine": 108, "../internals/uid": 145, "../internals/well-known-symbol": 148 }], 13: [function(e2, t2, D) {
      function r2(e3) {
        return [255 & e3];
      }
      function o(e3) {
        return [255 & e3, e3 >> 8 & 255];
      }
      function n(e3) {
        return [255 & e3, e3 >> 8 & 255, e3 >> 16 & 255, e3 >> 24 & 255];
      }
      function s2(e3) {
        return e3[3] << 24 | e3[2] << 16 | e3[1] << 8 | e3[0];
      }
      function i(e3) {
        return O(e3, 23, 4);
      }
      function F(e3) {
        return O(e3, 52, 8);
      }
      function a(e3, t3) {
        H(e3[w], t3, { get: function() {
          return b(this)[t3];
        } });
      }
      function l(e3, t3, r3, o2) {
        if (r3 = m(r3), e3 = b(e3), r3 + t3 > e3.byteLength)
          throw C(S);
        var n2 = b(e3.buffer).bytes, r3 = r3 + e3.byteOffset, e3 = n2.slice(r3, r3 + t3);
        return o2 ? e3 : e3.reverse();
      }
      function u(e3, t3, r3, o2, n2, s3) {
        if (r3 = m(r3), e3 = b(e3), r3 + t3 > e3.byteLength)
          throw C(S);
        for (var i2 = b(e3.buffer).bytes, a2 = r3 + e3.byteOffset, l2 = o2(+n2), u2 = 0;u2 < t3; u2++)
          i2[a2 + u2] = l2[s3 ? u2 : t3 - u2 - 1];
      }
      var c = e2("../internals/global"), d = e2("../internals/descriptors"), U = e2("../internals/array-buffer-native"), N = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine-all"), f = e2("../internals/fails"), p = e2("../internals/an-instance"), B = e2("../internals/to-integer"), G = e2("../internals/to-length"), m = e2("../internals/to-index"), y = e2("../internals/ieee754"), V = e2("../internals/object-get-prototype-of"), g = e2("../internals/object-set-prototype-of"), z = e2("../internals/object-get-own-property-names").f, H = e2("../internals/object-define-property").f, W = e2("../internals/array-fill"), v = e2("../internals/set-to-string-tag"), e2 = e2("../internals/internal-state"), b = e2.get, j = e2.set, _ = "ArrayBuffer", x = "DataView", w = "prototype", S = "Wrong index", T = c[_], M = T, E = c[x], e2 = E && E[w], k = Object.prototype, C = c.RangeError, O = y.pack, P = y.unpack;
      if (U) {
        if (!f(function() {
          T(1);
        }) || !f(function() {
          new T(-1);
        }) || f(function() {
          return new T, new T(1.5), new T(NaN), T.name != _;
        })) {
          for (var A, c = (M = function(e3) {
            return p(this, M), new T(m(e3));
          })[w] = T[w], L = z(T), R = 0;L.length > R; )
            (A = L[R++]) in M || N(M, A, T[A]);
          c.constructor = M;
        }
        g && V(e2) !== k && g(e2, k);
        var y = new E(new M(2)), I = e2.setInt8;
        y.setInt8(0, 2147483648), y.setInt8(1, 2147483649), !y.getInt8(0) && y.getInt8(1) || h(e2, { setInt8: function(e3, t3) {
          I.call(this, e3, t3 << 24 >> 24);
        }, setUint8: function(e3, t3) {
          I.call(this, e3, t3 << 24 >> 24);
        } }, { unsafe: true });
      } else
        M = function(e3) {
          p(this, M, _);
          e3 = m(e3);
          j(this, { bytes: W.call(new Array(e3), 0), byteLength: e3 }), d || (this.byteLength = e3);
        }, E = function(e3, t3, r3) {
          p(this, E, x), p(e3, M, x);
          var o2 = b(e3).byteLength, t3 = B(t3);
          if (t3 < 0 || o2 < t3)
            throw C("Wrong offset");
          if (o2 < t3 + (r3 = r3 === undefined ? o2 - t3 : G(r3)))
            throw C("Wrong length");
          j(this, { buffer: e3, byteLength: r3, byteOffset: t3 }), d || (this.buffer = e3, this.byteLength = r3, this.byteOffset = t3);
        }, d && (a(M, "byteLength"), a(E, "buffer"), a(E, "byteLength"), a(E, "byteOffset")), h(E[w], { getInt8: function(e3) {
          return l(this, 1, e3)[0] << 24 >> 24;
        }, getUint8: function(e3) {
          return l(this, 1, e3)[0];
        }, getInt16: function(e3) {
          e3 = l(this, 2, e3, 1 < arguments.length ? arguments[1] : undefined);
          return (e3[1] << 8 | e3[0]) << 16 >> 16;
        }, getUint16: function(e3) {
          e3 = l(this, 2, e3, 1 < arguments.length ? arguments[1] : undefined);
          return e3[1] << 8 | e3[0];
        }, getInt32: function(e3) {
          return s2(l(this, 4, e3, 1 < arguments.length ? arguments[1] : undefined));
        }, getUint32: function(e3) {
          return s2(l(this, 4, e3, 1 < arguments.length ? arguments[1] : undefined)) >>> 0;
        }, getFloat32: function(e3) {
          return P(l(this, 4, e3, 1 < arguments.length ? arguments[1] : undefined), 23);
        }, getFloat64: function(e3) {
          return P(l(this, 8, e3, 1 < arguments.length ? arguments[1] : undefined), 52);
        }, setInt8: function(e3, t3) {
          u(this, 1, e3, r2, t3);
        }, setUint8: function(e3, t3) {
          u(this, 1, e3, r2, t3);
        }, setInt16: function(e3, t3) {
          u(this, 2, e3, o, t3, 2 < arguments.length ? arguments[2] : undefined);
        }, setUint16: function(e3, t3) {
          u(this, 2, e3, o, t3, 2 < arguments.length ? arguments[2] : undefined);
        }, setInt32: function(e3, t3) {
          u(this, 4, e3, n, t3, 2 < arguments.length ? arguments[2] : undefined);
        }, setUint32: function(e3, t3) {
          u(this, 4, e3, n, t3, 2 < arguments.length ? arguments[2] : undefined);
        }, setFloat32: function(e3, t3) {
          u(this, 4, e3, i, t3, 2 < arguments.length ? arguments[2] : undefined);
        }, setFloat64: function(e3, t3) {
          u(this, 8, e3, F, t3, 2 < arguments.length ? arguments[2] : undefined);
        } });
      v(M, _), v(E, x), t2.exports = { ArrayBuffer: M, DataView: E };
    }, { "../internals/an-instance": 9, "../internals/array-buffer-native": 11, "../internals/array-fill": 15, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/ieee754": 65, "../internals/internal-state": 70, "../internals/object-define-property": 92, "../internals/object-get-own-property-names": 95, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine-all": 107, "../internals/set-to-string-tag": 117, "../internals/to-index": 133, "../internals/to-integer": 135, "../internals/to-length": 136 }], 14: [function(e2, t2, r2) {
      var l = e2("../internals/to-object"), u = e2("../internals/to-absolute-index"), c = e2("../internals/to-length"), d = Math.min;
      t2.exports = [].copyWithin || function(e3, t3) {
        var r3 = l(this), o = c(r3.length), n = u(e3, o), s2 = u(t3, o), e3 = 2 < arguments.length ? arguments[2] : undefined, i = d((e3 === undefined ? o : u(e3, o)) - s2, o - n), a = 1;
        for (s2 < n && n < s2 + i && (a = -1, s2 += i - 1, n += i - 1);0 < i--; )
          s2 in r3 ? r3[n] = r3[s2] : delete r3[n], n += a, s2 += a;
        return r3;
      };
    }, { "../internals/to-absolute-index": 132, "../internals/to-length": 136, "../internals/to-object": 137 }], 15: [function(e2, t2, r2) {
      var i = e2("../internals/to-object"), a = e2("../internals/to-absolute-index"), l = e2("../internals/to-length");
      t2.exports = function(e3) {
        for (var t3 = i(this), r3 = l(t3.length), o = arguments.length, n = a(1 < o ? arguments[1] : undefined, r3), o = 2 < o ? arguments[2] : undefined, s2 = o === undefined ? r3 : a(o, r3);n < s2; )
          t3[n++] = e3;
        return t3;
      };
    }, { "../internals/to-absolute-index": 132, "../internals/to-length": 136, "../internals/to-object": 137 }], 16: [function(e2, t2, r2) {
      var o = e2("../internals/array-iteration").forEach, n = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), n = n("forEach"), e2 = e2("forEach");
      t2.exports = n && e2 ? [].forEach : function(e3) {
        return o(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      };
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23 }], 17: [function(e2, t2, r2) {
      var f = e2("../internals/function-bind-context"), p = e2("../internals/to-object"), m = e2("../internals/call-with-safe-iteration-closing"), y = e2("../internals/is-array-iterator-method"), g = e2("../internals/to-length"), v = e2("../internals/create-property"), b = e2("../internals/get-iterator-method");
      t2.exports = function(e3) {
        var t3, r3, o, n, s2, i, a = p(e3), e3 = typeof this == "function" ? this : Array, l = arguments.length, u = 1 < l ? arguments[1] : undefined, c = u !== undefined, d = b(a), h = 0;
        if (c && (u = f(u, 2 < l ? arguments[2] : undefined, 2)), d == null || e3 == Array && y(d))
          for (r3 = new e3(t3 = g(a.length));h < t3; h++)
            i = c ? u(a[h], h) : a[h], v(r3, h, i);
        else
          for (s2 = (n = d.call(a)).next, r3 = new e3;!(o = s2.call(n)).done; h++)
            i = c ? m(n, u, [o.value, h], true) : o.value, v(r3, h, i);
        return r3.length = h, r3;
      };
    }, { "../internals/call-with-safe-iteration-closing": 26, "../internals/create-property": 40, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136, "../internals/to-object": 137 }], 18: [function(e2, t2, r2) {
      function o(a) {
        return function(e3, t3, r3) {
          var o2, n = l(e3), s2 = u(n.length), i = c(r3, s2);
          if (a && t3 != t3) {
            for (;i < s2; )
              if ((o2 = n[i++]) != o2)
                return true;
          } else
            for (;i < s2; i++)
              if ((a || (i in n)) && n[i] === t3)
                return a || i || 0;
          return !a && -1;
        };
      }
      var l = e2("../internals/to-indexed-object"), u = e2("../internals/to-length"), c = e2("../internals/to-absolute-index");
      t2.exports = { includes: o(true), indexOf: o(false) };
    }, { "../internals/to-absolute-index": 132, "../internals/to-indexed-object": 134, "../internals/to-length": 136 }], 19: [function(e2, t2, r2) {
      function o(h) {
        var f = h == 1, p = h == 2, m = h == 3, y = h == 4, g = h == 6, v = h == 5 || g;
        return function(e3, t3, r3, o2) {
          for (var n, s2, i = _(e3), a = j(i), l = b(t3, r3, 3), u = x(a.length), c = 0, t3 = o2 || w, d = f ? t3(e3, u) : p ? t3(e3, 0) : undefined;c < u; c++)
            if ((v || (c in a)) && (s2 = l(n = a[c], c, i), h)) {
              if (f)
                d[c] = s2;
              else if (s2)
                switch (h) {
                  case 3:
                    return true;
                  case 5:
                    return n;
                  case 6:
                    return c;
                  case 2:
                    S.call(d, n);
                }
              else if (y)
                return false;
            }
          return g ? -1 : m || y ? y : d;
        };
      }
      var b = e2("../internals/function-bind-context"), j = e2("../internals/indexed-object"), _ = e2("../internals/to-object"), x = e2("../internals/to-length"), w = e2("../internals/array-species-create"), S = [].push;
      t2.exports = { forEach: o(0), map: o(1), filter: o(2), some: o(3), every: o(4), find: o(5), findIndex: o(6) };
    }, { "../internals/array-species-create": 25, "../internals/function-bind-context": 54, "../internals/indexed-object": 66, "../internals/to-length": 136, "../internals/to-object": 137 }], 20: [function(e2, t2, r2) {
      var n = e2("../internals/to-indexed-object"), s2 = e2("../internals/to-integer"), i = e2("../internals/to-length"), o = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), a = Math.min, l = [].lastIndexOf, u = !!l && 1 / [1].lastIndexOf(1, -0) < 0, o = o("lastIndexOf"), e2 = e2("indexOf", { ACCESSORS: true, 1: 0 });
      t2.exports = u || !o || !e2 ? function(e3) {
        if (u)
          return l.apply(this, arguments) || 0;
        var t3 = n(this), r3 = i(t3.length), o2 = r3 - 1;
        for ((o2 = 1 < arguments.length ? a(o2, s2(arguments[1])) : o2) < 0 && (o2 = r3 + o2);0 <= o2; o2--)
          if (o2 in t3 && t3[o2] === e3)
            return o2 || 0;
        return -1;
      } : l;
    }, { "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/to-indexed-object": 134, "../internals/to-integer": 135, "../internals/to-length": 136 }], 21: [function(e2, t2, r2) {
      var o = e2("../internals/fails"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/engine-v8-version"), i = n("species");
      t2.exports = function(t3) {
        return 51 <= s2 || !o(function() {
          var e3 = [];
          return (e3.constructor = {})[i] = function() {
            return { foo: 1 };
          }, e3[t3](Boolean).foo !== 1;
        });
      };
    }, { "../internals/engine-v8-version": 48, "../internals/fails": 51, "../internals/well-known-symbol": 148 }], 22: [function(e2, t2, r2) {
      var o = e2("../internals/fails");
      t2.exports = function(e3, t3) {
        var r3 = [][e3];
        return !!r3 && o(function() {
          r3.call(null, t3 || function() {
            throw 1;
          }, 1);
        });
      };
    }, { "../internals/fails": 51 }], 23: [function(e2, t2, r2) {
      function i(e3) {
        throw e3;
      }
      var a = e2("../internals/descriptors"), l = e2("../internals/fails"), u = e2("../internals/has"), c = Object.defineProperty, d = {};
      t2.exports = function(e3, t3) {
        var r3, o, n, s2;
        return u(d, e3) ? d[e3] : (r3 = [][e3], o = !!u(t3 = t3 || {}, "ACCESSORS") && t3.ACCESSORS, n = u(t3, 0) ? t3[0] : i, s2 = u(t3, 1) ? t3[1] : undefined, d[e3] = !!r3 && !l(function() {
          if (o && !a)
            return true;
          var e4 = { length: -1 };
          o ? c(e4, 1, { enumerable: true, get: i }) : e4[1] = 1, r3.call(e4, n, s2);
        }));
      };
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/has": 60 }], 24: [function(e2, t2, r2) {
      function o(u) {
        return function(e3, t3, r3, o2) {
          c(t3);
          var n = d(e3), s2 = h(n), i = f(n.length), a = u ? i - 1 : 0, l = u ? -1 : 1;
          if (r3 < 2)
            for (;; ) {
              if (a in s2) {
                o2 = s2[a], a += l;
                break;
              }
              if (a += l, u ? a < 0 : i <= a)
                throw TypeError("Reduce of empty array with no initial value");
            }
          for (;u ? 0 <= a : a < i; a += l)
            a in s2 && (o2 = t3(o2, s2[a], a, n));
          return o2;
        };
      }
      var c = e2("../internals/a-function"), d = e2("../internals/to-object"), h = e2("../internals/indexed-object"), f = e2("../internals/to-length");
      t2.exports = { left: o(false), right: o(true) };
    }, { "../internals/a-function": 5, "../internals/indexed-object": 66, "../internals/to-length": 136, "../internals/to-object": 137 }], 25: [function(e2, t2, r2) {
      var o = e2("../internals/is-object"), n = e2("../internals/is-array"), s2 = e2("../internals/well-known-symbol")("species");
      t2.exports = function(e3, t3) {
        var r3;
        return new ((r3 = n(e3) && (typeof (r3 = e3.constructor) == "function" && (r3 === Array || n(r3.prototype)) || o(r3) && (r3 = r3[s2]) === null) ? undefined : r3) === undefined ? Array : r3)(t3 === 0 ? 0 : t3);
      };
    }, { "../internals/is-array": 72, "../internals/is-object": 74, "../internals/well-known-symbol": 148 }], 26: [function(e2, t2, r2) {
      var n = e2("../internals/an-object");
      t2.exports = function(t3, e3, r3, o) {
        try {
          return o ? e3(n(r3)[0], r3[1]) : e3(r3);
        } catch (e4) {
          o = t3.return;
          throw o !== undefined && n(o.call(t3)), e4;
        }
      };
    }, { "../internals/an-object": 10 }], 27: [function(e2, t2, r2) {
      var n = e2("../internals/well-known-symbol")("iterator"), s2 = false;
      try {
        var o = 0, i = { next: function() {
          return { done: !!o++ };
        }, return: function() {
          s2 = true;
        } };
        i[n] = function() {
          return this;
        }, Array.from(i, function() {
          throw 2;
        });
      } catch (e3) {
      }
      t2.exports = function(e3, t3) {
        if (!t3 && !s2)
          return false;
        var r3 = false;
        try {
          var o2 = {};
          o2[n] = function() {
            return { next: function() {
              return { done: r3 = true };
            } };
          }, e3(o2);
        } catch (e4) {
        }
        return r3;
      };
    }, { "../internals/well-known-symbol": 148 }], 28: [function(e2, t2, r2) {
      var o = {}.toString;
      t2.exports = function(e3) {
        return o.call(e3).slice(8, -1);
      };
    }, {}], 29: [function(e2, t2, r2) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/classof-raw"), s2 = e2("../internals/well-known-symbol")("toStringTag"), i = n(function() {
        return arguments;
      }()) == "Arguments";
      t2.exports = o ? n : function(e3) {
        var t3;
        return e3 === undefined ? "Undefined" : e3 === null ? "Null" : typeof (t3 = function(e4, t4) {
          try {
            return e4[t4];
          } catch (e5) {
          }
        }(e3 = Object(e3), s2)) == "string" ? t3 : i ? n(e3) : (t3 = n(e3)) == "Object" && typeof e3.callee == "function" ? "Arguments" : t3;
      };
    }, { "../internals/classof-raw": 28, "../internals/to-string-tag-support": 141, "../internals/well-known-symbol": 148 }], 30: [function(e2, t2, r2) {
      var u = e2("../internals/object-define-property").f, c = e2("../internals/object-create"), d = e2("../internals/redefine-all"), h = e2("../internals/function-bind-context"), f = e2("../internals/an-instance"), p = e2("../internals/iterate"), i = e2("../internals/define-iterator"), a = e2("../internals/set-species"), m = e2("../internals/descriptors"), y = e2("../internals/internal-metadata").fastKey, e2 = e2("../internals/internal-state"), g = e2.set, v = e2.getterFor;
      t2.exports = { getConstructor: function(e3, r3, o, n) {
        function s2(e4, t3, r4) {
          var o2, n2 = l(e4), s3 = i2(e4, t3);
          return s3 ? s3.value = r4 : (n2.last = s3 = { index: o2 = y(t3, true), key: t3, value: r4, previous: t3 = n2.last, next: undefined, removed: false }, n2.first || (n2.first = s3), t3 && (t3.next = s3), m ? n2.size++ : e4.size++, o2 !== "F" && (n2.index[o2] = s3)), e4;
        }
        function i2(e4, t3) {
          var r4, e4 = l(e4), o2 = y(t3);
          if (o2 !== "F")
            return e4.index[o2];
          for (r4 = e4.first;r4; r4 = r4.next)
            if (r4.key == t3)
              return r4;
        }
        var a2 = e3(function(e4, t3) {
          f(e4, a2, r3), g(e4, { type: r3, index: c(null), first: undefined, last: undefined, size: 0 }), m || (e4.size = 0), t3 != null && p(t3, e4[n], e4, o);
        }), l = v(r3);
        return d(a2.prototype, { clear: function() {
          for (var e4 = l(this), t3 = e4.index, r4 = e4.first;r4; )
            r4.removed = true, r4.previous && (r4.previous = r4.previous.next = undefined), delete t3[r4.index], r4 = r4.next;
          e4.first = e4.last = undefined, m ? e4.size = 0 : this.size = 0;
        }, delete: function(e4) {
          var t3, r4, o2 = l(this), e4 = i2(this, e4);
          return e4 && (t3 = e4.next, r4 = e4.previous, delete o2.index[e4.index], e4.removed = true, r4 && (r4.next = t3), t3 && (t3.previous = r4), o2.first == e4 && (o2.first = t3), o2.last == e4 && (o2.last = r4), m ? o2.size-- : this.size--), !!e4;
        }, forEach: function(e4) {
          for (var t3, r4 = l(this), o2 = h(e4, 1 < arguments.length ? arguments[1] : undefined, 3);t3 = t3 ? t3.next : r4.first; )
            for (o2(t3.value, t3.key, this);t3 && t3.removed; )
              t3 = t3.previous;
        }, has: function(e4) {
          return !!i2(this, e4);
        } }), d(a2.prototype, o ? { get: function(e4) {
          e4 = i2(this, e4);
          return e4 && e4.value;
        }, set: function(e4, t3) {
          return s2(this, e4 === 0 ? 0 : e4, t3);
        } } : { add: function(e4) {
          return s2(this, e4 = e4 === 0 ? 0 : e4, e4);
        } }), m && u(a2.prototype, "size", { get: function() {
          return l(this).size;
        } }), a2;
      }, setStrong: function(e3, t3, r3) {
        var o = t3 + " Iterator", n = v(t3), s2 = v(o);
        i(e3, t3, function(e4, t4) {
          g(this, { type: o, target: e4, state: n(e4), kind: t4, last: undefined });
        }, function() {
          for (var e4 = s2(this), t4 = e4.kind, r4 = e4.last;r4 && r4.removed; )
            r4 = r4.previous;
          return e4.target && (e4.last = r4 = r4 ? r4.next : e4.state.first) ? t4 == "keys" ? { value: r4.key, done: false } : t4 == "values" ? { value: r4.value, done: false } : { value: [r4.key, r4.value], done: false } : { value: e4.target = undefined, done: true };
        }, r3 ? "entries" : "values", !r3, true), a(t3);
      } };
    }, { "../internals/an-instance": 9, "../internals/define-iterator": 41, "../internals/descriptors": 43, "../internals/function-bind-context": 54, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/iterate": 77, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/redefine-all": 107, "../internals/set-species": 116 }], 31: [function(e2, t2, r2) {
      function l(e3) {
        return e3.frozen || (e3.frozen = new o);
      }
      function o() {
        this.entries = [];
      }
      function n(e3, t3) {
        return i(e3.entries, function(e4) {
          return e4[0] === t3;
        });
      }
      var u = e2("../internals/redefine-all"), c = e2("../internals/internal-metadata").getWeakData, d = e2("../internals/an-object"), h = e2("../internals/is-object"), f = e2("../internals/an-instance"), p = e2("../internals/iterate"), s2 = e2("../internals/array-iteration"), m = e2("../internals/has"), e2 = e2("../internals/internal-state"), y = e2.set, g = e2.getterFor, i = s2.find, a = s2.findIndex, v = 0;
      o.prototype = { get: function(e3) {
        e3 = n(this, e3);
        if (e3)
          return e3[1];
      }, has: function(e3) {
        return !!n(this, e3);
      }, set: function(e3, t3) {
        var r3 = n(this, e3);
        r3 ? r3[1] = t3 : this.entries.push([e3, t3]);
      }, delete: function(t3) {
        var e3 = a(this.entries, function(e4) {
          return e4[0] === t3;
        });
        return ~e3 && this.entries.splice(e3, 1), !!~e3;
      } }, t2.exports = { getConstructor: function(e3, r3, o2, n2) {
        function s3(e4, t3, r4) {
          var o3 = a2(e4), n3 = c(d(t3), true);
          return n3 === true ? l(o3).set(t3, r4) : n3[o3.id] = r4, e4;
        }
        var i2 = e3(function(e4, t3) {
          f(e4, i2, r3), y(e4, { type: r3, id: v++, frozen: undefined }), t3 != null && p(t3, e4[n2], e4, o2);
        }), a2 = g(r3);
        return u(i2.prototype, { delete: function(e4) {
          var t3, r4 = a2(this);
          return !!h(e4) && ((t3 = c(e4)) === true ? l(r4).delete(e4) : t3 && m(t3, r4.id) && delete t3[r4.id]);
        }, has: function(e4) {
          var t3, r4 = a2(this);
          return !!h(e4) && ((t3 = c(e4)) === true ? l(r4).has(e4) : t3 && m(t3, r4.id));
        } }), u(i2.prototype, o2 ? { get: function(e4) {
          var t3, r4 = a2(this);
          if (h(e4))
            return (t3 = c(e4)) === true ? l(r4).get(e4) : t3 ? t3[r4.id] : undefined;
        }, set: function(e4, t3) {
          return s3(this, e4, t3);
        } } : { add: function(e4) {
          return s3(this, e4, true);
        } }), i2;
      } };
    }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/has": 60, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/iterate": 77, "../internals/redefine-all": 107 }], 32: [function(e2, t2, r2) {
      var y = e2("../internals/export"), g = e2("../internals/global"), v = e2("../internals/is-forced"), b = e2("../internals/redefine"), j = e2("../internals/internal-metadata"), _ = e2("../internals/iterate"), x = e2("../internals/an-instance"), w = e2("../internals/is-object"), S = e2("../internals/fails"), T = e2("../internals/check-correctness-of-iteration"), M = e2("../internals/set-to-string-tag"), E = e2("../internals/inherit-if-required");
      t2.exports = function(r3, e3, t3) {
        function o(e4) {
          var r4 = f[e4];
          b(f, e4, e4 == "add" ? function(e5) {
            return r4.call(this, e5 === 0 ? 0 : e5), this;
          } : e4 == "delete" ? function(e5) {
            return !(c && !w(e5)) && r4.call(this, e5 === 0 ? 0 : e5);
          } : e4 == "get" ? function(e5) {
            return c && !w(e5) ? undefined : r4.call(this, e5 === 0 ? 0 : e5);
          } : e4 == "has" ? function(e5) {
            return !(c && !w(e5)) && r4.call(this, e5 === 0 ? 0 : e5);
          } : function(e5, t4) {
            return r4.call(this, e5 === 0 ? 0 : e5, t4), this;
          });
        }
        var n, s2, i, a, l, u = r3.indexOf("Map") !== -1, c = r3.indexOf("Weak") !== -1, d = u ? "set" : "add", h = g[r3], f = h && h.prototype, p = h, m = {};
        return v(r3, typeof h != "function" || !(c || f.forEach && !S(function() {
          new h().entries().next();
        }))) ? (p = t3.getConstructor(e3, r3, u, d), j.REQUIRED = true) : v(r3, true) && (s2 = (n = new p)[d](c ? {} : -0, 1) != n, i = S(function() {
          n.has(1);
        }), a = T(function(e4) {
          new h(e4);
        }), l = !c && S(function() {
          for (var e4 = new h, t4 = 5;t4--; )
            e4[d](t4, t4);
          return !e4.has(-0);
        }), a || (((p = e3(function(e4, t4) {
          x(e4, p, r3);
          e4 = E(new h, e4, p);
          return t4 != null && _(t4, e4[d], e4, u), e4;
        })).prototype = f).constructor = p), (i || l) && (o("delete"), o("has"), u && o("get")), (l || s2) && o(d), c && f.clear && delete f.clear), m[r3] = p, y({ global: true, forced: p != h }, m), M(p, r3), c || t3.setStrong(p, r3, u), p;
      };
    }, { "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50, "../internals/fails": 51, "../internals/global": 59, "../internals/inherit-if-required": 67, "../internals/internal-metadata": 69, "../internals/is-forced": 73, "../internals/is-object": 74, "../internals/iterate": 77, "../internals/redefine": 108, "../internals/set-to-string-tag": 117 }], 33: [function(e2, t2, r2) {
      var a = e2("../internals/has"), l = e2("../internals/own-keys"), u = e2("../internals/object-get-own-property-descriptor"), c = e2("../internals/object-define-property");
      t2.exports = function(e3, t3) {
        for (var r3 = l(t3), o = c.f, n = u.f, s2 = 0;s2 < r3.length; s2++) {
          var i = r3[s2];
          a(e3, i) || o(e3, i, n(t3, i));
        }
      };
    }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/own-keys": 103 }], 34: [function(e2, t2, r2) {
      var o = e2("../internals/well-known-symbol")("match");
      t2.exports = function(t3) {
        var r3 = /./;
        try {
          "/./"[t3](r3);
        } catch (e3) {
          try {
            return r3[o] = false, "/./"[t3](r3);
          } catch (e4) {
          }
        }
        return false;
      };
    }, { "../internals/well-known-symbol": 148 }], 35: [function(e2, t2, r2) {
      e2 = e2("../internals/fails");
      t2.exports = !e2(function() {
        function e3() {
        }
        return e3.prototype.constructor = null, Object.getPrototypeOf(new e3) !== e3.prototype;
      });
    }, { "../internals/fails": 51 }], 36: [function(e2, t2, r2) {
      var s2 = e2("../internals/require-object-coercible"), i = /"/g;
      t2.exports = function(e3, t3, r3, o) {
        var e3 = String(s2(e3)), n = "<" + t3;
        return r3 !== "" && (n += " " + r3 + '="' + String(o).replace(i, "&quot;") + '"'), n + ">" + e3 + "</" + t3 + ">";
      };
    }, { "../internals/require-object-coercible": 113 }], 37: [function(e2, t2, r2) {
      function o() {
        return this;
      }
      var n = e2("../internals/iterators-core").IteratorPrototype, s2 = e2("../internals/object-create"), i = e2("../internals/create-property-descriptor"), a = e2("../internals/set-to-string-tag"), l = e2("../internals/iterators");
      t2.exports = function(e3, t3, r3) {
        t3 += " Iterator";
        return e3.prototype = s2(n, { next: i(1, r3) }), a(e3, t3, false, true), l[t3] = o, e3;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/iterators": 79, "../internals/iterators-core": 78, "../internals/object-create": 90, "../internals/set-to-string-tag": 117 }], 38: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), n = e2("../internals/object-define-property"), s2 = e2("../internals/create-property-descriptor");
      t2.exports = o ? function(e3, t3, r3) {
        return n.f(e3, t3, s2(1, r3));
      } : function(e3, t3, r3) {
        return e3[t3] = r3, e3;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/object-define-property": 92 }], 39: [function(e2, t2, r2) {
      t2.exports = function(e3, t3) {
        return { enumerable: !(1 & e3), configurable: !(2 & e3), writable: !(4 & e3), value: t3 };
      };
    }, {}], 40: [function(e2, t2, r2) {
      var o = e2("../internals/to-primitive"), n = e2("../internals/object-define-property"), s2 = e2("../internals/create-property-descriptor");
      t2.exports = function(e3, t3, r3) {
        t3 = o(t3);
        t3 in e3 ? n.f(e3, t3, s2(0, r3)) : e3[t3] = r3;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/object-define-property": 92, "../internals/to-primitive": 140 }], 41: [function(e2, t2, r2) {
      function m() {
        return this;
      }
      var y = e2("../internals/export"), g = e2("../internals/create-iterator-constructor"), v = e2("../internals/object-get-prototype-of"), b = e2("../internals/object-set-prototype-of"), j = e2("../internals/set-to-string-tag"), _ = e2("../internals/create-non-enumerable-property"), x = e2("../internals/redefine"), o = e2("../internals/well-known-symbol"), w = e2("../internals/is-pure"), S = e2("../internals/iterators"), e2 = e2("../internals/iterators-core"), T = e2.IteratorPrototype, M = e2.BUGGY_SAFARI_ITERATORS, E = o("iterator"), k = "values", C = "entries";
      t2.exports = function(e3, t3, r3, o2, n, s2, i) {
        g(r3, t3, o2);
        function a(e4) {
          if (e4 === n && f)
            return f;
          if (!M && e4 in d)
            return d[e4];
          switch (e4) {
            case "keys":
            case k:
            case C:
              return function() {
                return new r3(this, e4);
              };
          }
          return function() {
            return new r3(this);
          };
        }
        var l, u, o2 = t3 + " Iterator", c = false, d = e3.prototype, h = d[E] || d["@@iterator"] || n && d[n], f = !M && h || a(n), p = t3 == "Array" && d.entries || h;
        if (p && (p = v(p.call(new e3)), T !== Object.prototype && p.next && (w || v(p) === T || (b ? b(p, T) : typeof p[E] != "function" && _(p, E, m)), j(p, o2, true, true), w && (S[o2] = m))), n == k && h && h.name !== k && (c = true, f = function() {
          return h.call(this);
        }), w && !i || d[E] === f || _(d, E, f), S[t3] = f, n)
          if (l = { values: a(k), keys: s2 ? f : a("keys"), entries: a(C) }, i)
            for (u in l)
              !M && !c && u in d || x(d, u, l[u]);
          else
            y({ target: t3, proto: true, forced: M || c }, l);
        return l;
      };
    }, { "../internals/create-iterator-constructor": 37, "../internals/create-non-enumerable-property": 38, "../internals/export": 50, "../internals/is-pure": 75, "../internals/iterators": 79, "../internals/iterators-core": 78, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/well-known-symbol": 148 }], 42: [function(e2, t2, r2) {
      var o = e2("../internals/path"), n = e2("../internals/has"), s2 = e2("../internals/well-known-symbol-wrapped"), i = e2("../internals/object-define-property").f;
      t2.exports = function(e3) {
        var t3 = o.Symbol || (o.Symbol = {});
        n(t3, e3) || i(t3, e3, { value: s2.f(e3) });
      };
    }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/path": 104, "../internals/well-known-symbol-wrapped": 147 }], 43: [function(e2, t2, r2) {
      e2 = e2("../internals/fails");
      t2.exports = !e2(function() {
        return Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1] != 7;
      });
    }, { "../internals/fails": 51 }], 44: [function(e2, t2, r2) {
      var o = e2("../internals/global"), e2 = e2("../internals/is-object"), n = o.document, s2 = e2(n) && e2(n.createElement);
      t2.exports = function(e3) {
        return s2 ? n.createElement(e3) : {};
      };
    }, { "../internals/global": 59, "../internals/is-object": 74 }], 45: [function(e2, t2, r2) {
      t2.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
    }, {}], 46: [function(e2, t2, r2) {
      e2 = e2("../internals/engine-user-agent");
      t2.exports = /(iphone|ipod|ipad).*applewebkit/i.test(e2);
    }, { "../internals/engine-user-agent": 47 }], 47: [function(e2, t2, r2) {
      e2 = e2("../internals/get-built-in");
      t2.exports = e2("navigator", "userAgent") || "";
    }, { "../internals/get-built-in": 56 }], 48: [function(e2, t2, r2) {
      var o, n, s2 = e2("../internals/global"), e2 = e2("../internals/engine-user-agent"), s2 = s2.process, s2 = s2 && s2.versions, s2 = s2 && s2.v8;
      s2 ? n = (o = s2.split("."))[0] + o[1] : e2 && (!(o = e2.match(/Edge\/(\d+)/)) || 74 <= o[1]) && (o = e2.match(/Chrome\/(\d+)/)) && (n = o[1]), t2.exports = n && +n;
    }, { "../internals/engine-user-agent": 47, "../internals/global": 59 }], 49: [function(e2, t2, r2) {
      t2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
    }, {}], 50: [function(e2, t2, r2) {
      var u = e2("../internals/global"), c = e2("../internals/object-get-own-property-descriptor").f, d = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine"), f = e2("../internals/set-global"), p = e2("../internals/copy-constructor-properties"), m = e2("../internals/is-forced");
      t2.exports = function(e3, t3) {
        var r3, o, n, s2 = e3.target, i = e3.global, a = e3.stat, l = i ? u : a ? u[s2] || f(s2, {}) : (u[s2] || {}).prototype;
        if (l)
          for (r3 in t3) {
            if (o = t3[r3], n = e3.noTargetGet ? (n = c(l, r3)) && n.value : l[r3], !m(i ? r3 : s2 + (a ? "." : "#") + r3, e3.forced) && n !== undefined) {
              if (typeof o == typeof n)
                continue;
              p(o, n);
            }
            (e3.sham || n && n.sham) && d(o, "sham", true), h(l, r3, o, e3);
          }
      };
    }, { "../internals/copy-constructor-properties": 33, "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/is-forced": 73, "../internals/object-get-own-property-descriptor": 93, "../internals/redefine": 108, "../internals/set-global": 115 }], 51: [function(e2, t2, r2) {
      t2.exports = function(e3) {
        try {
          return !!e3();
        } catch (e4) {
          return true;
        }
      };
    }, {}], 52: [function(e2, t2, r2) {
      e2("../modules/es.regexp.exec");
      var u = e2("../internals/redefine"), c = e2("../internals/fails"), d = e2("../internals/well-known-symbol"), h = e2("../internals/regexp-exec"), f = e2("../internals/create-non-enumerable-property"), p = d("species"), m = !c(function() {
        var e3 = /./;
        return e3.exec = function() {
          var e4 = [];
          return e4.groups = { a: "7" }, e4;
        }, "".replace(e3, "$<a>") !== "7";
      }), y = "a".replace(/./, "$0") === "$0", e2 = d("replace"), g = !!/./[e2] && /./[e2]("a", "$0") === "", v = !c(function() {
        var e3 = /(?:)/, t3 = e3.exec, e3 = (e3.exec = function() {
          return t3.apply(this, arguments);
        }, "ab".split(e3));
        return e3.length !== 2 || e3[0] !== "a" || e3[1] !== "b";
      });
      t2.exports = function(r3, e3, t3, o) {
        var s2, n, i = d(r3), a = !c(function() {
          var e4 = {};
          return e4[i] = function() {
            return 7;
          }, ""[r3](e4) != 7;
        }), l = a && !c(function() {
          var e4 = false, t4 = /a/;
          return r3 === "split" && ((t4 = { constructor: {} }).constructor[p] = function() {
            return t4;
          }, t4.flags = "", t4[i] = /./[i]), t4.exec = function() {
            return e4 = true, null;
          }, t4[i](""), !e4;
        });
        a && l && (r3 !== "replace" || m && y && !g) && (r3 !== "split" || v) || (s2 = /./[i], t3 = (l = t3(i, ""[r3], function(e4, t4, r4, o2, n2) {
          return t4.exec === h ? a && !n2 ? { done: true, value: s2.call(t4, r4, o2) } : { done: true, value: e4.call(r4, t4, o2) } : { done: false };
        }, { REPLACE_KEEPS_$0: y, REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: g }))[0], n = l[1], u(String.prototype, r3, t3), u(RegExp.prototype, i, e3 == 2 ? function(e4, t4) {
          return n.call(e4, this, t4);
        } : function(e4) {
          return n.call(e4, this);
        })), o && f(RegExp.prototype[i], "sham", true);
      };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/fails": 51, "../internals/redefine": 108, "../internals/regexp-exec": 110, "../internals/well-known-symbol": 148, "../modules/es.regexp.exec": 187 }], 53: [function(e2, t2, r2) {
      e2 = e2("../internals/fails");
      t2.exports = !e2(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
    }, { "../internals/fails": 51 }], 54: [function(e2, t2, r2) {
      var s2 = e2("../internals/a-function");
      t2.exports = function(o, n, e3) {
        if (s2(o), n === undefined)
          return o;
        switch (e3) {
          case 0:
            return function() {
              return o.call(n);
            };
          case 1:
            return function(e4) {
              return o.call(n, e4);
            };
          case 2:
            return function(e4, t3) {
              return o.call(n, e4, t3);
            };
          case 3:
            return function(e4, t3, r3) {
              return o.call(n, e4, t3, r3);
            };
        }
        return function() {
          return o.apply(n, arguments);
        };
      };
    }, { "../internals/a-function": 5 }], 55: [function(e2, t2, r2) {
      var o = e2("../internals/a-function"), n = e2("../internals/is-object"), c = [].slice, d = {};
      t2.exports = Function.bind || function(i) {
        var a = o(this), l = c.call(arguments, 1), u = function() {
          var e3 = l.concat(c.call(arguments));
          if (this instanceof u) {
            var t3 = a, r3 = e3.length, o2 = e3;
            if (!(r3 in d)) {
              for (var n2 = [], s2 = 0;s2 < r3; s2++)
                n2[s2] = "a[" + s2 + "]";
              d[r3] = Function("C,a", "return new C(" + n2.join(",") + ")");
            }
            return d[r3](t3, o2);
          }
          return a.apply(i, e3);
        };
        return n(a.prototype) && (u.prototype = a.prototype), u;
      };
    }, { "../internals/a-function": 5, "../internals/is-object": 74 }], 56: [function(e2, t2, r2) {
      function o(e3) {
        return typeof e3 == "function" ? e3 : undefined;
      }
      var n = e2("../internals/path"), s2 = e2("../internals/global");
      t2.exports = function(e3, t3) {
        return arguments.length < 2 ? o(n[e3]) || o(s2[e3]) : n[e3] && n[e3][t3] || s2[e3] && s2[e3][t3];
      };
    }, { "../internals/global": 59, "../internals/path": 104 }], 57: [function(e2, t2, r2) {
      var o = e2("../internals/classof"), n = e2("../internals/iterators"), s2 = e2("../internals/well-known-symbol")("iterator");
      t2.exports = function(e3) {
        if (e3 != null)
          return e3[s2] || e3["@@iterator"] || n[o(e3)];
      };
    }, { "../internals/classof": 29, "../internals/iterators": 79, "../internals/well-known-symbol": 148 }], 58: [function(e2, t2, r2) {
      var o = e2("../internals/an-object"), n = e2("../internals/get-iterator-method");
      t2.exports = function(e3) {
        var t3 = n(e3);
        if (typeof t3 != "function")
          throw TypeError(String(e3) + " is not iterable");
        return o(t3.call(e3));
      };
    }, { "../internals/an-object": 10, "../internals/get-iterator-method": 57 }], 59: [function(e2, r2, t2) {
      (function(e3) {
        function t3(e4) {
          return e4 && e4.Math == Math && e4;
        }
        r2.exports = t3(typeof globalThis == "object" && globalThis) || t3(typeof window == "object" && window) || t3(typeof self == "object" && self) || t3(typeof e3 == "object" && e3) || Function("return this")();
      }).call(this, typeof global != "undefined" ? global : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {}], 60: [function(e2, t2, r2) {
      var o = {}.hasOwnProperty;
      t2.exports = function(e3, t3) {
        return o.call(e3, t3);
      };
    }, {}], 61: [function(e2, t2, r2) {
      t2.exports = {};
    }, {}], 62: [function(e2, t2, r2) {
      var o = e2("../internals/global");
      t2.exports = function(e3, t3) {
        var r3 = o.console;
        r3 && r3.error && (arguments.length === 1 ? r3.error(e3) : r3.error(e3, t3));
      };
    }, { "../internals/global": 59 }], 63: [function(e2, t2, r2) {
      e2 = e2("../internals/get-built-in");
      t2.exports = e2("document", "documentElement");
    }, { "../internals/get-built-in": 56 }], 64: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), n = e2("../internals/fails"), s2 = e2("../internals/document-create-element");
      t2.exports = !o && !n(function() {
        return Object.defineProperty(s2("div"), "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, { "../internals/descriptors": 43, "../internals/document-create-element": 44, "../internals/fails": 51 }], 65: [function(e2, t2, r2) {
      var { abs: h, pow: f, floor: p, log: m, LN2: y } = Math;
      t2.exports = { pack: function(e3, t3, r3) {
        var o, n, s2, i = new Array(r3), a = 8 * r3 - t3 - 1, r3 = (1 << a) - 1, l = r3 >> 1, u = t3 === 23 ? f(2, -24) - f(2, -77) : 0, c = e3 < 0 || e3 === 0 && 1 / e3 < 0 ? 1 : 0, d = 0;
        for ((e3 = h(e3)) != e3 || e3 === 1 / 0 ? (n = e3 != e3 ? 1 : 0, o = r3) : (o = p(m(e3) / y), e3 * (s2 = f(2, -o)) < 1 && (o--, s2 *= 2), 2 <= (e3 += 1 <= o + l ? u / s2 : u * f(2, 1 - l)) * s2 && (o++, s2 /= 2), r3 <= o + l ? (n = 0, o = r3) : 1 <= o + l ? (n = (e3 * s2 - 1) * f(2, t3), o += l) : (n = e3 * f(2, l - 1) * f(2, t3), o = 0));8 <= t3; i[d++] = 255 & n, n /= 256, t3 -= 8)
          ;
        for (o = o << t3 | n, a += t3;0 < a; i[d++] = 255 & o, o /= 256, a -= 8)
          ;
        return i[--d] |= 128 * c, i;
      }, unpack: function(e3, t3) {
        var r3, o = e3.length, n = 8 * o - t3 - 1, s2 = (1 << n) - 1, i = s2 >> 1, a = n - 7, l = o - 1, n = e3[l--], u = 127 & n;
        for (n >>= 7;0 < a; u = 256 * u + e3[l], l--, a -= 8)
          ;
        for (r3 = u & (1 << -a) - 1, u >>= -a, a += t3;0 < a; r3 = 256 * r3 + e3[l], l--, a -= 8)
          ;
        if (u === 0)
          u = 1 - i;
        else {
          if (u === s2)
            return r3 ? NaN : n ? -1 / 0 : 1 / 0;
          r3 += f(2, t3), u -= i;
        }
        return (n ? -1 : 1) * r3 * f(2, u - t3);
      } };
    }, {}], 66: [function(e2, t2, r2) {
      var o = e2("../internals/fails"), n = e2("../internals/classof-raw"), s2 = "".split;
      t2.exports = o(function() {
        return !Object("z").propertyIsEnumerable(0);
      }) ? function(e3) {
        return n(e3) == "String" ? s2.call(e3, "") : Object(e3);
      } : Object;
    }, { "../internals/classof-raw": 28, "../internals/fails": 51 }], 67: [function(e2, t2, r2) {
      var o = e2("../internals/is-object"), n = e2("../internals/object-set-prototype-of");
      t2.exports = function(e3, t3, r3) {
        return n && typeof (t3 = t3.constructor) == "function" && t3 !== r3 && o(t3 = t3.prototype) && t3 !== r3.prototype && n(e3, t3), e3;
      };
    }, { "../internals/is-object": 74, "../internals/object-set-prototype-of": 101 }], 68: [function(e2, t2, r2) {
      var e2 = e2("../internals/shared-store"), o = Function.toString;
      typeof e2.inspectSource != "function" && (e2.inspectSource = function(e3) {
        return o.call(e3);
      }), t2.exports = e2.inspectSource;
    }, { "../internals/shared-store": 119 }], 69: [function(e2, t2, r2) {
      function o(e3) {
        a(e3, c, { value: { objectID: "O" + ++d, weakData: {} } });
      }
      var n = e2("../internals/hidden-keys"), s2 = e2("../internals/is-object"), i = e2("../internals/has"), a = e2("../internals/object-define-property").f, l = e2("../internals/uid"), u = e2("../internals/freezing"), c = l("meta"), d = 0, h = Object.isExtensible || function() {
        return true;
      }, f = t2.exports = { REQUIRED: false, fastKey: function(e3, t3) {
        if (!s2(e3))
          return typeof e3 == "symbol" ? e3 : (typeof e3 == "string" ? "S" : "P") + e3;
        if (!i(e3, c)) {
          if (!h(e3))
            return "F";
          if (!t3)
            return "E";
          o(e3);
        }
        return e3[c].objectID;
      }, getWeakData: function(e3, t3) {
        if (!i(e3, c)) {
          if (!h(e3))
            return true;
          if (!t3)
            return false;
          o(e3);
        }
        return e3[c].weakData;
      }, onFreeze: function(e3) {
        return u && f.REQUIRED && h(e3) && !i(e3, c) && o(e3), e3;
      } };
      n[c] = true;
    }, { "../internals/freezing": 53, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/is-object": 74, "../internals/object-define-property": 92, "../internals/uid": 145 }], 70: [function(e2, t2, r2) {
      var o, n, s2, i, a, l, u, c, d = e2("../internals/native-weak-map"), h = e2("../internals/global"), f = e2("../internals/is-object"), p = e2("../internals/create-non-enumerable-property"), m = e2("../internals/has"), y = e2("../internals/shared-key"), e2 = e2("../internals/hidden-keys"), h = h.WeakMap;
      u = d ? (o = new h, n = o.get, s2 = o.has, i = o.set, a = function(e3, t3) {
        return i.call(o, e3, t3), t3;
      }, l = function(e3) {
        return n.call(o, e3) || {};
      }, function(e3) {
        return s2.call(o, e3);
      }) : (e2[c = y("state")] = true, a = function(e3, t3) {
        return p(e3, c, t3), t3;
      }, l = function(e3) {
        return m(e3, c) ? e3[c] : {};
      }, function(e3) {
        return m(e3, c);
      }), t2.exports = { set: a, get: l, has: u, enforce: function(e3) {
        return u(e3) ? l(e3) : a(e3, {});
      }, getterFor: function(t3) {
        return function(e3) {
          if (f(e3) && (e3 = l(e3)).type === t3)
            return e3;
          throw TypeError("Incompatible receiver, " + t3 + " required");
        };
      } };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/is-object": 74, "../internals/native-weak-map": 85, "../internals/shared-key": 118 }], 71: [function(e2, t2, r2) {
      var o = e2("../internals/well-known-symbol"), n = e2("../internals/iterators"), s2 = o("iterator"), i = Array.prototype;
      t2.exports = function(e3) {
        return e3 !== undefined && (n.Array === e3 || i[s2] === e3);
      };
    }, { "../internals/iterators": 79, "../internals/well-known-symbol": 148 }], 72: [function(e2, t2, r2) {
      var o = e2("../internals/classof-raw");
      t2.exports = Array.isArray || function(e3) {
        return o(e3) == "Array";
      };
    }, { "../internals/classof-raw": 28 }], 73: [function(e2, t2, r2) {
      function o(e3, t3) {
        return (e3 = a[i(e3)]) == u || e3 != l && (typeof t3 == "function" ? n(t3) : !!t3);
      }
      var n = e2("../internals/fails"), s2 = /#|\.prototype\./, i = o.normalize = function(e3) {
        return String(e3).replace(s2, ".").toLowerCase();
      }, a = o.data = {}, l = o.NATIVE = "N", u = o.POLYFILL = "P";
      t2.exports = o;
    }, { "../internals/fails": 51 }], 74: [function(e2, t2, r2) {
      t2.exports = function(e3) {
        return typeof e3 == "object" ? e3 !== null : typeof e3 == "function";
      };
    }, {}], 75: [function(e2, t2, r2) {
      t2.exports = false;
    }, {}], 76: [function(e2, t2, r2) {
      var o = e2("../internals/is-object"), n = e2("../internals/classof-raw"), s2 = e2("../internals/well-known-symbol")("match");
      t2.exports = function(e3) {
        var t3;
        return o(e3) && ((t3 = e3[s2]) !== undefined ? !!t3 : n(e3) == "RegExp");
      };
    }, { "../internals/classof-raw": 28, "../internals/is-object": 74, "../internals/well-known-symbol": 148 }], 77: [function(e2, t2, r2) {
      function h(e3, t3) {
        this.stopped = e3, this.result = t3;
      }
      var f = e2("../internals/an-object"), p = e2("../internals/is-array-iterator-method"), m = e2("../internals/to-length"), y = e2("../internals/function-bind-context"), g = e2("../internals/get-iterator-method"), v = e2("../internals/call-with-safe-iteration-closing");
      (t2.exports = function(e3, t3, r3, o, n) {
        var s2, i, a, l, u, c, d = y(t3, r3, o ? 2 : 1);
        if (n)
          s2 = e3;
        else {
          if (typeof (t3 = g(e3)) != "function")
            throw TypeError("Target is not iterable");
          if (p(t3)) {
            for (i = 0, a = m(e3.length);i < a; i++)
              if ((l = o ? d(f(c = e3[i])[0], c[1]) : d(e3[i])) && l instanceof h)
                return l;
            return new h(false);
          }
          s2 = t3.call(e3);
        }
        for (u = s2.next;!(c = u.call(s2)).done; )
          if (typeof (l = v(s2, d, c.value, o)) == "object" && l && l instanceof h)
            return l;
        return new h(false);
      }).stop = function(e3) {
        return new h(true, e3);
      };
    }, { "../internals/an-object": 10, "../internals/call-with-safe-iteration-closing": 26, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136 }], 78: [function(e2, t2, r2) {
      var o, n, s2 = e2("../internals/object-get-prototype-of"), i = e2("../internals/create-non-enumerable-property"), a = e2("../internals/has"), l = e2("../internals/well-known-symbol"), e2 = e2("../internals/is-pure"), l = l("iterator"), u = false;
      [].keys && ("next" in (n = [].keys()) ? (s2 = s2(s2(n))) !== Object.prototype && (o = s2) : u = true), o == null && (o = {}), e2 || a(o, l) || i(o, l, function() {
        return this;
      }), t2.exports = { IteratorPrototype: o, BUGGY_SAFARI_ITERATORS: u };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/has": 60, "../internals/is-pure": 75, "../internals/object-get-prototype-of": 97, "../internals/well-known-symbol": 148 }], 79: [function(e2, t2, r2) {
      t2.exports = {};
    }, {}], 80: [function(e2, t2, r2) {
      t2.exports = Math.sign || function(e3) {
        return (e3 = +e3) == 0 || e3 != e3 ? e3 : e3 < 0 ? -1 : 1;
      };
    }, {}], 81: [function(e2, t2, r2) {
      var o, n, s2, i, a, l, u, c, d = e2("../internals/global"), h = e2("../internals/object-get-own-property-descriptor").f, f = e2("../internals/classof-raw"), p = e2("../internals/task").set, e2 = e2("../internals/engine-is-ios"), m = d.MutationObserver || d.WebKitMutationObserver, y = d.process, g = d.Promise, v = f(y) == "process", f = h(d, "queueMicrotask"), h = f && f.value;
      h || (o = function() {
        var e3, t3;
        for (v && (e3 = y.domain) && e3.exit();n; ) {
          t3 = n.fn, n = n.next;
          try {
            t3();
          } catch (e4) {
            throw n ? i() : s2 = undefined, e4;
          }
        }
        s2 = undefined, e3 && e3.enter();
      }, i = v ? function() {
        y.nextTick(o);
      } : m && !e2 ? (a = true, l = document.createTextNode(""), new m(o).observe(l, { characterData: true }), function() {
        l.data = a = !a;
      }) : g && g.resolve ? (u = g.resolve(undefined), c = u.then, function() {
        c.call(u, o);
      }) : function() {
        p.call(d, o);
      }), t2.exports = h || function(e3) {
        e3 = { fn: e3, next: undefined };
        s2 && (s2.next = e3), n || (n = e3, i()), s2 = e3;
      };
    }, { "../internals/classof-raw": 28, "../internals/engine-is-ios": 46, "../internals/global": 59, "../internals/object-get-own-property-descriptor": 93, "../internals/task": 130 }], 82: [function(e2, t2, r2) {
      e2 = e2("../internals/global");
      t2.exports = e2.Promise;
    }, { "../internals/global": 59 }], 83: [function(e2, t2, r2) {
      e2 = e2("../internals/fails");
      t2.exports = !!Object.getOwnPropertySymbols && !e2(function() {
        return !String(Symbol());
      });
    }, { "../internals/fails": 51 }], 84: [function(e2, t2, r2) {
      var o = e2("../internals/fails"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/is-pure"), i = n("iterator");
      t2.exports = !o(function() {
        var e3 = new URL("b?a=1&b=2&c=3", "http://a"), r3 = e3.searchParams, o2 = "";
        return e3.pathname = "c%20d", r3.forEach(function(e4, t3) {
          r3.delete("b"), o2 += t3 + e4;
        }), s2 && !e3.toJSON || !r3.sort || e3.href !== "http://a/c%20d?a=1&c=3" || r3.get("c") !== "3" || String(new URLSearchParams("?a=1")) !== "a=1" || !r3[i] || new URL("https://a@b").username !== "a" || new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" || new URL("http://\u0442\u0435\u0441\u0442").host !== "xn--e1aybc" || new URL("http://a#\u0431").hash !== "#%D0%B1" || o2 !== "a1c3" || new URL("http://x", undefined).host !== "x";
      });
    }, { "../internals/fails": 51, "../internals/is-pure": 75, "../internals/well-known-symbol": 148 }], 85: [function(e2, t2, r2) {
      var o = e2("../internals/global"), e2 = e2("../internals/inspect-source"), o = o.WeakMap;
      t2.exports = typeof o == "function" && /native code/.test(e2(o));
    }, { "../internals/global": 59, "../internals/inspect-source": 68 }], 86: [function(e2, t2, r2) {
      function o(e3) {
        var r3, o2;
        this.promise = new e3(function(e4, t3) {
          if (r3 !== undefined || o2 !== undefined)
            throw TypeError("Bad Promise constructor");
          r3 = e4, o2 = t3;
        }), this.resolve = n(r3), this.reject = n(o2);
      }
      var n = e2("../internals/a-function");
      t2.exports.f = function(e3) {
        return new o(e3);
      };
    }, { "../internals/a-function": 5 }], 87: [function(e2, t2, r2) {
      var o = e2("../internals/is-regexp");
      t2.exports = function(e3) {
        if (o(e3))
          throw TypeError("The method doesn't accept regular expressions");
        return e3;
      };
    }, { "../internals/is-regexp": 76 }], 88: [function(e2, t2, r2) {
      var o = e2("../internals/global").isFinite;
      t2.exports = Number.isFinite || function(e3) {
        return typeof e3 == "number" && o(e3);
      };
    }, { "../internals/global": 59 }], 89: [function(e2, t2, r2) {
      var h = e2("../internals/descriptors"), o = e2("../internals/fails"), f = e2("../internals/object-keys"), p = e2("../internals/object-get-own-property-symbols"), m = e2("../internals/object-property-is-enumerable"), y = e2("../internals/to-object"), g = e2("../internals/indexed-object"), n = Object.assign, s2 = Object.defineProperty;
      t2.exports = !n || o(function() {
        var e3, t3, r3, o2;
        return !(!h || n({ b: 1 }, n(s2({}, "a", { enumerable: true, get: function() {
          s2(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b === 1) || (t3 = {}, o2 = "abcdefghijklmnopqrst", (e3 = {})[r3 = Symbol()] = 7, o2.split("").forEach(function(e4) {
          t3[e4] = e4;
        }), n({}, e3)[r3] != 7 || f(n({}, t3)).join("") != o2);
      }) ? function(e3, t3) {
        for (var r3 = y(e3), o2 = arguments.length, n2 = 1, s3 = p.f, i = m.f;n2 < o2; )
          for (var a, l = g(arguments[n2++]), u = s3 ? f(l).concat(s3(l)) : f(l), c = u.length, d = 0;d < c; )
            a = u[d++], h && !i.call(l, a) || (r3[a] = l[a]);
        return r3;
      } : n;
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/indexed-object": 66, "../internals/object-get-own-property-symbols": 96, "../internals/object-keys": 99, "../internals/object-property-is-enumerable": 100, "../internals/to-object": 137 }], 90: [function(e2, t2, r2) {
      function o() {
      }
      var n, s2 = e2("../internals/an-object"), i = e2("../internals/object-define-properties"), a = e2("../internals/enum-bug-keys"), l = e2("../internals/hidden-keys"), u = e2("../internals/html"), c = e2("../internals/document-create-element"), e2 = e2("../internals/shared-key"), d = "prototype", h = "script", f = e2("IE_PROTO"), p = function(e3) {
        return "<" + h + ">" + e3 + "</" + h + ">";
      }, m = function() {
        try {
          n = document.domain && new ActiveXObject("htmlfile");
        } catch (e4) {
        }
        m = n ? ((e3 = n).write(p("")), e3.close(), t3 = e3.parentWindow.Object, e3 = null, t3) : (e3 = c("iframe"), t3 = "java" + h + ":", e3.style.display = "none", u.appendChild(e3), e3.src = String(t3), (t3 = e3.contentWindow.document).open(), t3.write(p("document.F=Object")), t3.close(), t3.F);
        for (var e3, t3, r3 = a.length;r3--; )
          delete m[d][a[r3]];
        return m();
      };
      l[f] = true, t2.exports = Object.create || function(e3, t3) {
        var r3;
        return e3 !== null ? (o[d] = s2(e3), r3 = new o, o[d] = null, r3[f] = e3) : r3 = m(), t3 === undefined ? r3 : i(r3, t3);
      };
    }, { "../internals/an-object": 10, "../internals/document-create-element": 44, "../internals/enum-bug-keys": 49, "../internals/hidden-keys": 61, "../internals/html": 63, "../internals/object-define-properties": 91, "../internals/shared-key": 118 }], 91: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), i = e2("../internals/object-define-property"), a = e2("../internals/an-object"), l = e2("../internals/object-keys");
      t2.exports = o ? Object.defineProperties : function(e3, t3) {
        a(e3);
        for (var r3, o2 = l(t3), n = o2.length, s2 = 0;s2 < n; )
          i.f(e3, r3 = o2[s2++], t3[r3]);
        return e3;
      };
    }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/object-define-property": 92, "../internals/object-keys": 99 }], 92: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), n = e2("../internals/ie8-dom-define"), s2 = e2("../internals/an-object"), i = e2("../internals/to-primitive"), a = Object.defineProperty;
      r2.f = o ? a : function(e3, t3, r3) {
        if (s2(e3), t3 = i(t3, true), s2(r3), n)
          try {
            return a(e3, t3, r3);
          } catch (e4) {
          }
        if ("get" in r3 || "set" in r3)
          throw TypeError("Accessors not supported");
        return "value" in r3 && (e3[t3] = r3.value), e3;
      };
    }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/ie8-dom-define": 64, "../internals/to-primitive": 140 }], 93: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), n = e2("../internals/object-property-is-enumerable"), s2 = e2("../internals/create-property-descriptor"), i = e2("../internals/to-indexed-object"), a = e2("../internals/to-primitive"), l = e2("../internals/has"), u = e2("../internals/ie8-dom-define"), c = Object.getOwnPropertyDescriptor;
      r2.f = o ? c : function(e3, t3) {
        if (e3 = i(e3), t3 = a(t3, true), u)
          try {
            return c(e3, t3);
          } catch (e4) {
          }
        if (l(e3, t3))
          return s2(!n.f.call(e3, t3), e3[t3]);
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/has": 60, "../internals/ie8-dom-define": 64, "../internals/object-property-is-enumerable": 100, "../internals/to-indexed-object": 134, "../internals/to-primitive": 140 }], 94: [function(e2, t2, r2) {
      var o = e2("../internals/to-indexed-object"), n = e2("../internals/object-get-own-property-names").f, s2 = {}.toString, i = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      t2.exports.f = function(e3) {
        if (!i || s2.call(e3) != "[object Window]")
          return n(o(e3));
        try {
          return n(e3);
        } catch (e4) {
          return i.slice();
        }
      };
    }, { "../internals/object-get-own-property-names": 95, "../internals/to-indexed-object": 134 }], 95: [function(e2, t2, r2) {
      var o = e2("../internals/object-keys-internal"), n = e2("../internals/enum-bug-keys").concat("length", "prototype");
      r2.f = Object.getOwnPropertyNames || function(e3) {
        return o(e3, n);
      };
    }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 98 }], 96: [function(e2, t2, r2) {
      r2.f = Object.getOwnPropertySymbols;
    }, {}], 97: [function(e2, t2, r2) {
      var o = e2("../internals/has"), n = e2("../internals/to-object"), s2 = e2("../internals/shared-key"), e2 = e2("../internals/correct-prototype-getter"), i = s2("IE_PROTO"), a = Object.prototype;
      t2.exports = e2 ? Object.getPrototypeOf : function(e3) {
        return e3 = n(e3), o(e3, i) ? e3[i] : typeof e3.constructor == "function" && e3 instanceof e3.constructor ? e3.constructor.prototype : e3 instanceof Object ? a : null;
      };
    }, { "../internals/correct-prototype-getter": 35, "../internals/has": 60, "../internals/shared-key": 118, "../internals/to-object": 137 }], 98: [function(e2, t2, r2) {
      var i = e2("../internals/has"), a = e2("../internals/to-indexed-object"), l = e2("../internals/array-includes").indexOf, u = e2("../internals/hidden-keys");
      t2.exports = function(e3, t3) {
        var r3, o = a(e3), n = 0, s2 = [];
        for (r3 in o)
          !i(u, r3) && i(o, r3) && s2.push(r3);
        for (;t3.length > n; )
          !i(o, r3 = t3[n++]) || ~l(s2, r3) || s2.push(r3);
        return s2;
      };
    }, { "../internals/array-includes": 18, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/to-indexed-object": 134 }], 99: [function(e2, t2, r2) {
      var o = e2("../internals/object-keys-internal"), n = e2("../internals/enum-bug-keys");
      t2.exports = Object.keys || function(e3) {
        return o(e3, n);
      };
    }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 98 }], 100: [function(e2, t2, r2) {
      var o = {}.propertyIsEnumerable, n = Object.getOwnPropertyDescriptor, s2 = n && !o.call({ 1: 2 }, 1);
      r2.f = s2 ? function(e3) {
        e3 = n(this, e3);
        return !!e3 && e3.enumerable;
      } : o;
    }, {}], 101: [function(e2, t2, r2) {
      var n = e2("../internals/an-object"), s2 = e2("../internals/a-possible-prototype");
      t2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var r3, o = false, e3 = {};
        try {
          (r3 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e3, []), o = e3 instanceof Array;
        } catch (e4) {
        }
        return function(e4, t3) {
          return n(e4), s2(t3), o ? r3.call(e4, t3) : e4.__proto__ = t3, e4;
        };
      }() : undefined);
    }, { "../internals/a-possible-prototype": 6, "../internals/an-object": 10 }], 102: [function(e2, t2, r2) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/classof");
      t2.exports = o ? {}.toString : function() {
        return "[object " + n(this) + "]";
      };
    }, { "../internals/classof": 29, "../internals/to-string-tag-support": 141 }], 103: [function(e2, t2, r2) {
      var o = e2("../internals/get-built-in"), n = e2("../internals/object-get-own-property-names"), s2 = e2("../internals/object-get-own-property-symbols"), i = e2("../internals/an-object");
      t2.exports = o("Reflect", "ownKeys") || function(e3) {
        var t3 = n.f(i(e3)), r3 = s2.f;
        return r3 ? t3.concat(r3(e3)) : t3;
      };
    }, { "../internals/an-object": 10, "../internals/get-built-in": 56, "../internals/object-get-own-property-names": 95, "../internals/object-get-own-property-symbols": 96 }], 104: [function(e2, t2, r2) {
      e2 = e2("../internals/global");
      t2.exports = e2;
    }, { "../internals/global": 59 }], 105: [function(e2, t2, r2) {
      t2.exports = function(e3) {
        try {
          return { error: false, value: e3() };
        } catch (e4) {
          return { error: true, value: e4 };
        }
      };
    }, {}], 106: [function(e2, t2, r2) {
      var o = e2("../internals/an-object"), n = e2("../internals/is-object"), s2 = e2("../internals/new-promise-capability");
      t2.exports = function(e3, t3) {
        return o(e3), n(t3) && t3.constructor === e3 ? t3 : ((0, (e3 = s2.f(e3)).resolve)(t3), e3.promise);
      };
    }, { "../internals/an-object": 10, "../internals/is-object": 74, "../internals/new-promise-capability": 86 }], 107: [function(e2, t2, r2) {
      var n = e2("../internals/redefine");
      t2.exports = function(e3, t3, r3) {
        for (var o in t3)
          n(e3, o, t3[o], r3);
        return e3;
      };
    }, { "../internals/redefine": 108 }], 108: [function(e2, t2, r2) {
      var i = e2("../internals/global"), a = e2("../internals/create-non-enumerable-property"), l = e2("../internals/has"), u = e2("../internals/set-global"), o = e2("../internals/inspect-source"), e2 = e2("../internals/internal-state"), n = e2.get, c = e2.enforce, d = String(String).split("String");
      (t2.exports = function(e3, t3, r3, o2) {
        var n2 = !!o2 && !!o2.unsafe, s2 = !!o2 && !!o2.enumerable, o2 = !!o2 && !!o2.noTargetGet;
        typeof r3 == "function" && (typeof t3 != "string" || l(r3, "name") || a(r3, "name", t3), c(r3).source = d.join(typeof t3 == "string" ? t3 : "")), e3 === i ? s2 ? e3[t3] = r3 : u(t3, r3) : (n2 ? !o2 && e3[t3] && (s2 = true) : delete e3[t3], s2 ? e3[t3] = r3 : a(e3, t3, r3));
      })(Function.prototype, "toString", function() {
        return typeof this == "function" && n(this).source || o(this);
      });
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/has": 60, "../internals/inspect-source": 68, "../internals/internal-state": 70, "../internals/set-global": 115 }], 109: [function(e2, t2, r2) {
      var o = e2("./classof-raw"), n = e2("./regexp-exec");
      t2.exports = function(e3, t3) {
        var r3 = e3.exec;
        if (typeof r3 == "function") {
          r3 = r3.call(e3, t3);
          if (typeof r3 != "object")
            throw TypeError("RegExp exec method returned something other than an Object or null");
          return r3;
        }
        if (o(e3) !== "RegExp")
          throw TypeError("RegExp#exec called on incompatible receiver");
        return n.call(e3, t3);
      };
    }, { "./classof-raw": 28, "./regexp-exec": 110 }], 110: [function(e2, t2, r2) {
      var o, n, d = e2("./regexp-flags"), e2 = e2("./regexp-sticky-helpers"), h = RegExp.prototype.exec, f = String.prototype.replace, s2 = h, p = (o = /a/, n = /b*/g, h.call(o, "a"), h.call(n, "a"), o.lastIndex !== 0 || n.lastIndex !== 0), m = e2.UNSUPPORTED_Y || e2.BROKEN_CARET, y = /()??/.exec("")[1] !== undefined;
      t2.exports = s2 = p || y || m ? function(e3) {
        var t3, r3, o2, n2, s3 = this, i = m && s3.sticky, a = d.call(s3), l = s3.source, u = 0, c = e3;
        return i && ((a = a.replace("y", "")).indexOf("g") === -1 && (a += "g"), c = String(e3).slice(s3.lastIndex), 0 < s3.lastIndex && (!s3.multiline || s3.multiline && e3[s3.lastIndex - 1] !== "\n") && (l = "(?: " + l + ")", c = " " + c, u++), r3 = new RegExp("^(?:" + l + ")", a)), y && (r3 = new RegExp("^" + l + "$(?!\\s)", a)), p && (t3 = s3.lastIndex), o2 = h.call(i ? r3 : s3, c), i ? o2 ? (o2.input = o2.input.slice(u), o2[0] = o2[0].slice(u), o2.index = s3.lastIndex, s3.lastIndex += o2[0].length) : s3.lastIndex = 0 : p && o2 && (s3.lastIndex = s3.global ? o2.index + o2[0].length : t3), y && o2 && 1 < o2.length && f.call(o2[0], r3, function() {
          for (n2 = 1;n2 < arguments.length - 2; n2++)
            arguments[n2] === undefined && (o2[n2] = undefined);
        }), o2;
      } : s2;
    }, { "./regexp-flags": 111, "./regexp-sticky-helpers": 112 }], 111: [function(e2, t2, r2) {
      var o = e2("../internals/an-object");
      t2.exports = function() {
        var e3 = o(this), t3 = "";
        return e3.global && (t3 += "g"), e3.ignoreCase && (t3 += "i"), e3.multiline && (t3 += "m"), e3.dotAll && (t3 += "s"), e3.unicode && (t3 += "u"), e3.sticky && (t3 += "y"), t3;
      };
    }, { "../internals/an-object": 10 }], 112: [function(e2, t2, r2) {
      e2 = e2("./fails");
      function o(e3, t3) {
        return RegExp(e3, t3);
      }
      r2.UNSUPPORTED_Y = e2(function() {
        var e3 = o("a", "y");
        return e3.lastIndex = 2, e3.exec("abcd") != null;
      }), r2.BROKEN_CARET = e2(function() {
        var e3 = o("^r", "gy");
        return e3.lastIndex = 2, e3.exec("str") != null;
      });
    }, { "./fails": 51 }], 113: [function(e2, t2, r2) {
      t2.exports = function(e3) {
        if (e3 == null)
          throw TypeError("Can't call method on " + e3);
        return e3;
      };
    }, {}], 114: [function(e2, t2, r2) {
      t2.exports = Object.is || function(e3, t3) {
        return e3 === t3 ? e3 !== 0 || 1 / e3 == 1 / t3 : e3 != e3 && t3 != t3;
      };
    }, {}], 115: [function(e2, t2, r2) {
      var o = e2("../internals/global"), n = e2("../internals/create-non-enumerable-property");
      t2.exports = function(t3, r3) {
        try {
          n(o, t3, r3);
        } catch (e3) {
          o[t3] = r3;
        }
        return r3;
      };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59 }], 116: [function(e2, t2, r2) {
      var o = e2("../internals/get-built-in"), n = e2("../internals/object-define-property"), s2 = e2("../internals/well-known-symbol"), i = e2("../internals/descriptors"), a = s2("species");
      t2.exports = function(e3) {
        var e3 = o(e3), t3 = n.f;
        i && e3 && !e3[a] && t3(e3, a, { configurable: true, get: function() {
          return this;
        } });
      };
    }, { "../internals/descriptors": 43, "../internals/get-built-in": 56, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 117: [function(e2, t2, r2) {
      var o = e2("../internals/object-define-property").f, n = e2("../internals/has"), s2 = e2("../internals/well-known-symbol")("toStringTag");
      t2.exports = function(e3, t3, r3) {
        e3 && !n(e3 = r3 ? e3 : e3.prototype, s2) && o(e3, s2, { configurable: true, value: t3 });
      };
    }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 118: [function(e2, t2, r2) {
      var o = e2("../internals/shared"), n = e2("../internals/uid"), s2 = o("keys");
      t2.exports = function(e3) {
        return s2[e3] || (s2[e3] = n(e3));
      };
    }, { "../internals/shared": 120, "../internals/uid": 145 }], 119: [function(e2, t2, r2) {
      var o = e2("../internals/global"), e2 = e2("../internals/set-global"), n = "__core-js_shared__", o = o[n] || e2(n, {});
      t2.exports = o;
    }, { "../internals/global": 59, "../internals/set-global": 115 }], 120: [function(e2, t2, r2) {
      var o = e2("../internals/is-pure"), n = e2("../internals/shared-store");
      (t2.exports = function(e3, t3) {
        return n[e3] || (n[e3] = t3 !== undefined ? t3 : {});
      })("versions", []).push({ version: "3.6.5", mode: o ? "pure" : "global", copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)" });
    }, { "../internals/is-pure": 75, "../internals/shared-store": 119 }], 121: [function(e2, t2, r2) {
      var o = e2("../internals/an-object"), n = e2("../internals/a-function"), s2 = e2("../internals/well-known-symbol")("species");
      t2.exports = function(e3, t3) {
        var e3 = o(e3).constructor;
        return e3 === undefined || (e3 = o(e3)[s2]) == null ? t3 : n(e3);
      };
    }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/well-known-symbol": 148 }], 122: [function(e2, t2, r2) {
      var o = e2("../internals/fails");
      t2.exports = function(t3) {
        return o(function() {
          var e3 = ""[t3]('"');
          return e3 !== e3.toLowerCase() || 3 < e3.split('"').length;
        });
      };
    }, { "../internals/fails": 51 }], 123: [function(e2, t2, r2) {
      function o(n) {
        return function(e3, t3) {
          var r3, e3 = String(i(e3)), t3 = s2(t3), o2 = e3.length;
          return t3 < 0 || o2 <= t3 ? n ? "" : undefined : (r3 = e3.charCodeAt(t3)) < 55296 || 56319 < r3 || t3 + 1 === o2 || (o2 = e3.charCodeAt(t3 + 1)) < 56320 || 57343 < o2 ? n ? e3.charAt(t3) : r3 : n ? e3.slice(t3, t3 + 2) : o2 - 56320 + (r3 - 55296 << 10) + 65536;
        };
      }
      var s2 = e2("../internals/to-integer"), i = e2("../internals/require-object-coercible");
      t2.exports = { codeAt: o(false), charAt: o(true) };
    }, { "../internals/require-object-coercible": 113, "../internals/to-integer": 135 }], 124: [function(e2, t2, r2) {
      e2 = e2("../internals/engine-user-agent");
      t2.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(e2);
    }, { "../internals/engine-user-agent": 47 }], 125: [function(e2, t2, r2) {
      function o(n) {
        return function(e3, t3, r3) {
          var e3 = String(a(e3)), o2 = e3.length, r3 = r3 === undefined ? " " : String(r3), t3 = s2(t3);
          return t3 <= o2 || r3 == "" ? e3 : ((o2 = i.call(r3, l((t3 = t3 - o2) / r3.length))).length > t3 && (o2 = o2.slice(0, t3)), n ? e3 + o2 : o2 + e3);
        };
      }
      var s2 = e2("../internals/to-length"), i = e2("../internals/string-repeat"), a = e2("../internals/require-object-coercible"), l = Math.ceil;
      t2.exports = { start: o(false), end: o(true) };
    }, { "../internals/require-object-coercible": 113, "../internals/string-repeat": 127, "../internals/to-length": 136 }], 126: [function(e2, t2, r2) {
      function g(e3) {
        return e3 + 22 + 75 * (e3 < 26);
      }
      function s2(e3) {
        var t3, r3 = [], o = (e3 = function(e4) {
          for (var t4 = [], r4 = 0, o2 = e4.length;r4 < o2; ) {
            var n2, s4 = e4.charCodeAt(r4++);
            55296 <= s4 && s4 <= 56319 && r4 < o2 ? (64512 & (n2 = e4.charCodeAt(r4++))) == 56320 ? t4.push(((1023 & s4) << 10) + (1023 & n2) + 65536) : (t4.push(s4), r4--) : t4.push(s4);
          }
          return t4;
        }(e3)).length, n = 128, s3 = 0, i2 = 72;
        for (c = 0;c < e3.length; c++)
          (t3 = e3[c]) < 128 && r3.push(M(t3));
        var a2 = r3.length, l = a2;
        for (a2 && r3.push("-");l < o; ) {
          for (var u = v, c = 0;c < e3.length; c++)
            n <= (t3 = e3[c]) && t3 < u && (u = t3);
          var d = l + 1;
          if (u - n > T((v - s3) / d))
            throw RangeError(w);
          for (s3 += (u - n) * d, n = u, c = 0;c < e3.length; c++) {
            if ((t3 = e3[c]) < n && ++s3 > v)
              throw RangeError(w);
            if (t3 == n) {
              for (var h = s3, f = b;; f += b) {
                var p = f <= i2 ? 1 : i2 + j <= f ? j : f - i2;
                if (h < p)
                  break;
                var m = h - p, y = b - p;
                r3.push(M(g(p + m % y))), h = T(m / y);
              }
              r3.push(M(g(h))), i2 = function(e4, t4, r4) {
                var o2 = 0;
                for (e4 = r4 ? T(e4 / x) : e4 >> 1, e4 += T(e4 / t4);S * j >> 1 < e4; o2 += b)
                  e4 = T(e4 / S);
                return T(o2 + (S + 1) * e4 / (e4 + _));
              }(s3, d, l == a2), s3 = 0, ++l;
            }
          }
          ++s3, ++n;
        }
        return r3.join("");
      }
      var v = 2147483647, b = 36, j = 26, _ = 38, x = 700, i = /[^\0-\u007E]/, a = /[.\u3002\uFF0E\uFF61]/g, w = "Overflow: input needs wider integers to process", S = b - 1, T = Math.floor, M = String.fromCharCode;
      t2.exports = function(e3) {
        for (var t3, r3 = [], o = e3.toLowerCase().replace(a, ".").split("."), n = 0;n < o.length; n++)
          t3 = o[n], r3.push(i.test(t3) ? "xn--" + s2(t3) : t3);
        return r3.join(".");
      };
    }, {}], 127: [function(e2, t2, r2) {
      var n = e2("../internals/to-integer"), s2 = e2("../internals/require-object-coercible");
      t2.exports = "".repeat || function(e3) {
        var t3 = String(s2(this)), r3 = "", o = n(e3);
        if (o < 0 || o == 1 / 0)
          throw RangeError("Wrong number of repetitions");
        for (;0 < o; (o >>>= 1) && (t3 += t3))
          1 & o && (r3 += t3);
        return r3;
      };
    }, { "../internals/require-object-coercible": 113, "../internals/to-integer": 135 }], 128: [function(e2, t2, r2) {
      var o = e2("../internals/fails"), n = e2("../internals/whitespaces");
      t2.exports = function(e3) {
        return o(function() {
          return !!n[e3]() || "\u200B\x85\u180E"[e3]() != "\u200B\x85\u180E" || n[e3].name !== e3;
        });
      };
    }, { "../internals/fails": 51, "../internals/whitespaces": 149 }], 129: [function(e2, t2, r2) {
      function o(t3) {
        return function(e3) {
          e3 = String(n(e3));
          return 1 & t3 && (e3 = e3.replace(s2, "")), e3 = 2 & t3 ? e3.replace(i, "") : e3;
        };
      }
      var n = e2("../internals/require-object-coercible"), e2 = "[" + e2("../internals/whitespaces") + "]", s2 = RegExp("^" + e2 + e2 + "*"), i = RegExp(e2 + e2 + "*$");
      t2.exports = { start: o(1), end: o(2), trim: o(3) };
    }, { "../internals/require-object-coercible": 113, "../internals/whitespaces": 149 }], 130: [function(e2, t2, r2) {
      function o(e3) {
        return function() {
          x(e3);
        };
      }
      function n(e3) {
        x(e3.data);
      }
      function s2(e3) {
        a.postMessage(e3 + "", f.protocol + "//" + f.host);
      }
      var i, a = e2("../internals/global"), l = e2("../internals/fails"), u = e2("../internals/classof-raw"), c = e2("../internals/function-bind-context"), d = e2("../internals/html"), h = e2("../internals/document-create-element"), e2 = e2("../internals/engine-is-ios"), f = a.location, p = a.setImmediate, m = a.clearImmediate, y = a.process, g = a.MessageChannel, v = a.Dispatch, b = 0, j = {}, _ = "onreadystatechange", x = function(e3) {
        var t3;
        j.hasOwnProperty(e3) && (t3 = j[e3], delete j[e3], t3());
      };
      p && m || (p = function(e3) {
        for (var t3 = [], r3 = 1;r3 < arguments.length; )
          t3.push(arguments[r3++]);
        return j[++b] = function() {
          (typeof e3 == "function" ? e3 : Function(e3)).apply(undefined, t3);
        }, i(b), b;
      }, m = function(e3) {
        delete j[e3];
      }, u(y) == "process" ? i = function(e3) {
        y.nextTick(o(e3));
      } : v && v.now ? i = function(e3) {
        v.now(o(e3));
      } : g && !e2 ? (e2 = (u = new g).port2, u.port1.onmessage = n, i = c(e2.postMessage, e2, 1)) : !a.addEventListener || typeof postMessage != "function" || a.importScripts || l(s2) || f.protocol === "file:" ? i = _ in h("script") ? function(e3) {
        d.appendChild(h("script"))[_] = function() {
          d.removeChild(this), x(e3);
        };
      } : function(e3) {
        setTimeout(o(e3), 0);
      } : (i = s2, a.addEventListener("message", n, false))), t2.exports = { set: p, clear: m };
    }, { "../internals/classof-raw": 28, "../internals/document-create-element": 44, "../internals/engine-is-ios": 46, "../internals/fails": 51, "../internals/function-bind-context": 54, "../internals/global": 59, "../internals/html": 63 }], 131: [function(e2, t2, r2) {
      var o = e2("../internals/classof-raw");
      t2.exports = function(e3) {
        if (typeof e3 != "number" && o(e3) != "Number")
          throw TypeError("Incorrect invocation");
        return +e3;
      };
    }, { "../internals/classof-raw": 28 }], 132: [function(e2, t2, r2) {
      var o = e2("../internals/to-integer"), n = Math.max, s2 = Math.min;
      t2.exports = function(e3, t3) {
        e3 = o(e3);
        return e3 < 0 ? n(e3 + t3, 0) : s2(e3, t3);
      };
    }, { "../internals/to-integer": 135 }], 133: [function(e2, t2, r2) {
      var o = e2("../internals/to-integer"), n = e2("../internals/to-length");
      t2.exports = function(e3) {
        if (e3 === undefined)
          return 0;
        var e3 = o(e3), t3 = n(e3);
        if (e3 !== t3)
          throw RangeError("Wrong length or index");
        return t3;
      };
    }, { "../internals/to-integer": 135, "../internals/to-length": 136 }], 134: [function(e2, t2, r2) {
      var o = e2("../internals/indexed-object"), n = e2("../internals/require-object-coercible");
      t2.exports = function(e3) {
        return o(n(e3));
      };
    }, { "../internals/indexed-object": 66, "../internals/require-object-coercible": 113 }], 135: [function(e2, t2, r2) {
      var { ceil: o, floor: n } = Math;
      t2.exports = function(e3) {
        return isNaN(e3 = +e3) ? 0 : (0 < e3 ? n : o)(e3);
      };
    }, {}], 136: [function(e2, t2, r2) {
      var o = e2("../internals/to-integer"), n = Math.min;
      t2.exports = function(e3) {
        return 0 < e3 ? n(o(e3), 9007199254740991) : 0;
      };
    }, { "../internals/to-integer": 135 }], 137: [function(e2, t2, r2) {
      var o = e2("../internals/require-object-coercible");
      t2.exports = function(e3) {
        return Object(o(e3));
      };
    }, { "../internals/require-object-coercible": 113 }], 138: [function(e2, t2, r2) {
      var o = e2("../internals/to-positive-integer");
      t2.exports = function(e3, t3) {
        e3 = o(e3);
        if (e3 % t3)
          throw RangeError("Wrong offset");
        return e3;
      };
    }, { "../internals/to-positive-integer": 139 }], 139: [function(e2, t2, r2) {
      var o = e2("../internals/to-integer");
      t2.exports = function(e3) {
        e3 = o(e3);
        if (e3 < 0)
          throw RangeError("The argument can't be less than 0");
        return e3;
      };
    }, { "../internals/to-integer": 135 }], 140: [function(e2, t2, r2) {
      var n = e2("../internals/is-object");
      t2.exports = function(e3, t3) {
        if (!n(e3))
          return e3;
        var r3, o;
        if (t3 && typeof (r3 = e3.toString) == "function" && !n(o = r3.call(e3)) || typeof (r3 = e3.valueOf) == "function" && !n(o = r3.call(e3)) || !t3 && typeof (r3 = e3.toString) == "function" && !n(o = r3.call(e3)))
          return o;
        throw TypeError("Can't convert object to primitive value");
      };
    }, { "../internals/is-object": 74 }], 141: [function(e2, t2, r2) {
      var o = {};
      o[e2("../internals/well-known-symbol")("toStringTag")] = "z", t2.exports = String(o) === "[object z]";
    }, { "../internals/well-known-symbol": 148 }], 142: [function(e2, t2, D) {
      function f(e3, t3) {
        for (var r3 = 0, o2 = t3.length, n2 = new (Q(e3))(o2);r3 < o2; )
          n2[r3] = t3[r3++];
        return n2;
      }
      function r2(e3, t3) {
        M(e3, t3, { get: function() {
          return T(this)[t3];
        } });
      }
      function p(e3) {
        return e3 instanceof k || (e3 = B(e3)) == "ArrayBuffer" || e3 == "SharedArrayBuffer";
      }
      function o(e3, t3) {
        return L(e3) && typeof t3 != "symbol" && t3 in e3 && String(+t3) == String(t3);
      }
      function n(e3, t3) {
        return o(e3, t3 = d(t3, true)) ? U(2, e3[t3]) : X(e3, t3);
      }
      function s2(e3, t3, r3) {
        return !(o(e3, t3 = d(t3, true)) && b(r3) && h(r3, "value")) || h(r3, "get") || h(r3, "set") || r3.configurable || h(r3, "writable") && !r3.writable || h(r3, "enumerable") && !r3.enumerable ? M(e3, t3, r3) : (e3[t3] = r3.value, e3);
      }
      var a = e2("../internals/export"), l = e2("../internals/global"), i = e2("../internals/descriptors"), F = e2("../internals/typed-array-constructors-require-wrappers"), u = e2("../internals/array-buffer-view-core"), c = e2("../internals/array-buffer"), m = e2("../internals/an-instance"), U = e2("../internals/create-property-descriptor"), y = e2("../internals/create-non-enumerable-property"), N = e2("../internals/to-length"), g = e2("../internals/to-index"), v = e2("../internals/to-offset"), d = e2("../internals/to-primitive"), h = e2("../internals/has"), B = e2("../internals/classof"), b = e2("../internals/is-object"), G = e2("../internals/object-create"), j = e2("../internals/object-set-prototype-of"), V = e2("../internals/object-get-own-property-names").f, _ = e2("../internals/typed-array-from"), z = e2("../internals/array-iteration").forEach, H = e2("../internals/set-species"), x = e2("../internals/object-define-property"), w = e2("../internals/object-get-own-property-descriptor"), S = e2("../internals/internal-state"), W = e2("../internals/inherit-if-required"), T = S.get, q = S.set, M = x.f, X = w.f, Y = Math.round, E = l.RangeError, k = c.ArrayBuffer, Z = c.DataView, C = u.NATIVE_ARRAY_BUFFER_VIEWS, O = u.TYPED_ARRAY_TAG, P = u.TypedArray, A = u.TypedArrayPrototype, Q = u.aTypedArrayConstructor, L = u.isTypedArray, R = "BYTES_PER_ELEMENT", I = "Wrong length";
      i ? (C || (w.f = n, x.f = s2, r2(A, "buffer"), r2(A, "byteOffset"), r2(A, "byteLength"), r2(A, "length")), a({ target: "Object", stat: true, forced: !C }, { getOwnPropertyDescriptor: n, defineProperty: s2 }), t2.exports = function(e3, t3, n2) {
        function u2(e4, o3) {
          M(e4, o3, { get: function() {
            var e5 = this, t4 = o3;
            return (e5 = T(e5)).view[r3](t4 * c2 + e5.byteOffset, true);
          }, set: function(e5) {
            var t4 = this, r4 = o3;
            t4 = T(t4), n2 && (e5 = (e5 = Y(e5)) < 0 ? 0 : 255 < e5 ? 255 : 255 & e5), t4.view[s3](r4 * c2 + t4.byteOffset, e5, true);
          }, enumerable: true });
        }
        var c2 = e3.match(/\d+$/)[0] / 8, d2 = e3 + (n2 ? "Clamped" : "") + "Array", r3 = "get" + e3, s3 = "set" + e3, i2 = l[d2], h2 = i2, e3 = h2 && h2.prototype, o2 = {};
        C ? F && (h2 = t3(function(e4, t4, r4, o3) {
          return m(e4, h2, d2), W(b(t4) ? p(t4) ? o3 !== undefined ? new i2(t4, v(r4, c2), o3) : r4 !== undefined ? new i2(t4, v(r4, c2)) : new i2(t4) : L(t4) ? f(h2, t4) : _.call(h2, t4) : new i2(g(t4)), e4, h2);
        }), j && j(h2, P), z(V(i2), function(e4) {
          e4 in h2 || y(h2, e4, i2[e4]);
        }), h2.prototype = e3) : (h2 = t3(function(e4, t4, r4, o3) {
          m(e4, h2, d2);
          var n3, s4, i3 = 0, a2 = 0;
          if (b(t4)) {
            if (!p(t4))
              return L(t4) ? f(h2, t4) : _.call(h2, t4);
            var l2 = t4, a2 = v(r4, c2), r4 = t4.byteLength;
            if (o3 === undefined) {
              if (r4 % c2)
                throw E(I);
              if ((n3 = r4 - a2) < 0)
                throw E(I);
            } else if (r4 < (n3 = N(o3) * c2) + a2)
              throw E(I);
            s4 = n3 / c2;
          } else
            s4 = g(t4), l2 = new k(n3 = s4 * c2);
          for (q(e4, { buffer: l2, byteOffset: a2, byteLength: n3, length: s4, view: new Z(l2) });i3 < s4; )
            u2(e4, i3++);
        }), j && j(h2, P), e3 = h2.prototype = G(A)), e3.constructor !== h2 && y(e3, "constructor", h2), O && y(e3, O, d2), o2[d2] = h2, a({ global: true, forced: h2 != i2, sham: !C }, o2), R in h2 || y(h2, R, c2), R in e3 || y(e3, R, c2), H(d2);
      }) : t2.exports = function() {
      };
    }, { "../internals/an-instance": 9, "../internals/array-buffer": 13, "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/inherit-if-required": 67, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/object-set-prototype-of": 101, "../internals/set-species": 116, "../internals/to-index": 133, "../internals/to-length": 136, "../internals/to-offset": 138, "../internals/to-primitive": 140, "../internals/typed-array-constructors-require-wrappers": 143, "../internals/typed-array-from": 144 }], 143: [function(e2, t2, r2) {
      var o = e2("../internals/global"), n = e2("../internals/fails"), s2 = e2("../internals/check-correctness-of-iteration"), e2 = e2("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS, i = o.ArrayBuffer, a = o.Int8Array;
      t2.exports = !e2 || !n(function() {
        a(1);
      }) || !n(function() {
        new a(-1);
      }) || !s2(function(e3) {
        new a, new a(null), new a(1.5), new a(e3);
      }, true) || n(function() {
        return new a(new i(2), 1, undefined).length !== 1;
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/check-correctness-of-iteration": 27, "../internals/fails": 51, "../internals/global": 59 }], 144: [function(e2, t2, r2) {
      var h = e2("../internals/to-object"), f = e2("../internals/to-length"), p = e2("../internals/get-iterator-method"), m = e2("../internals/is-array-iterator-method"), y = e2("../internals/function-bind-context"), g = e2("../internals/array-buffer-view-core").aTypedArrayConstructor;
      t2.exports = function(e3) {
        var t3, r3, o, n, s2, i, a = h(e3), l = arguments.length, u = 1 < l ? arguments[1] : undefined, c = u !== undefined, d = p(a);
        if (d != null && !m(d))
          for (i = (s2 = d.call(a)).next, a = [];!(n = i.call(s2)).done; )
            a.push(n.value);
        for (c && 2 < l && (u = y(u, arguments[2], 2)), r3 = f(a.length), o = new (g(this))(r3), t3 = 0;t3 < r3; t3++)
          o[t3] = c ? u(a[t3], t3) : a[t3];
        return o;
      };
    }, { "../internals/array-buffer-view-core": 12, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136, "../internals/to-object": 137 }], 145: [function(e2, t2, r2) {
      var o = 0, n = Math.random();
      t2.exports = function(e3) {
        return "Symbol(" + String(e3 === undefined ? "" : e3) + ")_" + (++o + n).toString(36);
      };
    }, {}], 146: [function(e2, t2, r2) {
      e2 = e2("../internals/native-symbol");
      t2.exports = e2 && !Symbol.sham && typeof Symbol.iterator == "symbol";
    }, { "../internals/native-symbol": 83 }], 147: [function(e2, t2, r2) {
      e2 = e2("../internals/well-known-symbol");
      r2.f = e2;
    }, { "../internals/well-known-symbol": 148 }], 148: [function(e2, t2, r2) {
      var o = e2("../internals/global"), n = e2("../internals/shared"), s2 = e2("../internals/has"), i = e2("../internals/uid"), a = e2("../internals/native-symbol"), e2 = e2("../internals/use-symbol-as-uid"), l = n("wks"), u = o.Symbol, c = e2 ? u : u && u.withoutSetter || i;
      t2.exports = function(e3) {
        return s2(l, e3) || (a && s2(u, e3) ? l[e3] = u[e3] : l[e3] = c("Symbol." + e3)), l[e3];
      };
    }, { "../internals/global": 59, "../internals/has": 60, "../internals/native-symbol": 83, "../internals/shared": 120, "../internals/uid": 145, "../internals/use-symbol-as-uid": 146 }], 149: [function(e2, t2, r2) {
      t2.exports = `	
\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF`;
    }, {}], 150: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/global"), s2 = e2("../internals/array-buffer"), e2 = e2("../internals/set-species"), i = "ArrayBuffer", s2 = s2[i];
      o({ global: true, forced: n[i] !== s2 }, { ArrayBuffer: s2 }), e2(i);
    }, { "../internals/array-buffer": 13, "../internals/export": 50, "../internals/global": 59, "../internals/set-species": 116 }], 151: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), d = e2("../internals/is-array"), h = e2("../internals/is-object"), f = e2("../internals/to-object"), p = e2("../internals/to-length"), m = e2("../internals/create-property"), y = e2("../internals/array-species-create"), s2 = e2("../internals/array-method-has-species-support"), i = e2("../internals/well-known-symbol"), e2 = e2("../internals/engine-v8-version"), g = i("isConcatSpreadable"), v = 9007199254740991, b = "Maximum allowed index exceeded", i = 51 <= e2 || !n(function() {
        var e3 = [];
        return e3[g] = false, e3.concat()[0] !== e3;
      }), e2 = s2("concat");
      o({ target: "Array", proto: true, forced: !i || !e2 }, { concat: function(e3) {
        for (var t3, r3, o2, n2, s3, i2 = f(this), a = y(i2, 0), l = 0, u = -1, c = arguments.length;u < c; u++)
          if (s3 = undefined, !h(n2 = o2 = u === -1 ? i2 : arguments[u]) || ((s3 = n2[g]) !== undefined ? !s3 : !d(n2))) {
            if (v <= l)
              throw TypeError(b);
            m(a, l++, o2);
          } else {
            if (r3 = p(o2.length), v < l + r3)
              throw TypeError(b);
            for (t3 = 0;t3 < r3; t3++, l++)
              t3 in o2 && m(a, l, o2[t3]);
          }
        return a.length = l, a;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/fails": 51, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/to-length": 136, "../internals/to-object": 137, "../internals/well-known-symbol": 148 }], 152: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-copy-within"), e2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true }, { copyWithin: n }), e2("copyWithin");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-copy-within": 14, "../internals/export": 50 }], 153: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").every, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("every"), e2 = e2("every");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { every: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 154: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-fill"), e2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true }, { fill: n }), e2("fill");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-fill": 15, "../internals/export": 50 }], 155: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").filter, s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("filter"), e2 = e2("filter");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { filter: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 156: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").findIndex, s2 = e2("../internals/add-to-unscopables"), e2 = e2("../internals/array-method-uses-to-length"), i = "findIndex", a = true, e2 = e2(i);
      i in [] && Array(1)[i](function() {
        a = false;
      }), o({ target: "Array", proto: true, forced: a || !e2 }, { findIndex: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } }), s2(i);
    }, { "../internals/add-to-unscopables": 7, "../internals/array-iteration": 19, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 157: [function(e2, t2, r2) {
      var o = e2("../internals/export"), e2 = e2("../internals/array-for-each");
      o({ target: "Array", proto: true, forced: [].forEach != e2 }, { forEach: e2 });
    }, { "../internals/array-for-each": 16, "../internals/export": 50 }], 158: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-from");
      o({ target: "Array", stat: true, forced: !e2("../internals/check-correctness-of-iteration")(function(e3) {
        Array.from(e3);
      }) }, { from: n });
    }, { "../internals/array-from": 17, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50 }], 159: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-includes").includes, s2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true, forced: !e2("../internals/array-method-uses-to-length")("indexOf", { ACCESSORS: true, 1: 0 }) }, { includes: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } }), s2("includes");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-includes": 18, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 160: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-includes").indexOf, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), i = [].indexOf, a = !!i && 1 / [1].indexOf(1, -0) < 0, s2 = s2("indexOf"), e2 = e2("indexOf", { ACCESSORS: true, 1: 0 });
      o({ target: "Array", proto: true, forced: a || !s2 || !e2 }, { indexOf: function(e3) {
        return a ? i.apply(this, arguments) || 0 : n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/array-includes": 18, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 161: [function(e2, t2, r2) {
      var o = e2("../internals/to-indexed-object"), n = e2("../internals/add-to-unscopables"), s2 = e2("../internals/iterators"), i = e2("../internals/internal-state"), e2 = e2("../internals/define-iterator"), a = "Array Iterator", l = i.set, u = i.getterFor(a);
      t2.exports = e2(Array, "Array", function(e3, t3) {
        l(this, { type: a, target: o(e3), index: 0, kind: t3 });
      }, function() {
        var e3 = u(this), t3 = e3.target, r3 = e3.kind, o2 = e3.index++;
        return !t3 || o2 >= t3.length ? { value: e3.target = undefined, done: true } : r3 == "keys" ? { value: o2, done: false } : r3 == "values" ? { value: t3[o2], done: false } : { value: [o2, t3[o2]], done: false };
      }, "values"), s2.Arguments = s2.Array, n("keys"), n("values"), n("entries");
    }, { "../internals/add-to-unscopables": 7, "../internals/define-iterator": 41, "../internals/internal-state": 70, "../internals/iterators": 79, "../internals/to-indexed-object": 134 }], 162: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/indexed-object"), s2 = e2("../internals/to-indexed-object"), e2 = e2("../internals/array-method-is-strict"), i = [].join, n = n != Object, e2 = e2("join", ",");
      o({ target: "Array", proto: true, forced: n || !e2 }, { join: function(e3) {
        return i.call(s2(this), e3 === undefined ? "," : e3);
      } });
    }, { "../internals/array-method-is-strict": 22, "../internals/export": 50, "../internals/indexed-object": 66, "../internals/to-indexed-object": 134 }], 163: [function(e2, t2, r2) {
      var o = e2("../internals/export"), e2 = e2("../internals/array-last-index-of");
      o({ target: "Array", proto: true, forced: e2 !== [].lastIndexOf }, { lastIndexOf: e2 });
    }, { "../internals/array-last-index-of": 20, "../internals/export": 50 }], 164: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").map, s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("map"), e2 = e2("map");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { map: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 165: [function(e2, t2, r2) {
      var o = e2("../internals/export"), u = e2("../internals/is-object"), c = e2("../internals/is-array"), d = e2("../internals/to-absolute-index"), h = e2("../internals/to-length"), f = e2("../internals/to-indexed-object"), p = e2("../internals/create-property"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("slice"), e2 = e2("slice", { ACCESSORS: true, 0: 0, 1: 2 }), m = n("species"), y = [].slice, g = Math.max;
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { slice: function(e3, t3) {
        var r3, o2, n2, s3 = f(this), i = h(s3.length), a = d(e3, i), l = d(t3 === undefined ? i : t3, i);
        if (c(s3) && ((r3 = typeof (r3 = s3.constructor) == "function" && (r3 === Array || c(r3.prototype)) || u(r3) && (r3 = r3[m]) === null ? undefined : r3) === Array || r3 === undefined))
          return y.call(s3, a, l);
        for (o2 = new (r3 === undefined ? Array : r3)(g(l - a, 0)), n2 = 0;a < l; a++, n2++)
          a in s3 && p(o2, n2, s3[a]);
        return o2.length = n2, o2;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/create-property": 40, "../internals/export": 50, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/to-absolute-index": 132, "../internals/to-indexed-object": 134, "../internals/to-length": 136, "../internals/well-known-symbol": 148 }], 166: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").some, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("some"), e2 = e2("some");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { some: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 167: [function(e2, t2, r2) {
      var o = e2("../internals/export"), d = e2("../internals/to-absolute-index"), h = e2("../internals/to-integer"), f = e2("../internals/to-length"), p = e2("../internals/to-object"), m = e2("../internals/array-species-create"), y = e2("../internals/create-property"), n = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), n = n("splice"), e2 = e2("splice", { ACCESSORS: true, 0: 0, 1: 2 }), g = Math.max, v = Math.min;
      o({ target: "Array", proto: true, forced: !n || !e2 }, { splice: function(e3, t3) {
        var r3, o2, n2, s2, i, a, l = p(this), u = f(l.length), c = d(e3, u), e3 = arguments.length;
        if (e3 === 0 ? r3 = o2 = 0 : o2 = e3 === 1 ? (r3 = 0, u - c) : (r3 = e3 - 2, v(g(h(t3), 0), u - c)), 9007199254740991 < u + r3 - o2)
          throw TypeError("Maximum allowed length exceeded");
        for (n2 = m(l, o2), s2 = 0;s2 < o2; s2++)
          (i = c + s2) in l && y(n2, s2, l[i]);
        if (r3 < (n2.length = o2)) {
          for (s2 = c;s2 < u - o2; s2++)
            a = s2 + r3, (i = s2 + o2) in l ? l[a] = l[i] : delete l[a];
          for (s2 = u;u - o2 + r3 < s2; s2--)
            delete l[s2 - 1];
        } else if (o2 < r3)
          for (s2 = u - o2;c < s2; s2--)
            a = s2 + r3 - 1, (i = s2 + o2 - 1) in l ? l[a] = l[i] : delete l[a];
        for (s2 = 0;s2 < r3; s2++)
          l[s2 + c] = arguments[s2 + 2];
        return l.length = u - o2 + r3, n2;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/export": 50, "../internals/to-absolute-index": 132, "../internals/to-integer": 135, "../internals/to-length": 136, "../internals/to-object": 137 }], 168: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), e2 = e2("../internals/object-define-property").f, n = Function.prototype, s2 = n.toString, i = /^\s*function ([^ (]*)/;
      !o || "name" in n || e2(n, "name", { configurable: true, get: function() {
        try {
          return s2.call(this).match(i)[1];
        } catch (e3) {
          return "";
        }
      } });
    }, { "../internals/descriptors": 43, "../internals/object-define-property": 92 }], 169: [function(e2, t2, r2) {
      var o = e2("../internals/collection"), e2 = e2("../internals/collection-strong");
      t2.exports = o("Map", function(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : undefined);
        };
      }, e2);
    }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 170: [function(e2, t2, r2) {
      var e2 = e2("../internals/export"), o = Math.hypot, l = Math.abs, u = Math.sqrt;
      e2({ target: "Math", stat: true, forced: !!o && o(1 / 0, NaN) !== 1 / 0 }, { hypot: function(e3, t3) {
        for (var r3, o2, n = 0, s2 = 0, i = arguments.length, a = 0;s2 < i; )
          a < (r3 = l(arguments[s2++])) ? (n = n * (o2 = a / r3) * o2 + 1, a = r3) : n += 0 < r3 ? (o2 = r3 / a) * o2 : r3;
        return a === 1 / 0 ? 1 / 0 : a * u(n);
      } });
    }, { "../internals/export": 50 }], 171: [function(e2, t2, r2) {
      var e2 = e2("../internals/export"), o = Math.log, n = Math.LN2;
      e2({ target: "Math", stat: true }, { log2: function(e3) {
        return o(e3) / n;
      } });
    }, { "../internals/export": 50 }], 172: [function(e2, t2, r2) {
      e2("../internals/export")({ target: "Math", stat: true }, { sign: e2("../internals/math-sign") });
    }, { "../internals/export": 50, "../internals/math-sign": 80 }], 173: [function(e2, t2, r2) {
      function o(e3) {
        var t3, r3, o2, n2, s3, i2, a2, l2 = d(e3, false);
        if (typeof l2 == "string" && 2 < l2.length) {
          if ((e3 = (l2 = g(l2)).charCodeAt(0)) === 43 || e3 === 45) {
            if ((t3 = l2.charCodeAt(2)) === 88 || t3 === 120)
              return NaN;
          } else if (e3 === 48) {
            switch (l2.charCodeAt(1)) {
              case 66:
              case 98:
                r3 = 2, o2 = 49;
                break;
              case 79:
              case 111:
                r3 = 8, o2 = 55;
                break;
              default:
                return +l2;
            }
            for (s3 = (n2 = l2.slice(2)).length, i2 = 0;i2 < s3; i2++)
              if ((a2 = n2.charCodeAt(i2)) < 48 || o2 < a2)
                return NaN;
            return parseInt(n2, r3);
          }
        }
        return +l2;
      }
      var n = e2("../internals/descriptors"), s2 = e2("../internals/global"), i = e2("../internals/is-forced"), a = e2("../internals/redefine"), l = e2("../internals/has"), u = e2("../internals/classof-raw"), c = e2("../internals/inherit-if-required"), d = e2("../internals/to-primitive"), h = e2("../internals/fails"), f = e2("../internals/object-create"), p = e2("../internals/object-get-own-property-names").f, m = e2("../internals/object-get-own-property-descriptor").f, y = e2("../internals/object-define-property").f, g = e2("../internals/string-trim").trim, v = "Number", b = s2[v], j = b.prototype, _ = u(f(j)) == v;
      if (i(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
        for (var x, w = function(e3) {
          var e3 = arguments.length < 1 ? 0 : e3, t3 = this;
          return t3 instanceof w && (_ ? h(function() {
            j.valueOf.call(t3);
          }) : u(t3) != v) ? c(new b(o(e3)), t3, w) : o(e3);
        }, S = n ? p(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), T = 0;S.length > T; T++)
          l(b, x = S[T]) && !l(w, x) && y(w, x, m(b, x));
        (w.prototype = j).constructor = w, a(s2, v, w);
      }
    }, { "../internals/classof-raw": 28, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/has": 60, "../internals/inherit-if-required": 67, "../internals/is-forced": 73, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/redefine": 108, "../internals/string-trim": 129, "../internals/to-primitive": 140 }], 174: [function(e2, t2, r2) {
      e2("../internals/export")({ target: "Number", stat: true }, { isFinite: e2("../internals/number-is-finite") });
    }, { "../internals/export": 50, "../internals/number-is-finite": 88 }], 175: [function(e2, t2, r2) {
      function c(e3, t3, r3) {
        return t3 === 0 ? r3 : t3 % 2 == 1 ? c(e3, t3 - 1, r3 * e3) : c(e3 * e3, t3 / 2, r3);
      }
      var o = e2("../internals/export"), d = e2("../internals/to-integer"), h = e2("../internals/this-number-value"), f = e2("../internals/string-repeat"), e2 = e2("../internals/fails"), n = 1 .toFixed, p = Math.floor;
      o({ target: "Number", proto: true, forced: n && (0.00008 .toFixed(3) !== "0.000" || 0.9 .toFixed(0) !== "1" || 1.255 .toFixed(2) !== "1.25" || 1000000000000000100 .toFixed(0) !== "1000000000000000128") || !e2(function() {
        n.call({});
      }) }, { toFixed: function(e3) {
        function t3(e4, t4) {
          for (var r4 = -1, o3 = t4;++r4 < 6; )
            o3 += e4 * a[r4], a[r4] = o3 % 1e7, o3 = p(o3 / 1e7);
        }
        function r3(e4) {
          for (var t4 = 6, r4 = 0;0 <= --t4; )
            r4 += a[t4], a[t4] = p(r4 / e4), r4 = r4 % e4 * 1e7;
        }
        function o2() {
          for (var e4, t4 = 6, r4 = "";0 <= --t4; )
            r4 === "" && t4 !== 0 && a[t4] === 0 || (e4 = String(a[t4]), r4 = r4 === "" ? e4 : r4 + f.call("0", 7 - e4.length) + e4);
          return r4;
        }
        var n2, s2, i = h(this), e3 = d(e3), a = [0, 0, 0, 0, 0, 0], l = "", u = "0";
        if (e3 < 0 || 20 < e3)
          throw RangeError("Incorrect fraction digits");
        if (i != i)
          return "NaN";
        if (i <= -1000000000000000000000 || 1000000000000000000000 <= i)
          return String(i);
        if (i < 0 && (l = "-", i = -i), 0.000000000000000000001 < i)
          if (i = (n2 = function(e4) {
            for (var t4 = 0, r4 = e4;4096 <= r4; )
              t4 += 12, r4 /= 4096;
            for (;2 <= r4; )
              t4 += 1, r4 /= 2;
            return t4;
          }(i * c(2, 69, 1)) - 69) < 0 ? i * c(2, -n2, 1) : i / c(2, n2, 1), i *= 4503599627370496, 0 < (n2 = 52 - n2)) {
            for (t3(0, i), s2 = e3;7 <= s2; )
              t3(1e7, 0), s2 -= 7;
            for (t3(c(10, s2, 1), 0), s2 = n2 - 1;23 <= s2; )
              r3(1 << 23), s2 -= 23;
            r3(1 << s2), t3(1, 1), r3(2), u = o2();
          } else
            t3(0, i), t3(1 << -n2, 0), u = o2() + f.call("0", e3);
        return u = 0 < e3 ? l + ((i = u.length) <= e3 ? "0." + f.call("0", e3 - i) + u : u.slice(0, i - e3) + "." + u.slice(i - e3)) : l + u;
      } });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/string-repeat": 127, "../internals/this-number-value": 131, "../internals/to-integer": 135 }], 176: [function(e2, t2, r2) {
      var o = e2("../internals/export"), e2 = e2("../internals/object-assign");
      o({ target: "Object", stat: true, forced: Object.assign !== e2 }, { assign: e2 });
    }, { "../internals/export": 50, "../internals/object-assign": 89 }], 177: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/iterate"), s2 = e2("../internals/create-property");
      o({ target: "Object", stat: true }, { fromEntries: function(e3) {
        var r3 = {};
        return n(e3, function(e4, t3) {
          s2(r3, e4, t3);
        }, undefined, true), r3;
      } });
    }, { "../internals/create-property": 40, "../internals/export": 50, "../internals/iterate": 77 }], 178: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), s2 = e2("../internals/to-indexed-object"), i = e2("../internals/object-get-own-property-descriptor").f, e2 = e2("../internals/descriptors"), n = n(function() {
        i(1);
      });
      o({ target: "Object", stat: true, forced: !e2 || n, sham: !e2 }, { getOwnPropertyDescriptor: function(e3, t3) {
        return i(s2(e3), t3);
      } });
    }, { "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-descriptor": 93, "../internals/to-indexed-object": 134 }], 179: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), e2 = e2("../internals/object-get-own-property-names-external").f;
      o({ target: "Object", stat: true, forced: n(function() {
        return !Object.getOwnPropertyNames(1);
      }) }, { getOwnPropertyNames: e2 });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-names-external": 94 }], 180: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), s2 = e2("../internals/to-object"), i = e2("../internals/object-get-prototype-of"), e2 = e2("../internals/correct-prototype-getter");
      o({ target: "Object", stat: true, forced: n(function() {
        i(1);
      }), sham: !e2 }, { getPrototypeOf: function(e3) {
        return i(s2(e3));
      } });
    }, { "../internals/correct-prototype-getter": 35, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-prototype-of": 97, "../internals/to-object": 137 }], 181: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/to-object"), s2 = e2("../internals/object-keys");
      o({ target: "Object", stat: true, forced: e2("../internals/fails")(function() {
        s2(1);
      }) }, { keys: function(e3) {
        return s2(n(e3));
      } });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-keys": 99, "../internals/to-object": 137 }], 182: [function(e2, t2, r2) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/redefine"), e2 = e2("../internals/object-to-string");
      o || n(Object.prototype, "toString", e2, { unsafe: true });
    }, { "../internals/object-to-string": 102, "../internals/redefine": 108, "../internals/to-string-tag-support": 141 }], 183: [function(e2, D, F) {
      var r2, t2, o, n, s2 = e2("../internals/export"), i = e2("../internals/is-pure"), g = e2("../internals/global"), a = e2("../internals/get-built-in"), l = e2("../internals/native-promise-constructor"), U = e2("../internals/redefine"), N = e2("../internals/redefine-all"), B = e2("../internals/set-to-string-tag"), G = e2("../internals/set-species"), V = e2("../internals/is-object"), c = e2("../internals/a-function"), z = e2("../internals/an-instance"), H = e2("../internals/classof-raw"), W = e2("../internals/inspect-source"), d = e2("../internals/iterate"), q = e2("../internals/check-correctness-of-iteration"), X = e2("../internals/species-constructor"), v = e2("../internals/task").set, u = e2("../internals/microtask"), h = e2("../internals/promise-resolve"), Y = e2("../internals/host-report-errors"), f = e2("../internals/new-promise-capability"), b = e2("../internals/perform"), p = e2("../internals/internal-state"), Z = e2("../internals/is-forced"), m = e2("../internals/well-known-symbol"), y = e2("../internals/engine-v8-version"), Q = m("species"), j = "Promise", _ = p.get, J = p.set, K = p.getterFor(j), x = l, w = g.TypeError, S = g.document, T = g.process, M = a("fetch"), E = f.f, $ = E, k = H(T) == "process", ee = !!(S && S.createEvent && g.dispatchEvent), C = "unhandledrejection", te = "rejectionhandled", O = 1, re = 2, P = 1, oe = 2, e2 = Z(j, function() {
        var e3, t3;
        if (!(W(x) !== String(x))) {
          if (y === 66)
            return true;
          if (!k && typeof PromiseRejectionEvent != "function")
            return true;
        }
        return !(!i || x.prototype.finally) || !(51 <= y && /native code/.test(x)) && (t3 = function(e4) {
          e4(function() {
          }, function() {
          });
        }, ((e3 = x.resolve(1)).constructor = {})[Q] = t3, !(e3.then(function() {
        }) instanceof t3));
      }), m = e2 || !q(function(e3) {
        x.all(e3).catch(function() {
        });
      }), ne = function(e3) {
        var t3;
        return !(!V(e3) || typeof (t3 = e3.then) != "function") && t3;
      }, A = function(f2, p2, m2) {
        var y2;
        p2.notified || (p2.notified = true, y2 = p2.reactions, u(function() {
          for (var r3, o2, e3 = p2.value, t3 = p2.state == O, n2 = 0;y2.length > n2; ) {
            var s3, i2, a2, l2 = y2[n2++], u2 = t3 ? l2.ok : l2.fail, c2 = l2.resolve, d2 = l2.reject, h2 = l2.domain;
            try {
              u2 ? (t3 || (p2.rejection === oe && function(e4, t4) {
                v.call(g, function() {
                  if (k)
                    T.emit("rejectionHandled", e4);
                  else
                    se(te, e4, t4.value);
                });
              }(f2, p2), p2.rejection = P), u2 === true ? s3 = e3 : (h2 && h2.enter(), s3 = u2(e3), h2 && (h2.exit(), a2 = true)), s3 === l2.promise ? d2(w("Promise-chain cycle")) : (i2 = ne(s3)) ? i2.call(s3, c2, d2) : c2(s3)) : d2(e3);
            } catch (e4) {
              h2 && !a2 && h2.exit(), d2(e4);
            }
          }
          p2.reactions = [], p2.notified = false, m2 && !p2.rejection && (r3 = f2, o2 = p2, v.call(g, function() {
            var e4 = o2.value, t4 = ie(o2);
            if (t4 && (t4 = b(function() {
              k ? T.emit("unhandledRejection", e4, r3) : se(C, r3, e4);
            }), o2.rejection = k || ie(o2) ? oe : P, t4.error))
              throw t4.value;
          }));
        }));
      }, se = function(e3, t3, r3) {
        var o2;
        ee ? ((o2 = S.createEvent("Event")).promise = t3, o2.reason = r3, o2.initEvent(e3, false, true), g.dispatchEvent(o2)) : o2 = { promise: t3, reason: r3 }, (t3 = g["on" + e3]) ? t3(o2) : e3 === C && Y("Unhandled promise rejection", r3);
      }, ie = function(e3) {
        return e3.rejection !== P && !e3.parent;
      }, L = function(t3, r3, o2, n2) {
        return function(e3) {
          t3(r3, o2, e3, n2);
        };
      }, R = function(e3, t3, r3, o2) {
        t3.done || (t3.done = true, (t3 = o2 ? o2 : t3).value = r3, t3.state = re, A(e3, t3, true));
      }, I = function(r3, o2, e3, t3) {
        if (!o2.done) {
          o2.done = true, t3 && (o2 = t3);
          try {
            if (r3 === e3)
              throw w("Promise can't be resolved itself");
            var n2 = ne(e3);
            n2 ? u(function() {
              var t4 = { done: false };
              try {
                n2.call(e3, L(I, r3, t4, o2), L(R, r3, t4, o2));
              } catch (e4) {
                R(r3, t4, e4, o2);
              }
            }) : (o2.value = e3, o2.state = O, A(r3, o2, false));
          } catch (e4) {
            R(r3, { done: false }, e4, o2);
          }
        }
      };
      e2 && (x = function(e3) {
        z(this, x, j), c(e3), r2.call(this);
        var t3 = _(this);
        try {
          e3(L(I, this, t3), L(R, this, t3));
        } catch (e4) {
          R(this, t3, e4);
        }
      }, (r2 = function(e3) {
        J(this, { type: j, done: false, notified: false, parent: false, reactions: [], rejection: false, state: 0, value: undefined });
      }).prototype = N(x.prototype, { then: function(e3, t3) {
        var r3 = K(this), o2 = E(X(this, x));
        return o2.ok = typeof e3 != "function" || e3, o2.fail = typeof t3 == "function" && t3, o2.domain = k ? T.domain : undefined, r3.parent = true, r3.reactions.push(o2), r3.state != 0 && A(this, r3, false), o2.promise;
      }, catch: function(e3) {
        return this.then(undefined, e3);
      } }), t2 = function() {
        var e3 = new r2, t3 = _(e3);
        this.promise = e3, this.resolve = L(I, e3, t3), this.reject = L(R, e3, t3);
      }, f.f = E = function(e3) {
        return e3 === x || e3 === o ? new t2 : $(e3);
      }, i || typeof l != "function" || (n = l.prototype.then, U(l.prototype, "then", function(e3, t3) {
        var r3 = this;
        return new x(function(e4, t4) {
          n.call(r3, e4, t4);
        }).then(e3, t3);
      }, { unsafe: true }), typeof M == "function" && s2({ global: true, enumerable: true, forced: true }, { fetch: function(e3) {
        return h(x, M.apply(g, arguments));
      } }))), s2({ global: true, wrap: true, forced: e2 }, { Promise: x }), B(x, j, false, true), G(j), o = a(j), s2({ target: j, stat: true, forced: e2 }, { reject: function(e3) {
        var t3 = E(this);
        return t3.reject.call(undefined, e3), t3.promise;
      } }), s2({ target: j, stat: true, forced: i || e2 }, { resolve: function(e3) {
        return h(i && this === o ? x : this, e3);
      } }), s2({ target: j, stat: true, forced: m }, { all: function(e3) {
        var a2 = this, t3 = E(a2), l2 = t3.resolve, u2 = t3.reject, r3 = b(function() {
          var o2 = c(a2.resolve), n2 = [], s3 = 0, i2 = 1;
          d(e3, function(e4) {
            var t4 = s3++, r4 = false;
            n2.push(undefined), i2++, o2.call(a2, e4).then(function(e5) {
              r4 || (r4 = true, n2[t4] = e5, --i2 || l2(n2));
            }, u2);
          }), --i2 || l2(n2);
        });
        return r3.error && u2(r3.value), t3.promise;
      }, race: function(e3) {
        var r3 = this, o2 = E(r3), n2 = o2.reject, t3 = b(function() {
          var t4 = c(r3.resolve);
          d(e3, function(e4) {
            t4.call(r3, e4).then(o2.resolve, n2);
          });
        });
        return t3.error && n2(t3.value), o2.promise;
      } });
    }, { "../internals/a-function": 5, "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/classof-raw": 28, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/get-built-in": 56, "../internals/global": 59, "../internals/host-report-errors": 62, "../internals/inspect-source": 68, "../internals/internal-state": 70, "../internals/is-forced": 73, "../internals/is-object": 74, "../internals/is-pure": 75, "../internals/iterate": 77, "../internals/microtask": 81, "../internals/native-promise-constructor": 82, "../internals/new-promise-capability": 86, "../internals/perform": 105, "../internals/promise-resolve": 106, "../internals/redefine": 108, "../internals/redefine-all": 107, "../internals/set-species": 116, "../internals/set-to-string-tag": 117, "../internals/species-constructor": 121, "../internals/task": 130, "../internals/well-known-symbol": 148 }], 184: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/get-built-in"), s2 = e2("../internals/a-function"), i = e2("../internals/an-object"), a = e2("../internals/is-object"), l = e2("../internals/object-create"), u = e2("../internals/function-bind"), e2 = e2("../internals/fails"), c = n("Reflect", "construct"), d = e2(function() {
        function e3() {
        }
        return !(c(function() {
        }, [], e3) instanceof e3);
      }), h = !e2(function() {
        c(function() {
        });
      }), n = d || h;
      o({ target: "Reflect", stat: true, forced: n, sham: n }, { construct: function(e3, t3) {
        s2(e3), i(t3);
        var r3 = arguments.length < 3 ? e3 : s2(arguments[2]);
        if (h && !d)
          return c(e3, t3, r3);
        if (e3 == r3) {
          switch (t3.length) {
            case 0:
              return new e3;
            case 1:
              return new e3(t3[0]);
            case 2:
              return new e3(t3[0], t3[1]);
            case 3:
              return new e3(t3[0], t3[1], t3[2]);
            case 4:
              return new e3(t3[0], t3[1], t3[2], t3[3]);
          }
          var o2 = [null];
          return o2.push.apply(o2, t3), new (u.apply(e3, o2));
        }
        o2 = r3.prototype, r3 = l(a(o2) ? o2 : Object.prototype), o2 = Function.apply.call(e3, r3, t3);
        return a(o2) ? o2 : r3;
      } });
    }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/export": 50, "../internals/fails": 51, "../internals/function-bind": 55, "../internals/get-built-in": 56, "../internals/is-object": 74, "../internals/object-create": 90 }], 185: [function(e2, t2, r2) {
      var o = e2("../internals/export"), s2 = e2("../internals/is-object"), i = e2("../internals/an-object"), a = e2("../internals/has"), l = e2("../internals/object-get-own-property-descriptor"), u = e2("../internals/object-get-prototype-of");
      o({ target: "Reflect", stat: true }, { get: function e(t3, r3) {
        var o2, n = arguments.length < 3 ? t3 : arguments[2];
        return i(t3) === n ? t3[r3] : (o2 = l.f(t3, r3)) ? a(o2, "value") ? o2.value : o2.get === undefined ? undefined : o2.get.call(n) : s2(o2 = u(t3)) ? e(o2, r3, n) : undefined;
      } });
    }, { "../internals/an-object": 10, "../internals/export": 50, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-prototype-of": 97 }], 186: [function(e2, t2, r2) {
      var o = e2("../internals/descriptors"), n = e2("../internals/global"), s2 = e2("../internals/is-forced"), i = e2("../internals/inherit-if-required"), a = e2("../internals/object-define-property").f, l = e2("../internals/object-get-own-property-names").f, u = e2("../internals/is-regexp"), c = e2("../internals/regexp-flags"), d = e2("../internals/regexp-sticky-helpers"), h = e2("../internals/redefine"), f = e2("../internals/fails"), p = e2("../internals/internal-state").set, m = e2("../internals/set-species"), y = e2("../internals/well-known-symbol")("match"), g = n.RegExp, v = g.prototype, b = /a/g, j = /a/g, _ = new g(b) !== b, x = d.UNSUPPORTED_Y;
      if (o && s2("RegExp", !_ || x || f(function() {
        return j[y] = false, g(b) != b || g(j) == j || g(b, "i") != "/a/i";
      }))) {
        for (var w = function(e3, t3) {
          var r3, o2 = this instanceof w, n2 = u(e3), s3 = t3 === undefined;
          if (!o2 && n2 && e3.constructor === w && s3)
            return e3;
          _ ? n2 && !s3 && (e3 = e3.source) : e3 instanceof w && (s3 && (t3 = c.call(e3)), e3 = e3.source), x && (r3 = !!t3 && -1 < t3.indexOf("y")) && (t3 = t3.replace(/y/g, ""));
          n2 = i(_ ? new g(e3, t3) : g(e3, t3), o2 ? this : v, w);
          return x && r3 && p(n2, { sticky: r3 }), n2;
        }, S = l(g), T = 0;S.length > T; )
          (function(t3) {
            t3 in w || a(w, t3, { configurable: true, get: function() {
              return g[t3];
            }, set: function(e3) {
              g[t3] = e3;
            } });
          })(S[T++]);
        (v.constructor = w).prototype = v, h(n, "RegExp", w);
      }
      m("RegExp");
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/inherit-if-required": 67, "../internals/internal-state": 70, "../internals/is-forced": 73, "../internals/is-regexp": 76, "../internals/object-define-property": 92, "../internals/object-get-own-property-names": 95, "../internals/redefine": 108, "../internals/regexp-flags": 111, "../internals/regexp-sticky-helpers": 112, "../internals/set-species": 116, "../internals/well-known-symbol": 148 }], 187: [function(e2, t2, r2) {
      var o = e2("../internals/export"), e2 = e2("../internals/regexp-exec");
      o({ target: "RegExp", proto: true, forced: /./.exec !== e2 }, { exec: e2 });
    }, { "../internals/export": 50, "../internals/regexp-exec": 110 }], 188: [function(e2, t2, r2) {
      var o = e2("../internals/redefine"), n = e2("../internals/an-object"), s2 = e2("../internals/fails"), i = e2("../internals/regexp-flags"), e2 = "toString", a = RegExp.prototype, l = a[e2], s2 = s2(function() {
        return l.call({ source: "a", flags: "b" }) != "/a/b";
      }), u = l.name != e2;
      (s2 || u) && o(RegExp.prototype, e2, function() {
        var e3 = n(this), t3 = String(e3.source), r3 = e3.flags;
        return "/" + t3 + "/" + String(r3 === undefined && e3 instanceof RegExp && !("flags" in a) ? i.call(e3) : r3);
      }, { unsafe: true });
    }, { "../internals/an-object": 10, "../internals/fails": 51, "../internals/redefine": 108, "../internals/regexp-flags": 111 }], 189: [function(e2, t2, r2) {
      var o = e2("../internals/collection"), e2 = e2("../internals/collection-strong");
      t2.exports = o("Set", function(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : undefined);
        };
      }, e2);
    }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 190: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/object-get-own-property-descriptor").f, s2 = e2("../internals/to-length"), i = e2("../internals/not-a-regexp"), a = e2("../internals/require-object-coercible"), l = e2("../internals/correct-is-regexp-logic"), e2 = e2("../internals/is-pure"), u = "".endsWith, c = Math.min, l = l("endsWith");
      o({ target: "String", proto: true, forced: !!(e2 || l || (!(o = n(String.prototype, "endsWith")) || o.writable)) && !l }, { endsWith: function(e3) {
        var t3 = String(a(this)), r3 = (i(e3), 1 < arguments.length ? arguments[1] : undefined), o2 = s2(t3.length), r3 = r3 === undefined ? o2 : c(s2(r3), o2), o2 = String(e3);
        return u ? u.call(t3, o2, r3) : t3.slice(r3 - o2.length, r3) === o2;
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 75, "../internals/not-a-regexp": 87, "../internals/object-get-own-property-descriptor": 93, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 191: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/not-a-regexp"), s2 = e2("../internals/require-object-coercible");
      o({ target: "String", proto: true, forced: !e2("../internals/correct-is-regexp-logic")("includes") }, { includes: function(e3) {
        return !!~String(s2(this)).indexOf(n(e3), 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/not-a-regexp": 87, "../internals/require-object-coercible": 113 }], 192: [function(e2, t2, r2) {
      var o = e2("../internals/string-multibyte").charAt, n = e2("../internals/internal-state"), e2 = e2("../internals/define-iterator"), s2 = "String Iterator", i = n.set, a = n.getterFor(s2);
      e2(String, "String", function(e3) {
        i(this, { type: s2, string: String(e3), index: 0 });
      }, function() {
        var e3 = a(this), t3 = e3.string, r3 = e3.index;
        return r3 >= t3.length ? { value: undefined, done: true } : (t3 = o(t3, r3), e3.index += t3.length, { value: t3, done: false });
      });
    }, { "../internals/define-iterator": 41, "../internals/internal-state": 70, "../internals/string-multibyte": 123 }], 193: [function(e2, t2, r2) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), c = e2("../internals/an-object"), d = e2("../internals/to-length"), n = e2("../internals/require-object-coercible"), h = e2("../internals/advance-string-index"), f = e2("../internals/regexp-exec-abstract");
      o("match", 1, function(o2, l, u) {
        return [function(e3) {
          var t3 = n(this), r3 = e3 == null ? undefined : e3[o2];
          return r3 !== undefined ? r3.call(e3, t3) : new RegExp(e3)[o2](String(t3));
        }, function(e3) {
          var t3 = u(l, e3, this);
          if (t3.done)
            return t3.value;
          var r3 = c(e3), o3 = String(this);
          if (!r3.global)
            return f(r3, o3);
          for (var n2 = r3.unicode, s2 = [], i = r3.lastIndex = 0;(a = f(r3, o3)) !== null; ) {
            var a = String(a[0]);
            (s2[i] = a) === "" && (r3.lastIndex = h(o3, d(r3.lastIndex), n2)), i++;
          }
          return i === 0 ? null : s2;
        }];
      });
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 194: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/string-pad").start;
      o({ target: "String", proto: true, forced: e2("../internals/string-pad-webkit-bug") }, { padStart: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : undefined);
      } });
    }, { "../internals/export": 50, "../internals/string-pad": 125, "../internals/string-pad-webkit-bug": 124 }], 195: [function(e2, t2, r2) {
      e2("../internals/export")({ target: "String", proto: true }, { repeat: e2("../internals/string-repeat") });
    }, { "../internals/export": 50, "../internals/string-repeat": 127 }], 196: [function(e2, t2, r2) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), T = e2("../internals/an-object"), M = e2("../internals/to-object"), E = e2("../internals/to-length"), k = e2("../internals/to-integer"), s2 = e2("../internals/require-object-coercible"), C = e2("../internals/advance-string-index"), O = e2("../internals/regexp-exec-abstract"), P = Math.max, A = Math.min, L = Math.floor, R = /\$([$&'`]|\d\d?|<[^>]*>)/g, I = /\$([$&'`]|\d\d?)/g;
      o("replace", 2, function(n, j, _, e3) {
        var { REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: x, REPLACE_KEEPS_$0: w } = e3, S = x ? "$" : "$0";
        return [function(e4, t3) {
          var r3 = s2(this), o2 = e4 == null ? undefined : e4[n];
          return o2 !== undefined ? o2.call(e4, r3, t3) : j.call(String(r3), e4, t3);
        }, function(e4, t3) {
          if (!x && w || typeof t3 == "string" && t3.indexOf(S) === -1) {
            var r3 = _(j, e4, this, t3);
            if (r3.done)
              return r3.value;
          }
          for (var o2, n2 = T(e4), s3 = String(this), i = typeof t3 == "function", a = (i || (t3 = String(t3)), n2.global), l = (a && (o2 = n2.unicode, n2.lastIndex = 0), []);(f = O(n2, s3)) !== null && (l.push(f), a); )
            String(f[0]) === "" && (n2.lastIndex = C(s3, E(n2.lastIndex), o2));
          for (var u, c = "", d = 0, h = 0;h < l.length; h++) {
            for (var f = l[h], p = String(f[0]), m = P(A(k(f.index), s3.length), 0), y = [], g = 1;g < f.length; g++)
              y.push((u = f[g]) === undefined ? u : String(u));
            var v = f.groups, b = i ? (b = [p].concat(y, m, s3), v !== undefined && b.push(v), String(t3.apply(undefined, b))) : function(s4, i2, a2, l2, u2, e5) {
              var c2 = a2 + s4.length, d2 = l2.length, t4 = I;
              u2 !== undefined && (u2 = M(u2), t4 = R);
              return j.call(e5, t4, function(e6, t5) {
                var r4;
                switch (t5.charAt(0)) {
                  case "$":
                    return "$";
                  case "&":
                    return s4;
                  case "`":
                    return i2.slice(0, a2);
                  case "'":
                    return i2.slice(c2);
                  case "<":
                    r4 = u2[t5.slice(1, -1)];
                    break;
                  default:
                    var o3, n3 = +t5;
                    if (n3 == 0)
                      return e6;
                    if (d2 < n3)
                      return (o3 = L(n3 / 10)) !== 0 && o3 <= d2 ? l2[o3 - 1] === undefined ? t5.charAt(1) : l2[o3 - 1] + t5.charAt(1) : e6;
                    r4 = l2[n3 - 1];
                }
                return r4 === undefined ? "" : r4;
              });
            }(p, s3, m, y, v, t3);
            d <= m && (c += s3.slice(d, m) + b, d = m + p.length);
          }
          return c + s3.slice(d);
        }];
      });
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/to-integer": 135, "../internals/to-length": 136, "../internals/to-object": 137 }], 197: [function(e2, t2, r2) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), i = e2("../internals/an-object"), a = e2("../internals/require-object-coercible"), l = e2("../internals/same-value"), u = e2("../internals/regexp-exec-abstract");
      o("search", 1, function(o2, n, s2) {
        return [function(e3) {
          var t3 = a(this), r3 = e3 == null ? undefined : e3[o2];
          return r3 !== undefined ? r3.call(e3, t3) : new RegExp(e3)[o2](String(t3));
        }, function(e3) {
          var t3, r3 = s2(n, e3, this);
          return r3.done ? r3.value : (r3 = i(e3), e3 = String(this), t3 = r3.lastIndex, l(t3, 0) || (r3.lastIndex = 0), e3 = u(r3, e3), l(r3.lastIndex, t3) || (r3.lastIndex = t3), e3 === null ? -1 : e3.index);
        }];
      });
    }, { "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/same-value": 114 }], 198: [function(e2, t2, r2) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), c = e2("../internals/is-regexp"), g = e2("../internals/an-object"), d = e2("../internals/require-object-coercible"), v = e2("../internals/species-constructor"), b = e2("../internals/advance-string-index"), j = e2("../internals/to-length"), _ = e2("../internals/regexp-exec-abstract"), h = e2("../internals/regexp-exec"), e2 = e2("../internals/fails"), f = [].push, x = Math.min, w = 4294967295, S = !e2(function() {
        return !RegExp(w, "y");
      });
      o("split", 2, function(n, p, m) {
        var y = "abbc".split(/(b)*/)[1] == "c" || "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e3, t3) {
          var r3 = String(d(this)), o2 = t3 === undefined ? w : t3 >>> 0;
          if (o2 == 0)
            return [];
          if (e3 === undefined)
            return [r3];
          if (!c(e3))
            return p.call(r3, e3, o2);
          for (var n2, s2, i, a = [], t3 = (e3.ignoreCase ? "i" : "") + (e3.multiline ? "m" : "") + (e3.unicode ? "u" : "") + (e3.sticky ? "y" : ""), l = 0, u = new RegExp(e3.source, t3 + "g");(n2 = h.call(u, r3)) && !(l < (s2 = u.lastIndex) && (a.push(r3.slice(l, n2.index)), 1 < n2.length && n2.index < r3.length && f.apply(a, n2.slice(1)), i = n2[0].length, l = s2, a.length >= o2)); )
            u.lastIndex === n2.index && u.lastIndex++;
          return l === r3.length ? !i && u.test("") || a.push("") : a.push(r3.slice(l)), a.length > o2 ? a.slice(0, o2) : a;
        } : "0".split(undefined, 0).length ? function(e3, t3) {
          return e3 === undefined && t3 === 0 ? [] : p.call(this, e3, t3);
        } : p;
        return [function(e3, t3) {
          var r3 = d(this), o2 = e3 == null ? undefined : e3[n];
          return o2 !== undefined ? o2.call(e3, r3, t3) : y.call(String(r3), e3, t3);
        }, function(e3, t3) {
          var r3 = m(y, e3, this, t3, y !== p);
          if (r3.done)
            return r3.value;
          var r3 = g(e3), o2 = String(this), e3 = v(r3, RegExp), n2 = r3.unicode, s2 = (r3.ignoreCase ? "i" : "") + (r3.multiline ? "m" : "") + (r3.unicode ? "u" : "") + (S ? "y" : "g"), i = new e3(S ? r3 : "^(?:" + r3.source + ")", s2), a = t3 === undefined ? w : t3 >>> 0;
          if (a == 0)
            return [];
          if (o2.length === 0)
            return _(i, o2) === null ? [o2] : [];
          for (var l = 0, u = 0, c2 = [];u < o2.length; ) {
            i.lastIndex = S ? u : 0;
            var d2, h2 = _(i, S ? o2 : o2.slice(u));
            if (h2 === null || (d2 = x(j(i.lastIndex + (S ? 0 : u)), o2.length)) === l)
              u = b(o2, u, n2);
            else {
              if (c2.push(o2.slice(l, u)), c2.length === a)
                return c2;
              for (var f2 = 1;f2 <= h2.length - 1; f2++)
                if (c2.push(h2[f2]), c2.length === a)
                  return c2;
              u = l = d2;
            }
          }
          return c2.push(o2.slice(l)), c2;
        }];
      }, !S);
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fails": 51, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/is-regexp": 76, "../internals/regexp-exec": 110, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/species-constructor": 121, "../internals/to-length": 136 }], 199: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/object-get-own-property-descriptor").f, s2 = e2("../internals/to-length"), i = e2("../internals/not-a-regexp"), a = e2("../internals/require-object-coercible"), l = e2("../internals/correct-is-regexp-logic"), e2 = e2("../internals/is-pure"), u = "".startsWith, c = Math.min, l = l("startsWith");
      o({ target: "String", proto: true, forced: !!(e2 || l || (!(o = n(String.prototype, "startsWith")) || o.writable)) && !l }, { startsWith: function(e3) {
        var t3 = String(a(this)), r3 = (i(e3), s2(c(1 < arguments.length ? arguments[1] : undefined, t3.length))), e3 = String(e3);
        return u ? u.call(t3, e3, r3) : t3.slice(r3, r3 + e3.length) === e3;
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 75, "../internals/not-a-regexp": 87, "../internals/object-get-own-property-descriptor": 93, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 200: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/create-html");
      o({ target: "String", proto: true, forced: e2("../internals/string-html-forced")("sub") }, { sub: function() {
        return n(this, "sub", "", "");
      } });
    }, { "../internals/create-html": 36, "../internals/export": 50, "../internals/string-html-forced": 122 }], 201: [function(e2, t2, r2) {
      var o = e2("../internals/export"), n = e2("../internals/string-trim").trim;
      o({ target: "String", proto: true, forced: e2("../internals/string-trim-forced")("trim") }, { trim: function() {
        return n(this);
      } });
    }, { "../internals/export": 50, "../internals/string-trim": 129, "../internals/string-trim-forced": 128 }], 202: [function(e2, t2, r2) {
      var o, n, s2, i, a, l = e2("../internals/export"), u = e2("../internals/descriptors"), c = e2("../internals/global"), d = e2("../internals/has"), h = e2("../internals/is-object"), f = e2("../internals/object-define-property").f, e2 = e2("../internals/copy-constructor-properties"), p = c.Symbol;
      !u || typeof p != "function" || "description" in p.prototype && p().description === undefined || (o = {}, e2(n = function() {
        var e3 = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]), t3 = this instanceof n ? new p(e3) : e3 === undefined ? p() : p(e3);
        return e3 === "" && (o[t3] = true), t3;
      }, p), (c = n.prototype = p.prototype).constructor = n, s2 = c.toString, i = String(p("test")) == "Symbol(test)", a = /^Symbol\((.*)\)[^)]+$/, f(c, "description", { configurable: true, get: function() {
        var e3 = h(this) ? this.valueOf() : this, t3 = s2.call(e3);
        return d(o, e3) ? "" : (e3 = i ? t3.slice(7, -1) : t3.replace(a, "$1")) === "" ? undefined : e3;
      } }), l({ global: true, forced: true }, { Symbol: n }));
    }, { "../internals/copy-constructor-properties": 33, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-define-property": 92 }], 203: [function(e2, t2, r2) {
      e2("../internals/define-well-known-symbol")("iterator");
    }, { "../internals/define-well-known-symbol": 42 }], 204: [function(e2, D, F) {
      function o(e3, t3) {
        var r3 = M[e3] = f(w[_]);
        return ie(r3, { type: j, tag: e3, description: t3 }), s2 || (r3.description = t3), r3;
      }
      function r2(t3, e3) {
        u(t3);
        var r3 = c(e3), e3 = q(r3).concat(I(r3));
        return v(e3, function(e4) {
          s2 && !R.call(r3, e4) || L(t3, e4, r3[e4]);
        }), t3;
      }
      function t2(e3, t3) {
        var r3, e3 = c(e3), t3 = d(t3, true);
        if (e3 !== x || !l(M, t3) || l(E, t3))
          return !(r3 = le(e3, t3)) || !l(M, t3) || l(e3, b) && e3[b][t3] || (r3.enumerable = true), r3;
      }
      function U(e3) {
        var e3 = ue(c(e3)), t3 = [];
        return v(e3, function(e4) {
          l(M, e4) || l(ee, e4) || t3.push(e4);
        }), t3;
      }
      var n = e2("../internals/export"), N = e2("../internals/global"), B = e2("../internals/get-built-in"), G = e2("../internals/is-pure"), s2 = e2("../internals/descriptors"), i = e2("../internals/native-symbol"), V = e2("../internals/use-symbol-as-uid"), a = e2("../internals/fails"), l = e2("../internals/has"), z = e2("../internals/is-array"), H = e2("../internals/is-object"), u = e2("../internals/an-object"), W = e2("../internals/to-object"), c = e2("../internals/to-indexed-object"), d = e2("../internals/to-primitive"), h = e2("../internals/create-property-descriptor"), f = e2("../internals/object-create"), q = e2("../internals/object-keys"), X = e2("../internals/object-get-own-property-names"), Y = e2("../internals/object-get-own-property-names-external"), p = e2("../internals/object-get-own-property-symbols"), Z = e2("../internals/object-get-own-property-descriptor"), Q = e2("../internals/object-define-property"), J = e2("../internals/object-property-is-enumerable"), K = e2("../internals/create-non-enumerable-property"), m = e2("../internals/redefine"), y = e2("../internals/shared"), $ = e2("../internals/shared-key"), ee = e2("../internals/hidden-keys"), te = e2("../internals/uid"), re = e2("../internals/well-known-symbol"), oe = e2("../internals/well-known-symbol-wrapped"), ne = e2("../internals/define-well-known-symbol"), se = e2("../internals/set-to-string-tag"), g = e2("../internals/internal-state"), v = e2("../internals/array-iteration").forEach, b = $("hidden"), j = "Symbol", _ = "prototype", e2 = re("toPrimitive"), ie = g.set, ae = g.getterFor(j), x = Object[_], w = N.Symbol, S = B("JSON", "stringify"), le = Z.f, T = Q.f, ue = Y.f, ce = J.f, M = y("symbols"), E = y("op-symbols"), k = y("string-to-symbol-registry"), C = y("symbol-to-string-registry"), $ = y("wks"), g = N.QObject, O = !g || !g[_] || !g[_].findChild, P = s2 && a(function() {
        return f(T({}, "a", { get: function() {
          return T(this, "a", { value: 7 }).a;
        } })).a != 7;
      }) ? function(e3, t3, r3) {
        var o2 = le(x, t3);
        o2 && delete x[t3], T(e3, t3, r3), o2 && e3 !== x && T(x, t3, o2);
      } : T, A = V ? function(e3) {
        return typeof e3 == "symbol";
      } : function(e3) {
        return Object(e3) instanceof w;
      }, L = function(e3, t3, r3) {
        e3 === x && L(E, t3, r3), u(e3);
        t3 = d(t3, true);
        return u(r3), (l(M, t3) ? (r3.enumerable ? (l(e3, b) && e3[b][t3] && (e3[b][t3] = false), r3 = f(r3, { enumerable: h(0, false) })) : (l(e3, b) || T(e3, b, h(1, {})), e3[b][t3] = true), P) : T)(e3, t3, r3);
      }, R = function(e3) {
        var e3 = d(e3, true), t3 = ce.call(this, e3);
        return !(this === x && l(M, e3) && !l(E, e3)) && (!(t3 || !l(this, e3) || !l(M, e3) || l(this, b) && this[b][e3]) || t3);
      }, I = function(e3) {
        var t3 = e3 === x, e3 = ue(t3 ? E : c(e3)), r3 = [];
        return v(e3, function(e4) {
          !l(M, e4) || t3 && !l(x, e4) || r3.push(M[e4]);
        }), r3;
      };
      i || (m((w = function() {
        if (this instanceof w)
          throw TypeError("Symbol is not a constructor");
        var e3 = arguments.length && arguments[0] !== undefined ? String(arguments[0]) : undefined, t3 = te(e3), r3 = function(e4) {
          this === x && r3.call(E, e4), l(this, b) && l(this[b], t3) && (this[b][t3] = false), P(this, t3, h(1, e4));
        };
        return s2 && O && P(x, t3, { configurable: true, set: r3 }), o(t3, e3);
      })[_], "toString", function() {
        return ae(this).tag;
      }), m(w, "withoutSetter", function(e3) {
        return o(te(e3), e3);
      }), J.f = R, Q.f = L, Z.f = t2, X.f = Y.f = U, p.f = I, oe.f = function(e3) {
        return o(re(e3), e3);
      }, s2 && (T(w[_], "description", { configurable: true, get: function() {
        return ae(this).description;
      } }), G || m(x, "propertyIsEnumerable", R, { unsafe: true }))), n({ global: true, wrap: true, forced: !i, sham: !i }, { Symbol: w }), v(q($), function(e3) {
        ne(e3);
      }), n({ target: j, stat: true, forced: !i }, { for: function(e3) {
        var t3, e3 = String(e3);
        return l(k, e3) ? k[e3] : (t3 = w(e3), k[e3] = t3, C[t3] = e3, t3);
      }, keyFor: function(e3) {
        if (!A(e3))
          throw TypeError(e3 + " is not a symbol");
        if (l(C, e3))
          return C[e3];
      }, useSetter: function() {
        O = true;
      }, useSimple: function() {
        O = false;
      } }), n({ target: "Object", stat: true, forced: !i, sham: !s2 }, { create: function(e3, t3) {
        return t3 === undefined ? f(e3) : r2(f(e3), t3);
      }, defineProperty: L, defineProperties: r2, getOwnPropertyDescriptor: t2 }), n({ target: "Object", stat: true, forced: !i }, { getOwnPropertyNames: U, getOwnPropertySymbols: I }), n({ target: "Object", stat: true, forced: a(function() {
        p.f(1);
      }) }, { getOwnPropertySymbols: function(e3) {
        return p.f(W(e3));
      } }), S && n({ target: "JSON", stat: true, forced: !i || a(function() {
        var e3 = w();
        return S([e3]) != "[null]" || S({ a: e3 }) != "{}" || S(Object(e3)) != "{}";
      }) }, { stringify: function(e3, t3, r3) {
        for (var o2, n2 = [e3], s3 = 1;s3 < arguments.length; )
          n2.push(arguments[s3++]);
        if ((H(o2 = t3) || e3 !== undefined) && !A(e3))
          return z(t3) || (t3 = function(e4, t4) {
            if (typeof o2 == "function" && (t4 = o2.call(this, e4, t4)), !A(t4))
              return t4;
          }), n2[1] = t3, S.apply(null, n2);
      } }), w[_][e2] || K(w[_], e2, w[_].valueOf), se(w, j), ee[b] = true;
    }, { "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/define-well-known-symbol": 42, "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/get-built-in": 56, "../internals/global": 59, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/internal-state": 70, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/is-pure": 75, "../internals/native-symbol": 83, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/object-get-own-property-names-external": 94, "../internals/object-get-own-property-symbols": 96, "../internals/object-keys": 99, "../internals/object-property-is-enumerable": 100, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/shared": 120, "../internals/shared-key": 118, "../internals/to-indexed-object": 134, "../internals/to-object": 137, "../internals/to-primitive": 140, "../internals/uid": 145, "../internals/use-symbol-as-uid": 146, "../internals/well-known-symbol": 148, "../internals/well-known-symbol-wrapped": 147 }], 205: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-copy-within"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("copyWithin", function(e3, t3) {
        return n.call(s2(this), e3, t3, 2 < arguments.length ? arguments[2] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-copy-within": 14 }], 206: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").every, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("every", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 207: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-fill"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("fill", function(e3) {
        return n.apply(s2(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-fill": 15 }], 208: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), s2 = e2("../internals/array-iteration").filter, i = e2("../internals/species-constructor"), a = o.aTypedArray, l = o.aTypedArrayConstructor;
      (0, o.exportTypedArrayMethod)("filter", function(e3) {
        for (var t3 = s2(a(this), e3, 1 < arguments.length ? arguments[1] : undefined), e3 = i(this, this.constructor), r3 = 0, o2 = t3.length, n = new (l(e3))(o2);r3 < o2; )
          n[r3] = t3[r3++];
        return n;
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 121 }], 209: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").findIndex, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("findIndex", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 210: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").find, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("find", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 211: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Float32", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 212: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Float64", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 213: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").forEach, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("forEach", function(e3) {
        n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 214: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-includes").includes, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("includes", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 215: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-includes").indexOf, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("indexOf", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 216: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Int16", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 217: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Int32", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 218: [function(e2, t2, r2) {
      function o() {
        return a.call(c(this));
      }
      var n = e2("../internals/global"), s2 = e2("../internals/array-buffer-view-core"), i = e2("../modules/es.array.iterator"), e2 = e2("../internals/well-known-symbol")("iterator"), n = n.Uint8Array, a = i.values, l = i.keys, u = i.entries, c = s2.aTypedArray, i = s2.exportTypedArrayMethod, s2 = n && n.prototype[e2], n = !!s2 && (s2.name == "values" || s2.name == null);
      i("entries", function() {
        return u.call(c(this));
      }), i("keys", function() {
        return l.call(c(this));
      }), i("values", o, !n), i(e2, o, !n);
    }, { "../internals/array-buffer-view-core": 12, "../internals/global": 59, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 161 }], 219: [function(e2, t2, r2) {
      var e2 = e2("../internals/array-buffer-view-core"), o = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, n = [].join;
      e2("join", function(e3) {
        return n.apply(o(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12 }], 220: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-last-index-of"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("lastIndexOf", function(e3) {
        return n.apply(s2(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-last-index-of": 20 }], 221: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").map, s2 = e2("../internals/species-constructor"), i = o.aTypedArray, a = o.aTypedArrayConstructor;
      (0, o.exportTypedArrayMethod)("map", function(e3) {
        return n(i(this), e3, 1 < arguments.length ? arguments[1] : undefined, function(e4, t3) {
          return new (a(s2(e4, e4.constructor)))(t3);
        });
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 121 }], 222: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-reduce").right, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("reduceRight", function(e3) {
        return n(s2(this), e3, arguments.length, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 223: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-reduce").left, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("reduce", function(e3) {
        return n(s2(this), e3, arguments.length, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 224: [function(e2, t2, r2) {
      var e2 = e2("../internals/array-buffer-view-core"), n = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, s2 = Math.floor;
      e2("reverse", function() {
        for (var e3, t3 = n(this).length, r3 = s2(t3 / 2), o = 0;o < r3; )
          e3 = this[o], this[o++] = this[--t3], this[t3] = e3;
        return this;
      });
    }, { "../internals/array-buffer-view-core": 12 }], 225: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), i = e2("../internals/to-length"), a = e2("../internals/to-offset"), l = e2("../internals/to-object"), e2 = e2("../internals/fails"), u = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("set", function(e3) {
        u(this);
        var t3 = a(1 < arguments.length ? arguments[1] : undefined, 1), r3 = this.length, o2 = l(e3), n = i(o2.length), s2 = 0;
        if (r3 < n + t3)
          throw RangeError("Wrong length");
        for (;s2 < n; )
          this[t3 + s2] = o2[s2++];
      }, e2(function() {
        new Int8Array(1).set({});
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/to-length": 136, "../internals/to-object": 137, "../internals/to-offset": 138 }], 226: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), i = e2("../internals/species-constructor"), e2 = e2("../internals/fails"), a = o.aTypedArray, l = o.aTypedArrayConstructor, o = o.exportTypedArrayMethod, u = [].slice;
      o("slice", function(e3, t3) {
        for (var r3 = u.call(a(this), e3, t3), e3 = i(this, this.constructor), o2 = 0, n = r3.length, s2 = new (l(e3))(n);o2 < n; )
          s2[o2] = r3[o2++];
        return s2;
      }, e2(function() {
        new Int8Array(1).slice();
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/species-constructor": 121 }], 227: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").some, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("some", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : undefined);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 228: [function(e2, t2, r2) {
      var e2 = e2("../internals/array-buffer-view-core"), o = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, n = [].sort;
      e2("sort", function(e3) {
        return n.call(o(this), e3);
      });
    }, { "../internals/array-buffer-view-core": 12 }], 229: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/to-length"), s2 = e2("../internals/to-absolute-index"), i = e2("../internals/species-constructor"), a = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("subarray", function(e3, t3) {
        var r3 = a(this), o2 = r3.length, e3 = s2(e3, o2);
        return new (i(r3, r3.constructor))(r3.buffer, r3.byteOffset + e3 * r3.BYTES_PER_ELEMENT, n((t3 === undefined ? o2 : s2(t3, o2)) - e3));
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/species-constructor": 121, "../internals/to-absolute-index": 132, "../internals/to-length": 136 }], 230: [function(e2, t2, r2) {
      var o = e2("../internals/global"), n = e2("../internals/array-buffer-view-core"), e2 = e2("../internals/fails"), s2 = o.Int8Array, i = n.aTypedArray, o = n.exportTypedArrayMethod, a = [].toLocaleString, l = [].slice, u = !!s2 && e2(function() {
        a.call(new s2(1));
      });
      o("toLocaleString", function() {
        return a.apply(u ? l.call(i(this)) : i(this), arguments);
      }, e2(function() {
        return [1, 2].toLocaleString() != new s2([1, 2]).toLocaleString();
      }) || !e2(function() {
        s2.prototype.toLocaleString.call([1, 2]);
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 59 }], 231: [function(e2, t2, r2) {
      var o = e2("../internals/array-buffer-view-core").exportTypedArrayMethod, n = e2("../internals/fails"), e2 = e2("../internals/global").Uint8Array, e2 = e2 && e2.prototype || {}, s2 = [].toString, i = [].join, n = (n(function() {
        s2.call({});
      }) && (s2 = function() {
        return i.call(this);
      }), e2.toString != s2);
      o("toString", s2, n);
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 59 }], 232: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Uint16", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 233: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Uint32", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 234: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Uint8", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      });
    }, { "../internals/typed-array-constructor": 142 }], 235: [function(e2, t2, r2) {
      e2("../internals/typed-array-constructor")("Uint8", function(o) {
        return function(e3, t3, r3) {
          return o(this, e3, t3, r3);
        };
      }, true);
    }, { "../internals/typed-array-constructor": 142 }], 236: [function(e2, t2, r2) {
      function o(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : undefined);
        };
      }
      var n, s2, i, a, l, u = e2("../internals/global"), c = e2("../internals/redefine-all"), d = e2("../internals/internal-metadata"), h = e2("../internals/collection"), f = e2("../internals/collection-weak"), p = e2("../internals/is-object"), m = e2("../internals/internal-state").enforce, e2 = e2("../internals/native-weak-map"), u = !u.ActiveXObject && "ActiveXObject" in u, y = Object.isExtensible, t2 = t2.exports = h("WeakMap", o, f);
      e2 && u && (n = f.getConstructor(o, "WeakMap", true), d.REQUIRED = true, h = t2.prototype, s2 = h.delete, i = h.has, a = h.get, l = h.set, c(h, { delete: function(e3) {
        var t3;
        return p(e3) && !y(e3) ? ((t3 = m(this)).frozen || (t3.frozen = new n), s2.call(this, e3) || t3.frozen.delete(e3)) : s2.call(this, e3);
      }, has: function(e3) {
        var t3;
        return p(e3) && !y(e3) ? ((t3 = m(this)).frozen || (t3.frozen = new n), i.call(this, e3) || t3.frozen.has(e3)) : i.call(this, e3);
      }, get: function(e3) {
        var t3;
        return !p(e3) || y(e3) || ((t3 = m(this)).frozen || (t3.frozen = new n), i.call(this, e3)) ? a.call(this, e3) : t3.frozen.get(e3);
      }, set: function(e3, t3) {
        var r3;
        return !p(e3) || y(e3) || ((r3 = m(this)).frozen || (r3.frozen = new n), i.call(this, e3)) ? l.call(this, e3, t3) : r3.frozen.set(e3, t3), this;
      } }));
    }, { "../internals/collection": 32, "../internals/collection-weak": 31, "../internals/global": 59, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/native-weak-map": 85, "../internals/redefine-all": 107 }], 237: [function(e2, t2, r2) {
      var o, n = e2("../internals/global"), s2 = e2("../internals/dom-iterables"), i = e2("../internals/array-for-each"), a = e2("../internals/create-non-enumerable-property");
      for (o in s2) {
        var l = n[o], l = l && l.prototype;
        if (l && l.forEach !== i)
          try {
            a(l, "forEach", i);
          } catch (e3) {
            l.forEach = i;
          }
      }
    }, { "../internals/array-for-each": 16, "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 59 }], 238: [function(e2, t2, r2) {
      var o, n = e2("../internals/global"), s2 = e2("../internals/dom-iterables"), i = e2("../modules/es.array.iterator"), a = e2("../internals/create-non-enumerable-property"), e2 = e2("../internals/well-known-symbol"), l = e2("iterator"), u = e2("toStringTag"), c = i.values;
      for (o in s2) {
        var d = n[o], h = d && d.prototype;
        if (h) {
          if (h[l] !== c)
            try {
              a(h, l, c);
            } catch (e3) {
              h[l] = c;
            }
          if (h[u] || a(h, u, o), s2[o]) {
            for (var f in i)
              if (h[f] !== i[f])
                try {
                  a(h, f, i[f]);
                } catch (e3) {
                  h[f] = i[f];
                }
          }
        }
      }
    }, { "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 59, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 161 }], 239: [function(e2, t2, D) {
      e2("../modules/es.array.iterator");
      function n(t3) {
        try {
          return decodeURIComponent(t3);
        } catch (e3) {
          return t3;
        }
      }
      function r2(e3) {
        return B[e3];
      }
      function s2(e3) {
        return encodeURIComponent(e3).replace(N, r2);
      }
      function c(e3) {
        this.entries.length = 0, R(this.entries, e3);
      }
      function u(e3, t3) {
        if (e3 < t3)
          throw TypeError("Not enough arguments");
      }
      function d() {
        y(this, d, k);
        var e3, t3, r3, o2, n2, s3, i2, a2, l2 = 0 < arguments.length ? arguments[0] : undefined, u2 = [];
        if (O(this, { type: k, entries: u2, updateURL: function() {
        }, updateSearchParams: c }), l2 !== undefined)
          if (_(l2))
            if (typeof (e3 = T(l2)) == "function")
              for (r3 = (t3 = e3.call(l2)).next;!(o2 = r3.call(t3)).done; ) {
                if ((s3 = (n2 = (o2 = S(j(o2.value))).next).call(o2)).done || (i2 = n2.call(o2)).done || !n2.call(o2).done)
                  throw TypeError("Expected sequence with length 2");
                u2.push({ key: s3.value + "", value: i2.value + "" });
              }
            else
              for (a2 in l2)
                g(l2, a2) && u2.push({ key: a2, value: l2[a2] + "" });
          else
            R(u2, typeof l2 == "string" ? l2.charAt(0) === "?" ? l2.slice(1) : l2 : l2 + "");
      }
      var o = e2("../internals/export"), i = e2("../internals/get-built-in"), a = e2("../internals/native-url"), l = e2("../internals/redefine"), h = e2("../internals/redefine-all"), f = e2("../internals/set-to-string-tag"), p = e2("../internals/create-iterator-constructor"), m = e2("../internals/internal-state"), y = e2("../internals/an-instance"), g = e2("../internals/has"), v = e2("../internals/function-bind-context"), b = e2("../internals/classof"), j = e2("../internals/an-object"), _ = e2("../internals/is-object"), x = e2("../internals/object-create"), w = e2("../internals/create-property-descriptor"), S = e2("../internals/get-iterator"), T = e2("../internals/get-iterator-method"), e2 = e2("../internals/well-known-symbol"), M = i("fetch"), E = i("Headers"), i = e2("iterator"), k = "URLSearchParams", C = k + "Iterator", O = m.set, P = m.getterFor(k), F = m.getterFor(C), U = /\+/g, A = Array(4), L = function(e3) {
        var t3, r3 = e3.replace(U, " "), o2 = 4;
        try {
          return decodeURIComponent(r3);
        } catch (e4) {
          for (;o2; )
            r3 = r3.replace((t3 = o2--, A[t3 - 1] || (A[t3 - 1] = RegExp("((?:%[\\da-f]{2}){" + t3 + "})", "gi"))), n);
          return r3;
        }
      }, N = /[!'()~]|%20/g, B = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" }, R = function(e3, t3) {
        if (t3)
          for (var r3, o2 = t3.split("&"), n2 = 0;n2 < o2.length; )
            (r3 = o2[n2++]).length && (r3 = r3.split("="), e3.push({ key: L(r3.shift()), value: L(r3.join("=")) }));
      }, I = p(function(e3, t3) {
        O(this, { type: C, iterator: S(P(e3).entries), kind: t3 });
      }, "Iterator", function() {
        var e3 = F(this), t3 = e3.kind, e3 = e3.iterator.next(), r3 = e3.value;
        return e3.done || (e3.value = t3 === "keys" ? r3.key : t3 === "values" ? r3.value : [r3.key, r3.value]), e3;
      }), e2 = d.prototype;
      h(e2, { append: function(e3, t3) {
        u(arguments.length, 2);
        var r3 = P(this);
        r3.entries.push({ key: e3 + "", value: t3 + "" }), r3.updateURL();
      }, delete: function(e3) {
        u(arguments.length, 1);
        for (var t3 = P(this), r3 = t3.entries, o2 = e3 + "", n2 = 0;n2 < r3.length; )
          r3[n2].key === o2 ? r3.splice(n2, 1) : n2++;
        t3.updateURL();
      }, get: function(e3) {
        u(arguments.length, 1);
        for (var t3 = P(this).entries, r3 = e3 + "", o2 = 0;o2 < t3.length; o2++)
          if (t3[o2].key === r3)
            return t3[o2].value;
        return null;
      }, getAll: function(e3) {
        u(arguments.length, 1);
        for (var t3 = P(this).entries, r3 = e3 + "", o2 = [], n2 = 0;n2 < t3.length; n2++)
          t3[n2].key === r3 && o2.push(t3[n2].value);
        return o2;
      }, has: function(e3) {
        u(arguments.length, 1);
        for (var t3 = P(this).entries, r3 = e3 + "", o2 = 0;o2 < t3.length; )
          if (t3[o2++].key === r3)
            return true;
        return false;
      }, set: function(e3, t3) {
        u(arguments.length, 1);
        for (var r3, o2 = P(this), n2 = o2.entries, s3 = false, i2 = e3 + "", a2 = t3 + "", l2 = 0;l2 < n2.length; l2++)
          (r3 = n2[l2]).key === i2 && (s3 ? n2.splice(l2--, 1) : (s3 = true, r3.value = a2));
        s3 || n2.push({ key: i2, value: a2 }), o2.updateURL();
      }, sort: function() {
        for (var e3, t3, r3 = P(this), o2 = r3.entries, n2 = o2.slice(), s3 = o2.length = 0;s3 < n2.length; s3++) {
          for (e3 = n2[s3], t3 = 0;t3 < s3; t3++)
            if (o2[t3].key > e3.key) {
              o2.splice(t3, 0, e3);
              break;
            }
          t3 === s3 && o2.push(e3);
        }
        r3.updateURL();
      }, forEach: function(e3) {
        for (var t3, r3 = P(this).entries, o2 = v(e3, 1 < arguments.length ? arguments[1] : undefined, 3), n2 = 0;n2 < r3.length; )
          o2((t3 = r3[n2++]).value, t3.key, this);
      }, keys: function() {
        return new I(this, "keys");
      }, values: function() {
        return new I(this, "values");
      }, entries: function() {
        return new I(this, "entries");
      } }, { enumerable: true }), l(e2, i, e2.entries), l(e2, "toString", function() {
        for (var e3, t3 = P(this).entries, r3 = [], o2 = 0;o2 < t3.length; )
          e3 = t3[o2++], r3.push(s2(e3.key) + "=" + s2(e3.value));
        return r3.join("&");
      }, { enumerable: true }), f(d, k), o({ global: true, forced: !a }, { URLSearchParams: d }), a || typeof M != "function" || typeof E != "function" || o({ global: true, enumerable: true, forced: true }, { fetch: function(e3) {
        var t3, r3, o2, e3 = [e3];
        return 1 < arguments.length && (_(t3 = arguments[1]) && (r3 = t3.body, b(r3) === k && ((o2 = t3.headers ? new E(t3.headers) : new E).has("content-type") || o2.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), t3 = x(t3, { body: w(0, String(r3)), headers: w(0, o2) }))), e3.push(t3)), M.apply(this, e3);
      } }), t2.exports = { URLSearchParams: d, getState: P };
    }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/classof": 29, "../internals/create-iterator-constructor": 37, "../internals/create-property-descriptor": 39, "../internals/export": 50, "../internals/function-bind-context": 54, "../internals/get-built-in": 56, "../internals/get-iterator": 58, "../internals/get-iterator-method": 57, "../internals/has": 60, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/native-url": 84, "../internals/object-create": 90, "../internals/redefine": 108, "../internals/redefine-all": 107, "../internals/set-to-string-tag": 117, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 161 }], 240: [function(e2, y, F) {
      e2("../modules/es.string.iterator");
      function c(e3) {
        var t3, r3, o2, n2;
        if (typeof e3 == "number") {
          for (t3 = [], r3 = 0;r3 < 4; r3++)
            t3.unshift(e3 % 256), e3 = Y(e3 / 256);
          return t3.join(".");
        }
        if (typeof e3 != "object")
          return e3;
        for (t3 = "", o2 = le(e3), r3 = 0;r3 < 8; r3++)
          n2 && e3[r3] === 0 || (n2 = n2 && false, o2 === r3 ? (t3 += r3 ? ":" : "::", n2 = true) : (t3 += e3[r3].toString(16), r3 < 7 && (t3 += ":")));
        return "[" + t3 + "]";
      }
      function n(e3) {
        return !e3.host || e3.cannotBeABaseURL || e3.scheme == "file";
      }
      function a(e3, t3, r3, o2) {
        var n2, s3, i2, a2 = r3 || me, l2 = 0, u2 = "", c2 = false, d2 = false, h2 = false;
        for (r3 || (e3.scheme = "", e3.username = "", e3.password = "", e3.host = null, e3.port = null, e3.path = [], e3.query = null, e3.fragment = null, e3.cannotBeABaseURL = false, t3 = t3.replace(ie, "")), t3 = t3.replace(ae, ""), n2 = b(t3);l2 <= n2.length; ) {
          switch (s3 = n2[l2], a2) {
            case me:
              if (!s3 || !K.test(s3)) {
                if (r3)
                  return j;
                a2 = ge;
                continue;
              }
              u2 += s3.toLowerCase(), a2 = ye;
              break;
            case ye:
              if (s3 && ($.test(s3) || s3 == "+" || s3 == "-" || s3 == "."))
                u2 += s3.toLowerCase();
              else {
                if (s3 != ":") {
                  if (r3)
                    return j;
                  u2 = "", a2 = ge, l2 = 0;
                  continue;
                }
                if (r3 && (k(e3) != v(E, u2) || u2 == "file" && (C(e3) || e3.port !== null) || e3.scheme == "file" && !e3.host))
                  return;
                if (e3.scheme = u2, r3)
                  return void (k(e3) && E[e3.scheme] == e3.port && (e3.port = null));
                u2 = "", e3.scheme == "file" ? a2 = Me : k(e3) && o2 && o2.scheme == e3.scheme ? a2 = ve : k(e3) ? a2 = xe : n2[l2 + 1] == "/" ? (a2 = be, l2++) : (e3.cannotBeABaseURL = true, e3.path.push(""), a2 = Ce);
              }
              break;
            case ge:
              if (!o2 || o2.cannotBeABaseURL && s3 != "#")
                return j;
              if (o2.cannotBeABaseURL && s3 == "#") {
                e3.scheme = o2.scheme, e3.path = o2.path.slice(), e3.query = o2.query, e3.fragment = "", e3.cannotBeABaseURL = true, a2 = D;
                break;
              }
              a2 = o2.scheme == "file" ? Me : je;
              continue;
            case ve:
              if (s3 != "/" || n2[l2 + 1] != "/") {
                a2 = je;
                continue;
              }
              a2 = P, l2++;
              break;
            case be:
              if (s3 == "/") {
                a2 = A;
                break;
              }
              a2 = R;
              continue;
            case je:
              if (e3.scheme = o2.scheme, s3 == g)
                e3.username = o2.username, e3.password = o2.password, e3.host = o2.host, e3.port = o2.port, e3.path = o2.path.slice(), e3.query = o2.query;
              else if (s3 == "/" || s3 == "\\" && k(e3))
                a2 = _e;
              else if (s3 == "?")
                e3.username = o2.username, e3.password = o2.password, e3.host = o2.host, e3.port = o2.port, e3.path = o2.path.slice(), e3.query = "", a2 = I;
              else {
                if (s3 != "#") {
                  e3.username = o2.username, e3.password = o2.password, e3.host = o2.host, e3.port = o2.port, e3.path = o2.path.slice(), e3.path.pop(), a2 = R;
                  continue;
                }
                e3.username = o2.username, e3.password = o2.password, e3.host = o2.host, e3.port = o2.port, e3.path = o2.path.slice(), e3.query = o2.query, e3.fragment = "", a2 = D;
              }
              break;
            case _e:
              if (!k(e3) || s3 != "/" && s3 != "\\") {
                if (s3 != "/") {
                  e3.username = o2.username, e3.password = o2.password, e3.host = o2.host, e3.port = o2.port, a2 = R;
                  continue;
                }
                a2 = A;
              } else
                a2 = P;
              break;
            case xe:
              if (a2 = P, s3 != "/" || u2.charAt(l2 + 1) != "/")
                continue;
              l2++;
              break;
            case P:
              if (s3 == "/" || s3 == "\\")
                break;
              a2 = A;
              continue;
            case A:
              if (s3 == "@") {
                c2 && (u2 = "%40" + u2);
                for (var c2 = true, f2 = b(u2), p2 = 0;p2 < f2.length; p2++) {
                  var m2 = f2[p2];
                  m2 != ":" || h2 ? (m2 = M(m2, T), h2 ? e3.password += m2 : e3.username += m2) : h2 = true;
                }
                u2 = "";
              } else if (s3 == g || s3 == "/" || s3 == "?" || s3 == "#" || s3 == "\\" && k(e3)) {
                if (c2 && u2 == "")
                  return Q;
                l2 -= b(u2).length + 1, u2 = "", a2 = we;
              } else
                u2 += s3;
              break;
            case we:
            case Se:
              if (r3 && e3.scheme == "file") {
                a2 = ke;
                continue;
              }
              if (s3 != ":" || d2) {
                if (s3 == g || s3 == "/" || s3 == "?" || s3 == "#" || s3 == "\\" && k(e3)) {
                  if (k(e3) && u2 == "")
                    return _;
                  if (r3 && u2 == "" && (C(e3) || e3.port !== null))
                    return;
                  if (i2 = w(e3, u2))
                    return i2;
                  if (u2 = "", a2 = L, r3)
                    return;
                  continue;
                }
                s3 == "[" ? d2 = true : s3 == "]" && (d2 = false), u2 += s3;
              } else {
                if (u2 == "")
                  return _;
                if (i2 = w(e3, u2))
                  return i2;
                if (u2 = "", a2 = Te, r3 == Se)
                  return;
              }
              break;
            case Te:
              if (!x.test(s3)) {
                if (s3 == g || s3 == "/" || s3 == "?" || s3 == "#" || s3 == "\\" && k(e3) || r3) {
                  if (u2 != "") {
                    var y2 = parseInt(u2, 10);
                    if (65535 < y2)
                      return J;
                    e3.port = k(e3) && y2 === E[e3.scheme] ? null : y2, u2 = "";
                  }
                  if (r3)
                    return;
                  a2 = L;
                  continue;
                }
                return J;
              }
              u2 += s3;
              break;
            case Me:
              if (e3.scheme = "file", s3 == "/" || s3 == "\\")
                a2 = Ee;
              else {
                if (!o2 || o2.scheme != "file") {
                  a2 = R;
                  continue;
                }
                if (s3 == g)
                  e3.host = o2.host, e3.path = o2.path.slice(), e3.query = o2.query;
                else if (s3 == "?")
                  e3.host = o2.host, e3.path = o2.path.slice(), e3.query = "", a2 = I;
                else {
                  if (s3 != "#") {
                    de(n2.slice(l2).join("")) || (e3.host = o2.host, e3.path = o2.path.slice(), he(e3)), a2 = R;
                    continue;
                  }
                  e3.host = o2.host, e3.path = o2.path.slice(), e3.query = o2.query, e3.fragment = "", a2 = D;
                }
              }
              break;
            case Ee:
              if (s3 == "/" || s3 == "\\") {
                a2 = ke;
                break;
              }
              o2 && o2.scheme == "file" && !de(n2.slice(l2).join("")) && (O(o2.path[0], true) ? e3.path.push(o2.path[0]) : e3.host = o2.host), a2 = R;
              continue;
            case ke:
              if (s3 == g || s3 == "/" || s3 == "\\" || s3 == "?" || s3 == "#") {
                if (!r3 && O(u2))
                  a2 = R;
                else {
                  if (u2 == "") {
                    if (e3.host = "", r3)
                      return;
                  } else {
                    if (i2 = w(e3, u2))
                      return i2;
                    if (e3.host == "localhost" && (e3.host = ""), r3)
                      return;
                    u2 = "";
                  }
                  a2 = L;
                }
                continue;
              }
              u2 += s3;
              break;
            case L:
              if (k(e3)) {
                if (a2 = R, s3 != "/" && s3 != "\\")
                  continue;
              } else if (r3 || s3 != "?")
                if (r3 || s3 != "#") {
                  if (s3 != g && (a2 = R, s3 != "/"))
                    continue;
                } else
                  e3.fragment = "", a2 = D;
              else
                e3.query = "", a2 = I;
              break;
            case R:
              if (s3 == g || s3 == "/" || s3 == "\\" && k(e3) || !r3 && (s3 == "?" || s3 == "#")) {
                if (pe(u2) ? (he(e3), s3 == "/" || s3 == "\\" && k(e3) || e3.path.push("")) : fe(u2) ? s3 == "/" || s3 == "\\" && k(e3) || e3.path.push("") : (e3.scheme == "file" && !e3.path.length && O(u2) && (e3.host && (e3.host = ""), u2 = u2.charAt(0) + ":"), e3.path.push(u2)), u2 = "", e3.scheme == "file" && (s3 == g || s3 == "?" || s3 == "#"))
                  for (;1 < e3.path.length && e3.path[0] === ""; )
                    e3.path.shift();
                s3 == "?" ? (e3.query = "", a2 = I) : s3 == "#" && (e3.fragment = "", a2 = D);
              } else
                u2 += M(s3, ce);
              break;
            case Ce:
              s3 == "?" ? (e3.query = "", a2 = I) : s3 == "#" ? (e3.fragment = "", a2 = D) : s3 != g && (e3.path[0] += M(s3, S));
              break;
            case I:
              r3 || s3 != "#" ? s3 != g && (s3 == "'" && k(e3) ? e3.query += "%27" : e3.query += s3 == "#" ? "%23" : M(s3, S)) : (e3.fragment = "", a2 = D);
              break;
            case D:
              s3 != g && (e3.fragment += M(s3, ue));
          }
          l2++;
        }
      }
      function l(e3) {
        var t3, r3, o2 = G(this, l, "URL"), n2 = 1 < arguments.length ? arguments[1] : undefined, e3 = String(e3), s3 = X(o2, { type: "URL" });
        if (n2 !== undefined) {
          if (n2 instanceof l)
            t3 = p(n2);
          else if (r3 = a(t3 = {}, String(n2)))
            throw TypeError(r3);
        }
        if (r3 = a(s3, e3, null, t3))
          throw TypeError(r3);
        var i2 = s3.searchParams = new q;
        (n2 = f(i2)).updateSearchParams(s3.query), n2.updateURL = function() {
          s3.query = String(i2) || null;
        }, u || (o2.href = m.call(o2), o2.origin = Oe.call(o2), o2.protocol = Pe.call(o2), o2.username = Ae.call(o2), o2.password = Le.call(o2), o2.host = Re.call(o2), o2.hostname = Ie.call(o2), o2.port = De.call(o2), o2.pathname = Fe.call(o2), o2.search = Ue.call(o2), o2.searchParams = Ne.call(o2), o2.hash = Be.call(o2));
      }
      function t2(e3, t3) {
        return { get: e3, set: t3, configurable: true, enumerable: true };
      }
      var g, r2, o, U = e2("../internals/export"), u = e2("../internals/descriptors"), N = e2("../internals/native-url"), s2 = e2("../internals/global"), B = e2("../internals/object-define-properties"), i = e2("../internals/redefine"), G = e2("../internals/an-instance"), v = e2("../internals/has"), d = e2("../internals/object-assign"), b = e2("../internals/array-from"), V = e2("../internals/string-multibyte").codeAt, z = e2("../internals/string-punycode-to-ascii"), H = e2("../internals/set-to-string-tag"), W = e2("../modules/web.url-search-params"), e2 = e2("../internals/internal-state"), h = s2.URL, q = W.URLSearchParams, f = W.getState, X = e2.set, p = e2.getterFor("URL"), Y = Math.floor, Z = Math.pow, Q = "Invalid authority", j = "Invalid scheme", _ = "Invalid host", J = "Invalid port", K = /[A-Za-z]/, $ = /[\d+-.A-Za-z]/, x = /\d/, ee = /^(0x|0X)/, te = /^[0-7]+$/, re = /^\d+$/, oe = /^[\dA-Fa-f]+$/, ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, se = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, ie = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ae = /[\u0009\u000A\u000D]/g, w = function(e3, t3) {
        var r3, o2, n2;
        if (t3.charAt(0) == "[")
          return t3.charAt(t3.length - 1) == "]" && (r3 = function(e4) {
            var t4 = [0, 0, 0, 0, 0, 0, 0, 0], r4 = 0, o3 = null, n3 = 0, s3, i2, a2, l2, u2, c2, d2, h2 = function() {
              return e4.charAt(n3);
            };
            if (h2() == ":") {
              if (e4.charAt(1) != ":")
                return;
              n3 += 2;
              r4++;
              o3 = r4;
            }
            while (h2()) {
              if (r4 == 8)
                return;
              if (h2() == ":") {
                if (o3 !== null)
                  return;
                n3++;
                r4++;
                o3 = r4;
                continue;
              }
              s3 = i2 = 0;
              while (i2 < 4 && oe.test(h2())) {
                s3 = s3 * 16 + parseInt(h2(), 16);
                n3++;
                i2++;
              }
              if (h2() == ".") {
                if (i2 == 0)
                  return;
                n3 -= i2;
                if (r4 > 6)
                  return;
                a2 = 0;
                while (h2()) {
                  l2 = null;
                  if (a2 > 0)
                    if (h2() == "." && a2 < 4)
                      n3++;
                    else
                      return;
                  if (!x.test(h2()))
                    return;
                  while (x.test(h2())) {
                    u2 = parseInt(h2(), 10);
                    if (l2 === null)
                      l2 = u2;
                    else if (l2 == 0)
                      return;
                    else
                      l2 = l2 * 10 + u2;
                    if (l2 > 255)
                      return;
                    n3++;
                  }
                  t4[r4] = t4[r4] * 256 + l2;
                  a2++;
                  if (a2 == 2 || a2 == 4)
                    r4++;
                }
                if (a2 != 4)
                  return;
                break;
              } else if (h2() == ":") {
                n3++;
                if (!h2())
                  return;
              } else if (h2())
                return;
              t4[r4++] = s3;
            }
            if (o3 !== null) {
              c2 = r4 - o3;
              r4 = 7;
              while (r4 != 0 && c2 > 0) {
                d2 = t4[r4];
                t4[r4--] = t4[o3 + c2 - 1];
                t4[o3 + --c2] = d2;
              }
            } else if (r4 != 8)
              return;
            return t4;
          }(t3.slice(1, -1))) ? void (e3.host = r3) : _;
        if (k(e3))
          return t3 = z(t3), ne.test(t3) || (r3 = function(e4) {
            var t4 = e4.split("."), r4, o3, n3, s3, i2, a2, l2;
            if (t4.length && t4[t4.length - 1] == "")
              t4.pop();
            if ((r4 = t4.length) > 4)
              return e4;
            for (o3 = [], n3 = 0;n3 < r4; n3++) {
              s3 = t4[n3];
              if (s3 == "")
                return e4;
              i2 = 10;
              if (s3.length > 1 && s3.charAt(0) == "0") {
                i2 = ee.test(s3) ? 16 : 8;
                s3 = s3.slice(i2 == 8 ? 1 : 2);
              }
              if (s3 === "")
                a2 = 0;
              else {
                if (!(i2 == 10 ? re : i2 == 8 ? te : oe).test(s3))
                  return e4;
                a2 = parseInt(s3, i2);
              }
              o3.push(a2);
            }
            for (n3 = 0;n3 < r4; n3++) {
              a2 = o3[n3];
              if (n3 == r4 - 1) {
                if (a2 >= Z(256, 5 - r4))
                  return null;
              } else if (a2 > 255)
                return null;
            }
            for (l2 = o3.pop(), n3 = 0;n3 < o3.length; n3++)
              l2 += o3[n3] * Z(256, 3 - n3);
            return l2;
          }(t3)) === null ? _ : void (e3.host = r3);
        if (se.test(t3))
          return _;
        for (r3 = "", o2 = b(t3), n2 = 0;n2 < o2.length; n2++)
          r3 += M(o2[n2], S);
        e3.host = r3;
      }, le = function(e3) {
        for (var t3 = null, r3 = 1, o2 = null, n2 = 0, s3 = 0;s3 < 8; s3++)
          e3[s3] !== 0 ? (r3 < n2 && (t3 = o2, r3 = n2), o2 = null, n2 = 0) : (o2 === null && (o2 = s3), ++n2);
        return r3 < n2 && (t3 = o2, r3 = n2), t3;
      }, S = {}, ue = d({}, S, { " ": 1, '"': 1, "<": 1, ">": 1, "`": 1 }), ce = d({}, ue, { "#": 1, "?": 1, "{": 1, "}": 1 }), T = d({}, ce, { "/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1 }), M = function(e3, t3) {
        var r3 = V(e3, 0);
        return 32 < r3 && r3 < 127 && !v(t3, e3) ? e3 : encodeURIComponent(e3);
      }, E = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 }, k = function(e3) {
        return v(E, e3.scheme);
      }, C = function(e3) {
        return e3.username != "" || e3.password != "";
      }, O = function(e3, t3) {
        return e3.length == 2 && K.test(e3.charAt(0)) && ((e3 = e3.charAt(1)) == ":" || !t3 && e3 == "|");
      }, de = function(e3) {
        return 1 < e3.length && O(e3.slice(0, 2)) && (e3.length == 2 || (e3 = e3.charAt(2)) === "/" || e3 === "\\" || e3 === "?" || e3 === "#");
      }, he = function(e3) {
        var t3 = e3.path, r3 = t3.length;
        !r3 || e3.scheme == "file" && r3 == 1 && O(t3[0], true) || t3.pop();
      }, fe = function(e3) {
        return e3 === "." || e3.toLowerCase() === "%2e";
      }, pe = function(e3) {
        return (e3 = e3.toLowerCase()) === ".." || e3 === "%2e." || e3 === ".%2e" || e3 === "%2e%2e";
      }, me = {}, ye = {}, ge = {}, ve = {}, be = {}, je = {}, _e = {}, xe = {}, P = {}, A = {}, we = {}, Se = {}, Te = {}, Me = {}, Ee = {}, ke = {}, L = {}, R = {}, Ce = {}, I = {}, D = {}, s2 = l.prototype, m = function() {
        var e3 = p(this), t3 = e3.scheme, r3 = e3.username, o2 = e3.password, n2 = e3.host, s3 = e3.port, i2 = e3.path, a2 = e3.query, l2 = e3.fragment, u2 = t3 + ":";
        return n2 !== null ? (u2 += "//", C(e3) && (u2 += r3 + (o2 ? ":" + o2 : "") + "@"), u2 += c(n2), s3 !== null && (u2 += ":" + s3)) : t3 == "file" && (u2 += "//"), u2 += e3.cannotBeABaseURL ? i2[0] : i2.length ? "/" + i2.join("/") : "", a2 !== null && (u2 += "?" + a2), l2 !== null && (u2 += "#" + l2), u2;
      }, Oe = function() {
        var e3 = p(this), t3 = e3.scheme, r3 = e3.port;
        if (t3 == "blob")
          try {
            return new URL(t3.path[0]).origin;
          } catch (e4) {
            return "null";
          }
        return t3 != "file" && k(e3) ? t3 + "://" + c(e3.host) + (r3 !== null ? ":" + r3 : "") : "null";
      }, Pe = function() {
        return p(this).scheme + ":";
      }, Ae = function() {
        return p(this).username;
      }, Le = function() {
        return p(this).password;
      }, Re = function() {
        var e3 = p(this), t3 = e3.host, e3 = e3.port;
        return t3 === null ? "" : e3 === null ? c(t3) : c(t3) + ":" + e3;
      }, Ie = function() {
        var e3 = p(this).host;
        return e3 === null ? "" : c(e3);
      }, De = function() {
        var e3 = p(this).port;
        return e3 === null ? "" : String(e3);
      }, Fe = function() {
        var e3 = p(this), t3 = e3.path;
        return e3.cannotBeABaseURL ? t3[0] : t3.length ? "/" + t3.join("/") : "";
      }, Ue = function() {
        var e3 = p(this).query;
        return e3 ? "?" + e3 : "";
      }, Ne = function() {
        return p(this).searchParams;
      }, Be = function() {
        var e3 = p(this).fragment;
        return e3 ? "#" + e3 : "";
      };
      u && B(s2, { href: t2(m, function(e3) {
        var t3 = p(this), e3 = String(e3), e3 = a(t3, e3);
        if (e3)
          throw TypeError(e3);
        f(t3.searchParams).updateSearchParams(t3.query);
      }), origin: t2(Oe), protocol: t2(Pe, function(e3) {
        var t3 = p(this);
        a(t3, String(e3) + ":", me);
      }), username: t2(Ae, function(e3) {
        var t3 = p(this), r3 = b(String(e3));
        if (!n(t3)) {
          t3.username = "";
          for (var o2 = 0;o2 < r3.length; o2++)
            t3.username += M(r3[o2], T);
        }
      }), password: t2(Le, function(e3) {
        var t3 = p(this), r3 = b(String(e3));
        if (!n(t3)) {
          t3.password = "";
          for (var o2 = 0;o2 < r3.length; o2++)
            t3.password += M(r3[o2], T);
        }
      }), host: t2(Re, function(e3) {
        var t3 = p(this);
        t3.cannotBeABaseURL || a(t3, String(e3), we);
      }), hostname: t2(Ie, function(e3) {
        var t3 = p(this);
        t3.cannotBeABaseURL || a(t3, String(e3), Se);
      }), port: t2(De, function(e3) {
        var t3 = p(this);
        n(t3) || ((e3 = String(e3)) == "" ? t3.port = null : a(t3, e3, Te));
      }), pathname: t2(Fe, function(e3) {
        var t3 = p(this);
        t3.cannotBeABaseURL || (t3.path = [], a(t3, e3 + "", L));
      }), search: t2(Ue, function(e3) {
        var t3 = p(this);
        (e3 = String(e3)) == "" ? t3.query = null : (e3.charAt(0) == "?" && (e3 = e3.slice(1)), t3.query = "", a(t3, e3, I)), f(t3.searchParams).updateSearchParams(t3.query);
      }), searchParams: t2(Ne), hash: t2(Be, function(e3) {
        var t3 = p(this);
        (e3 = String(e3)) == "" ? t3.fragment = null : (e3.charAt(0) == "#" && (e3 = e3.slice(1)), t3.fragment = "", a(t3, e3, D));
      }) }), i(s2, "toJSON", function() {
        return m.call(this);
      }, { enumerable: true }), i(s2, "toString", function() {
        return m.call(this);
      }, { enumerable: true }), h && (r2 = h.createObjectURL, o = h.revokeObjectURL, r2 && i(l, "createObjectURL", function(e3) {
        return r2.apply(h, arguments);
      }), o && i(l, "revokeObjectURL", function(e3) {
        return o.apply(h, arguments);
      })), H(l, "URL"), U({ global: true, forced: !N, sham: !u }, { URL: l });
    }, { "../internals/an-instance": 9, "../internals/array-from": 17, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/internal-state": 70, "../internals/native-url": 84, "../internals/object-assign": 89, "../internals/object-define-properties": 91, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/string-multibyte": 123, "../internals/string-punycode-to-ascii": 126, "../modules/es.string.iterator": 192, "../modules/web.url-search-params": 239 }], 241: [function(e2, t2, r2) {
      t2.exports = e2("./").polyfill();
    }, { "./": 242 }], 242: [function(V, r2, o) {
      (function(B, G) {
        var e2, t2;
        e2 = this, t2 = function() {
          function l(e4) {
            return typeof e4 == "function";
          }
          var r3 = Array.isArray || function(e4) {
            return Object.prototype.toString.call(e4) === "[object Array]";
          }, o2 = 0, t3 = undefined, n = undefined, i = function(e4, t4) {
            d[o2] = e4, d[o2 + 1] = t4, (o2 += 2) === 2 && (n ? n(h) : D());
          };
          var e3 = typeof window != "undefined" ? window : undefined, s2 = e3 || {}, s2 = s2.MutationObserver || s2.WebKitMutationObserver, a = typeof self == "undefined" && B !== undefined && {}.toString.call(B) === "[object process]", u = typeof Uint8ClampedArray != "undefined" && typeof importScripts != "undefined" && typeof MessageChannel != "undefined";
          function c() {
            var e4 = setTimeout;
            return function() {
              return e4(h, 1);
            };
          }
          var d = new Array(1000);
          function h() {
            for (var e4 = 0;e4 < o2; e4 += 2)
              (0, d[e4])(d[e4 + 1]), d[e4] = undefined, d[e4 + 1] = undefined;
            o2 = 0;
          }
          function f() {
            try {
              var e4 = Function("return this")().require("vertx");
              return (t3 = e4.runOnLoop || e4.runOnContext) !== undefined ? function() {
                t3(h);
              } : c();
            } catch (e5) {
              return c();
            }
          }
          var p, m, y, D = undefined;
          function g(e4, t4) {
            var r4, o3 = this, n2 = new this.constructor(j), s3 = (n2[b] === undefined && A(n2), o3._state);
            return s3 ? (r4 = arguments[s3 - 1], i(function() {
              return O(s3, n2, r4, o3._result);
            })) : k(o3, n2, e4, t4), n2;
          }
          function v(e4) {
            var t4;
            return e4 && typeof e4 == "object" && e4.constructor === this ? e4 : (T(t4 = new this(j), e4), t4);
          }
          var D = a ? function() {
            return B.nextTick(h);
          } : s2 ? (m = 0, a = new s2(h), y = document.createTextNode(""), a.observe(y, { characterData: true }), function() {
            y.data = m = ++m % 2;
          }) : u ? ((p = new MessageChannel).port1.onmessage = h, function() {
            return p.port2.postMessage(0);
          }) : (e3 === undefined && typeof V == "function" ? f : c)(), b = Math.random().toString(36).substring(2);
          function j() {
          }
          var _ = undefined, x = 1, w = 2;
          function F(e4, o3, n2) {
            i(function(t4) {
              var r4 = false, e5 = function(e6, t5, r5, o4) {
                try {
                  e6.call(t5, r5, o4);
                } catch (e7) {
                  return e7;
                }
              }(n2, o3, function(e6) {
                r4 || (r4 = true, (o3 !== e6 ? T : M)(t4, e6));
              }, function(e6) {
                r4 || (r4 = true, E(t4, e6));
              }, t4._label);
              !r4 && e5 && (r4 = true, E(t4, e5));
            }, e4);
          }
          function S(e4, t4, r4) {
            var o3, n2;
            t4.constructor === e4.constructor && r4 === g && t4.constructor.resolve === v ? (o3 = e4, (n2 = t4)._state === x ? M(o3, n2._result) : n2._state === w ? E(o3, n2._result) : k(n2, undefined, function(e5) {
              return T(o3, e5);
            }, function(e5) {
              return E(o3, e5);
            })) : r4 !== undefined && l(r4) ? F(e4, t4, r4) : M(e4, t4);
          }
          function T(t4, e4) {
            if (t4 === e4)
              E(t4, new TypeError("You cannot resolve a promise with itself"));
            else if (r4 = typeof e4, e4 === null || r4 != "object" && r4 != "function")
              M(t4, e4);
            else {
              r4 = undefined;
              try {
                r4 = e4.then;
              } catch (e5) {
                return void E(t4, e5);
              }
              S(t4, e4, r4);
            }
            var r4;
          }
          function U(e4) {
            e4._onerror && e4._onerror(e4._result), C(e4);
          }
          function M(e4, t4) {
            e4._state === _ && (e4._result = t4, e4._state = x, e4._subscribers.length !== 0 && i(C, e4));
          }
          function E(e4, t4) {
            e4._state === _ && (e4._state = w, e4._result = t4, i(U, e4));
          }
          function k(e4, t4, r4, o3) {
            var n2 = e4._subscribers, s3 = n2.length;
            e4._onerror = null, n2[s3] = t4, n2[s3 + x] = r4, n2[s3 + w] = o3, s3 === 0 && e4._state && i(C, e4);
          }
          function C(e4) {
            var { _subscribers: t4, _state: r4 } = e4;
            if (t4.length !== 0) {
              for (var o3, n2 = undefined, s3 = e4._result, i2 = 0;i2 < t4.length; i2 += 3)
                o3 = t4[i2], n2 = t4[i2 + r4], o3 ? O(r4, o3, n2, s3) : n2(s3);
              e4._subscribers.length = 0;
            }
          }
          function O(e4, t4, r4, o3) {
            var n2 = l(r4), s3 = undefined, i2 = undefined, a2 = true;
            if (n2) {
              try {
                s3 = r4(o3);
              } catch (e5) {
                a2 = false, i2 = e5;
              }
              if (t4 === s3)
                return void E(t4, new TypeError("A promises callback cannot return that same promise."));
            } else
              s3 = o3;
            t4._state === _ && (n2 && a2 ? T(t4, s3) : a2 === false ? E(t4, i2) : e4 === x ? M(t4, s3) : e4 === w && E(t4, s3));
          }
          var P = 0;
          function A(e4) {
            e4[b] = P++, e4._state = undefined, e4._result = undefined, e4._subscribers = [];
          }
          L.prototype._enumerate = function(e4) {
            for (var t4 = 0;this._state === _ && t4 < e4.length; t4++)
              this._eachEntry(e4[t4], t4);
          }, L.prototype._eachEntry = function(t4, e4) {
            var r4 = this._instanceConstructor, o3 = r4.resolve;
            if (o3 === v) {
              var n2, s3 = undefined, i2 = undefined, a2 = false;
              try {
                s3 = t4.then;
              } catch (e5) {
                a2 = true, i2 = e5;
              }
              s3 === g && t4._state !== _ ? this._settledAt(t4._state, e4, t4._result) : typeof s3 != "function" ? (this._remaining--, this._result[e4] = t4) : r4 === R ? (n2 = new r4(j), a2 ? E(n2, i2) : S(n2, t4, s3), this._willSettleAt(n2, e4)) : this._willSettleAt(new r4(function(e5) {
                return e5(t4);
              }), e4);
            } else
              this._willSettleAt(o3(t4), e4);
          }, L.prototype._settledAt = function(e4, t4, r4) {
            var o3 = this.promise;
            o3._state === _ && (this._remaining--, e4 === w ? E(o3, r4) : this._result[t4] = r4), this._remaining === 0 && M(o3, this._result);
          }, L.prototype._willSettleAt = function(e4, t4) {
            var r4 = this;
            k(e4, undefined, function(e5) {
              return r4._settledAt(x, t4, e5);
            }, function(e5) {
              return r4._settledAt(w, t4, e5);
            });
          };
          var N = L;
          function L(e4, t4) {
            this._instanceConstructor = e4, this.promise = new e4(j), this.promise[b] || A(this.promise), r3(t4) ? (this.length = t4.length, this._remaining = t4.length, this._result = new Array(this.length), this.length !== 0 && (this.length = this.length || 0, this._enumerate(t4), this._remaining !== 0) || M(this.promise, this._result)) : E(this.promise, new Error("Array Methods must be provided an Array"));
          }
          I.prototype.catch = function(e4) {
            return this.then(null, e4);
          }, I.prototype.finally = function(t4) {
            var r4 = this.constructor;
            return l(t4) ? this.then(function(e4) {
              return r4.resolve(t4()).then(function() {
                return e4;
              });
            }, function(e4) {
              return r4.resolve(t4()).then(function() {
                throw e4;
              });
            }) : this.then(t4, t4);
          };
          var R = I;
          function I(e4) {
            if (this[b] = P++, this._result = this._state = undefined, this._subscribers = [], j !== e4) {
              if (typeof e4 != "function")
                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
              if (!(this instanceof I))
                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
              var t4 = this;
              try {
                e4(function(e5) {
                  T(t4, e5);
                }, function(e5) {
                  E(t4, e5);
                });
              } catch (e5) {
                E(t4, e5);
              }
            }
          }
          return R.prototype.then = g, R.all = function(e4) {
            return new N(this, e4).promise;
          }, R.race = function(n2) {
            var s3 = this;
            return r3(n2) ? new s3(function(e4, t4) {
              for (var r4 = n2.length, o3 = 0;o3 < r4; o3++)
                s3.resolve(n2[o3]).then(e4, t4);
            }) : new s3(function(e4, t4) {
              return t4(new TypeError("You must pass an array to race."));
            });
          }, R.resolve = v, R.reject = function(e4) {
            var t4 = new this(j);
            return E(t4, e4), t4;
          }, R._setScheduler = function(e4) {
            n = e4;
          }, R._setAsap = function(e4) {
            i = e4;
          }, R._asap = i, R.polyfill = function() {
            var e4 = undefined;
            if (G !== undefined)
              e4 = G;
            else if (typeof self != "undefined")
              e4 = self;
            else
              try {
                e4 = Function("return this")();
              } catch (e5) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
              }
            var t4 = e4.Promise;
            if (t4) {
              var r4 = null;
              try {
                r4 = Object.prototype.toString.call(t4.resolve());
              } catch (e5) {
              }
              if (r4 === "[object Promise]" && !t4.cast)
                return;
            }
            e4.Promise = R;
          }, R.Promise = R;
        }, typeof o == "object" && r2 !== undefined ? r2.exports = t2() : typeof s == "function" && s.amd ? s(t2) : e2.ES6Promise = t2();
      }).call(this, V("_process"), typeof global != "undefined" ? global : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, { _process: 251 }], 243: [function(e2, t2, r2) {
      var o, n;
      o = this, n = function(e3, t3) {
        var r3 = 5000, o2 = "callback";
        function d(t4) {
          try {
            delete window[t4];
          } catch (e4) {
            window[t4] = undefined;
          }
        }
        function h(e4) {
          e4 = document.getElementById(e4);
          e4 && document.getElementsByTagName("head")[0].removeChild(e4);
        }
        t3.exports = function(s2) {
          var i = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1], a = s2, l = i.timeout || r3, u = i.jsonpCallback || o2, c = undefined;
          return new Promise(function(t4, e4) {
            var r4 = i.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), o3 = u + "_" + r4, n2 = (window[r4] = function(e5) {
              t4({ ok: true, json: function() {
                return Promise.resolve(e5);
              } }), c && clearTimeout(c), h(o3), d(r4);
            }, a += a.indexOf("?") === -1 ? "?" : "&", document.createElement("script"));
            n2.setAttribute("src", "" + a + u + "=" + r4), i.charset && n2.setAttribute("charset", i.charset), n2.id = o3, document.getElementsByTagName("head")[0].appendChild(n2), c = setTimeout(function() {
              e4(new Error("JSONP request to " + s2 + " timed out")), d(r4), h(o3), window[r4] = function() {
                d(r4);
              };
            }, l), n2.onerror = function() {
              e4(new Error("JSONP request to " + s2 + " failed")), d(r4), h(o3), c && clearTimeout(c);
            };
          });
        };
      }, typeof s == "function" && s.amd ? s(["exports", "module"], n) : r2 !== undefined && t2 !== undefined ? n(0, t2) : (n(n = { exports: {} }, n), o.fetchJsonp = n.exports);
    }, {}], 244: [function(e2, t2, r2) {
      var o = function(a) {
        var l, u, c, d, h, f, t3, p, m, o2, e3;
        if (!(a === undefined || typeof navigator != "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)))
          return e3 = a.document, l = function() {
            return a.URL || a.webkitURL || a;
          }, u = e3.createElementNS("http://www.w3.org/1999/xhtml", "a"), c = "download" in u, d = /constructor/i.test(a.HTMLElement) || a.safari, h = /CriOS\/[\d]+/.test(navigator.userAgent), f = function(e4) {
            (a.setImmediate || a.setTimeout)(function() {
              throw e4;
            }, 0);
          }, t3 = 40000, p = function(e4) {
            setTimeout(function() {
              typeof e4 == "string" ? l().revokeObjectURL(e4) : e4.remove();
            }, t3);
          }, m = function(e4) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e4.type) ? new Blob([String.fromCharCode(65279), e4], { type: e4.type }) : e4;
          }, e3 = (o2 = function(e4, r3, t4) {
            t4 || (e4 = m(e4));
            var o3, n, s2 = this, t4 = e4.type === "application/octet-stream", i = function() {
              for (var e5 = s2, t5 = "writestart progress write writeend".split(" "), r4 = undefined, o4 = (t5 = [].concat(t5)).length;o4--; ) {
                var n2 = e5["on" + t5[o4]];
                if (typeof n2 == "function")
                  try {
                    n2.call(e5, r4 || e5);
                  } catch (e6) {
                    f(e6);
                  }
              }
            };
            s2.readyState = s2.INIT, c ? (o3 = l().createObjectURL(e4), setTimeout(function() {
              var e5, t5;
              u.href = o3, u.download = r3, e5 = u, t5 = new MouseEvent("click"), e5.dispatchEvent(t5), i(), p(o3), s2.readyState = s2.DONE;
            })) : (h || t4 && d) && a.FileReader ? ((n = new FileReader).onloadend = function() {
              var e5 = h ? n.result : n.result.replace(/^data:[^;]*;/, "data:attachment/file;");
              a.open(e5, "_blank") || (a.location.href = e5), e5 = undefined, s2.readyState = s2.DONE, i();
            }, n.readAsDataURL(e4), s2.readyState = s2.INIT) : (o3 = o3 || l().createObjectURL(e4), !t4 && a.open(o3, "_blank") || (a.location.href = o3), s2.readyState = s2.DONE, i(), p(o3));
          }).prototype, typeof navigator != "undefined" && navigator.msSaveOrOpenBlob ? function(e4, t4, r3) {
            return t4 = t4 || e4.name || "download", r3 || (e4 = m(e4)), navigator.msSaveOrOpenBlob(e4, t4);
          } : (e3.abort = function() {
          }, e3.readyState = e3.INIT = 0, e3.WRITING = 1, e3.DONE = 2, e3.error = e3.onwritestart = e3.onprogress = e3.onwrite = e3.onabort = e3.onerror = e3.onwriteend = null, function(e4, t4, r3) {
            return new o2(e4, t4 || e4.name || "download", r3);
          });
      }(typeof self != "undefined" && self || typeof window != "undefined" && window || this.content);
      t2 !== undefined && t2.exports ? t2.exports.saveAs = o : s != null && s.amd !== null && s("FileSaver.js", function() {
        return o;
      });
    }, {}], 245: [function(e2, t2, r2) {
      var o, n = Object.defineProperty, s2 = (n(r2, "__esModule", { value: true }), r2), i = { GIFEncoder: () => h, applyPalette: () => function(e3, t3, r3 = "rgb565") {
        if (!e3 || !e3.buffer)
          throw new Error("quantize() expected RGBA Uint8Array data");
        if (!(e3 instanceof Uint8Array || e3 instanceof Uint8ClampedArray))
          throw new Error("quantize() expected RGBA Uint8Array data");
        if (256 < t3.length)
          throw new Error("applyPalette() only works with 256 colors or less");
        const o2 = new Uint32Array(e3.buffer), n2 = o2.length, s3 = r3 === "rgb444" ? 4096 : 65536, i2 = new Uint8Array(n2), a2 = new Array(s3);
        if (r3 === "rgba4444")
          for (let e4 = 0;e4 < n2; e4++) {
            var l2 = o2[e4], u2 = l2 >> 24 & 255, c2 = l2 >> 16 & 255, d2 = l2 >> 8 & 255, l2 = 255 & l2, h2 = P(l2, d2, c2, u2), h2 = h2 in a2 ? a2[h2] : a2[h2] = function(t4, r4, o3, n3, s4) {
              let i3 = 0, a3 = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
              for (let e5 = 0;e5 < s4.length; e5++) {
                var l3, u3 = s4[e5], c3 = v(u3[3] - n3);
                c3 > a3 || (l3 = u3[0], (c3 += v(l3 - t4)) > a3 || (l3 = u3[1], (c3 += v(l3 - r4)) > a3 || (l3 = u3[2], (c3 += v(l3 - o3)) > a3 || (a3 = c3, i3 = e5))));
              }
              return i3;
            }(l2, d2, c2, u2, t3);
            i2[e4] = h2;
          }
        else {
          const g = r3 === "rgb444" ? A : O;
          for (let e4 = 0;e4 < n2; e4++) {
            var f2 = o2[e4], p = f2 >> 16 & 255, m = f2 >> 8 & 255, f2 = 255 & f2, y = g(f2, m, p), y = y in a2 ? a2[y] : a2[y] = function(t4, r4, o3, n3) {
              let s4 = 0, i3 = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
              for (let e5 = 0;e5 < n3.length; e5++) {
                var a3, l3 = n3[e5], u3 = v(l3[0] - t4);
                u3 > i3 || (a3 = l3[1], (u3 += v(a3 - r4)) > i3 || (a3 = l3[2], (u3 += v(a3 - o3)) > i3 || (i3 = u3, s4 = e5)));
              }
              return s4;
            }(f2, m, p, t3);
            i2[e4] = y;
          }
        }
        return i2;
      }, default: () => f, nearestColor: () => function(e3, t3, r3 = u) {
        return e3[l(e3, t3, r3)];
      }, nearestColorIndex: () => l, nearestColorIndexWithDistance: () => d, prequantize: () => function(e3, { roundRGB: r3 = 5, roundAlpha: o2 = 10, oneBitAlpha: n2 = null } = {}) {
        const s3 = new Uint32Array(e3.buffer);
        for (let t3 = 0;t3 < s3.length; t3++) {
          var i2 = s3[t3];
          let e4 = i2 >> 24 & 255;
          var a2, l2 = i2 >> 16 & 255, u2 = i2 >> 8 & 255, i2 = 255 & i2;
          e4 = c(e4, o2), n2 && (a2 = typeof n2 == "number" ? n2 : 127, e4 = e4 <= a2 ? 0 : 255), i2 = c(i2, r3), u2 = c(u2, r3), l2 = c(l2, r3), s3[t3] = e4 << 24 | l2 << 16 | u2 << 8 | i2 << 0;
        }
      }, quantize: () => function(e3, t3, r3 = {}) {
        var { format: o2 = "rgb565", clearAlpha: n2 = true, clearAlphaColor: s3 = 0, clearAlphaThreshold: i2 = 0, oneBitAlpha: a2 = false } = r3;
        if (!e3 || !e3.buffer)
          throw new Error("quantize() expected RGBA Uint8Array data");
        if (!(e3 instanceof Uint8Array || e3 instanceof Uint8ClampedArray))
          throw new Error("quantize() expected RGBA Uint8Array data");
        e3 = new Uint32Array(e3.buffer);
        let l2 = r3.useSqrt !== false;
        const u2 = o2 === "rgba4444", c2 = function(r4, e4) {
          const t4 = e4 === "rgb444" ? 4096 : 65536, o3 = new Array(t4), n3 = r4.length;
          if (e4 === "rgba4444")
            for (let t5 = 0;t5 < n3; ++t5) {
              var s4 = r4[t5], i3 = s4 >> 24 & 255, a3 = s4 >> 16 & 255, l3 = s4 >> 8 & 255, s4 = 255 & s4, u3 = P(s4, l3, a3, i3);
              let e5 = u3 in o3 ? o3[u3] : o3[u3] = D();
              e5.rc += s4, e5.gc += l3, e5.bc += a3, e5.ac += i3, e5.cnt++;
            }
          else if (e4 === "rgb444")
            for (let t5 = 0;t5 < n3; ++t5) {
              var c3 = r4[t5], d3 = c3 >> 16 & 255, h3 = c3 >> 8 & 255, c3 = 255 & c3, f3 = A(c3, h3, d3);
              let e5 = f3 in o3 ? o3[f3] : o3[f3] = D();
              e5.rc += c3, e5.gc += h3, e5.bc += d3, e5.cnt++;
            }
          else
            for (let t5 = 0;t5 < n3; ++t5) {
              var p2 = r4[t5], m2 = p2 >> 16 & 255, y2 = p2 >> 8 & 255, p2 = 255 & p2, g2 = O(p2, y2, m2);
              let e5 = g2 in o3 ? o3[g2] : o3[g2] = D();
              e5.rc += p2, e5.gc += y2, e5.bc += m2, e5.cnt++;
            }
          return o3;
        }(e3, o2), d2 = c2.length, h2 = d2 - 1, f2 = new Uint32Array(d2 + 1);
        for (var p = 0, m = 0;m < d2; ++m) {
          const C2 = c2[m];
          C2 != null && (M2 = 1 / C2.cnt, u2 && (C2.ac *= M2), C2.rc *= M2, C2.gc *= M2, C2.bc *= M2, c2[p++] = C2);
        }
        R(t3) / p < 0.022 && (l2 = false);
        for (var y, g, v2, m = 0;m < p - 1; ++m)
          c2[m].fw = m + 1, c2[m + 1].bk = m, l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
        l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
        for (m = 0;m < p; ++m) {
          I(c2, m, false);
          var b = c2[m].err;
          for (g = ++f2[0];1 < g && (v2 = g >> 1, !(c2[y = f2[v2]].err <= b)); g = v2)
            f2[g] = y;
          f2[g] = m;
        }
        var j, _ = p - t3;
        for (m = 0;m < _; ) {
          for (;; ) {
            var x = f2[1];
            if ((j = c2[x]).tm >= j.mtm && c2[j.nn].mtm <= j.tm)
              break;
            j.mtm == h2 ? x = f2[1] = f2[f2[0]--] : (I(c2, x, false), j.tm = m);
            b = c2[x].err;
            for (g = 1;(v2 = g + g) <= f2[0] && (v2 < f2[0] && c2[f2[v2]].err > c2[f2[v2 + 1]].err && v2++, !(b <= c2[y = f2[v2]].err)); g = v2)
              f2[g] = y;
            f2[g] = x;
          }
          var w = c2[j.nn], S2 = j.cnt, T2 = w.cnt, M2 = 1 / (S2 + T2);
          u2 && (j.ac = M2 * (S2 * j.ac + T2 * w.ac)), j.rc = M2 * (S2 * j.rc + T2 * w.rc), j.gc = M2 * (S2 * j.gc + T2 * w.gc), j.bc = M2 * (S2 * j.bc + T2 * w.bc), j.cnt += w.cnt, j.mtm = ++m, c2[w.bk].fw = w.fw, c2[w.fw].bk = w.bk, w.mtm = h2;
        }
        let E2 = [];
        for (m = 0;; 0) {
          let e4 = L(Math.round(c2[m].rc), 0, 255), t4 = L(Math.round(c2[m].gc), 0, 255), r4 = L(Math.round(c2[m].bc), 0, 255), o3 = 255;
          u2 && (o3 = L(Math.round(c2[m].ac), 0, 255), a2 && (k2 = typeof a2 == "number" ? a2 : 127, o3 = o3 <= k2 ? 0 : 255), n2 && o3 <= i2 && (e4 = t4 = r4 = s3, o3 = 0));
          var k2 = u2 ? [e4, t4, r4, o3] : [e4, t4, r4];
          if (function(t5, r5) {
            for (let e5 = 0;e5 < t5.length; e5++) {
              var o4 = t5[e5], n3 = o4[0] === r5[0] && o4[1] === r5[1] && o4[2] === r5[2], o4 = !(4 <= o4.length && 4 <= r5.length) || o4[3] === r5[3];
              if (n3 && o4)
                return true;
            }
            return false;
          }(E2, k2) || E2.push(k2), (m = c2[m].fw) == 0)
            break;
        }
        return E2;
      }, snapColorsToPalette: () => function(r3, o2, e3 = 5) {
        if (r3.length && o2.length) {
          var n2 = r3.map((e4) => e4.slice(0, 3)), s3 = e3 * e3, i2 = r3[0].length;
          for (let t3 = 0;t3 < o2.length; t3++) {
            let e4 = o2[t3];
            e4 = e4.length < i2 ? [e4[0], e4[1], e4[2], 255] : e4.length > i2 ? e4.slice(0, 3) : e4.slice();
            var a2 = d(n2, e4.slice(0, 3), u), l2 = a2[0], a2 = a2[1];
            0 < a2 && a2 <= s3 && (r3[l2] = e4);
          }
        }
      } };
      for (o in i)
        n(s2, o, { get: i[o], enumerable: true });
      var a = { signature: "GIF", version: "89a", trailer: 59, extensionIntroducer: 33, applicationExtensionLabel: 255, graphicControlExtensionLabel: 249, imageSeparator: 44, signatureSize: 3, versionSize: 3, globalColorTableFlagMask: 128, colorResolutionMask: 112, sortFlagMask: 8, globalColorTableSizeMask: 7, applicationIdentifierSize: 8, applicationAuthCodeSize: 3, disposalMethodMask: 28, userInputFlagMask: 2, transparentColorFlagMask: 1, localColorTableFlagMask: 128, interlaceFlagMask: 64, idSortFlagMask: 32, localColorTableSizeMask: 7 };
      function E(e3 = 256) {
        let n2 = 0, s3 = new Uint8Array(e3);
        return { get buffer() {
          return s3.buffer;
        }, reset() {
          n2 = 0;
        }, bytesView() {
          return s3.subarray(0, n2);
        }, bytes() {
          return s3.slice(0, n2);
        }, writeByte(e4) {
          i2(n2 + 1), s3[n2] = e4, n2++;
        }, writeBytes(t3, r3 = 0, o2 = t3.length) {
          i2(n2 + o2);
          for (let e4 = 0;e4 < o2; e4++)
            s3[n2++] = t3[e4 + r3];
        }, writeBytesView(e4, t3 = 0, r3 = e4.byteLength) {
          i2(n2 + r3), s3.set(e4.subarray(t3, t3 + r3), n2), n2 += r3;
        } };
        function i2(e4) {
          var t3 = s3.length;
          if (!(e4 <= t3)) {
            e4 = Math.max(e4, t3 * (t3 < 1048576 ? 2 : 1.125) >>> 0), t3 != 0 && (e4 = Math.max(e4, 256));
            const r3 = s3;
            s3 = new Uint8Array(e4), 0 < n2 && s3.set(r3.subarray(0, n2), 0);
          }
        }
      }
      var k = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535];
      var S = function(e3, t3, r3, o2, n2 = E(512), s3 = new Uint8Array(256), i2 = new Int32Array(5003), a2 = new Int32Array(5003)) {
        var l2 = i2.length, o2 = Math.max(2, o2);
        s3.fill(0), a2.fill(0), i2.fill(-1);
        let u2 = 0, c2 = 0;
        var d2 = o2 + 1;
        const h2 = d2;
        let f2 = false, p = h2, m = (1 << p) - 1;
        var y = 1 << d2 - 1;
        const g = 1 + y;
        let v2 = 2 + y, b = 0, j = r3[0], _ = 0;
        for (let e4 = l2;e4 < 65536; e4 *= 2)
          ++_;
        _ = 8 - _, n2.writeByte(o2), M2(y);
        var x = r3.length;
        for (let t4 = 1;t4 < x; t4++)
          e: {
            var w = r3[t4], S2 = (w << 12) + j;
            let e4 = w << _ ^ j;
            if (i2[e4] === S2)
              j = a2[e4];
            else {
              for (var T2 = e4 === 0 ? 1 : l2 - e4;0 <= i2[e4]; )
                if ((e4 -= T2) < 0 && (e4 += l2), i2[e4] === S2) {
                  j = a2[e4];
                  break e;
                }
              M2(j), j = w, v2 < 4096 ? (a2[e4] = v2++, i2[e4] = S2) : (i2.fill(-1), v2 = 2 + y, f2 = true, M2(y));
            }
          }
        return M2(j), M2(g), n2.writeByte(0), n2.bytesView();
        function M2(e4) {
          for (u2 &= k[c2], 0 < c2 ? u2 |= e4 << c2 : u2 = e4, c2 += p;8 <= c2; )
            s3[b++] = 255 & u2, 254 <= b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0), u2 >>= 8, c2 -= 8;
          if ((v2 > m || f2) && (f2 ? (p = h2, m = (1 << p) - 1, f2 = false) : (++p, m = p === 12 ? 1 << p : (1 << p) - 1)), e4 == g) {
            for (;0 < c2; )
              s3[b++] = 255 & u2, 254 <= b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0), u2 >>= 8, c2 -= 8;
            0 < b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0);
          }
        }
      };
      function O(e3, t3, r3) {
        return e3 << 8 & 63488 | t3 << 2 & 992 | r3 >> 3;
      }
      function P(e3, t3, r3, o2) {
        return e3 >> 4 | 240 & t3 | (240 & r3) << 4 | (240 & o2) << 8;
      }
      function A(e3, t3, r3) {
        return e3 >> 4 << 8 | 240 & t3 | r3 >> 4;
      }
      function L(e3, t3, r3) {
        return e3 < t3 ? t3 : r3 < e3 ? r3 : e3;
      }
      function R(e3) {
        return e3 * e3;
      }
      function I(e3, t3, r3) {
        var o2 = 0, n2 = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
        const s3 = e3[t3];
        for (var { cnt: i2, ac: a2, rc: l2, gc: u2, bc: c2, fw: d2 } = s3;d2 != 0; d2 = e3[d2].fw) {
          var h2, f2 = e3[d2], p = f2.cnt, p = i2 * p / (i2 + p);
          n2 <= p || (h2 = 0, r3 && n2 <= (h2 += p * R(f2.ac - a2)) || n2 <= (h2 += p * R(f2.rc - l2)) || n2 <= (h2 += p * R(f2.gc - u2)) || n2 <= (h2 += p * R(f2.bc - c2)) || (n2 = h2, o2 = d2));
        }
        s3.err = n2, s3.nn = o2;
      }
      function D() {
        return { ac: 0, rc: 0, gc: 0, bc: 0, cnt: 0, nn: 0, fw: 0, bk: 0, tm: 0, mtm: 0, err: 0 };
      }
      function u(e3, t3) {
        for (var r3 = 0, o2 = 0;o2 < e3.length; o2++) {
          var n2 = e3[o2] - t3[o2];
          r3 += n2 * n2;
        }
        return r3;
      }
      function c(e3, t3) {
        return 1 < t3 ? Math.round(e3 / t3) * t3 : e3;
      }
      function v(e3) {
        return e3 * e3;
      }
      function l(t3, r3, o2 = u) {
        let n2 = 1 / 0, s3 = -1;
        for (let e3 = 0;e3 < t3.length; e3++) {
          var i2 = o2(r3, t3[e3]);
          i2 < n2 && (n2 = i2, s3 = e3);
        }
        return s3;
      }
      function d(t3, r3, o2 = u) {
        let n2 = 1 / 0, s3 = -1;
        for (let e3 = 0;e3 < t3.length; e3++) {
          var i2 = o2(r3, t3[e3]);
          i2 < n2 && (n2 = i2, s3 = e3);
        }
        return [s3, n2];
      }
      function h(e3 = {}) {
        const { initialCapacity: t3 = 4096, auto: g = true } = e3, v2 = E(t3);
        const b = new Uint8Array(256), j = new Int32Array(5003), _ = new Int32Array(5003);
        let x = false;
        return { reset() {
          v2.reset(), x = false;
        }, finish() {
          v2.writeByte(a.trailer);
        }, bytes() {
          return v2.bytes();
        }, bytesView() {
          return v2.bytesView();
        }, get buffer() {
          return v2.buffer;
        }, get stream() {
          return v2;
        }, writeHeader: w, writeFrame(e4, t4, r3, o2 = {}) {
          var { transparent: n2 = false, transparentIndex: s3 = 0, delay: i2 = 0, palette: a2 = null, repeat: l2 = 0, colorDepth: u2 = 8, dispose: c2 = -1 } = o2;
          let d2 = false;
          if (g ? x || (d2 = true, w(), x = true) : d2 = Boolean(o2.first), t4 = Math.max(0, Math.floor(t4)), r3 = Math.max(0, Math.floor(r3)), d2) {
            if (!a2)
              throw new Error("First frame must include a { palette } option");
            var [o2, h2, f2, p, m = 8] = [v2, t4, r3, a2, u2];
            p = F(p.length) - 1, m = 128 | m - 1 << 4 | p, M(o2, h2), M(o2, f2), o2.writeBytes([m, 0, 0]), T(v2, a2), 0 <= l2 && (p = v2, h2 = l2, p.writeByte(33), p.writeByte(255), p.writeByte(11), C(p, "NETSCAPE2.0"), p.writeByte(3), p.writeByte(1), M(p, h2), p.writeByte(0));
          }
          var y, f2 = Math.round(i2 / 10), o2 = v2, m = c2, l2 = f2, h2 = n2, p = s3, i2 = (o2.writeByte(33), o2.writeByte(249), o2.writeByte(4), p < 0 && (p = 0, h2 = false), h2 = h2 ? (y = 1, 2) : y = 0, 0 <= m && (h2 = 7 & m), h2 <<= 2, o2.writeByte(0 | h2 | y), M(o2, l2), o2.writeByte(p || 0), o2.writeByte(0), Boolean(a2) && !d2);
          c2 = v2, n2 = t4, s3 = r3, y = i2 ? a2 : null, c2.writeByte(44), M(c2, 0), M(c2, 0), M(c2, n2), M(c2, s3), y ? (n2 = F(y.length) - 1, c2.writeByte(128 | n2)) : c2.writeByte(0), i2 && T(v2, a2), [l2, o2, s3, n2, c2 = 8, i2, a2, e4] = [v2, e4, t4, r3, u2, b, j, _], S(s3, n2, o2, c2, l2, i2, a2, e4);
        } };
        function w() {
          C(v2, "GIF89a");
        }
      }
      function T(r3, o2) {
        var e3 = 1 << F(o2.length);
        for (let t3 = 0;t3 < e3; t3++) {
          let e4 = [0, 0, 0];
          t3 < o2.length && (e4 = o2[t3]), r3.writeByte(e4[0]), r3.writeByte(e4[1]), r3.writeByte(e4[2]);
        }
      }
      function M(e3, t3) {
        e3.writeByte(255 & t3), e3.writeByte(t3 >> 8 & 255);
      }
      function C(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++)
          e3.writeByte(t3.charCodeAt(r3));
      }
      function F(e3) {
        return Math.max(Math.ceil(Math.log2(e3)), 1);
      }
      var f = h;
    }, {}], 246: [function(e2, t2, r2) {
      r2.read = function(e3, t3, r3, o, n) {
        var s2, i, a = 8 * n - o - 1, l = (1 << a) - 1, u = l >> 1, c = -7, d = r3 ? n - 1 : 0, h = r3 ? -1 : 1, n = e3[t3 + d];
        for (d += h, s2 = n & (1 << -c) - 1, n >>= -c, c += a;0 < c; s2 = 256 * s2 + e3[t3 + d], d += h, c -= 8)
          ;
        for (i = s2 & (1 << -c) - 1, s2 >>= -c, c += o;0 < c; i = 256 * i + e3[t3 + d], d += h, c -= 8)
          ;
        if (s2 === 0)
          s2 = 1 - u;
        else {
          if (s2 === l)
            return i ? NaN : 1 / 0 * (n ? -1 : 1);
          i += Math.pow(2, o), s2 -= u;
        }
        return (n ? -1 : 1) * i * Math.pow(2, s2 - o);
      }, r2.write = function(e3, t3, r3, o, n, s2) {
        var i, a, l = 8 * s2 - n - 1, u = (1 << l) - 1, c = u >> 1, d = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h = o ? 0 : s2 - 1, f = o ? 1 : -1, s2 = t3 < 0 || t3 === 0 && 1 / t3 < 0 ? 1 : 0;
        for (t3 = Math.abs(t3), isNaN(t3) || t3 === 1 / 0 ? (a = isNaN(t3) ? 1 : 0, i = u) : (i = Math.floor(Math.log(t3) / Math.LN2), t3 * (o = Math.pow(2, -i)) < 1 && (i--, o *= 2), 2 <= (t3 += 1 <= i + c ? d / o : d * Math.pow(2, 1 - c)) * o && (i++, o /= 2), u <= i + c ? (a = 0, i = u) : 1 <= i + c ? (a = (t3 * o - 1) * Math.pow(2, n), i += c) : (a = t3 * Math.pow(2, c - 1) * Math.pow(2, n), i = 0));8 <= n; e3[r3 + h] = 255 & a, h += f, a /= 256, n -= 8)
          ;
        for (i = i << n | a, l += n;0 < l; e3[r3 + h] = 255 & i, h += f, i /= 256, l -= 8)
          ;
        e3[r3 + h - f] |= 128 * s2;
      };
    }, {}], 247: [function(o, e2, c) {
      var t2;
      function y(e3, t3) {
        return e3.b === t3.b && e3.a === t3.a;
      }
      function g(e3, t3) {
        return e3.b < t3.b || e3.b === t3.b && e3.a <= t3.a;
      }
      function v(e3, t3, r3) {
        var o2 = t3.b - e3.b, n2 = r3.b - t3.b;
        return 0 < o2 + n2 ? o2 < n2 ? t3.a - e3.a + o2 / (o2 + n2) * (e3.a - r3.a) : t3.a - r3.a + n2 / (o2 + n2) * (r3.a - e3.a) : 0;
      }
      function b(e3, t3, r3) {
        var o2 = t3.b - e3.b, n2 = r3.b - t3.b;
        return 0 < o2 + n2 ? (t3.a - r3.a) * o2 + (t3.a - e3.a) * n2 : 0;
      }
      function j(e3, t3) {
        return e3.a < t3.a || e3.a === t3.a && e3.b <= t3.b;
      }
      function V(e3, t3, r3) {
        var o2 = t3.a - e3.a, n2 = r3.a - t3.a;
        return 0 < o2 + n2 ? o2 < n2 ? t3.b - e3.b + o2 / (o2 + n2) * (e3.b - r3.b) : t3.b - r3.b + n2 / (o2 + n2) * (r3.b - e3.b) : 0;
      }
      function z(e3, t3, r3) {
        var o2 = t3.a - e3.a, n2 = r3.a - t3.a;
        return 0 < o2 + n2 ? (t3.b - r3.b) * o2 + (t3.b - e3.b) * n2 : 0;
      }
      function _(e3, t3, r3, o2) {
        return (e3 = e3 < 0 ? 0 : e3) <= (r3 = r3 < 0 ? 0 : r3) ? r3 === 0 ? (t3 + o2) / 2 : t3 + e3 / (e3 + r3) * (o2 - t3) : o2 + r3 / (e3 + r3) * (t3 - o2);
      }
      function d(e3) {
        var t3 = s2(e3.b);
        return n(t3, e3.c), n(t3.b, e3.c), i(t3, e3.a), t3;
      }
      function x(e3, t3) {
        var r3 = false, o2 = false;
        e3 !== t3 && (t3.a !== e3.a && (o2 = true, M(t3.a, e3.a)), t3.d !== e3.d && (r3 = true, a(t3.d, e3.d)), T(t3, e3), o2 || (n(t3, e3.a), e3.a.c = e3), r3 || (i(t3, e3.d), e3.d.a = e3));
      }
      function m(e3) {
        var t3 = e3.b, r3 = false;
        e3.d !== e3.b.d && (r3 = true, a(e3.d, e3.b.d)), e3.c === e3 ? M(e3.a, null) : (e3.b.d.a = e3.b.e, e3.a.c = e3.c, T(e3, e3.b.e), r3 || i(e3, e3.d)), t3.c === t3 ? (M(t3.a, null), a(t3.d, null)) : (e3.d.a = t3.b.e, t3.a.c = t3.c, T(t3, t3.b.e)), H(e3);
      }
      function w(e3) {
        var t3 = s2(e3), r3 = t3.b;
        return T(t3, e3.e), t3.a = e3.b.a, n(r3, t3.a), t3.d = r3.d = e3.d, t3 = t3.b, T(e3.b, e3.b.b.e), T(e3.b, t3), e3.b.a = t3.a, t3.b.a.c = t3.b, t3.b.d = e3.b.d, t3.f = e3.f, t3.b.f = e3.b.f, t3;
      }
      function S(e3, t3) {
        var r3 = false, o2 = s2(e3), n2 = o2.b;
        return t3.d !== e3.d && (r3 = true, a(t3.d, e3.d)), T(o2, e3.e), T(n2, t3), o2.a = e3.b.a, n2.a = t3.a, o2.d = n2.d = e3.d, e3.d.a = n2, r3 || i(o2, e3.d), o2;
      }
      function s2(e3) {
        var t3 = new u, r3 = new u, o2 = e3.b.h;
        return (((r3.h = o2).b.h = t3).h = e3).b.h = r3, t3.b = r3, ((t3.c = t3).e = r3).b = t3, (r3.c = r3).e = t3;
      }
      function T(e3, t3) {
        var r3 = e3.c, o2 = t3.c;
        r3.b.e = t3, (o2.b.e = e3).c = o2, t3.c = r3;
      }
      function n(e3, t3) {
        var r3 = t3.f, o2 = new D(t3, r3);
        for (r3.e = o2, r3 = (t3.f = o2).c = e3;r3.a = o2, (r3 = r3.c) !== e3; )
          ;
      }
      function i(e3, t3) {
        var r3 = t3.d, o2 = new te(t3, r3);
        for (r3.b = o2, (t3.d = o2).a = e3, o2.c = t3.c, r3 = e3;r3.d = o2, (r3 = r3.e) !== e3; )
          ;
      }
      function H(e3) {
        var t3 = e3.h;
        e3 = e3.b.h, (t3.b.h = e3).b.h = t3;
      }
      function M(e3, t3) {
        for (var r3 = e3.c, o2 = r3;o2.a = t3, (o2 = o2.c) !== r3; )
          ;
        r3 = e3.f, ((o2 = e3.e).f = r3).e = o2;
      }
      function a(e3, t3) {
        for (var r3 = e3.a, o2 = r3;o2.d = t3, (o2 = o2.e) !== r3; )
          ;
        r3 = e3.d, ((o2 = e3.b).d = r3).b = o2;
      }
      function W(e3) {
        var t3 = 0;
        return Math.abs(e3[1]) > Math.abs(e3[0]) && (t3 = 1), t3 = Math.abs(e3[2]) > Math.abs(e3[t3]) ? 2 : t3;
      }
      function E(e3, t3) {
        e3.f += t3.f, e3.b.f += t3.b.f;
      }
      function h(e3, t3, r3) {
        return e3 = e3.a, t3 = t3.a, r3 = r3.a, t3.b.a === e3 ? r3.b.a === e3 ? g(t3.a, r3.a) ? b(r3.b.a, t3.a, r3.a) <= 0 : 0 <= b(t3.b.a, r3.a, t3.a) : b(r3.b.a, e3, r3.a) <= 0 : r3.b.a === e3 ? 0 <= b(t3.b.a, e3, t3.a) : (t3 = v(t3.b.a, e3, t3.a), (e3 = v(r3.b.a, e3, r3.a)) <= t3);
      }
      function k(e3) {
        e3.a.i = null;
        var t3 = e3.e;
        t3.a.c = t3.c, t3.c.a = t3.a, e3.e = null;
      }
      function C(e3, t3) {
        m(e3.a), e3.c = false, (e3.a = t3).i = e3;
      }
      function O(e3) {
        for (var t3 = e3.a.a;(e3 = G(e3)).a.a === t3; )
          ;
        return e3.c && (C(e3, t3 = S(B(e3).a.b, e3.a.e)), e3 = G(e3)), e3;
      }
      function q(e3, t3, r3) {
        var o2 = new N;
        return o2.a = r3, o2.e = p(e3.f, t3.e, o2), r3.i = o2;
      }
      function X(e3, t3) {
        switch (e3.s) {
          case 100130:
            return (1 & t3) != 0;
          case 100131:
            return t3 !== 0;
          case 100132:
            return 0 < t3;
          case 100133:
            return t3 < 0;
          case 100134:
            return 2 <= t3 || t3 <= -2;
        }
        return false;
      }
      function f(e3) {
        var t3 = e3.a, r3 = t3.d;
        r3.c = e3.d, r3.a = t3, k(e3);
      }
      function P(e3, t3, r3) {
        for (t3 = (e3 = t3).a;e3 !== r3; ) {
          e3.c = false;
          var o2 = B(e3), n2 = o2.a;
          if (n2.a !== t3.a) {
            if (!o2.c) {
              f(e3);
              break;
            }
            C(o2, n2 = S(t3.c.b, n2.b));
          }
          t3.c !== n2 && (x(n2.b.e, n2), x(t3, n2)), f(e3), t3 = o2.a, e3 = o2;
        }
        return t3;
      }
      function A(e3, t3, r3, o2, n2, s3) {
        for (var i2 = true;q(e3, t3, r3.b), (r3 = r3.c) !== o2; )
          ;
        for (n2 === null && (n2 = B(t3).a.b.c);(r3 = (o2 = B(t3)).a.b).a === n2.a; )
          r3.c !== n2 && (x(r3.b.e, r3), x(n2.b.e, r3)), o2.f = t3.f - r3.f, o2.d = X(e3, o2.f), t3.b = true, !i2 && R(e3, t3) && (E(r3, n2), k(t3), m(n2)), i2 = false, t3 = o2, n2 = r3;
        t3.b = true, s3 && J(e3, t3);
      }
      function Y(e3, t3, r3, o2, n2) {
        var s3 = [t3.g[0], t3.g[1], t3.g[2]];
        t3.d = null, t3.d = e3.o && e3.o(s3, r3, o2, e3.c) || null, t3.d === null && (n2 ? e3.n || (l(e3, 100156), e3.n = true) : t3.d = r3[0]);
      }
      function L(e3, t3, r3) {
        var o2 = [null, null, null, null];
        o2[0] = t3.a.d, o2[1] = r3.a.d, Y(e3, t3.a, o2, [0.5, 0.5, 0, 0], false), x(t3, r3);
      }
      function Z(e3, t3, r3, o2, n2) {
        var s3 = Math.abs(t3.b - e3.b) + Math.abs(t3.a - e3.a), i2 = Math.abs(r3.b - e3.b) + Math.abs(r3.a - e3.a), a2 = n2 + 1;
        o2[n2] = 0.5 * i2 / (s3 + i2), o2[a2] = 0.5 * s3 / (s3 + i2), e3.g[0] += o2[n2] * t3.g[0] + o2[a2] * r3.g[0], e3.g[1] += o2[n2] * t3.g[1] + o2[a2] * r3.g[1], e3.g[2] += o2[n2] * t3.g[2] + o2[a2] * r3.g[2];
      }
      function R(e3, t3) {
        var r3 = B(t3), o2 = t3.a, n2 = r3.a;
        if (g(o2.a, n2.a)) {
          if (0 < b(n2.b.a, o2.a, n2.a))
            return;
          if (y(o2.a, n2.a)) {
            if (o2.a !== n2.a) {
              var r3 = e3.e, s3 = o2.a.h;
              if (0 <= s3) {
                var i2 = (r3 = r3.b).d, a2 = r3.e, l2 = r3.c, u2 = l2[s3];
                i2[u2] = i2[r3.a], (l2[i2[u2]] = u2) <= --r3.a && (u2 <= 1 || g(a2[i2[u2 >> 1]], a2[i2[u2]]) ? U : ue)(r3, u2), a2[s3] = null, l2[s3] = r3.b, r3.b = s3;
              } else
                for (r3.c[-(s3 + 1)] = null;0 < r3.a && r3.c[r3.d[r3.a - 1]] === null; )
                  --r3.a;
              L(e3, n2.b.e, o2);
            }
          } else
            w(n2.b), x(o2, n2.b.e), t3.b = r3.b = true;
        } else {
          if (b(o2.b.a, n2.a, o2.a) < 0)
            return;
          G(t3).b = t3.b = true, w(o2.b), x(n2.b.e, o2);
        }
        return 1;
      }
      function Q(e3, t3) {
        var r3 = B(t3), o2 = t3.a, n2 = r3.a, s3 = o2.a, i2 = n2.a, a2 = o2.b.a, l2 = n2.b.a, u2 = new D;
        if (b(a2, e3.a, s3), b(l2, e3.a, i2), !(s3 === i2 || Math.min(s3.a, a2.a) > Math.max(i2.a, l2.a))) {
          if (g(s3, i2)) {
            if (0 < b(l2, s3, i2))
              return;
          } else if (b(a2, i2, s3) < 0)
            return;
          var c2, d2, h2 = a2, f2 = s3, p2 = l2, m2 = i2;
          if (g(h2, f2) || (c2 = h2, h2 = f2, f2 = c2), g(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), g(h2, p2) || (c2 = h2, h2 = p2, p2 = c2, c2 = f2, f2 = m2, m2 = c2), g(p2, f2) ? g(f2, m2) ? ((c2 = v(h2, p2, f2)) + (d2 = v(p2, f2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = _(c2, p2.b, d2, f2.b)) : ((c2 = b(h2, p2, f2)) + (d2 = -b(h2, m2, f2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = _(c2, p2.b, d2, m2.b)) : u2.b = (p2.b + f2.b) / 2, j(h2, f2) || (c2 = h2, h2 = f2, f2 = c2), j(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), j(h2, p2) || (c2 = h2, h2 = p2, p2 = c2, c2 = f2, f2 = m2, m2 = c2), j(p2, f2) ? j(f2, m2) ? ((c2 = V(h2, p2, f2)) + (d2 = V(p2, f2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = _(c2, p2.a, d2, f2.a)) : ((c2 = z(h2, p2, f2)) + (d2 = -z(h2, m2, f2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = _(c2, p2.a, d2, m2.a)) : u2.a = (p2.a + f2.a) / 2, g(u2, e3.a) && (u2.b = e3.a.b, u2.a = e3.a.a), h2 = g(s3, i2) ? s3 : i2, g(h2, u2) && (u2.b = h2.b, u2.a = h2.a), y(u2, s3) || y(u2, i2))
            return R(e3, t3), 0;
          if (!y(a2, e3.a) && 0 <= b(a2, e3.a, u2) || !y(l2, e3.a) && b(l2, e3.a, u2) <= 0) {
            if (l2 === e3.a)
              w(o2.b), x(n2.b, o2), o2 = B(t3 = O(t3)).a, P(e3, B(t3), r3), A(e3, t3, o2.b.e, o2, o2, true);
            else {
              if (a2 !== e3.a)
                return 0 <= b(a2, e3.a, u2) && (G(t3).b = t3.b = true, w(o2.b), o2.a.b = e3.a.b, o2.a.a = e3.a.a), void (b(l2, e3.a, u2) <= 0 && (t3.b = r3.b = true, w(n2.b), n2.a.b = e3.a.b, n2.a.a = e3.a.a));
              for (w(n2.b), x(o2.e, n2.b.e), i2 = (s3 = r3 = t3).a.b.a;(s3 = G(s3)).a.b.a === i2; )
                ;
              s3 = B(t3 = s3).a.b.c, r3.a = n2.b.e, A(e3, t3, (n2 = P(e3, r3, null)).c, o2.b.c, s3, true);
            }
            return 1;
          }
          w(o2.b), w(n2.b), x(n2.b.e, o2), o2.a.b = u2.b, o2.a.a = u2.a, o2.a.h = ne(e3.e, o2.a), o2 = o2.a, n2 = [0, 0, 0, 0], u2 = [s3.d, a2.d, i2.d, l2.d], o2.g[0] = o2.g[1] = o2.g[2] = 0, Z(o2, s3, a2, n2, 0), Z(o2, i2, l2, n2, 2), Y(e3, o2, u2, n2, true), G(t3).b = t3.b = r3.b = true;
        }
      }
      function J(e3, t3) {
        for (var r3 = B(t3);; ) {
          for (;r3.b; )
            r3 = B(t3 = r3);
          if (!t3.b && ((t3 = G(r3 = t3)) === null || !t3.b))
            break;
          t3.b = false;
          var o2 = t3.a, n2 = r3.a;
          if (s3 = o2.b.a !== n2.b.a)
            e: {
              var s3, i2 = B(s3 = t3), a2 = s3.a, l2 = i2.a, u2 = undefined;
              if (g(a2.b.a, l2.b.a)) {
                if (b(a2.b.a, l2.b.a, a2.a) < 0) {
                  s3 = false;
                  break e;
                }
                G(s3).b = s3.b = true, u2 = w(a2), x(l2.b, u2), u2.d.c = s3.d;
              } else {
                if (0 < b(l2.b.a, a2.b.a, l2.a)) {
                  s3 = false;
                  break e;
                }
                s3.b = i2.b = true, u2 = w(l2), x(a2.e, l2.b), u2.b.d.c = s3.d;
              }
              s3 = true;
            }
          if (s3 && (r3.c ? (k(r3), m(n2), n2 = (r3 = B(t3)).a) : t3.c && (k(t3), m(o2), o2 = (t3 = G(r3)).a)), o2.a !== n2.a) {
            if (o2.b.a === n2.b.a || t3.c || r3.c || o2.b.a !== e3.a && n2.b.a !== e3.a)
              R(e3, t3);
            else if (Q(e3, t3))
              break;
          }
          o2.a === n2.a && o2.b.a === n2.b.a && (E(n2, o2), k(t3), m(o2), t3 = G(r3));
        }
      }
      function K(e3, t3) {
        var r3 = new N, o2 = d(e3.b);
        o2.a.b = 4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, o2.a.a = t3, o2.b.a.b = -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, o2.b.a.a = t3, e3.a = o2.b.a, r3.a = o2, r3.f = 0, r3.d = false, r3.c = false, r3.h = true, r3.b = false, o2 = p(o2 = e3.f, o2.a, r3), r3.e = o2;
      }
      function $(e3) {
        this.a = new ee, this.b = e3, this.c = h;
      }
      function p(e3, t3, r3) {
        for (;(t3 = t3.c).b !== null && !e3.c(e3.b, t3.b, r3); )
          ;
        return e3 = new ee(r3, t3.a, t3), t3.a.c = e3, t3.a = e3;
      }
      function ee(e3, t3, r3) {
        this.b = e3 || null, this.a = t3 || this, this.c = r3 || this;
      }
      function r2() {
        this.d = 0, this.p = this.b = this.q = null, this.j = [0, 0, 0], this.s = 100130, this.n = false, this.o = this.a = this.e = this.f = null, this.m = false, this.c = this.r = this.i = this.k = this.l = this.h = null;
      }
      function I(e3, t3) {
        if (e3.d !== t3)
          for (;e3.d !== t3; )
            if (e3.d < t3)
              switch (e3.d) {
                case 0:
                  l(e3, 100151), e3.u(null);
                  break;
                case 1:
                  l(e3, 100152), e3.t();
              }
            else
              switch (e3.d) {
                case 2:
                  l(e3, 100154), e3.v();
                  break;
                case 1:
                  l(e3, 100153), e3.w();
              }
      }
      function l(e3, t3) {
        e3.p && e3.p(t3, e3.c);
      }
      function te(e3, t3) {
        this.b = e3 || this, this.d = t3 || this, this.a = null, this.c = false;
      }
      function u() {
        (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
      }
      function re() {
        this.c = new D, this.a = new te, this.b = new u, this.d = new u, this.b.b = this.d, this.d.b = this.b;
      }
      function D(e3, t3) {
        this.e = e3 || this, this.f = t3 || this, this.d = this.c = null, this.g = [0, 0, 0], this.h = this.a = this.b = 0;
      }
      function oe() {
        this.c = [], this.d = null, this.a = 0, this.e = false, this.b = new ie;
      }
      function ne(e3, t3) {
        var r3, o2, n2;
        return e3.e ? (2 * (o2 = ++(r3 = e3.b).a) > r3.f && (r3.f *= 2, r3.c = ae(r3.c, r3.f + 1)), r3.b === 0 ? n2 = o2 : (n2 = r3.b, r3.b = r3.c[r3.b]), r3.e[n2] = t3, r3.c[n2] = o2, r3.d[o2] = n2, r3.h && ue(r3, o2), n2) : (r3 = e3.a++, e3.c[r3] = t3, -(r3 + 1));
      }
      function se(e3) {
        if (e3.a === 0)
          return le(e3.b);
        var t3 = e3.c[e3.d[e3.a - 1]];
        if (e3.b.a !== 0 && g(F(e3.b), t3))
          return le(e3.b);
        for (;--e3.a, 0 < e3.a && e3.c[e3.d[e3.a - 1]] === null; )
          ;
        return t3;
      }
      function ie() {
        this.d = ae([0], 33), this.e = [null, null], this.c = [0, 0], this.a = 0, this.f = 32, this.b = 0, this.h = false, this.d[1] = 1;
      }
      function ae(e3, t3) {
        for (var r3 = Array(t3), o2 = 0;o2 < e3.length; o2++)
          r3[o2] = e3[o2];
        for (;o2 < t3; o2++)
          r3[o2] = 0;
        return r3;
      }
      function F(e3) {
        return e3.e[e3.d[1]];
      }
      function le(e3) {
        var { d: t3, e: r3, c: o2 } = e3, n2 = t3[1], s3 = r3[n2];
        return 0 < e3.a && (t3[1] = t3[e3.a], o2[t3[1]] = 1, r3[n2] = null, o2[n2] = e3.b, e3.b = n2, 0 < --e3.a && U(e3, 1)), s3;
      }
      function U(e3, t3) {
        for (var { d: r3, e: o2, c: n2 } = e3, s3 = t3, i2 = r3[s3];; ) {
          var a2 = s3 << 1, l2 = (a2 < e3.a && g(o2[r3[a2 + 1]], o2[r3[a2]]) && (a2 += 1), r3[a2]);
          if (a2 > e3.a || g(o2[i2], o2[l2])) {
            n2[r3[s3] = i2] = s3;
            break;
          }
          n2[r3[s3] = l2] = s3, s3 = a2;
        }
      }
      function ue(e3, t3) {
        for (var { d: r3, e: o2, c: n2 } = e3, s3 = t3, i2 = r3[s3];; ) {
          var a2 = s3 >> 1, l2 = r3[a2];
          if (a2 == 0 || g(o2[l2], o2[i2])) {
            n2[r3[s3] = i2] = s3;
            break;
          }
          n2[r3[s3] = l2] = s3, s3 = a2;
        }
      }
      function N() {
        this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = false;
      }
      function B(e3) {
        return e3.e.c.b;
      }
      function G(e3) {
        return e3.e.a.b;
      }
      (t2 = r2.prototype).x = function() {
        I(this, 0);
      }, t2.B = function(e3, t3) {
        switch (e3) {
          case 100142:
            return;
          case 100140:
            switch (t3) {
              case 100130:
              case 100131:
              case 100132:
              case 100133:
              case 100134:
                return void (this.s = t3);
            }
            break;
          case 100141:
            return void (this.m = !!t3);
          default:
            return void l(this, 100900);
        }
        l(this, 100901);
      }, t2.y = function(e3) {
        switch (e3) {
          case 100142:
            return 0;
          case 100140:
            return this.s;
          case 100141:
            return this.m;
          default:
            l(this, 100900);
        }
        return false;
      }, t2.A = function(e3, t3, r3) {
        this.j[0] = e3, this.j[1] = t3, this.j[2] = r3;
      }, t2.z = function(e3, t3) {
        var r3 = t3 || null;
        switch (e3) {
          case 100100:
          case 100106:
            this.h = r3;
            break;
          case 100104:
          case 100110:
            this.l = r3;
            break;
          case 100101:
          case 100107:
            this.k = r3;
            break;
          case 100102:
          case 100108:
            this.i = r3;
            break;
          case 100103:
          case 100109:
            this.p = r3;
            break;
          case 100105:
          case 100111:
            this.o = r3;
            break;
          case 100112:
            this.r = r3;
            break;
          default:
            l(this, 100900);
        }
      }, t2.C = function(e3, t3) {
        var r3 = false, o2 = [0, 0, 0];
        I(this, 2);
        for (var n2 = 0;n2 < 3; ++n2) {
          var s3 = e3[n2];
          s3 < -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 && (s3 = -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, r3 = true), 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 < s3 && (s3 = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, r3 = true), o2[n2] = s3;
        }
        r3 && l(this, 100155), (r3 = this.q) === null ? x(r3 = d(this.b), r3.b) : (w(r3), r3 = r3.e), r3.a.d = t3, r3.a.g[0] = o2[0], r3.a.g[1] = o2[1], r3.a.g[2] = o2[2], r3.f = 1, r3.b.f = -1, this.q = r3;
      }, t2.u = function(e3) {
        I(this, 0), this.d = 1, this.b = new re, this.c = e3;
      }, t2.t = function() {
        I(this, 1), this.d = 2, this.q = null;
      }, t2.v = function() {
        I(this, 2), this.d = 1;
      }, t2.w = function() {
        I(this, 1), this.d = 0;
        var e3, t3, r3 = this.j[0], o2 = this.j[1], n2 = this.j[2], s3 = false, i2 = [r3, o2, n2];
        if (r3 === 0 && o2 === 0 && n2 === 0) {
          for (var o2 = [-2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], a2 = [2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], n2 = [], l2 = [], r3 = (s3 = this.b.c).e;r3 !== s3; r3 = r3.e)
            for (var u2 = 0;u2 < 3; ++u2) {
              var c2 = r3.g[u2];
              c2 < a2[u2] && (a2[u2] = c2, l2[u2] = r3), c2 > o2[u2] && (o2[u2] = c2, n2[u2] = r3);
            }
          if (o2[1] - a2[1] > o2[r3 = 0] - a2[0] && (r3 = 1), a2[r3 = o2[2] - a2[2] > o2[r3] - a2[r3] ? 2 : r3] >= o2[r3])
            i2[0] = 0, i2[1] = 0, i2[2] = 1;
          else {
            for (a2 = l2[r3], n2 = n2[r3], l2 = [o2 = 0, 0, 0], a2 = [a2.g[0] - n2.g[0], a2.g[1] - n2.g[1], a2.g[2] - n2.g[2]], u2 = [0, 0, 0], r3 = s3.e;r3 !== s3; r3 = r3.e)
              u2[0] = r3.g[0] - n2.g[0], u2[1] = r3.g[1] - n2.g[1], u2[2] = r3.g[2] - n2.g[2], l2[0] = a2[1] * u2[2] - a2[2] * u2[1], l2[1] = a2[2] * u2[0] - a2[0] * u2[2], l2[2] = a2[0] * u2[1] - a2[1] * u2[0], o2 < (c2 = l2[0] * l2[0] + l2[1] * l2[1] + l2[2] * l2[2]) && (o2 = c2, i2[0] = l2[0], i2[1] = l2[1], i2[2] = l2[2]);
            o2 <= 0 && (i2[0] = i2[1] = i2[2] = 0, i2[W(a2)] = 1);
          }
          s3 = true;
        }
        for (l2 = W(i2), r3 = this.b.c, o2 = (l2 + 1) % 3, n2 = (l2 + 2) % 3, l2 = 0 < i2[l2] ? 1 : -1, i2 = r3.e;i2 !== r3; i2 = i2.e)
          i2.b = i2.g[o2], i2.a = l2 * i2.g[n2];
        if (s3) {
          for (i2 = 0, r3 = (s3 = this.b.a).b;r3 !== s3; r3 = r3.b)
            if (!((o2 = r3.a).f <= 0))
              for (;i2 += (o2.a.b - o2.b.a.b) * (o2.a.a + o2.b.a.a), (o2 = o2.e) !== r3.a; )
                ;
          if (i2 < 0)
            for (s3 = (i2 = this.b.c).e;s3 !== i2; s3 = s3.e)
              s3.a = -s3.a;
        }
        for (this.n = false, i2 = this.b.b, r3 = i2.h;r3 !== i2; r3 = s3)
          s3 = r3.h, o2 = r3.e, y(r3.a, r3.b.a) && r3.e.e !== r3 && (L(this, o2, r3), m(r3), o2 = (r3 = o2).e), o2.e === r3 && (o2 !== r3 && (o2 !== s3 && o2 !== s3.b || (s3 = s3.h), m(o2)), r3 !== s3 && r3 !== s3.b || (s3 = s3.h), m(r3));
        for (this.e = i2 = new oe, s3 = this.b.c, r3 = s3.e;r3 !== s3; r3 = r3.e)
          r3.h = ne(i2, r3);
        var d2 = i2;
        d2.d = [];
        for (var h2 = 0;h2 < d2.a; h2++)
          d2.d[h2] = h2;
        d2.d.sort(function(r4) {
          return function(e4, t4) {
            return g(r4[e4], r4[t4]) ? 1 : -1;
          };
        }(d2.c)), d2.e = true;
        for (var f2 = d2.b, p2 = f2.a;1 <= p2; --p2)
          U(f2, p2);
        for (f2.h = true, this.f = new $(this), K(this, -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), K(this, 4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);(i2 = se(this.e)) !== null; ) {
          for (;; ) {
            e:
              if ((r3 = this.e).a === 0)
                s3 = F(r3.b);
              else if (s3 = r3.c[r3.d[r3.a - 1]], r3.b.a !== 0 && g(r3 = F(r3.b), s3)) {
                s3 = r3;
                break e;
              }
            if (s3 === null || !y(s3, i2))
              break;
            s3 = se(this.e), L(this, i2.c, s3.c);
          }
          (function e(t4, r4) {
            for (var o3, n3 = (t4.a = r4).c;n3.i === null; )
              if ((n3 = n3.c) === r4.c) {
                var n3 = t4, s4 = r4;
                (c3 = new N).a = s4.c.b;
                for (var i3 = (a3 = n3.f).a;(i3 = i3.a).b !== null && !a3.c(a3.b, c3, i3.b); )
                  ;
                var a3, l3, u3 = B(a3 = i3.b), c3 = a3.a, i3 = u3.a;
                return void (b(c3.b.a, s4, c3.a) === 0 ? y((c3 = a3.a).a, s4) || y(c3.b.a, s4) || (w(c3.b), a3.c && (m(c3.c), a3.c = false), x(s4.c, c3), e(n3, s4)) : (l3 = g(i3.b.a, c3.b.a) ? a3 : u3, u3 = undefined, a3.d || l3.c ? (u3 = l3 === a3 ? S(s4.c.b, c3.e) : S(i3.b.c.b, s4.c).b, l3.c ? C(l3, u3) : ((a3 = q(c3 = n3, a3, u3)).f = G(a3).f + a3.a.f, a3.d = X(c3, a3.f)), e(n3, s4)) : A(n3, a3, s4.c, s4.c, null, true)));
              }
            a3 = (c3 = B(n3 = O(n3.i))).a, (c3 = P(t4, c3, null)).c === a3 ? (c3 = (a3 = c3).c, i3 = B(n3), u3 = n3.a, l3 = i3.a, o3 = false, u3.b.a !== l3.b.a && Q(t4, n3), y(u3.a, t4.a) && (x(c3.b.e, u3), c3 = B(n3 = O(n3)).a, P(t4, B(n3), i3), o3 = true), y(l3.a, t4.a) && (x(a3, l3.b.e), a3 = P(t4, i3, null), o3 = true), o3 ? A(t4, n3, a3.c, c3, c3, true) : (s4 = g(l3.a, u3.a) ? l3.b.e : u3, A(t4, n3, s4 = S(a3.c.b, s4), s4.c, s4.c, false), s4.b.i.c = true, J(t4, n3))) : A(t4, n3, c3.c, a3, a3, true);
          })(this, i2);
        }
        for (this.a = this.f.a.a.b.a.a, i2 = 0;(s3 = this.f.a.a.b) !== null; )
          s3.h || ++i2, k(s3);
        for (this.f = null, (i2 = this.e).b = null, i2.d = null, this.e = i2.c = null, i2 = this.b, r3 = i2.a.b;r3 !== i2.a; r3 = s3)
          s3 = r3.b, (r3 = r3.a).e.e === r3 && (E(r3.c, r3), m(r3));
        if (!this.n) {
          if (i2 = this.b, this.m)
            for (r3 = i2.b.h;r3 !== i2.b; r3 = s3)
              s3 = r3.h, r3.b.d.c !== r3.d.c ? r3.f = r3.d.c ? 1 : -1 : m(r3);
          else
            for (r3 = i2.a.b;r3 !== i2.a; r3 = s3)
              if (s3 = r3.b, r3.c) {
                for (r3 = r3.a;g(r3.b.a, r3.a); r3 = r3.c.b)
                  ;
                for (;g(r3.a, r3.b.a); r3 = r3.e)
                  ;
                for (o2 = r3.c.b, n2 = undefined;r3.e !== o2; )
                  if (g(r3.b.a, o2.a)) {
                    for (;o2.e !== r3 && (g((t3 = o2.e).b.a, t3.a) || b(o2.a, o2.b.a, o2.e.b.a) <= 0); )
                      o2 = (n2 = S(o2.e, o2)).b;
                    o2 = o2.c.b;
                  } else {
                    for (;o2.e !== r3 && (g((e3 = r3.c.b).a, e3.b.a) || 0 <= b(r3.b.a, r3.a, r3.c.b.a)); )
                      r3 = (n2 = S(r3, r3.c.b)).b;
                    r3 = r3.e;
                  }
                for (;o2.e.e !== r3; )
                  n2 = S(o2.e, o2), o2 = n2.b;
              }
          if (this.h || this.i || this.k || this.l)
            if (this.m) {
              for (s3 = (i2 = this.b).a.b;s3 !== i2.a; s3 = s3.b)
                if (s3.c) {
                  for (this.h && this.h(2, this.c), r3 = s3.a;this.k && this.k(r3.a.d, this.c), (r3 = r3.e) !== s3.a; )
                    ;
                  this.i && this.i(this.c);
                }
            } else {
              for (i2 = this.b, s3 = !!this.l, r3 = false, o2 = -1, n2 = i2.a.d;n2 !== i2.a; n2 = n2.d)
                if (n2.c)
                  for (r3 || (this.h && this.h(4, this.c), r3 = true), l2 = n2.a;s3 && (a2 = l2.b.d.c ? 0 : 1, o2 !== a2 && (o2 = a2, this.l && this.l(!!o2, this.c))), this.k && this.k(l2.a.d, this.c), (l2 = l2.e) !== n2.a; )
                    ;
              r3 && this.i && this.i(this.c);
            }
          if (this.r) {
            for (i2 = this.b, r3 = i2.a.b;r3 !== i2.a; r3 = s3)
              if (s3 = r3.b, !r3.c) {
                for (n2 = (o2 = r3.a).e, l2 = undefined;n2 = (l2 = n2).e, (l2.d = null) === l2.b.d && (l2.c === l2 ? M(l2.a, null) : (l2.a.c = l2.c, T(l2, l2.b.e)), (a2 = l2.b).c === a2 ? M(a2.a, null) : (a2.a.c = a2.c, T(a2, a2.b.e)), H(l2)), l2 !== o2; )
                  ;
                o2 = r3.d, ((r3 = r3.b).d = o2).b = r3;
              }
            return this.r(this.b), void (this.c = this.b = null);
          }
        }
        this.b = this.c = null;
      }, this.libtess = { GluTesselator: r2, windingRule: { GLU_TESS_WINDING_ODD: 100130, GLU_TESS_WINDING_NONZERO: 100131, GLU_TESS_WINDING_POSITIVE: 100132, GLU_TESS_WINDING_NEGATIVE: 100133, GLU_TESS_WINDING_ABS_GEQ_TWO: 100134 }, primitiveType: { GL_LINE_LOOP: 2, GL_TRIANGLES: 4, GL_TRIANGLE_STRIP: 5, GL_TRIANGLE_FAN: 6 }, errorType: { GLU_TESS_MISSING_BEGIN_POLYGON: 100151, GLU_TESS_MISSING_END_POLYGON: 100153, GLU_TESS_MISSING_BEGIN_CONTOUR: 100152, GLU_TESS_MISSING_END_CONTOUR: 100154, GLU_TESS_COORD_TOO_LARGE: 100155, GLU_TESS_NEED_COMBINE_CALLBACK: 100156 }, gluEnum: { GLU_TESS_MESH: 100112, GLU_TESS_TOLERANCE: 100142, GLU_TESS_WINDING_RULE: 100140, GLU_TESS_BOUNDARY_ONLY: 100141, GLU_INVALID_ENUM: 100900, GLU_INVALID_VALUE: 100901, GLU_TESS_BEGIN: 100100, GLU_TESS_VERTEX: 100101, GLU_TESS_END: 100102, GLU_TESS_ERROR: 100103, GLU_TESS_EDGE_FLAG: 100104, GLU_TESS_COMBINE: 100105, GLU_TESS_BEGIN_DATA: 100106, GLU_TESS_VERTEX_DATA: 100107, GLU_TESS_END_DATA: 100108, GLU_TESS_ERROR_DATA: 100109, GLU_TESS_EDGE_FLAG_DATA: 100110, GLU_TESS_COMBINE_DATA: 100111 } }, r2.prototype.gluDeleteTess = r2.prototype.x, r2.prototype.gluTessProperty = r2.prototype.B, r2.prototype.gluGetTessProperty = r2.prototype.y, r2.prototype.gluTessNormal = r2.prototype.A, r2.prototype.gluTessCallback = r2.prototype.z, r2.prototype.gluTessVertex = r2.prototype.C, r2.prototype.gluTessBeginPolygon = r2.prototype.u, r2.prototype.gluTessBeginContour = r2.prototype.t, r2.prototype.gluTessEndContour = r2.prototype.v, r2.prototype.gluTessEndPolygon = r2.prototype.w, e2 !== undefined && (e2.exports = this.libtess);
    }, {}], 248: [function(e2, t2, r2) {
      function o(g, e3, t3, r3) {
        var v = 0, o2 = (r3 = r3 === undefined ? {} : r3).loop === undefined ? null : r3.loop, b = r3.palette === undefined ? null : r3.palette;
        if (e3 <= 0 || t3 <= 0 || 65535 < e3 || 65535 < t3)
          throw new Error("Width/Height invalid.");
        function j(e4) {
          e4 = e4.length;
          if (e4 < 2 || 256 < e4 || e4 & e4 - 1)
            throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
          return e4;
        }
        g[v++] = 71, g[v++] = 73, g[v++] = 70, g[v++] = 56, g[v++] = 57, g[v++] = 97;
        var n = 0, s2 = 0;
        if (b !== null) {
          for (var i = j(b);i >>= 1; )
            ++n;
          if (i = 1 << n, --n, r3.background !== undefined) {
            if (i <= (s2 = r3.background))
              throw new Error("Background index out of range.");
            if (s2 === 0)
              throw new Error("Background index explicitly passed as 0.");
          }
        }
        if (g[v++] = 255 & e3, g[v++] = e3 >> 8 & 255, g[v++] = 255 & t3, g[v++] = t3 >> 8 & 255, g[v++] = (b !== null ? 128 : 0) | n, g[v++] = s2, g[v++] = 0, b !== null)
          for (var a = 0, l = b.length;a < l; ++a) {
            var u = b[a];
            g[v++] = u >> 16 & 255, g[v++] = u >> 8 & 255, g[v++] = 255 & u;
          }
        if (o2 !== null) {
          if (o2 < 0 || 65535 < o2)
            throw new Error("Loop count invalid.");
          g[v++] = 33, g[v++] = 255, g[v++] = 11, g[v++] = 78, g[v++] = 69, g[v++] = 84, g[v++] = 83, g[v++] = 67, g[v++] = 65, g[v++] = 80, g[v++] = 69, g[v++] = 50, g[v++] = 46, g[v++] = 48, g[v++] = 3, g[v++] = 1, g[v++] = 255 & o2, g[v++] = o2 >> 8 & 255, g[v++] = 0;
        }
        var _ = false;
        this.addFrame = function(e4, t4, r4, o3, n2, s3) {
          if (_ === true && (--v, _ = false), s3 = s3 === undefined ? {} : s3, e4 < 0 || t4 < 0 || 65535 < e4 || 65535 < t4)
            throw new Error("x/y invalid.");
          if (r4 <= 0 || o3 <= 0 || 65535 < r4 || 65535 < o3)
            throw new Error("Width/Height invalid.");
          if (n2.length < r4 * o3)
            throw new Error("Not enough pixels for the frame size.");
          var i2 = true, a2 = s3.palette;
          if (a2 == null && (i2 = false, a2 = b), a2 == null)
            throw new Error("Must supply either a local or global palette.");
          for (var l2 = j(a2), u2 = 0;l2 >>= 1; )
            ++u2;
          var l2 = 1 << u2, c = s3.delay === undefined ? 0 : s3.delay, d = s3.disposal === undefined ? 0 : s3.disposal;
          if (d < 0 || 3 < d)
            throw new Error("Disposal out of range.");
          var h = false, f = 0;
          if (s3.transparent !== undefined && s3.transparent !== null && (h = true, (f = s3.transparent) < 0 || l2 <= f))
            throw new Error("Transparent color index.");
          if (d === 0 && !h && c === 0 || (g[v++] = 33, g[v++] = 249, g[v++] = 4, g[v++] = d << 2 | (h === true ? 1 : 0), g[v++] = 255 & c, g[v++] = c >> 8 & 255, g[v++] = f, g[v++] = 0), g[v++] = 44, g[v++] = 255 & e4, g[v++] = e4 >> 8 & 255, g[v++] = 255 & t4, g[v++] = t4 >> 8 & 255, g[v++] = 255 & r4, g[v++] = r4 >> 8 & 255, g[v++] = 255 & o3, g[v++] = o3 >> 8 & 255, g[v++] = i2 === true ? 128 | u2 - 1 : 0, i2 === true)
            for (var p = 0, m = a2.length;p < m; ++p) {
              var y = a2[p];
              g[v++] = y >> 16 & 255, g[v++] = y >> 8 & 255, g[v++] = 255 & y;
            }
          return v = function(t5, r5, e5, o4) {
            t5[r5++] = e5;
            var n3 = r5++, s4 = 1 << e5, i3 = s4 - 1, a3 = 1 + s4, l3 = 1 + a3, u3 = e5 + 1, c2 = 0, d2 = 0;
            function h2(e6) {
              for (;e6 <= c2; )
                t5[r5++] = 255 & d2, d2 >>= 8, c2 -= 8, r5 === n3 + 256 && (t5[n3] = 255, n3 = r5++);
            }
            function f2(e6) {
              d2 |= e6 << c2, c2 += u3, h2(8);
            }
            var p2 = o4[0] & i3, m2 = {};
            f2(s4);
            for (var y2 = 1, g2 = o4.length;y2 < g2; ++y2) {
              var v2 = o4[y2] & i3, b2 = p2 << 8 | v2, j2 = m2[b2];
              if (j2 === undefined) {
                for (d2 |= p2 << c2, c2 += u3;8 <= c2; )
                  t5[r5++] = 255 & d2, d2 >>= 8, c2 -= 8, r5 === n3 + 256 && (t5[n3] = 255, n3 = r5++);
                l3 === 4096 ? (f2(s4), l3 = 1 + a3, u3 = e5 + 1, m2 = {}) : (1 << u3 <= l3 && ++u3, m2[b2] = l3++), p2 = v2;
              } else
                p2 = j2;
            }
            f2(p2), f2(a3), h2(1), n3 + 1 === r5 ? t5[n3] = 0 : (t5[n3] = r5 - n3 - 1, t5[r5++] = 0);
            return r5;
          }(g, v, u2 < 2 ? 2 : u2, n2);
        }, this.end = function() {
          return _ === false && (g[v++] = 59, _ = true), v;
        }, this.getOutputBuffer = function() {
          return g;
        }, this.setOutputBuffer = function(e4) {
          g = e4;
        }, this.getOutputBufferPosition = function() {
          return v;
        }, this.setOutputBufferPosition = function(e4) {
          v = e4;
        };
      }
      function M(e3, t3, r3, o2) {
        for (var n = e3[t3++], s2 = 1 << n, i = 1 + s2, a = 1 + i, l = n + 1, u = (1 << l) - 1, c = 0, d = 0, h = 0, f = e3[t3++], p = new Int32Array(4096), m = null;; ) {
          for (;c < 16 && f !== 0; )
            d |= e3[t3++] << c, c += 8, f === 1 ? f = e3[t3++] : --f;
          if (c < l)
            break;
          var y = d & u;
          if (d >>= l, c -= l, y == s2)
            a = 1 + i, u = (1 << (l = n + 1)) - 1, m = null;
          else {
            if (y == i)
              break;
            for (var g = y < a ? y : m, v = 0, b = g;s2 < b; )
              b = p[b] >> 8, ++v;
            var j = b;
            if (o2 < h + v + (g !== y ? 1 : 0))
              return void console.log("Warning, gif stream longer than expected.");
            r3[h++] = j;
            var _ = h += v;
            for (g !== y && (r3[h++] = j), b = g;v--; )
              b = p[b], r3[--_] = 255 & b, b >>= 8;
            m !== null && a < 4096 && (p[a++] = m << 8 | j, u + 1 <= a && l < 12 && (++l, u = u << 1 | 1)), m = y;
          }
        }
        h !== o2 && console.log("Warning, gif stream shorter than expected.");
      }
      try {
        r2.GifWriter = o, r2.GifReader = function(b) {
          var e3 = 0;
          if (b[e3++] !== 71 || b[e3++] !== 73 || b[e3++] !== 70 || b[e3++] !== 56 || (b[e3++] + 1 & 253) != 56 || b[e3++] !== 97)
            throw new Error("Invalid GIF 87a/89a header.");
          var j = b[e3++] | b[e3++] << 8, t3 = b[e3++] | b[e3++] << 8, r3 = b[e3++], o2 = 1 << 1 + (7 & r3), n = (b[e3++], b[e3++], null), s2 = null, i = (r3 >> 7 && (n = e3, e3 += 3 * (s2 = o2)), true), a = [], l = 0, u = null, c = 0, d = null;
          for (this.width = j, this.height = t3;i && e3 < b.length; )
            switch (b[e3++]) {
              case 33:
                switch (b[e3++]) {
                  case 255:
                    if (b[e3] !== 11 || b[e3 + 1] == 78 && b[e3 + 2] == 69 && b[e3 + 3] == 84 && b[e3 + 4] == 83 && b[e3 + 5] == 67 && b[e3 + 6] == 65 && b[e3 + 7] == 80 && b[e3 + 8] == 69 && b[e3 + 9] == 50 && b[e3 + 10] == 46 && b[e3 + 11] == 48 && b[e3 + 12] == 3 && b[e3 + 13] == 1 && b[e3 + 16] == 0)
                      e3 += 14, d = b[e3++] | b[e3++] << 8, e3++;
                    else
                      for (e3 += 12;; ) {
                        if (!(0 <= (f = b[e3++])))
                          throw Error("Invalid block size");
                        if (f === 0)
                          break;
                        e3 += f;
                      }
                    break;
                  case 249:
                    if (b[e3++] !== 4 || b[e3 + 4] !== 0)
                      throw new Error("Invalid graphics extension block.");
                    var h = b[e3++], l = b[e3++] | b[e3++] << 8, u = b[e3++];
                    (1 & h) == 0 && (u = null), c = h >> 2 & 7, e3++;
                    break;
                  case 254:
                    for (;; ) {
                      if (!(0 <= (f = b[e3++])))
                        throw Error("Invalid block size");
                      if (f === 0)
                        break;
                      e3 += f;
                    }
                    break;
                  default:
                    throw new Error("Unknown graphic control label: 0x" + b[e3 - 1].toString(16));
                }
                break;
              case 44:
                var f, p = b[e3++] | b[e3++] << 8, m = b[e3++] | b[e3++] << 8, y = b[e3++] | b[e3++] << 8, g = b[e3++] | b[e3++] << 8, v = b[e3++], _ = v >> 6 & 1, x = 1 << 1 + (7 & v), w = n, S = s2, T = false, v = (v >> 7 && (T = true, w = e3, e3 += 3 * (S = x)), e3);
                for (e3++;; ) {
                  if (!(0 <= (f = b[e3++])))
                    throw Error("Invalid block size");
                  if (f === 0)
                    break;
                  e3 += f;
                }
                a.push({ x: p, y: m, width: y, height: g, has_local_palette: T, palette_offset: w, palette_size: S, data_offset: v, data_length: e3 - v, transparent_index: u, interlaced: !!_, delay: l, disposal: c });
                break;
              case 59:
                i = false;
                break;
              default:
                throw new Error("Unknown gif block: 0x" + b[e3 - 1].toString(16));
            }
          this.numFrames = function() {
            return a.length;
          }, this.loopCount = function() {
            return d;
          }, this.frameInfo = function(e4) {
            if (e4 < 0 || e4 >= a.length)
              throw new Error("Frame index out of range.");
            return a[e4];
          }, this.decodeAndBlitFrameBGRA = function(e4, t4) {
            for (var e4 = this.frameInfo(e4), r4 = e4.width * e4.height, o3 = new Uint8Array(r4), n2 = (M(b, e4.data_offset, o3, r4), e4.palette_offset), s3 = e4.transparent_index, i2 = (s3 === null && (s3 = 256), e4.width), a2 = j - i2, l2 = i2, u2 = 4 * (e4.y * j + e4.x), c2 = 4 * ((e4.y + e4.height) * j + e4.x), d2 = u2, h2 = 4 * a2, f2 = (e4.interlaced === true && (h2 += 4 * j * 7), 8), p2 = 0, m2 = o3.length;p2 < m2; ++p2) {
              var y2, g2, v2 = o3[p2];
              l2 === 0 && (l2 = i2, c2 <= (d2 += h2) && (h2 = 4 * a2 + 4 * j * (f2 - 1), d2 = u2 + (i2 + a2) * (f2 << 1), f2 >>= 1)), v2 === s3 ? d2 += 4 : (y2 = b[n2 + 3 * v2], g2 = b[n2 + 3 * v2 + 1], v2 = b[n2 + 3 * v2 + 2], t4[d2++] = v2, t4[d2++] = g2, t4[d2++] = y2, t4[d2++] = 255), --l2;
            }
          }, this.decodeAndBlitFrameRGBA = function(e4, t4) {
            for (var e4 = this.frameInfo(e4), r4 = e4.width * e4.height, o3 = new Uint8Array(r4), n2 = (M(b, e4.data_offset, o3, r4), e4.palette_offset), s3 = e4.transparent_index, i2 = (s3 === null && (s3 = 256), e4.width), a2 = j - i2, l2 = i2, u2 = 4 * (e4.y * j + e4.x), c2 = 4 * ((e4.y + e4.height) * j + e4.x), d2 = u2, h2 = 4 * a2, f2 = (e4.interlaced === true && (h2 += 4 * j * 7), 8), p2 = 0, m2 = o3.length;p2 < m2; ++p2) {
              var y2, g2, v2 = o3[p2];
              l2 === 0 && (l2 = i2, c2 <= (d2 += h2) && (h2 = 4 * a2 + 4 * j * (f2 - 1), d2 = u2 + (i2 + a2) * (f2 << 1), f2 >>= 1)), v2 === s3 ? d2 += 4 : (y2 = b[n2 + 3 * v2], g2 = b[n2 + 3 * v2 + 1], v2 = b[n2 + 3 * v2 + 2], t4[d2++] = y2, t4[d2++] = g2, t4[d2++] = v2, t4[d2++] = 255), --l2;
            }
          };
        };
      } catch (e3) {
      }
    }, {}], 249: [function(Ar, r2, o) {
      (function(Pr) {
        var e2, t2;
        e2 = this, t2 = function(j) {
          function D(e4) {
            if (this == null)
              throw TypeError();
            var t4, r4 = String(this), o3 = r4.length, e4 = e4 ? Number(e4) : 0;
            if (!((e4 = e4 != e4 ? 0 : e4) < 0 || o3 <= e4))
              return 55296 <= (t4 = r4.charCodeAt(e4)) && t4 <= 56319 && e4 + 1 < o3 && 56320 <= (o3 = r4.charCodeAt(e4 + 1)) && o3 <= 57343 ? 1024 * (t4 - 55296) + o3 - 56320 + 65536 : t4;
          }
          String.prototype.codePointAt || ((F = function() {
            try {
              var e4 = {}, t4 = Object.defineProperty, r4 = t4(e4, e4, e4) && t4;
            } catch (e5) {
            }
            return r4;
          }()) ? F(String.prototype, "codePointAt", { value: D, configurable: true, writable: true }) : String.prototype.codePointAt = D);
          var F, U = 0, N = -3;
          function B() {
            this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
          }
          function G(e4, t4) {
            this.source = e4, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t4, this.destLen = 0, this.ltree = new B, this.dtree = new B;
          }
          var V = new B, z = new B, H = new Uint8Array(30), W = new Uint16Array(30), q = new Uint8Array(30), X = new Uint16Array(30), Y = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), Z = new B, v = new Uint8Array(320);
          function Q(e4, t4, r4, o3) {
            for (var n2, s3 = 0;s3 < r4; ++s3)
              e4[s3] = 0;
            for (s3 = 0;s3 < 30 - r4; ++s3)
              e4[s3 + r4] = s3 / r4 | 0;
            for (n2 = o3, s3 = 0;s3 < 30; ++s3)
              t4[s3] = n2, n2 += 1 << e4[s3];
          }
          var J = new Uint16Array(16);
          function K(e4, t4, r4, o3) {
            for (var n2, s3 = 0;s3 < 16; ++s3)
              e4.table[s3] = 0;
            for (s3 = 0;s3 < o3; ++s3)
              e4.table[t4[r4 + s3]]++;
            for (s3 = n2 = e4.table[0] = 0;s3 < 16; ++s3)
              J[s3] = n2, n2 += e4.table[s3];
            for (s3 = 0;s3 < o3; ++s3)
              t4[r4 + s3] && (e4.trans[J[t4[r4 + s3]]++] = s3);
          }
          function b(e4, t4, r4) {
            if (!t4)
              return r4;
            for (;e4.bitcount < 24; )
              e4.tag |= e4.source[e4.sourceIndex++] << e4.bitcount, e4.bitcount += 8;
            var o3 = e4.tag & 65535 >>> 16 - t4;
            return e4.tag >>>= t4, e4.bitcount -= t4, o3 + r4;
          }
          function $(e4, t4) {
            for (;e4.bitcount < 24; )
              e4.tag |= e4.source[e4.sourceIndex++] << e4.bitcount, e4.bitcount += 8;
            for (var r4 = 0, o3 = 0, n2 = 0, s3 = e4.tag;o3 = 2 * o3 + (1 & s3), s3 >>>= 1, r4 += t4.table[++n2], 0 <= (o3 -= t4.table[n2]); )
              ;
            return e4.tag = s3, e4.bitcount -= n2, t4.trans[r4 + o3];
          }
          function ee(e4, t4, r4) {
            for (;; ) {
              var o3 = $(e4, t4);
              if (o3 === 256)
                return U;
              if (o3 < 256)
                e4.dest[e4.destLen++] = o3;
              else
                for (var n2, s3 = b(e4, H[o3 -= 257], W[o3]), o3 = $(e4, r4), i2 = n2 = e4.destLen - b(e4, q[o3], X[o3]);i2 < n2 + s3; ++i2)
                  e4.dest[e4.destLen++] = e4.dest[i2];
            }
          }
          for (var e3 = V, te = z, t3 = 0;t3 < 7; ++t3)
            e3.table[t3] = 0;
          for (e3.table[7] = 24, e3.table[8] = 152, e3.table[9] = 112, t3 = 0;t3 < 24; ++t3)
            e3.trans[t3] = 256 + t3;
          for (t3 = 0;t3 < 144; ++t3)
            e3.trans[24 + t3] = t3;
          for (t3 = 0;t3 < 8; ++t3)
            e3.trans[168 + t3] = 280 + t3;
          for (t3 = 0;t3 < 112; ++t3)
            e3.trans[176 + t3] = 144 + t3;
          for (t3 = 0;t3 < 5; ++t3)
            te.table[t3] = 0;
          for (te.table[5] = 32, t3 = 0;t3 < 32; ++t3)
            te.trans[t3] = t3;
          Q(H, W, 4, 3), Q(q, X, 2, 1), H[28] = 0, W[28] = 258;
          var re = function(e4, t4) {
            var r4, o3, n2, s3 = new G(e4, t4);
            do {
              switch (n2 = undefined, (o3 = s3).bitcount-- || (o3.tag = o3.source[o3.sourceIndex++], o3.bitcount = 7), n2 = 1 & o3.tag, o3.tag >>>= 1, o3 = n2, b(s3, 2, 0)) {
                case 0:
                  r4 = function(e5) {
                    for (var t5, r5;8 < e5.bitcount; )
                      e5.sourceIndex--, e5.bitcount -= 8;
                    if ((t5 = 256 * e5.source[e5.sourceIndex + 1] + e5.source[e5.sourceIndex]) !== (65535 & ~(256 * e5.source[e5.sourceIndex + 3] + e5.source[e5.sourceIndex + 2])))
                      return N;
                    for (e5.sourceIndex += 4, r5 = t5;r5; --r5)
                      e5.dest[e5.destLen++] = e5.source[e5.sourceIndex++];
                    return e5.bitcount = 0, U;
                  }(s3);
                  break;
                case 1:
                  r4 = ee(s3, V, z);
                  break;
                case 2:
                  y2 = m2 = p2 = g2 = i2 = f2 = h2 = d2 = c2 = u2 = l2 = a2 = undefined;
                  for (var i2, a2 = s3, l2 = s3.ltree, u2 = s3.dtree, c2 = b(a2, 5, 257), d2 = b(a2, 5, 1), h2 = b(a2, 4, 4), f2 = 0;f2 < 19; ++f2)
                    v[f2] = 0;
                  for (f2 = 0;f2 < h2; ++f2) {
                    var p2 = b(a2, 3, 0);
                    v[Y[f2]] = p2;
                  }
                  for (K(Z, v, 0, 19), i2 = 0;i2 < c2 + d2; ) {
                    var m2 = $(a2, Z);
                    switch (m2) {
                      case 16:
                        for (var y2 = v[i2 - 1], g2 = b(a2, 2, 3);g2; --g2)
                          v[i2++] = y2;
                        break;
                      case 17:
                        for (g2 = b(a2, 3, 3);g2; --g2)
                          v[i2++] = 0;
                        break;
                      case 18:
                        for (g2 = b(a2, 7, 11);g2; --g2)
                          v[i2++] = 0;
                        break;
                      default:
                        v[i2++] = m2;
                    }
                  }
                  K(l2, v, 0, c2), K(u2, v, c2, d2), r4 = ee(s3, s3.ltree, s3.dtree);
                  break;
                default:
                  r4 = N;
              }
              if (r4 !== U)
                throw new Error("Data error");
            } while (!o3);
            return s3.destLen < s3.dest.length ? typeof s3.dest.slice == "function" ? s3.dest.slice(0, s3.destLen) : s3.dest.subarray(0, s3.destLen) : s3.dest;
          };
          function g(e4, t4, r4, o3, n2) {
            return Math.pow(1 - n2, 3) * e4 + 3 * Math.pow(1 - n2, 2) * n2 * t4 + 3 * (1 - n2) * Math.pow(n2, 2) * r4 + Math.pow(n2, 3) * o3;
          }
          function a() {
            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
          }
          function h() {
            this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
          }
          function oe(e4) {
            throw new Error(e4);
          }
          function ne(e4, t4) {
            e4 || oe(t4);
          }
          a.prototype.isEmpty = function() {
            return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
          }, a.prototype.addPoint = function(e4, t4) {
            typeof e4 == "number" && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e4, this.x2 = e4), e4 < this.x1 && (this.x1 = e4), e4 > this.x2 && (this.x2 = e4)), typeof t4 == "number" && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t4, this.y2 = t4), t4 < this.y1 && (this.y1 = t4), t4 > this.y2 && (this.y2 = t4));
          }, a.prototype.addX = function(e4) {
            this.addPoint(e4, null);
          }, a.prototype.addY = function(e4) {
            this.addPoint(null, e4);
          }, a.prototype.addBezier = function(e4, t4, r4, o3, n2, s3, i2, a2) {
            var l2 = [e4, t4], u2 = [r4, o3], c2 = [n2, s3], d2 = [i2, a2];
            this.addPoint(e4, t4), this.addPoint(i2, a2);
            for (var h2 = 0;h2 <= 1; h2++) {
              var f2, p2 = 6 * l2[h2] - 12 * u2[h2] + 6 * c2[h2], m2 = -3 * l2[h2] + 9 * u2[h2] - 9 * c2[h2] + 3 * d2[h2], y2 = 3 * u2[h2] - 3 * l2[h2];
              m2 == 0 ? p2 == 0 || 0 < (f2 = -y2 / p2) && f2 < 1 && (h2 === 0 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], f2)), h2 === 1 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], f2))) : (f2 = Math.pow(p2, 2) - 4 * y2 * m2) < 0 || (0 < (y2 = (-p2 + Math.sqrt(f2)) / (2 * m2)) && y2 < 1 && (h2 === 0 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], y2)), h2 === 1 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], y2))), 0 < (y2 = (-p2 - Math.sqrt(f2)) / (2 * m2)) && y2 < 1 && (h2 === 0 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], y2)), h2 === 1 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], y2))));
            }
          }, a.prototype.addQuad = function(e4, t4, r4, o3, n2, s3) {
            r4 = e4 + 2 / 3 * (r4 - e4), o3 = t4 + 2 / 3 * (o3 - t4);
            this.addBezier(e4, t4, r4, o3, r4 + 1 / 3 * (n2 - e4), o3 + 1 / 3 * (s3 - t4), n2, s3);
          }, h.prototype.moveTo = function(e4, t4) {
            this.commands.push({ type: "M", x: e4, y: t4 });
          }, h.prototype.lineTo = function(e4, t4) {
            this.commands.push({ type: "L", x: e4, y: t4 });
          }, h.prototype.curveTo = h.prototype.bezierCurveTo = function(e4, t4, r4, o3, n2, s3) {
            this.commands.push({ type: "C", x1: e4, y1: t4, x2: r4, y2: o3, x: n2, y: s3 });
          }, h.prototype.quadTo = h.prototype.quadraticCurveTo = function(e4, t4, r4, o3) {
            this.commands.push({ type: "Q", x1: e4, y1: t4, x: r4, y: o3 });
          }, h.prototype.close = h.prototype.closePath = function() {
            this.commands.push({ type: "Z" });
          }, h.prototype.extend = function(e4) {
            var t4;
            if (e4.commands)
              e4 = e4.commands;
            else if (e4 instanceof a)
              return t4 = e4, this.moveTo(t4.x1, t4.y1), this.lineTo(t4.x2, t4.y1), this.lineTo(t4.x2, t4.y2), this.lineTo(t4.x1, t4.y2), void this.close();
            Array.prototype.push.apply(this.commands, e4);
          }, h.prototype.getBoundingBox = function() {
            for (var e4 = new a, t4 = 0, r4 = 0, o3 = 0, n2 = 0, s3 = 0;s3 < this.commands.length; s3++) {
              var i2 = this.commands[s3];
              switch (i2.type) {
                case "M":
                  e4.addPoint(i2.x, i2.y), t4 = o3 = i2.x, r4 = n2 = i2.y;
                  break;
                case "L":
                  e4.addPoint(i2.x, i2.y), o3 = i2.x, n2 = i2.y;
                  break;
                case "Q":
                  e4.addQuad(o3, n2, i2.x1, i2.y1, i2.x, i2.y), o3 = i2.x, n2 = i2.y;
                  break;
                case "C":
                  e4.addBezier(o3, n2, i2.x1, i2.y1, i2.x2, i2.y2, i2.x, i2.y), o3 = i2.x, n2 = i2.y;
                  break;
                case "Z":
                  o3 = t4, n2 = r4;
                  break;
                default:
                  throw new Error("Unexpected path command " + i2.type);
              }
            }
            return e4.isEmpty() && e4.addPoint(0, 0), e4;
          }, h.prototype.draw = function(e4) {
            e4.beginPath();
            for (var t4 = 0;t4 < this.commands.length; t4 += 1) {
              var r4 = this.commands[t4];
              r4.type === "M" ? e4.moveTo(r4.x, r4.y) : r4.type === "L" ? e4.lineTo(r4.x, r4.y) : r4.type === "C" ? e4.bezierCurveTo(r4.x1, r4.y1, r4.x2, r4.y2, r4.x, r4.y) : r4.type === "Q" ? e4.quadraticCurveTo(r4.x1, r4.y1, r4.x, r4.y) : r4.type === "Z" && e4.closePath();
            }
            this.fill && (e4.fillStyle = this.fill, e4.fill()), this.stroke && (e4.strokeStyle = this.stroke, e4.lineWidth = this.strokeWidth, e4.stroke());
          }, h.prototype.toPathData = function(n2) {
            function e4() {
              for (var e5 = arguments, t5 = "", r5 = 0;r5 < arguments.length; r5 += 1) {
                var o4 = e5[r5];
                0 <= o4 && 0 < r5 && (t5 += " "), t5 += (o4 = o4, Math.round(o4) === o4 ? "" + Math.round(o4) : o4.toFixed(n2));
              }
              return t5;
            }
            n2 = n2 !== undefined ? n2 : 2;
            for (var t4 = "", r4 = 0;r4 < this.commands.length; r4 += 1) {
              var o3 = this.commands[r4];
              o3.type === "M" ? t4 += "M" + e4(o3.x, o3.y) : o3.type === "L" ? t4 += "L" + e4(o3.x, o3.y) : o3.type === "C" ? t4 += "C" + e4(o3.x1, o3.y1, o3.x2, o3.y2, o3.x, o3.y) : o3.type === "Q" ? t4 += "Q" + e4(o3.x1, o3.y1, o3.x, o3.y) : o3.type === "Z" && (t4 += "Z");
            }
            return t4;
          }, h.prototype.toSVG = function(e4) {
            var t4 = (t4 = '<path d="') + this.toPathData(e4) + '"';
            return this.fill && this.fill !== "black" && (this.fill === null ? t4 += ' fill="none"' : t4 += ' fill="' + this.fill + '"'), this.stroke && (t4 += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t4 += "/>";
          }, h.prototype.toDOMElement = function(e4) {
            var e4 = this.toPathData(e4), t4 = document.createElementNS("http://www.w3.org/2000/svg", "path");
            return t4.setAttribute("d", e4), t4;
          };
          var L = { fail: oe, argument: ne, assert: ne }, m = {}, w = {}, l = {};
          function r3(e4) {
            return function() {
              return e4;
            };
          }
          w.BYTE = function(e4) {
            return L.argument(0 <= e4 && e4 <= 255, "Byte value should be between 0 and 255."), [e4];
          }, l.BYTE = r3(1), w.CHAR = function(e4) {
            return [e4.charCodeAt(0)];
          }, l.CHAR = r3(1), w.CHARARRAY = function(e4) {
            for (var t4 = [], r4 = 0;r4 < e4.length; r4 += 1)
              t4[r4] = e4.charCodeAt(r4);
            return t4;
          }, l.CHARARRAY = function(e4) {
            return e4.length;
          }, w.USHORT = function(e4) {
            return [e4 >> 8 & 255, 255 & e4];
          }, l.USHORT = r3(2), w.SHORT = function(e4) {
            return [(e4 = 32768 <= e4 ? -(65536 - e4) : e4) >> 8 & 255, 255 & e4];
          }, l.SHORT = r3(2), w.UINT24 = function(e4) {
            return [e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.UINT24 = r3(3), w.ULONG = function(e4) {
            return [e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.ULONG = r3(4), w.LONG = function(e4) {
            return [(e4 = 2147483648 <= e4 ? -(4294967296 - e4) : e4) >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.LONG = r3(4), w.FIXED = w.ULONG, l.FIXED = l.ULONG, w.FWORD = w.SHORT, l.FWORD = l.SHORT, w.UFWORD = w.USHORT, l.UFWORD = l.USHORT, w.LONGDATETIME = function(e4) {
            return [0, 0, 0, 0, e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.LONGDATETIME = r3(8), w.TAG = function(e4) {
            return L.argument(e4.length === 4, "Tag should be exactly 4 ASCII characters."), [e4.charCodeAt(0), e4.charCodeAt(1), e4.charCodeAt(2), e4.charCodeAt(3)];
          }, l.TAG = r3(4), w.Card8 = w.BYTE, l.Card8 = l.BYTE, w.Card16 = w.USHORT, l.Card16 = l.USHORT, w.OffSize = w.BYTE, l.OffSize = l.BYTE, w.SID = w.USHORT, l.SID = l.USHORT, w.NUMBER = function(e4) {
            return -107 <= e4 && e4 <= 107 ? [e4 + 139] : 108 <= e4 && e4 <= 1131 ? [247 + ((e4 -= 108) >> 8), 255 & e4] : -1131 <= e4 && e4 <= -108 ? [251 + ((e4 = -e4 - 108) >> 8), 255 & e4] : -32768 <= e4 && e4 <= 32767 ? w.NUMBER16(e4) : w.NUMBER32(e4);
          }, l.NUMBER = function(e4) {
            return w.NUMBER(e4).length;
          }, w.NUMBER16 = function(e4) {
            return [28, e4 >> 8 & 255, 255 & e4];
          }, l.NUMBER16 = r3(3), w.NUMBER32 = function(e4) {
            return [29, e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.NUMBER32 = r3(5), w.REAL = function(e4) {
            for (var t4 = e4.toString(), r4 = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t4), o3 = (r4 && (r4 = parseFloat("1e" + ((r4[2] ? +r4[2] : 0) + r4[1].length)), t4 = (Math.round(e4 * r4) / r4).toString()), ""), n2 = 0, s3 = t4.length;n2 < s3; n2 += 1) {
              var i2 = t4[n2];
              o3 += i2 === "e" ? t4[++n2] === "-" ? "c" : "b" : i2 === "." ? "a" : i2 === "-" ? "e" : i2;
            }
            for (var a2 = [30], l2 = 0, u2 = (o3 += 1 & o3.length ? "f" : "ff").length;l2 < u2; l2 += 2)
              a2.push(parseInt(o3.substr(l2, 2), 16));
            return a2;
          }, l.REAL = function(e4) {
            return w.REAL(e4).length;
          }, w.NAME = w.CHARARRAY, l.NAME = l.CHARARRAY, w.STRING = w.CHARARRAY, l.STRING = l.CHARARRAY, m.UTF8 = function(e4, t4, r4) {
            for (var o3 = [], n2 = r4, s3 = 0;s3 < n2; s3++, t4 += 1)
              o3[s3] = e4.getUint8(t4);
            return String.fromCharCode.apply(null, o3);
          }, m.UTF16 = function(e4, t4, r4) {
            for (var o3 = [], n2 = r4 / 2, s3 = 0;s3 < n2; s3++, t4 += 2)
              o3[s3] = e4.getUint16(t4);
            return String.fromCharCode.apply(null, o3);
          }, w.UTF16 = function(e4) {
            for (var t4 = [], r4 = 0;r4 < e4.length; r4 += 1) {
              var o3 = e4.charCodeAt(r4);
              t4[t4.length] = o3 >> 8 & 255, t4[t4.length] = 255 & o3;
            }
            return t4;
          }, l.UTF16 = function(e4) {
            return 2 * e4.length;
          };
          var se, ie = { "x-mac-croatian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7", "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E", "x-mac-gaelic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83", "x-mac-greek": "\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD", "x-mac-icelandic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142", "x-mac-ce": "\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7", macintosh: "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-romanian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-turkish": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7" }, ae = (m.MACSTRING = function(e4, t4, r4, o3) {
            var n2 = ie[o3];
            if (n2 !== undefined) {
              for (var s3 = "", i2 = 0;i2 < r4; i2++) {
                var a2 = e4.getUint8(t4 + i2);
                s3 += a2 <= 127 ? String.fromCharCode(a2) : n2[127 & a2];
              }
              return s3;
            }
          }, typeof WeakMap == "function" && new WeakMap);
          function le(e4) {
            return -128 <= e4 && e4 <= 127;
          }
          w.MACSTRING = function(e4, t4) {
            var r4 = function(e5) {
              if (!se)
                for (var t5 in se = {}, ie)
                  se[t5] = new String(t5);
              var r5 = se[e5];
              if (r5 !== undefined) {
                if (ae) {
                  var o4 = ae.get(r5);
                  if (o4 !== undefined)
                    return o4;
                }
                var n3 = ie[e5];
                if (n3 !== undefined) {
                  for (var s4 = {}, i2 = 0;i2 < n3.length; i2++)
                    s4[n3.charCodeAt(i2)] = i2 + 128;
                  return ae && ae.set(r5, s4), s4;
                }
              }
            }(t4);
            if (r4 !== undefined) {
              for (var o3 = [], n2 = 0;n2 < e4.length; n2++) {
                var s3 = e4.charCodeAt(n2);
                if (128 <= s3 && (s3 = r4[s3]) === undefined)
                  return;
                o3[n2] = s3;
              }
              return o3;
            }
          }, l.MACSTRING = function(e4, t4) {
            e4 = w.MACSTRING(e4, t4);
            return e4 !== undefined ? e4.length : 0;
          }, w.VARDELTAS = function(e4) {
            for (var t4 = 0, r4 = [];t4 < e4.length; )
              var o3 = e4[t4], t4 = (o3 === 0 ? function(e5, t5, r5) {
                for (var o4 = 0, n2 = e5.length;t5 < n2 && o4 < 64 && e5[t5] === 0; )
                  ++t5, ++o4;
                return r5.push(128 | o4 - 1), t5;
              } : -128 <= o3 && o3 <= 127 ? function(e5, t5, r5) {
                for (var o4 = 0, n2 = e5.length, s3 = t5;s3 < n2 && o4 < 64; ) {
                  var i2 = e5[s3];
                  if (!le(i2))
                    break;
                  if (i2 === 0 && s3 + 1 < n2 && e5[s3 + 1] === 0)
                    break;
                  ++s3, ++o4;
                }
                r5.push(o4 - 1);
                for (var a2 = t5;a2 < s3; ++a2)
                  r5.push(e5[a2] + 256 & 255);
                return s3;
              } : function(e5, t5, r5) {
                for (var o4 = 0, n2 = e5.length, s3 = t5;s3 < n2 && o4 < 64; ) {
                  var i2 = e5[s3];
                  if (i2 === 0)
                    break;
                  if (le(i2) && s3 + 1 < n2 && le(e5[s3 + 1]))
                    break;
                  ++s3, ++o4;
                }
                r5.push(64 | o4 - 1);
                for (var a2 = t5;a2 < s3; ++a2) {
                  var l2 = e5[a2];
                  r5.push(l2 + 65536 >> 8 & 255, l2 + 256 & 255);
                }
                return s3;
              })(e4, t4, r4);
            return r4;
          }, w.INDEX = function(e4) {
            for (var t4 = 1, r4 = [t4], o3 = [], n2 = 0;n2 < e4.length; n2 += 1) {
              var s3 = w.OBJECT(e4[n2]);
              Array.prototype.push.apply(o3, s3), t4 += s3.length, r4.push(t4);
            }
            if (o3.length === 0)
              return [0, 0];
            for (var i2 = [], a2 = 1 + Math.floor(Math.log(t4) / Math.log(2)) / 8 | 0, l2 = [undefined, w.BYTE, w.USHORT, w.UINT24, w.ULONG][a2], u2 = 0;u2 < r4.length; u2 += 1) {
              var c2 = l2(r4[u2]);
              Array.prototype.push.apply(i2, c2);
            }
            return Array.prototype.concat(w.Card16(e4.length), w.OffSize(a2), i2, o3);
          }, l.INDEX = function(e4) {
            return w.INDEX(e4).length;
          }, w.DICT = function(e4) {
            for (var t4 = [], r4 = Object.keys(e4), o3 = r4.length, n2 = 0;n2 < o3; n2 += 1) {
              var s3 = parseInt(r4[n2], 0), i2 = e4[s3];
              t4 = (t4 = t4.concat(w.OPERAND(i2.value, i2.type))).concat(w.OPERATOR(s3));
            }
            return t4;
          }, l.DICT = function(e4) {
            return w.DICT(e4).length;
          }, w.OPERATOR = function(e4) {
            return e4 < 1200 ? [e4] : [12, e4 - 1200];
          }, w.OPERAND = function(e4, t4) {
            var r4 = [];
            if (Array.isArray(t4))
              for (var o3 = 0;o3 < t4.length; o3 += 1)
                L.argument(e4.length === t4.length, "Not enough arguments given for type" + t4), r4 = r4.concat(w.OPERAND(e4[o3], t4[o3]));
            else if (t4 === "SID")
              r4 = r4.concat(w.NUMBER(e4));
            else if (t4 === "offset")
              r4 = r4.concat(w.NUMBER32(e4));
            else if (t4 === "number")
              r4 = r4.concat(w.NUMBER(e4));
            else {
              if (t4 !== "real")
                throw new Error("Unknown operand type " + t4);
              r4 = r4.concat(w.REAL(e4));
            }
            return r4;
          }, w.OP = w.BYTE, l.OP = l.BYTE;
          var ue = typeof WeakMap == "function" && new WeakMap;
          function n(e4, t4, r4) {
            for (var o3 = 0;o3 < t4.length; o3 += 1) {
              var n2 = t4[o3];
              this[n2.name] = n2.value;
            }
            if (this.tableName = e4, this.fields = t4, r4)
              for (var s3 = Object.keys(r4), i2 = 0;i2 < s3.length; i2 += 1) {
                var a2 = s3[i2], l2 = r4[a2];
                this[a2] !== undefined && (this[a2] = l2);
              }
          }
          function ce(e4, t4, r4) {
            r4 === undefined && (r4 = t4.length);
            var o3 = new Array(t4.length + 1);
            o3[0] = { name: e4 + "Count", type: "USHORT", value: r4 };
            for (var n2 = 0;n2 < t4.length; n2++)
              o3[n2 + 1] = { name: e4 + n2, type: "USHORT", value: t4[n2] };
            return o3;
          }
          function de(e4, t4, r4) {
            var o3 = t4.length, n2 = new Array(o3 + 1);
            n2[0] = { name: e4 + "Count", type: "USHORT", value: o3 };
            for (var s3 = 0;s3 < o3; s3++)
              n2[s3 + 1] = { name: e4 + s3, type: "TABLE", value: r4(t4[s3], s3) };
            return n2;
          }
          function he(e4, t4, r4) {
            var o3 = t4.length, n2 = [];
            n2[0] = { name: e4 + "Count", type: "USHORT", value: o3 };
            for (var s3 = 0;s3 < o3; s3++)
              n2 = n2.concat(r4(t4[s3], s3));
            return n2;
          }
          function fe(e4) {
            e4.format === 1 ? n.call(this, "coverageTable", [{ name: "coverageFormat", type: "USHORT", value: 1 }].concat(ce("glyph", e4.glyphs))) : L.assert(false, "Can't create coverage table format 2 yet.");
          }
          function pe(e4) {
            n.call(this, "scriptListTable", he("scriptRecord", e4, function(e5, t4) {
              var r4 = e5.script, o3 = r4.defaultLangSys;
              return L.assert(!!o3, "Unable to write GSUB: script " + e5.tag + " has no default language system."), [{ name: "scriptTag" + t4, type: "TAG", value: e5.tag }, { name: "script" + t4, type: "TABLE", value: new n("scriptTable", [{ name: "defaultLangSys", type: "TABLE", value: new n("defaultLangSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: o3.reqFeatureIndex }].concat(ce("featureIndex", o3.featureIndexes))) }].concat(he("langSys", r4.langSysRecords, function(e6, t5) {
                var r5 = e6.langSys;
                return [{ name: "langSysTag" + t5, type: "TAG", value: e6.tag }, { name: "langSys" + t5, type: "TABLE", value: new n("langSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: r5.reqFeatureIndex }].concat(ce("featureIndex", r5.featureIndexes))) }];
              }))) }];
            }));
          }
          function me(e4) {
            n.call(this, "featureListTable", he("featureRecord", e4, function(e5, t4) {
              var r4 = e5.feature;
              return [{ name: "featureTag" + t4, type: "TAG", value: e5.tag }, { name: "feature" + t4, type: "TABLE", value: new n("featureTable", [{ name: "featureParams", type: "USHORT", value: r4.featureParams }].concat(ce("lookupListIndex", r4.lookupListIndexes))) }];
            }));
          }
          function ye(e4, r4) {
            n.call(this, "lookupListTable", de("lookup", e4, function(e5) {
              var t4 = r4[e5.lookupType];
              return L.assert(!!t4, "Unable to write GSUB lookup type " + e5.lookupType + " tables."), new n("lookupTable", [{ name: "lookupType", type: "USHORT", value: e5.lookupType }, { name: "lookupFlag", type: "USHORT", value: e5.lookupFlag }].concat(de("subtable", e5.subtables, t4)));
            }));
          }
          w.CHARSTRING = function(e4) {
            if (ue) {
              var t4 = ue.get(e4);
              if (t4 !== undefined)
                return t4;
            }
            for (var r4 = [], o3 = e4.length, n2 = 0;n2 < o3; n2 += 1)
              var s3 = e4[n2], r4 = r4.concat(w[s3.type](s3.value));
            return ue && ue.set(e4, r4), r4;
          }, l.CHARSTRING = function(e4) {
            return w.CHARSTRING(e4).length;
          }, w.OBJECT = function(e4) {
            var t4 = w[e4.type];
            return L.argument(t4 !== undefined, "No encoding function for type " + e4.type), t4(e4.value);
          }, l.OBJECT = function(e4) {
            var t4 = l[e4.type];
            return L.argument(t4 !== undefined, "No sizeOf function for type " + e4.type), t4(e4.value);
          }, w.TABLE = function(e4) {
            for (var t4 = [], r4 = e4.fields.length, o3 = [], n2 = [], s3 = 0;s3 < r4; s3 += 1) {
              var i2 = e4.fields[s3], a2 = w[i2.type], l2 = (L.argument(a2 !== undefined, "No encoding function for field type " + i2.type + " (" + i2.name + ")"), e4[i2.name]), a2 = a2(l2 = l2 === undefined ? i2.value : l2);
              i2.type === "TABLE" ? (n2.push(t4.length), t4 = t4.concat([0, 0]), o3.push(a2)) : t4 = t4.concat(a2);
            }
            for (var u2 = 0;u2 < o3.length; u2 += 1) {
              var c2 = n2[u2], d2 = t4.length;
              L.argument(d2 < 65536, "Table " + e4.tableName + " too big."), t4[c2] = d2 >> 8, t4[c2 + 1] = 255 & d2, t4 = t4.concat(o3[u2]);
            }
            return t4;
          }, l.TABLE = function(e4) {
            for (var t4 = 0, r4 = e4.fields.length, o3 = 0;o3 < r4; o3 += 1) {
              var n2 = e4.fields[o3], s3 = l[n2.type], i2 = (L.argument(s3 !== undefined, "No sizeOf function for field type " + n2.type + " (" + n2.name + ")"), e4[n2.name]);
              t4 += s3(i2 = i2 === undefined ? n2.value : i2), n2.type === "TABLE" && (t4 += 2);
            }
            return t4;
          }, w.RECORD = w.TABLE, l.RECORD = l.TABLE, w.LITERAL = function(e4) {
            return e4;
          }, l.LITERAL = function(e4) {
            return e4.length;
          }, n.prototype.encode = function() {
            return w.TABLE(this);
          }, n.prototype.sizeOf = function() {
            return l.TABLE(this);
          };
          var S = { Table: n, Record: n, Coverage: (fe.prototype = Object.create(n.prototype)).constructor = fe, ScriptList: (pe.prototype = Object.create(n.prototype)).constructor = pe, FeatureList: (me.prototype = Object.create(n.prototype)).constructor = me, LookupList: (ye.prototype = Object.create(n.prototype)).constructor = ye, ushortList: ce, tableList: de, recordList: he };
          function ge(e4, t4) {
            return e4.getUint8(t4);
          }
          function ve(e4, t4) {
            return e4.getUint16(t4, false);
          }
          function be(e4, t4) {
            return e4.getUint32(t4, false);
          }
          function je(e4, t4) {
            return e4.getInt16(t4, false) + e4.getUint16(t4 + 2, false) / 65535;
          }
          var _e = { byte: 1, uShort: 2, short: 2, uLong: 4, fixed: 4, longDateTime: 8, tag: 4 };
          function u(e4, t4) {
            this.data = e4, this.offset = t4, this.relativeOffset = 0;
          }
          u.prototype.parseByte = function() {
            var e4 = this.data.getUint8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e4;
          }, u.prototype.parseChar = function() {
            var e4 = this.data.getInt8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e4;
          }, u.prototype.parseCard8 = u.prototype.parseByte, u.prototype.parseCard16 = u.prototype.parseUShort = function() {
            var e4 = this.data.getUint16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseSID = u.prototype.parseUShort, u.prototype.parseOffset16 = u.prototype.parseUShort, u.prototype.parseShort = function() {
            var e4 = this.data.getInt16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseF2Dot14 = function() {
            var e4 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseOffset32 = u.prototype.parseULong = function() {
            var e4 = be(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e4;
          }, u.prototype.parseFixed = function() {
            var e4 = je(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e4;
          }, u.prototype.parseString = function(e4) {
            var t4 = this.data, r4 = this.offset + this.relativeOffset, o3 = "";
            this.relativeOffset += e4;
            for (var n2 = 0;n2 < e4; n2++)
              o3 += String.fromCharCode(t4.getUint8(r4 + n2));
            return o3;
          }, u.prototype.parseTag = function() {
            return this.parseString(4);
          }, u.prototype.parseLongDateTime = function() {
            var e4 = be(this.data, this.offset + this.relativeOffset + 4);
            return e4 -= 2082844800, this.relativeOffset += 8, e4;
          }, u.prototype.parseVersion = function(e4) {
            var t4 = ve(this.data, this.offset + this.relativeOffset), r4 = ve(this.data, this.offset + this.relativeOffset + 2);
            return this.relativeOffset += 4, t4 + r4 / (e4 = e4 === undefined ? 4096 : e4) / 10;
          }, u.prototype.skip = function(e4, t4) {
            this.relativeOffset += _e[e4] * (t4 = t4 === undefined ? 1 : t4);
          }, u.prototype.parseULongList = function(e4) {
            e4 === undefined && (e4 = this.parseULong());
            for (var t4 = new Array(e4), r4 = this.data, o3 = this.offset + this.relativeOffset, n2 = 0;n2 < e4; n2++)
              t4[n2] = r4.getUint32(o3), o3 += 4;
            return this.relativeOffset += 4 * e4, t4;
          }, u.prototype.parseOffset16List = u.prototype.parseUShortList = function(e4) {
            e4 === undefined && (e4 = this.parseUShort());
            for (var t4 = new Array(e4), r4 = this.data, o3 = this.offset + this.relativeOffset, n2 = 0;n2 < e4; n2++)
              t4[n2] = r4.getUint16(o3), o3 += 2;
            return this.relativeOffset += 2 * e4, t4;
          }, u.prototype.parseShortList = function(e4) {
            for (var t4 = new Array(e4), r4 = this.data, o3 = this.offset + this.relativeOffset, n2 = 0;n2 < e4; n2++)
              t4[n2] = r4.getInt16(o3), o3 += 2;
            return this.relativeOffset += 2 * e4, t4;
          }, u.prototype.parseByteList = function(e4) {
            for (var t4 = new Array(e4), r4 = this.data, o3 = this.offset + this.relativeOffset, n2 = 0;n2 < e4; n2++)
              t4[n2] = r4.getUint8(o3++);
            return this.relativeOffset += e4, t4;
          }, u.prototype.parseList = function(e4, t4) {
            t4 || (t4 = e4, e4 = this.parseUShort());
            for (var r4 = new Array(e4), o3 = 0;o3 < e4; o3++)
              r4[o3] = t4.call(this);
            return r4;
          }, u.prototype.parseList32 = function(e4, t4) {
            t4 || (t4 = e4, e4 = this.parseULong());
            for (var r4 = new Array(e4), o3 = 0;o3 < e4; o3++)
              r4[o3] = t4.call(this);
            return r4;
          }, u.prototype.parseRecordList = function(e4, t4) {
            t4 || (t4 = e4, e4 = this.parseUShort());
            for (var r4 = new Array(e4), o3 = Object.keys(t4), n2 = 0;n2 < e4; n2++) {
              for (var s3 = {}, i2 = 0;i2 < o3.length; i2++) {
                var a2 = o3[i2], l2 = t4[a2];
                s3[a2] = l2.call(this);
              }
              r4[n2] = s3;
            }
            return r4;
          }, u.prototype.parseRecordList32 = function(e4, t4) {
            t4 || (t4 = e4, e4 = this.parseULong());
            for (var r4 = new Array(e4), o3 = Object.keys(t4), n2 = 0;n2 < e4; n2++) {
              for (var s3 = {}, i2 = 0;i2 < o3.length; i2++) {
                var a2 = o3[i2], l2 = t4[a2];
                s3[a2] = l2.call(this);
              }
              r4[n2] = s3;
            }
            return r4;
          }, u.prototype.parseStruct = function(e4) {
            if (typeof e4 == "function")
              return e4.call(this);
            for (var t4 = Object.keys(e4), r4 = {}, o3 = 0;o3 < t4.length; o3++) {
              var n2 = t4[o3], s3 = e4[n2];
              r4[n2] = s3.call(this);
            }
            return r4;
          }, u.prototype.parseValueRecord = function(e4) {
            var t4;
            if ((e4 = e4 === undefined ? this.parseUShort() : e4) !== 0)
              return t4 = {}, 1 & e4 && (t4.xPlacement = this.parseShort()), 2 & e4 && (t4.yPlacement = this.parseShort()), 4 & e4 && (t4.xAdvance = this.parseShort()), 8 & e4 && (t4.yAdvance = this.parseShort()), 16 & e4 && (t4.xPlaDevice = undefined, this.parseShort()), 32 & e4 && (t4.yPlaDevice = undefined, this.parseShort()), 64 & e4 && (t4.xAdvDevice = undefined, this.parseShort()), 128 & e4 && (t4.yAdvDevice = undefined, this.parseShort()), t4;
          }, u.prototype.parseValueRecordList = function() {
            for (var e4 = this.parseUShort(), t4 = this.parseUShort(), r4 = new Array(t4), o3 = 0;o3 < t4; o3++)
              r4[o3] = this.parseValueRecord(e4);
            return r4;
          }, u.prototype.parsePointer = function(e4) {
            var t4 = this.parseOffset16();
            if (0 < t4)
              return new u(this.data, this.offset + t4).parseStruct(e4);
          }, u.prototype.parsePointer32 = function(e4) {
            var t4 = this.parseOffset32();
            if (0 < t4)
              return new u(this.data, this.offset + t4).parseStruct(e4);
          }, u.prototype.parseListOfLists = function(e4) {
            for (var t4 = this.parseOffset16List(), r4 = t4.length, o3 = this.relativeOffset, n2 = new Array(r4), s3 = 0;s3 < r4; s3++) {
              var i2 = t4[s3];
              if (i2 === 0)
                n2[s3] = undefined;
              else if (this.relativeOffset = i2, e4) {
                for (var a2 = this.parseOffset16List(), l2 = new Array(a2.length), u2 = 0;u2 < a2.length; u2++)
                  this.relativeOffset = i2 + a2[u2], l2[u2] = e4.call(this);
                n2[s3] = l2;
              } else
                n2[s3] = this.parseUShortList();
            }
            return this.relativeOffset = o3, n2;
          }, u.prototype.parseCoverage = function() {
            var e4 = this.offset + this.relativeOffset, t4 = this.parseUShort(), r4 = this.parseUShort();
            if (t4 === 1)
              return { format: 1, glyphs: this.parseUShortList(r4) };
            if (t4 !== 2)
              throw new Error("0x" + e4.toString(16) + ": Coverage format must be 1 or 2.");
            for (var o3 = new Array(r4), n2 = 0;n2 < r4; n2++)
              o3[n2] = { start: this.parseUShort(), end: this.parseUShort(), index: this.parseUShort() };
            return { format: 2, ranges: o3 };
          }, u.prototype.parseClassDef = function() {
            var e4 = this.offset + this.relativeOffset, t4 = this.parseUShort();
            if (t4 === 1)
              return { format: 1, startGlyph: this.parseUShort(), classes: this.parseUShortList() };
            if (t4 === 2)
              return { format: 2, ranges: this.parseRecordList({ start: u.uShort, end: u.uShort, classId: u.uShort }) };
            throw new Error("0x" + e4.toString(16) + ": ClassDef format must be 1 or 2.");
          }, u.list = function(e4, t4) {
            return function() {
              return this.parseList(e4, t4);
            };
          }, u.list32 = function(e4, t4) {
            return function() {
              return this.parseList32(e4, t4);
            };
          }, u.recordList = function(e4, t4) {
            return function() {
              return this.parseRecordList(e4, t4);
            };
          }, u.recordList32 = function(e4, t4) {
            return function() {
              return this.parseRecordList32(e4, t4);
            };
          }, u.pointer = function(e4) {
            return function() {
              return this.parsePointer(e4);
            };
          }, u.pointer32 = function(e4) {
            return function() {
              return this.parsePointer32(e4);
            };
          }, u.tag = u.prototype.parseTag, u.byte = u.prototype.parseByte, u.uShort = u.offset16 = u.prototype.parseUShort, u.uShortList = u.prototype.parseUShortList, u.uLong = u.offset32 = u.prototype.parseULong, u.uLongList = u.prototype.parseULongList, u.struct = u.prototype.parseStruct, u.coverage = u.prototype.parseCoverage, u.classDef = u.prototype.parseClassDef;
          var xe = { reserved: u.uShort, reqFeatureIndex: u.uShort, featureIndexes: u.uShortList }, R = (u.prototype.parseScriptList = function() {
            return this.parsePointer(u.recordList({ tag: u.tag, script: u.pointer({ defaultLangSys: u.pointer(xe), langSysRecords: u.recordList({ tag: u.tag, langSys: u.pointer(xe) }) }) })) || [];
          }, u.prototype.parseFeatureList = function() {
            return this.parsePointer(u.recordList({ tag: u.tag, feature: u.pointer({ featureParams: u.offset16, lookupListIndexes: u.uShortList }) })) || [];
          }, u.prototype.parseLookupList = function(o3) {
            return this.parsePointer(u.list(u.pointer(function() {
              var e4 = this.parseUShort(), t4 = (L.argument(1 <= e4 && e4 <= 9, "GPOS/GSUB lookup type " + e4 + " unknown."), this.parseUShort()), r4 = 16 & t4;
              return { lookupType: e4, lookupFlag: t4, subtables: this.parseList(u.pointer(o3[e4])), markFilteringSet: r4 ? this.parseUShort() : undefined };
            }))) || [];
          }, u.prototype.parseFeatureVariationsList = function() {
            return this.parsePointer32(function() {
              var e4 = this.parseUShort(), t4 = this.parseUShort();
              return L.argument(e4 === 1 && t4 < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({ conditionSetOffset: u.offset32, featureTableSubstitutionOffset: u.offset32 });
            }) || [];
          }, { getByte: ge, getCard8: ge, getUShort: ve, getCard16: ve, getShort: function(e4, t4) {
            return e4.getInt16(t4, false);
          }, getULong: be, getFixed: je, getTag: function(e4, t4) {
            for (var r4 = "", o3 = t4;o3 < t4 + 4; o3 += 1)
              r4 += String.fromCharCode(e4.getInt8(o3));
            return r4;
          }, getOffset: function(e4, t4, r4) {
            for (var o3 = 0, n2 = 0;n2 < r4; n2 += 1)
              o3 = (o3 <<= 8) + e4.getUint8(t4 + n2);
            return o3;
          }, getBytes: function(e4, t4, r4) {
            for (var o3 = [], n2 = t4;n2 < r4; n2 += 1)
              o3.push(e4.getUint8(n2));
            return o3;
          }, bytesToString: function(e4) {
            for (var t4 = "", r4 = 0;r4 < e4.length; r4 += 1)
              t4 += String.fromCharCode(e4[r4]);
            return t4;
          }, Parser: u });
          var we = { parse: function(e4, t4) {
            for (var r4 = {}, o3 = (r4.version = R.getUShort(e4, t4), L.argument(r4.version === 0, "cmap table version should be 0."), r4.numTables = R.getUShort(e4, t4 + 2), -1), n2 = r4.numTables - 1;0 <= n2; --n2) {
              var s3 = R.getUShort(e4, t4 + 4 + 8 * n2), i2 = R.getUShort(e4, t4 + 4 + 8 * n2 + 2);
              if (s3 === 3 && (i2 === 0 || i2 === 1 || i2 === 10) || s3 === 0 && (i2 === 0 || i2 === 1 || i2 === 2 || i2 === 3 || i2 === 4)) {
                o3 = R.getULong(e4, t4 + 4 + 8 * n2 + 4);
                break;
              }
            }
            if (o3 === -1)
              throw new Error("No valid cmap sub-tables found.");
            var a2 = new R.Parser(e4, t4 + o3);
            if (r4.format = a2.parseUShort(), r4.format === 12) {
              var l2, u2 = r4, c2 = a2;
              c2.parseUShort(), u2.length = c2.parseULong(), u2.language = c2.parseULong(), u2.groupCount = l2 = c2.parseULong(), u2.glyphIndexMap = {};
              for (var d2 = 0;d2 < l2; d2 += 1)
                for (var h2 = c2.parseULong(), f2 = c2.parseULong(), p2 = c2.parseULong(), m2 = h2;m2 <= f2; m2 += 1)
                  u2.glyphIndexMap[m2] = p2, p2++;
            } else {
              if (r4.format !== 4)
                throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r4.format + ").");
              var y2 = r4, g2 = e4, v2 = t4, b2 = o3;
              y2.length = a2.parseUShort(), y2.language = a2.parseUShort(), y2.segCount = j2 = a2.parseUShort() >> 1, a2.skip("uShort", 3), y2.glyphIndexMap = {};
              for (var j2, _2 = new R.Parser(g2, v2 + b2 + 14), x2 = new R.Parser(g2, v2 + b2 + 16 + 2 * j2), w2 = new R.Parser(g2, v2 + b2 + 16 + 4 * j2), S2 = new R.Parser(g2, v2 + b2 + 16 + 6 * j2), T2 = v2 + b2 + 16 + 8 * j2, M2 = 0;M2 < j2 - 1; M2 += 1)
                for (var E2 = undefined, k2 = _2.parseUShort(), C2 = x2.parseUShort(), O2 = w2.parseShort(), P2 = S2.parseUShort(), A2 = C2;A2 <= k2; A2 += 1)
                  P2 !== 0 ? (T2 = (T2 = S2.offset + S2.relativeOffset - 2) + P2 + 2 * (A2 - C2), (E2 = R.getUShort(g2, T2)) !== 0 && (E2 = E2 + O2 & 65535)) : E2 = A2 + O2 & 65535, y2.glyphIndexMap[A2] = E2;
            }
            return r4;
          }, make: function(e4) {
            for (var t4 = true, r4 = e4.length - 1;0 < r4; --r4)
              if (65535 < e4.get(r4).unicode) {
                console.log("Adding CMAP format 12 (needed!)"), t4 = false;
                break;
              }
            var o3, n2, s3 = [{ name: "version", type: "USHORT", value: 0 }, { name: "numTables", type: "USHORT", value: t4 ? 1 : 2 }, { name: "platformID", type: "USHORT", value: 3 }, { name: "encodingID", type: "USHORT", value: 1 }, { name: "offset", type: "ULONG", value: t4 ? 12 : 20 }], i2 = (s3 = (s3 = t4 ? s3 : s3.concat([{ name: "cmap12PlatformID", type: "USHORT", value: 3 }, { name: "cmap12EncodingID", type: "USHORT", value: 10 }, { name: "cmap12Offset", type: "ULONG", value: 0 }])).concat([{ name: "format", type: "USHORT", value: 4 }, { name: "cmap4Length", type: "USHORT", value: 0 }, { name: "language", type: "USHORT", value: 0 }, { name: "segCountX2", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), new S.Table("cmap", s3));
            for (i2.segments = [], r4 = 0;r4 < e4.length; r4 += 1) {
              for (var a2 = e4.get(r4), l2 = 0;l2 < a2.unicodes.length; l2 += 1)
                o3 = a2.unicodes[l2], n2 = r4, i2.segments.push({ end: o3, start: o3, delta: -(o3 - n2), offset: 0, glyphIndex: n2 });
              i2.segments = i2.segments.sort(function(e5, t5) {
                return e5.start - t5.start;
              });
            }
            i2.segments.push({ end: 65535, start: 65535, delta: 1, offset: 0 });
            var u2 = i2.segments.length, c2 = 0, d2 = [], h2 = [], f2 = [], p2 = [], m2 = [], y2 = [];
            for (r4 = 0;r4 < u2; r4 += 1) {
              var g2 = i2.segments[r4];
              g2.end <= 65535 && g2.start <= 65535 ? (d2 = d2.concat({ name: "end_" + r4, type: "USHORT", value: g2.end }), h2 = h2.concat({ name: "start_" + r4, type: "USHORT", value: g2.start }), f2 = f2.concat({ name: "idDelta_" + r4, type: "SHORT", value: g2.delta }), p2 = p2.concat({ name: "idRangeOffset_" + r4, type: "USHORT", value: g2.offset }), g2.glyphId !== undefined && (m2 = m2.concat({ name: "glyph_" + r4, type: "USHORT", value: g2.glyphId }))) : c2 += 1, t4 || g2.glyphIndex === undefined || (y2 = (y2 = (y2 = y2.concat({ name: "cmap12Start_" + r4, type: "ULONG", value: g2.start })).concat({ name: "cmap12End_" + r4, type: "ULONG", value: g2.end })).concat({ name: "cmap12Glyph_" + r4, type: "ULONG", value: g2.glyphIndex }));
            }
            return i2.segCountX2 = 2 * (u2 - c2), i2.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u2 - c2) / Math.log(2))), i2.entrySelector = Math.log(i2.searchRange / 2) / Math.log(2), i2.rangeShift = i2.segCountX2 - i2.searchRange, i2.fields = i2.fields.concat(d2), i2.fields.push({ name: "reservedPad", type: "USHORT", value: 0 }), i2.fields = i2.fields.concat(h2), i2.fields = i2.fields.concat(f2), i2.fields = i2.fields.concat(p2), i2.fields = i2.fields.concat(m2), i2.cmap4Length = 14 + 2 * d2.length + 2 + 2 * h2.length + 2 * f2.length + 2 * p2.length + 2 * m2.length, t4 || (s3 = 16 + 4 * y2.length, i2.cmap12Offset = 20 + i2.cmap4Length, i2.fields = i2.fields.concat([{ name: "cmap12Format", type: "USHORT", value: 12 }, { name: "cmap12Reserved", type: "USHORT", value: 0 }, { name: "cmap12Length", type: "ULONG", value: s3 }, { name: "cmap12Language", type: "ULONG", value: 0 }, { name: "cmap12nGroups", type: "ULONG", value: y2.length / 3 }]), i2.fields = i2.fields.concat(y2)), i2;
          } }, Se = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], Te = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Me = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], c = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
          function Ee(e4) {
            this.font = e4;
          }
          function ke(e4) {
            this.cmap = e4;
          }
          function Ce(e4, t4) {
            this.encoding = e4, this.charset = t4;
          }
          function Oe(e4) {
            switch (e4.version) {
              case 1:
                this.names = c.slice();
                break;
              case 2:
                this.names = new Array(e4.numberOfGlyphs);
                for (var t4 = 0;t4 < e4.numberOfGlyphs; t4++)
                  e4.glyphNameIndex[t4] < c.length ? this.names[t4] = c[e4.glyphNameIndex[t4]] : this.names[t4] = e4.names[e4.glyphNameIndex[t4] - c.length];
                break;
              case 2.5:
                this.names = new Array(e4.numberOfGlyphs);
                for (var r4 = 0;r4 < e4.numberOfGlyphs; r4++)
                  this.names[r4] = c[r4 + e4.glyphNameIndex[r4]];
                break;
              default:
                this.names = [];
            }
          }
          Ee.prototype.charToGlyphIndex = function(e4) {
            var t4 = e4.codePointAt(0), r4 = this.font.glyphs;
            if (r4) {
              for (var o3 = 0;o3 < r4.length; o3 += 1)
                for (var n2 = r4.get(o3), s3 = 0;s3 < n2.unicodes.length; s3 += 1)
                  if (n2.unicodes[s3] === t4)
                    return o3;
            }
            return null;
          }, ke.prototype.charToGlyphIndex = function(e4) {
            return this.cmap.glyphIndexMap[e4.codePointAt(0)] || 0;
          }, Ce.prototype.charToGlyphIndex = function(e4) {
            e4 = e4.codePointAt(0), e4 = this.encoding[e4];
            return this.charset.indexOf(e4);
          }, Oe.prototype.nameToGlyphIndex = function(e4) {
            return this.names.indexOf(e4);
          }, Oe.prototype.glyphIndexToName = function(e4) {
            return this.names[e4];
          };
          var d = { line: function(e4, t4, r4, o3, n2) {
            e4.beginPath(), e4.moveTo(t4, r4), e4.lineTo(o3, n2), e4.stroke();
          } };
          function f(e4) {
            this.bindConstructorValues(e4);
          }
          function Pe(t4, e4, r4) {
            Object.defineProperty(t4, e4, { get: function() {
              return t4.path, t4[r4];
            }, set: function(e5) {
              t4[r4] = e5;
            }, enumerable: true, configurable: true });
          }
          function Ae(e4, t4) {
            if (this.font = e4, this.glyphs = {}, Array.isArray(t4))
              for (var r4 = 0;r4 < t4.length; r4++)
                this.glyphs[r4] = t4[r4];
            this.length = t4 && t4.length || 0;
          }
          f.prototype.bindConstructorValues = function(e4) {
            var t4;
            this.index = e4.index || 0, this.name = e4.name || null, this.unicode = e4.unicode || undefined, this.unicodes = e4.unicodes || e4.unicode !== undefined ? [e4.unicode] : [], e4.xMin && (this.xMin = e4.xMin), e4.yMin && (this.yMin = e4.yMin), e4.xMax && (this.xMax = e4.xMax), e4.yMax && (this.yMax = e4.yMax), e4.advanceWidth && (this.advanceWidth = e4.advanceWidth), Object.defineProperty(this, "path", (e4 = e4.path, t4 = e4 || new h, { configurable: true, get: function() {
              return t4 = typeof t4 == "function" ? t4() : t4;
            }, set: function(e5) {
              t4 = e5;
            } }));
          }, f.prototype.addUnicode = function(e4) {
            this.unicodes.length === 0 && (this.unicode = e4), this.unicodes.push(e4);
          }, f.prototype.getBoundingBox = function() {
            return this.path.getBoundingBox();
          }, f.prototype.getPath = function(e4, t4, r4, o3, n2) {
            e4 = e4 !== undefined ? e4 : 0, t4 = t4 !== undefined ? t4 : 0, r4 = r4 !== undefined ? r4 : 72;
            for (var s3, i2, a2 = (o3 = o3 || {}).xScale, l2 = o3.yScale, u2 = ((s3 = o3.hinting && n2 && n2.hinting ? this.path && n2.hinting.exec(this, r4) : s3) ? (i2 = n2.hinting.getCommands(s3), e4 = Math.round(e4), t4 = Math.round(t4), a2 = l2 = 1) : (i2 = this.path.commands, o3 = 1 / this.path.unitsPerEm * r4, a2 === undefined && (a2 = o3), l2 === undefined && (l2 = o3)), new h), c2 = 0;c2 < i2.length; c2 += 1) {
              var d2 = i2[c2];
              d2.type === "M" ? u2.moveTo(e4 + d2.x * a2, t4 + -d2.y * l2) : d2.type === "L" ? u2.lineTo(e4 + d2.x * a2, t4 + -d2.y * l2) : d2.type === "Q" ? u2.quadraticCurveTo(e4 + d2.x1 * a2, t4 + -d2.y1 * l2, e4 + d2.x * a2, t4 + -d2.y * l2) : d2.type === "C" ? u2.curveTo(e4 + d2.x1 * a2, t4 + -d2.y1 * l2, e4 + d2.x2 * a2, t4 + -d2.y2 * l2, e4 + d2.x * a2, t4 + -d2.y * l2) : d2.type === "Z" && u2.closePath();
            }
            return u2;
          }, f.prototype.getContours = function() {
            if (this.points === undefined)
              return [];
            for (var e4 = [], t4 = [], r4 = 0;r4 < this.points.length; r4 += 1) {
              var o3 = this.points[r4];
              t4.push(o3), o3.lastPointOfContour && (e4.push(t4), t4 = []);
            }
            return L.argument(t4.length === 0, "There are still points left in the current contour."), e4;
          }, f.prototype.getMetrics = function() {
            for (var e4 = this.path.commands, t4 = [], r4 = [], o3 = 0;o3 < e4.length; o3 += 1) {
              var n2 = e4[o3];
              n2.type !== "Z" && (t4.push(n2.x), r4.push(n2.y)), n2.type !== "Q" && n2.type !== "C" || (t4.push(n2.x1), r4.push(n2.y1)), n2.type === "C" && (t4.push(n2.x2), r4.push(n2.y2));
            }
            var s3 = { xMin: Math.min.apply(null, t4), yMin: Math.min.apply(null, r4), xMax: Math.max.apply(null, t4), yMax: Math.max.apply(null, r4), leftSideBearing: this.leftSideBearing };
            return isFinite(s3.xMin) || (s3.xMin = 0), isFinite(s3.xMax) || (s3.xMax = this.advanceWidth), isFinite(s3.yMin) || (s3.yMin = 0), isFinite(s3.yMax) || (s3.yMax = 0), s3.rightSideBearing = this.advanceWidth - s3.leftSideBearing - (s3.xMax - s3.xMin), s3;
          }, f.prototype.draw = function(e4, t4, r4, o3, n2) {
            this.getPath(t4, r4, o3, n2).draw(e4);
          }, f.prototype.drawPoints = function(i2, e4, t4, r4) {
            function o3(e5, t5, r5, o4) {
              var n3 = 2 * Math.PI;
              i2.beginPath();
              for (var s4 = 0;s4 < e5.length; s4 += 1)
                i2.moveTo(t5 + e5[s4].x * o4, r5 + e5[s4].y * o4), i2.arc(t5 + e5[s4].x * o4, r5 + e5[s4].y * o4, 2, 0, n3, false);
              i2.closePath(), i2.fill();
            }
            e4 = e4 !== undefined ? e4 : 0, t4 = t4 !== undefined ? t4 : 0;
            for (var r4 = 1 / this.path.unitsPerEm * (r4 = r4 !== undefined ? r4 : 24), n2 = [], s3 = [], a2 = this.path, l2 = 0;l2 < a2.commands.length; l2 += 1) {
              var u2 = a2.commands[l2];
              u2.x !== undefined && n2.push({ x: u2.x, y: -u2.y }), u2.x1 !== undefined && s3.push({ x: u2.x1, y: -u2.y1 }), u2.x2 !== undefined && s3.push({ x: u2.x2, y: -u2.y2 });
            }
            i2.fillStyle = "blue", o3(n2, e4, t4, r4), i2.fillStyle = "red", o3(s3, e4, t4, r4);
          }, f.prototype.drawMetrics = function(e4, t4, r4, o3) {
            t4 = t4 !== undefined ? t4 : 0, r4 = r4 !== undefined ? r4 : 0, o3 = 1 / this.path.unitsPerEm * (o3 = o3 !== undefined ? o3 : 24), e4.lineWidth = 1, e4.strokeStyle = "black", d.line(e4, t4, -1e4, t4, 1e4), d.line(e4, -1e4, r4, 1e4, r4);
            var n2 = this.xMin || 0, s3 = this.yMin || 0, i2 = this.xMax || 0, a2 = this.yMax || 0, l2 = this.advanceWidth || 0;
            e4.strokeStyle = "blue", d.line(e4, t4 + n2 * o3, -1e4, t4 + n2 * o3, 1e4), d.line(e4, t4 + i2 * o3, -1e4, t4 + i2 * o3, 1e4), d.line(e4, -1e4, r4 + -s3 * o3, 1e4, r4 + -s3 * o3), d.line(e4, -1e4, r4 + -a2 * o3, 1e4, r4 + -a2 * o3), e4.strokeStyle = "green", d.line(e4, t4 + l2 * o3, -1e4, t4 + l2 * o3, 1e4);
          }, Ae.prototype.get = function(e4) {
            return typeof this.glyphs[e4] == "function" && (this.glyphs[e4] = this.glyphs[e4]()), this.glyphs[e4];
          }, Ae.prototype.push = function(e4, t4) {
            this.glyphs[e4] = t4, this.length++;
          };
          var p = { GlyphSet: Ae, glyphLoader: function(e4, t4) {
            return new f({ index: t4, font: e4 });
          }, ttfGlyphLoader: function(r4, e4, o3, n2, s3, i2) {
            return function() {
              var t4 = new f({ index: e4, font: r4 });
              return t4.path = function() {
                o3(t4, n2, s3);
                var e5 = i2(r4.glyphs, t4);
                return e5.unitsPerEm = r4.unitsPerEm, e5;
              }, Pe(t4, "xMin", "_xMin"), Pe(t4, "xMax", "_xMax"), Pe(t4, "yMin", "_yMin"), Pe(t4, "yMax", "_yMax"), t4;
            };
          }, cffGlyphLoader: function(r4, e4, o3, n2) {
            return function() {
              var t4 = new f({ index: e4, font: r4 });
              return t4.path = function() {
                var e5 = o3(r4, t4, n2);
                return e5.unitsPerEm = r4.unitsPerEm, e5;
              }, t4;
            };
          } };
          function Le(e4) {
            e4 = e4.length < 1240 ? 107 : e4.length < 33900 ? 1131 : 32768;
            return e4;
          }
          function y(e4, t4, r4) {
            var o3, n2 = [], s3 = [], i2 = R.getCard16(e4, t4);
            if (i2 !== 0) {
              for (var a2 = R.getByte(e4, t4 + 2), l2 = t4 + (i2 + 1) * a2 + 2, u2 = t4 + 3, c2 = 0;c2 < i2 + 1; c2 += 1)
                n2.push(R.getOffset(e4, u2, a2)), u2 += a2;
              o3 = l2 + n2[i2];
            } else
              o3 = t4 + 2;
            for (var d2 = 0;d2 < n2.length - 1; d2 += 1) {
              var h2 = R.getBytes(e4, l2 + n2[d2], l2 + n2[d2 + 1]);
              r4 && (h2 = r4(h2)), s3.push(h2);
            }
            return { objects: s3, startOffset: t4, endOffset: o3 };
          }
          function Re(e4, t4) {
            if (t4 === 28)
              return e4.parseByte() << 8 | e4.parseByte();
            if (t4 === 29)
              return e4.parseByte() << 24 | e4.parseByte() << 16 | e4.parseByte() << 8 | e4.parseByte();
            if (t4 === 30) {
              for (var r4 = e4, o3 = "", n2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];; ) {
                var s3 = r4.parseByte(), i2 = s3 >> 4, s3 = 15 & s3;
                if (i2 == 15)
                  break;
                if (o3 += n2[i2], s3 == 15)
                  break;
                o3 += n2[s3];
              }
              return parseFloat(o3);
            }
            if (32 <= t4 && t4 <= 246)
              return t4 - 139;
            if (247 <= t4 && t4 <= 250)
              return 256 * (t4 - 247) + e4.parseByte() + 108;
            if (251 <= t4 && t4 <= 254)
              return 256 * -(t4 - 251) - e4.parseByte() - 108;
            throw new Error("Invalid b0 " + t4);
          }
          function Ie(e4, t4, r4) {
            var o3 = new R.Parser(e4, t4 = t4 !== undefined ? t4 : 0), n2 = [], s3 = [];
            for (r4 = r4 !== undefined ? r4 : e4.length;o3.relativeOffset < r4; ) {
              var i2 = o3.parseByte();
              i2 <= 21 ? (i2 === 12 && (i2 = 1200 + o3.parseByte()), n2.push([i2, s3]), s3 = []) : s3.push(Re(o3, i2));
            }
            for (var a2 = n2, l2 = {}, u2 = 0;u2 < a2.length; u2 += 1) {
              var c2 = a2[u2][0], d2 = a2[u2][1], h2 = undefined, h2 = d2.length === 1 ? d2[0] : d2;
              if (l2.hasOwnProperty(c2) && !isNaN(l2[c2]))
                throw new Error("Object " + l2 + " already has key " + c2);
              l2[c2] = h2;
            }
            return l2;
          }
          function De(e4, t4) {
            return t4 = t4 <= 390 ? Se[t4] : e4[t4 - 391];
          }
          function Fe(e4, t4, r4) {
            for (var o3, n2 = {}, s3 = 0;s3 < t4.length; s3 += 1) {
              var i2 = t4[s3];
              if (Array.isArray(i2.type)) {
                var a2 = [];
                a2.length = i2.type.length;
                for (var l2 = 0;l2 < i2.type.length; l2++)
                  (o3 = e4[i2.op] !== undefined ? e4[i2.op][l2] : undefined) === undefined && (o3 = i2.value !== undefined && i2.value[l2] !== undefined ? i2.value[l2] : null), i2.type[l2] === "SID" && (o3 = De(r4, o3)), a2[l2] = o3;
                n2[i2.name] = a2;
              } else
                (o3 = e4[i2.op]) === undefined && (o3 = i2.value !== undefined ? i2.value : null), i2.type === "SID" && (o3 = De(r4, o3)), n2[i2.name] = o3;
            }
            return n2;
          }
          var Ue = [{ name: "version", op: 0, type: "SID" }, { name: "notice", op: 1, type: "SID" }, { name: "copyright", op: 1200, type: "SID" }, { name: "fullName", op: 2, type: "SID" }, { name: "familyName", op: 3, type: "SID" }, { name: "weight", op: 4, type: "SID" }, { name: "isFixedPitch", op: 1201, type: "number", value: 0 }, { name: "italicAngle", op: 1202, type: "number", value: 0 }, { name: "underlinePosition", op: 1203, type: "number", value: -100 }, { name: "underlineThickness", op: 1204, type: "number", value: 50 }, { name: "paintType", op: 1205, type: "number", value: 0 }, { name: "charstringType", op: 1206, type: "number", value: 2 }, { name: "fontMatrix", op: 1207, type: ["real", "real", "real", "real", "real", "real"], value: [0.001, 0, 0, 0.001, 0, 0] }, { name: "uniqueId", op: 13, type: "number" }, { name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0] }, { name: "strokeWidth", op: 1208, type: "number", value: 0 }, { name: "xuid", op: 14, type: [], value: null }, { name: "charset", op: 15, type: "offset", value: 0 }, { name: "encoding", op: 16, type: "offset", value: 0 }, { name: "charStrings", op: 17, type: "offset", value: 0 }, { name: "private", op: 18, type: ["number", "offset"], value: [0, 0] }, { name: "ros", op: 1230, type: ["SID", "SID", "number"] }, { name: "cidFontVersion", op: 1231, type: "number", value: 0 }, { name: "cidFontRevision", op: 1232, type: "number", value: 0 }, { name: "cidFontType", op: 1233, type: "number", value: 0 }, { name: "cidCount", op: 1234, type: "number", value: 8720 }, { name: "uidBase", op: 1235, type: "number" }, { name: "fdArray", op: 1236, type: "offset" }, { name: "fdSelect", op: 1237, type: "offset" }, { name: "fontName", op: 1238, type: "SID" }], Ne = [{ name: "subrs", op: 19, type: "offset", value: 0 }, { name: "defaultWidthX", op: 20, type: "number", value: 0 }, { name: "nominalWidthX", op: 21, type: "number", value: 0 }];
          function Be(e4, t4, r4, o3) {
            return Fe(Ie(e4, t4, r4), Ne, o3);
          }
          function Ge(e4, t4, r4, o3) {
            for (var n2 = [], s3 = 0;s3 < r4.length; s3 += 1) {
              var i2 = new DataView(new Uint8Array(r4[s3]).buffer), i2 = (a2 = o3, Fe(Ie(i2, 0, i2.byteLength), Ue, a2)), a2 = (i2._subrs = [], i2._subrsBias = 0, i2.private[0]), l2 = i2.private[1];
              a2 !== 0 && l2 !== 0 && (a2 = Be(e4, l2 + t4, a2, o3), i2._defaultWidthX = a2.defaultWidthX, i2._nominalWidthX = a2.nominalWidthX, a2.subrs !== 0 && (l2 = y(e4, l2 + a2.subrs + t4), i2._subrs = l2.objects, i2._subrsBias = Le(i2._subrs)), i2._privateDict = a2), n2.push(i2);
            }
            return n2;
          }
          function Ve(y2, g2, e4) {
            var v2, b2, j2, _2, t4, x2, w2, r4, S2, T2 = new h, M2 = [], E2 = 0, k2 = false, C2 = false, O2 = 0, P2 = 0, A2 = (S2 = (y2.isCIDFont ? (t4 = y2.tables.cff.topDict._fdSelect[g2.index], t4 = y2.tables.cff.topDict._fdArray[t4], x2 = t4._subrs, w2 = t4._subrsBias, r4 = t4._defaultWidthX, t4) : (x2 = y2.tables.cff.topDict._subrs, w2 = y2.tables.cff.topDict._subrsBias, r4 = y2.tables.cff.topDict._defaultWidthX, y2.tables.cff.topDict))._nominalWidthX, r4);
            function L2(e5, t5) {
              C2 && T2.closePath(), T2.moveTo(e5, t5), C2 = true;
            }
            function R2() {
              M2.length % 2 == 0 || k2 || (A2 = M2.shift() + S2), E2 += M2.length >> 1, M2.length = 0, k2 = true;
            }
            return function e(t5) {
              for (var r5, o3, n2, s3, i2, a2, l2, u2, c2, d2, h2, f2, p2 = 0;p2 < t5.length; ) {
                var m2 = t5[p2];
                switch (p2 += 1, m2) {
                  case 1:
                  case 3:
                    R2();
                    break;
                  case 4:
                    1 < M2.length && !k2 && (A2 = M2.shift() + S2, k2 = true), P2 += M2.pop(), L2(O2, P2);
                    break;
                  case 5:
                    for (;0 < M2.length; )
                      O2 += M2.shift(), P2 += M2.shift(), T2.lineTo(O2, P2);
                    break;
                  case 6:
                    for (;0 < M2.length && (O2 += M2.shift(), T2.lineTo(O2, P2), M2.length !== 0); )
                      P2 += M2.shift(), T2.lineTo(O2, P2);
                    break;
                  case 7:
                    for (;0 < M2.length && (P2 += M2.shift(), T2.lineTo(O2, P2), M2.length !== 0); )
                      O2 += M2.shift(), T2.lineTo(O2, P2);
                    break;
                  case 8:
                    for (;0 < M2.length; )
                      v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  case 10:
                    i2 = M2.pop() + w2, (a2 = x2[i2]) && e(a2);
                    break;
                  case 11:
                    return;
                  case 12:
                    switch (m2 = t5[p2], p2 += 1, m2) {
                      case 35:
                        v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2 + M2.shift(), c2 = l2 + M2.shift(), d2 = u2 + M2.shift(), h2 = c2 + M2.shift(), f2 = d2 + M2.shift(), O2 = h2 + M2.shift(), P2 = f2 + M2.shift(), M2.shift(), T2.curveTo(v2, b2, j2, _2, l2, u2), T2.curveTo(c2, d2, h2, f2, O2, P2);
                        break;
                      case 34:
                        v2 = O2 + M2.shift(), b2 = P2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2, c2 = l2 + M2.shift(), d2 = _2, h2 = c2 + M2.shift(), f2 = P2, O2 = h2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, l2, u2), T2.curveTo(c2, d2, h2, f2, O2, P2);
                        break;
                      case 36:
                        v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2, c2 = l2 + M2.shift(), d2 = _2, h2 = c2 + M2.shift(), f2 = d2 + M2.shift(), O2 = h2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, l2, u2), T2.curveTo(c2, d2, h2, f2, O2, P2);
                        break;
                      case 37:
                        v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2 + M2.shift(), c2 = l2 + M2.shift(), d2 = u2 + M2.shift(), h2 = c2 + M2.shift(), f2 = d2 + M2.shift(), Math.abs(h2 - O2) > Math.abs(f2 - P2) ? O2 = h2 + M2.shift() : P2 = f2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, l2, u2), T2.curveTo(c2, d2, h2, f2, O2, P2);
                        break;
                      default:
                        console.log("Glyph " + g2.index + ": unknown operator 1200" + m2), M2.length = 0;
                    }
                    break;
                  case 14:
                    0 < M2.length && !k2 && (A2 = M2.shift() + S2, k2 = true), C2 && (T2.closePath(), C2 = false);
                    break;
                  case 18:
                    R2();
                    break;
                  case 19:
                  case 20:
                    R2(), p2 += E2 + 7 >> 3;
                    break;
                  case 21:
                    2 < M2.length && !k2 && (A2 = M2.shift() + S2, k2 = true), P2 += M2.pop(), L2(O2 += M2.pop(), P2);
                    break;
                  case 22:
                    1 < M2.length && !k2 && (A2 = M2.shift() + S2, k2 = true), L2(O2 += M2.pop(), P2);
                    break;
                  case 23:
                    R2();
                    break;
                  case 24:
                    for (;2 < M2.length; )
                      v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    O2 += M2.shift(), P2 += M2.shift(), T2.lineTo(O2, P2);
                    break;
                  case 25:
                    for (;6 < M2.length; )
                      O2 += M2.shift(), P2 += M2.shift(), T2.lineTo(O2, P2);
                    v2 = O2 + M2.shift(), b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  case 26:
                    for (M2.length % 2 && (O2 += M2.shift());0 < M2.length; )
                      v2 = O2, b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2, P2 = _2 + M2.shift(), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  case 27:
                    for (M2.length % 2 && (P2 += M2.shift());0 < M2.length; )
                      v2 = O2 + M2.shift(), b2 = P2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2, T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  case 28:
                    r5 = t5[p2], o3 = t5[p2 + 1], M2.push((r5 << 24 | o3 << 16) >> 16), p2 += 2;
                    break;
                  case 29:
                    i2 = M2.pop() + y2.gsubrsBias, (a2 = y2.gsubrs[i2]) && e(a2);
                    break;
                  case 30:
                    for (;0 < M2.length && (v2 = O2, b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2 + (M2.length === 1 ? M2.shift() : 0), T2.curveTo(v2, b2, j2, _2, O2, P2), M2.length !== 0); )
                      v2 = O2 + M2.shift(), b2 = P2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), P2 = _2 + M2.shift(), O2 = j2 + (M2.length === 1 ? M2.shift() : 0), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  case 31:
                    for (;0 < M2.length && (v2 = O2 + M2.shift(), b2 = P2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), P2 = _2 + M2.shift(), O2 = j2 + (M2.length === 1 ? M2.shift() : 0), T2.curveTo(v2, b2, j2, _2, O2, P2), M2.length !== 0); )
                      v2 = O2, b2 = P2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), O2 = j2 + M2.shift(), P2 = _2 + (M2.length === 1 ? M2.shift() : 0), T2.curveTo(v2, b2, j2, _2, O2, P2);
                    break;
                  default:
                    m2 < 32 ? console.log("Glyph " + g2.index + ": unknown operator " + m2) : m2 < 247 ? M2.push(m2 - 139) : m2 < 251 ? (r5 = t5[p2], p2 += 1, M2.push(256 * (m2 - 247) + r5 + 108)) : m2 < 255 ? (r5 = t5[p2], p2 += 1, M2.push(256 * -(m2 - 251) - r5 - 108)) : (r5 = t5[p2], o3 = t5[p2 + 1], n2 = t5[p2 + 2], s3 = t5[p2 + 3], p2 += 4, M2.push((r5 << 24 | o3 << 16 | n2 << 8 | s3) / 65536));
                }
              }
            }(e4), g2.advanceWidth = A2, T2;
          }
          function ze(e4, t4) {
            var r4, o3 = Se.indexOf(e4);
            return 0 <= o3 && (r4 = o3), 0 <= (o3 = t4.indexOf(e4)) ? r4 = o3 + Se.length : (r4 = Se.length + t4.length, t4.push(e4)), r4;
          }
          function He(e4, t4, r4) {
            for (var o3 = {}, n2 = 0;n2 < e4.length; n2 += 1) {
              var s3 = e4[n2], i2 = t4[s3.name];
              i2 === undefined || function e(t5, r5) {
                if (t5 === r5)
                  return 1;
                if (Array.isArray(t5) && Array.isArray(r5) && t5.length === r5.length) {
                  for (var o4 = 0;o4 < t5.length; o4 += 1)
                    if (!e(t5[o4], r5[o4]))
                      return;
                  return 1;
                }
              }(i2, s3.value) || (s3.type === "SID" && (i2 = ze(i2, r4)), o3[s3.op] = { name: s3.name, type: s3.type, value: i2 });
            }
            return o3;
          }
          function We(e4, t4) {
            var r4 = new S.Record("Top DICT", [{ name: "dict", type: "DICT", value: {} }]);
            return r4.dict = He(Ue, e4, t4), r4;
          }
          function qe(e4) {
            var t4 = new S.Record("Top DICT INDEX", [{ name: "topDicts", type: "INDEX", value: [] }]);
            return t4.topDicts = [{ name: "topDict_0", type: "TABLE", value: e4 }], t4;
          }
          function Xe(e4) {
            for (var t4 = new S.Record("CharStrings INDEX", [{ name: "charStrings", type: "INDEX", value: [] }]), r4 = 0;r4 < e4.length; r4 += 1) {
              var o3 = e4.get(r4), n2 = function(e5) {
                for (var t5 = [], r5 = e5.path, o4 = (t5.push({ name: "width", type: "NUMBER", value: e5.advanceWidth }), 0), n3 = 0, s3 = 0;s3 < r5.commands.length; s3 += 1) {
                  var i2, a2, l2, u2, c2 = undefined, d2 = undefined, h2 = r5.commands[s3];
                  (h2 = h2.type === "Q" ? { type: "C", x: h2.x, y: h2.y, x1: 1 / 3 * o4 + 2 / 3 * h2.x1, y1: 1 / 3 * n3 + 2 / 3 * h2.y1, x2: 1 / 3 * h2.x + 2 / 3 * h2.x1, y2: 1 / 3 * h2.y + 2 / 3 * h2.y1 } : h2).type === "M" ? (c2 = Math.round(h2.x - o4), d2 = Math.round(h2.y - n3), t5.push({ name: "dx", type: "NUMBER", value: c2 }), t5.push({ name: "dy", type: "NUMBER", value: d2 }), t5.push({ name: "rmoveto", type: "OP", value: 21 }), o4 = Math.round(h2.x), n3 = Math.round(h2.y)) : h2.type === "L" ? (c2 = Math.round(h2.x - o4), d2 = Math.round(h2.y - n3), t5.push({ name: "dx", type: "NUMBER", value: c2 }), t5.push({ name: "dy", type: "NUMBER", value: d2 }), t5.push({ name: "rlineto", type: "OP", value: 5 }), o4 = Math.round(h2.x), n3 = Math.round(h2.y)) : h2.type === "C" && (i2 = Math.round(h2.x1 - o4), a2 = Math.round(h2.y1 - n3), l2 = Math.round(h2.x2 - h2.x1), u2 = Math.round(h2.y2 - h2.y1), c2 = Math.round(h2.x - h2.x2), d2 = Math.round(h2.y - h2.y2), t5.push({ name: "dx1", type: "NUMBER", value: i2 }), t5.push({ name: "dy1", type: "NUMBER", value: a2 }), t5.push({ name: "dx2", type: "NUMBER", value: l2 }), t5.push({ name: "dy2", type: "NUMBER", value: u2 }), t5.push({ name: "dx", type: "NUMBER", value: c2 }), t5.push({ name: "dy", type: "NUMBER", value: d2 }), t5.push({ name: "rrcurveto", type: "OP", value: 8 }), o4 = Math.round(h2.x), n3 = Math.round(h2.y));
                }
                return t5.push({ name: "endchar", type: "OP", value: 14 }), t5;
              }(o3);
              t4.charStrings.push({ name: o3.name, type: "CHARSTRING", value: n2 });
            }
            return t4;
          }
          var Ye = { parse: function(e4, t4, r4) {
            r4.tables.cff = {}, o3 = e4, n2 = t4, (s3 = {}).formatMajor = R.getCard8(o3, n2), s3.formatMinor = R.getCard8(o3, n2 + 1), s3.size = R.getCard8(o3, n2 + 2), s3.offsetSize = R.getCard8(o3, n2 + 3), s3.startOffset = n2, s3.endOffset = n2 + 4;
            var o3 = y(e4, s3.endOffset, R.bytesToString), n2 = y(e4, o3.endOffset), s3 = y(e4, n2.endOffset, R.bytesToString), o3 = y(e4, s3.endOffset);
            if (r4.gsubrs = o3.objects, r4.gsubrsBias = Le(r4.gsubrs), (o3 = Ge(e4, t4, n2.objects, s3.objects)).length !== 1)
              throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + o3.length);
            if (n2 = o3[0], (r4.tables.cff.topDict = n2)._privateDict && (r4.defaultWidthX = n2._privateDict.defaultWidthX, r4.nominalWidthX = n2._privateDict.nominalWidthX), n2.ros[0] !== undefined && n2.ros[1] !== undefined && (r4.isCIDFont = true), r4.isCIDFont) {
              var { fdArray: o3, fdSelect: i2 } = n2;
              if (o3 === 0 || i2 === 0)
                throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
              o3 = Ge(e4, t4, y(e4, o3 += t4).objects, s3.objects);
              n2._fdArray = o3, n2._fdSelect = function(e5, t5, r5, o4) {
                var n3, s4 = [], i3 = new R.Parser(e5, t5);
                if ((e5 = i3.parseCard8()) === 0)
                  for (var a3 = 0;a3 < r5; a3++) {
                    if (o4 <= (n3 = i3.parseCard8()))
                      throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + o4 + ")");
                    s4.push(n3);
                  }
                else {
                  if (e5 !== 3)
                    throw new Error("CFF Table CID Font FDSelect table has unsupported format " + e5);
                  var l3, u3 = i3.parseCard16(), c2 = i3.parseCard16();
                  if (c2 !== 0)
                    throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c2);
                  for (var d2 = 0;d2 < u3; d2++) {
                    if (n3 = i3.parseCard8(), l3 = i3.parseCard16(), o4 <= n3)
                      throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + o4 + ")");
                    if (r5 < l3)
                      throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l3);
                    for (;c2 < l3; c2++)
                      s4.push(n3);
                    c2 = l3;
                  }
                  if (l3 !== r5)
                    throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l3);
                }
                return s4;
              }(e4, i2 += t4, r4.numGlyphs, o3.length);
            }
            var i2 = t4 + n2.private[1], o3 = Be(e4, i2, n2.private[0], s3.objects), a2 = (r4.defaultWidthX = o3.defaultWidthX, r4.nominalWidthX = o3.nominalWidthX, o3.subrs !== 0 ? (i2 = y(e4, i2 + o3.subrs), r4.subrs = i2.objects, r4.subrsBias = Le(r4.subrs)) : (r4.subrs = [], r4.subrsBias = 0), y(e4, t4 + n2.charStrings)), o3 = (r4.nGlyphs = a2.objects.length, function(e5, t5, r5, o4) {
              var n3 = new R.Parser(e5, t5), s4 = (--r5, [".notdef"]);
              if ((e5 = n3.parseCard8()) === 0)
                for (var i3 = 0;i3 < r5; i3 += 1)
                  a3 = n3.parseSID(), s4.push(De(o4, a3));
              else if (e5 === 1)
                for (;s4.length <= r5; )
                  for (var a3 = n3.parseSID(), l3 = n3.parseCard8(), u3 = 0;u3 <= l3; u3 += 1)
                    s4.push(De(o4, a3)), a3 += 1;
              else {
                if (e5 !== 2)
                  throw new Error("Unknown charset format " + e5);
                for (;s4.length <= r5; ) {
                  a3 = n3.parseSID(), l3 = n3.parseCard16();
                  for (var c2 = 0;c2 <= l3; c2 += 1)
                    s4.push(De(o4, a3)), a3 += 1;
                }
              }
              return s4;
            }(e4, t4 + n2.charset, r4.nGlyphs, s3.objects));
            n2.encoding === 0 ? r4.cffEncoding = new Ce(Te, o3) : n2.encoding === 1 ? r4.cffEncoding = new Ce(Me, o3) : r4.cffEncoding = function(e5, t5, r5) {
              var o4 = {}, n3 = new R.Parser(e5, t5);
              if ((e5 = n3.parseCard8()) === 0)
                for (var s4 = n3.parseCard8(), i3 = 0;i3 < s4; i3 += 1)
                  o4[l3 = n3.parseCard8()] = i3;
              else {
                if (e5 !== 1)
                  throw new Error("Unknown encoding format " + e5);
                for (var a3 = n3.parseCard8(), l3 = 1, u3 = 0;u3 < a3; u3 += 1)
                  for (var c2 = n3.parseCard8(), d2 = n3.parseCard8(), h2 = c2;h2 <= c2 + d2; h2 += 1)
                    o4[h2] = l3, l3 += 1;
              }
              return new Ce(o4, r5);
            }(e4, t4 + n2.encoding, o3), r4.encoding = r4.encoding || r4.cffEncoding, r4.glyphs = new p.GlyphSet(r4);
            for (var l2 = 0;l2 < r4.nGlyphs; l2 += 1) {
              var u2 = a2.objects[l2];
              r4.glyphs.push(l2, p.cffGlyphLoader(r4, l2, Ve, u2));
            }
          }, make: function(e4, t4) {
            for (var r4, o3 = new S.Table("CFF ", [{ name: "header", type: "RECORD" }, { name: "nameIndex", type: "RECORD" }, { name: "topDictIndex", type: "RECORD" }, { name: "stringIndex", type: "RECORD" }, { name: "globalSubrIndex", type: "RECORD" }, { name: "charsets", type: "RECORD" }, { name: "charStringsIndex", type: "RECORD" }, { name: "privateDict", type: "RECORD" }]), n2 = 1 / t4.unitsPerEm, n2 = { version: t4.version, fullName: t4.fullName, familyName: t4.familyName, weight: t4.weightName, fontBBox: t4.fontBBox || [0, 0, 0, 0], fontMatrix: [n2, 0, 0, n2, 0, 0], charset: 999, encoding: 0, charStrings: 999, private: [0, 999] }, s3 = [], i2 = 1;i2 < e4.length; i2 += 1)
              r4 = e4.get(i2), s3.push(r4.name);
            var a2, l2, u2 = [], t4 = (o3.header = new S.Record("Header", [{ name: "major", type: "Card8", value: 1 }, { name: "minor", type: "Card8", value: 0 }, { name: "hdrSize", type: "Card8", value: 4 }, { name: "major", type: "Card8", value: 1 }]), o3.nameIndex = function(e5) {
              var t5 = new S.Record("Name INDEX", [{ name: "names", type: "INDEX", value: [] }]);
              t5.names = [];
              for (var r5 = 0;r5 < e5.length; r5 += 1)
                t5.names.push({ name: "name_" + r5, type: "NAME", value: e5[r5] });
              return t5;
            }([t4.postScriptName]), We(n2, u2)), c2 = (o3.topDictIndex = qe(t4), o3.globalSubrIndex = new S.Record("Global Subr INDEX", [{ name: "subrs", type: "INDEX", value: [] }]), o3.charsets = function(e5, t5) {
              for (var r5 = new S.Record("Charsets", [{ name: "format", type: "Card8", value: 0 }]), o4 = 0;o4 < e5.length; o4 += 1) {
                var n3 = ze(e5[o4], t5);
                r5.fields.push({ name: "glyph_" + o4, type: "SID", value: n3 });
              }
              return r5;
            }(s3, u2), o3.charStringsIndex = Xe(e4), o3.privateDict = (c2 = {}, a2 = u2, (l2 = new S.Record("Private DICT", [{ name: "dict", type: "DICT", value: {} }])).dict = He(Ne, c2, a2), l2), o3.stringIndex = function(e5) {
              var t5 = new S.Record("String INDEX", [{ name: "strings", type: "INDEX", value: [] }]);
              t5.strings = [];
              for (var r5 = 0;r5 < e5.length; r5 += 1)
                t5.strings.push({ name: "string_" + r5, type: "STRING", value: e5[r5] });
              return t5;
            }(u2), o3.header.sizeOf() + o3.nameIndex.sizeOf() + o3.topDictIndex.sizeOf() + o3.stringIndex.sizeOf() + o3.globalSubrIndex.sizeOf());
            return n2.charset = c2, n2.encoding = 0, n2.charStrings = n2.charset + o3.charsets.sizeOf(), n2.private[1] = n2.charStrings + o3.charStringsIndex.sizeOf(), t4 = We(n2, u2), o3.topDictIndex = qe(t4), o3;
          } };
          var Ze = { parse: function(e4, t4) {
            var r4 = {}, e4 = new R.Parser(e4, t4);
            return r4.version = e4.parseVersion(), r4.fontRevision = Math.round(1000 * e4.parseFixed()) / 1000, r4.checkSumAdjustment = e4.parseULong(), r4.magicNumber = e4.parseULong(), L.argument(r4.magicNumber === 1594834165, "Font header has wrong magic number."), r4.flags = e4.parseUShort(), r4.unitsPerEm = e4.parseUShort(), r4.created = e4.parseLongDateTime(), r4.modified = e4.parseLongDateTime(), r4.xMin = e4.parseShort(), r4.yMin = e4.parseShort(), r4.xMax = e4.parseShort(), r4.yMax = e4.parseShort(), r4.macStyle = e4.parseUShort(), r4.lowestRecPPEM = e4.parseUShort(), r4.fontDirectionHint = e4.parseShort(), r4.indexToLocFormat = e4.parseShort(), r4.glyphDataFormat = e4.parseShort(), r4;
          }, make: function(e4) {
            var t4 = Math.round(new Date().getTime() / 1000) + 2082844800, r4 = t4;
            return e4.createdTimestamp && (r4 = e4.createdTimestamp + 2082844800), new S.Table("head", [{ name: "version", type: "FIXED", value: 65536 }, { name: "fontRevision", type: "FIXED", value: 65536 }, { name: "checkSumAdjustment", type: "ULONG", value: 0 }, { name: "magicNumber", type: "ULONG", value: 1594834165 }, { name: "flags", type: "USHORT", value: 0 }, { name: "unitsPerEm", type: "USHORT", value: 1000 }, { name: "created", type: "LONGDATETIME", value: r4 }, { name: "modified", type: "LONGDATETIME", value: t4 }, { name: "xMin", type: "SHORT", value: 0 }, { name: "yMin", type: "SHORT", value: 0 }, { name: "xMax", type: "SHORT", value: 0 }, { name: "yMax", type: "SHORT", value: 0 }, { name: "macStyle", type: "USHORT", value: 0 }, { name: "lowestRecPPEM", type: "USHORT", value: 0 }, { name: "fontDirectionHint", type: "SHORT", value: 2 }, { name: "indexToLocFormat", type: "SHORT", value: 0 }, { name: "glyphDataFormat", type: "SHORT", value: 0 }], e4);
          } };
          var Qe = { parse: function(e4, t4) {
            var r4 = {}, e4 = new R.Parser(e4, t4);
            return r4.version = e4.parseVersion(), r4.ascender = e4.parseShort(), r4.descender = e4.parseShort(), r4.lineGap = e4.parseShort(), r4.advanceWidthMax = e4.parseUShort(), r4.minLeftSideBearing = e4.parseShort(), r4.minRightSideBearing = e4.parseShort(), r4.xMaxExtent = e4.parseShort(), r4.caretSlopeRise = e4.parseShort(), r4.caretSlopeRun = e4.parseShort(), r4.caretOffset = e4.parseShort(), e4.relativeOffset += 8, r4.metricDataFormat = e4.parseShort(), r4.numberOfHMetrics = e4.parseUShort(), r4;
          }, make: function(e4) {
            return new S.Table("hhea", [{ name: "version", type: "FIXED", value: 65536 }, { name: "ascender", type: "FWORD", value: 0 }, { name: "descender", type: "FWORD", value: 0 }, { name: "lineGap", type: "FWORD", value: 0 }, { name: "advanceWidthMax", type: "UFWORD", value: 0 }, { name: "minLeftSideBearing", type: "FWORD", value: 0 }, { name: "minRightSideBearing", type: "FWORD", value: 0 }, { name: "xMaxExtent", type: "FWORD", value: 0 }, { name: "caretSlopeRise", type: "SHORT", value: 1 }, { name: "caretSlopeRun", type: "SHORT", value: 0 }, { name: "caretOffset", type: "SHORT", value: 0 }, { name: "reserved1", type: "SHORT", value: 0 }, { name: "reserved2", type: "SHORT", value: 0 }, { name: "reserved3", type: "SHORT", value: 0 }, { name: "reserved4", type: "SHORT", value: 0 }, { name: "metricDataFormat", type: "SHORT", value: 0 }, { name: "numberOfHMetrics", type: "USHORT", value: 0 }], e4);
          } };
          var Je = { parse: function(e4, t4, r4, o3, n2) {
            for (var s3, i2, a2 = new R.Parser(e4, t4), l2 = 0;l2 < o3; l2 += 1) {
              l2 < r4 && (s3 = a2.parseUShort(), i2 = a2.parseShort());
              var u2 = n2.get(l2);
              u2.advanceWidth = s3, u2.leftSideBearing = i2;
            }
          }, make: function(e4) {
            for (var t4 = new S.Table("hmtx", []), r4 = 0;r4 < e4.length; r4 += 1) {
              var o3 = e4.get(r4), n2 = o3.advanceWidth || 0, o3 = o3.leftSideBearing || 0;
              t4.fields.push({ name: "advanceWidth_" + r4, type: "USHORT", value: n2 }), t4.fields.push({ name: "leftSideBearing_" + r4, type: "SHORT", value: o3 });
            }
            return t4;
          } };
          var Ke = { make: function(e4) {
            for (var t4 = new S.Table("ltag", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "numTags", type: "ULONG", value: e4.length }]), r4 = "", o3 = 12 + 4 * e4.length, n2 = 0;n2 < e4.length; ++n2) {
              var s3 = r4.indexOf(e4[n2]);
              s3 < 0 && (s3 = r4.length, r4 += e4[n2]), t4.fields.push({ name: "offset " + n2, type: "USHORT", value: o3 + s3 }), t4.fields.push({ name: "length " + n2, type: "USHORT", value: e4[n2].length });
            }
            return t4.fields.push({ name: "stringPool", type: "CHARARRAY", value: r4 }), t4;
          }, parse: function(e4, t4) {
            for (var r4 = new R.Parser(e4, t4), o3 = r4.parseULong(), n2 = (L.argument(o3 === 1, "Unsupported ltag table version."), r4.skip("uLong", 1), r4.parseULong()), s3 = [], i2 = 0;i2 < n2; i2++) {
              for (var a2 = "", l2 = t4 + r4.parseUShort(), u2 = r4.parseUShort(), c2 = l2;c2 < l2 + u2; ++c2)
                a2 += String.fromCharCode(e4.getInt8(c2));
              s3.push(a2);
            }
            return s3;
          } };
          var $e = { parse: function(e4, t4) {
            var r4 = {}, e4 = new R.Parser(e4, t4);
            return r4.version = e4.parseVersion(), r4.numGlyphs = e4.parseUShort(), r4.version === 1 && (r4.maxPoints = e4.parseUShort(), r4.maxContours = e4.parseUShort(), r4.maxCompositePoints = e4.parseUShort(), r4.maxCompositeContours = e4.parseUShort(), r4.maxZones = e4.parseUShort(), r4.maxTwilightPoints = e4.parseUShort(), r4.maxStorage = e4.parseUShort(), r4.maxFunctionDefs = e4.parseUShort(), r4.maxInstructionDefs = e4.parseUShort(), r4.maxStackElements = e4.parseUShort(), r4.maxSizeOfInstructions = e4.parseUShort(), r4.maxComponentElements = e4.parseUShort(), r4.maxComponentDepth = e4.parseUShort()), r4;
          }, make: function(e4) {
            return new S.Table("maxp", [{ name: "version", type: "FIXED", value: 20480 }, { name: "numGlyphs", type: "USHORT", value: e4 }]);
          } }, et = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"], tt = { 0: "en", 1: "fr", 2: "de", 3: "it", 4: "nl", 5: "sv", 6: "es", 7: "da", 8: "pt", 9: "no", 10: "he", 11: "ja", 12: "ar", 13: "fi", 14: "el", 15: "is", 16: "mt", 17: "tr", 18: "hr", 19: "zh-Hant", 20: "ur", 21: "hi", 22: "th", 23: "ko", 24: "lt", 25: "pl", 26: "hu", 27: "es", 28: "lv", 29: "se", 30: "fo", 31: "fa", 32: "ru", 33: "zh", 34: "nl-BE", 35: "ga", 36: "sq", 37: "ro", 38: "cz", 39: "sk", 40: "si", 41: "yi", 42: "sr", 43: "mk", 44: "bg", 45: "uk", 46: "be", 47: "uz", 48: "kk", 49: "az-Cyrl", 50: "az-Arab", 51: "hy", 52: "ka", 53: "mo", 54: "ky", 55: "tg", 56: "tk", 57: "mn-CN", 58: "mn", 59: "ps", 60: "ks", 61: "ku", 62: "sd", 63: "bo", 64: "ne", 65: "sa", 66: "mr", 67: "bn", 68: "as", 69: "gu", 70: "pa", 71: "or", 72: "ml", 73: "kn", 74: "ta", 75: "te", 76: "si", 77: "my", 78: "km", 79: "lo", 80: "vi", 81: "id", 82: "tl", 83: "ms", 84: "ms-Arab", 85: "am", 86: "ti", 87: "om", 88: "so", 89: "sw", 90: "rw", 91: "rn", 92: "ny", 93: "mg", 94: "eo", 128: "cy", 129: "eu", 130: "ca", 131: "la", 132: "qu", 133: "gn", 134: "ay", 135: "tt", 136: "ug", 137: "dz", 138: "jv", 139: "su", 140: "gl", 141: "af", 142: "br", 143: "iu", 144: "gd", 145: "gv", 146: "ga", 147: "to", 148: "el-polyton", 149: "kl", 150: "az", 151: "nn" }, rt = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 5, 11: 1, 12: 4, 13: 0, 14: 6, 15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 4, 21: 9, 22: 21, 23: 3, 24: 29, 25: 29, 26: 29, 27: 29, 28: 29, 29: 0, 30: 0, 31: 4, 32: 7, 33: 25, 34: 0, 35: 0, 36: 0, 37: 0, 38: 29, 39: 29, 40: 0, 41: 5, 42: 7, 43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 48: 7, 49: 7, 50: 4, 51: 24, 52: 23, 53: 7, 54: 7, 55: 7, 56: 7, 57: 27, 58: 7, 59: 4, 60: 4, 61: 4, 62: 4, 63: 26, 64: 9, 65: 9, 66: 9, 67: 13, 68: 13, 69: 11, 70: 10, 71: 12, 72: 17, 73: 16, 74: 14, 75: 15, 76: 18, 77: 19, 78: 20, 79: 22, 80: 30, 81: 0, 82: 0, 83: 0, 84: 4, 85: 28, 86: 28, 87: 28, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 7, 136: 4, 137: 26, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 28, 144: 0, 145: 0, 146: 0, 147: 0, 148: 6, 149: 0, 150: 0, 151: 0 }, ot = { 1078: "af", 1052: "sq", 1156: "gsw", 1118: "am", 5121: "ar-DZ", 15361: "ar-BH", 3073: "ar", 2049: "ar-IQ", 11265: "ar-JO", 13313: "ar-KW", 12289: "ar-LB", 4097: "ar-LY", 6145: "ary", 8193: "ar-OM", 16385: "ar-QA", 1025: "ar-SA", 10241: "ar-SY", 7169: "aeb", 14337: "ar-AE", 9217: "ar-YE", 1067: "hy", 1101: "as", 2092: "az-Cyrl", 1068: "az", 1133: "ba", 1069: "eu", 1059: "be", 2117: "bn", 1093: "bn-IN", 8218: "bs-Cyrl", 5146: "bs", 1150: "br", 1026: "bg", 1027: "ca", 3076: "zh-HK", 5124: "zh-MO", 2052: "zh", 4100: "zh-SG", 1028: "zh-TW", 1155: "co", 1050: "hr", 4122: "hr-BA", 1029: "cs", 1030: "da", 1164: "prs", 1125: "dv", 2067: "nl-BE", 1043: "nl", 3081: "en-AU", 10249: "en-BZ", 4105: "en-CA", 9225: "en-029", 16393: "en-IN", 6153: "en-IE", 8201: "en-JM", 17417: "en-MY", 5129: "en-NZ", 13321: "en-PH", 18441: "en-SG", 7177: "en-ZA", 11273: "en-TT", 2057: "en-GB", 1033: "en", 12297: "en-ZW", 1061: "et", 1080: "fo", 1124: "fil", 1035: "fi", 2060: "fr-BE", 3084: "fr-CA", 1036: "fr", 5132: "fr-LU", 6156: "fr-MC", 4108: "fr-CH", 1122: "fy", 1110: "gl", 1079: "ka", 3079: "de-AT", 1031: "de", 5127: "de-LI", 4103: "de-LU", 2055: "de-CH", 1032: "el", 1135: "kl", 1095: "gu", 1128: "ha", 1037: "he", 1081: "hi", 1038: "hu", 1039: "is", 1136: "ig", 1057: "id", 1117: "iu", 2141: "iu-Latn", 2108: "ga", 1076: "xh", 1077: "zu", 1040: "it", 2064: "it-CH", 1041: "ja", 1099: "kn", 1087: "kk", 1107: "km", 1158: "quc", 1159: "rw", 1089: "sw", 1111: "kok", 1042: "ko", 1088: "ky", 1108: "lo", 1062: "lv", 1063: "lt", 2094: "dsb", 1134: "lb", 1071: "mk", 2110: "ms-BN", 1086: "ms", 1100: "ml", 1082: "mt", 1153: "mi", 1146: "arn", 1102: "mr", 1148: "moh", 1104: "mn", 2128: "mn-CN", 1121: "ne", 1044: "nb", 2068: "nn", 1154: "oc", 1096: "or", 1123: "ps", 1045: "pl", 1046: "pt", 2070: "pt-PT", 1094: "pa", 1131: "qu-BO", 2155: "qu-EC", 3179: "qu", 1048: "ro", 1047: "rm", 1049: "ru", 9275: "smn", 4155: "smj-NO", 5179: "smj", 3131: "se-FI", 1083: "se", 2107: "se-SE", 8251: "sms", 6203: "sma-NO", 7227: "sms", 1103: "sa", 7194: "sr-Cyrl-BA", 3098: "sr", 6170: "sr-Latn-BA", 2074: "sr-Latn", 1132: "nso", 1074: "tn", 1115: "si", 1051: "sk", 1060: "sl", 11274: "es-AR", 16394: "es-BO", 13322: "es-CL", 9226: "es-CO", 5130: "es-CR", 7178: "es-DO", 12298: "es-EC", 17418: "es-SV", 4106: "es-GT", 18442: "es-HN", 2058: "es-MX", 19466: "es-NI", 6154: "es-PA", 15370: "es-PY", 10250: "es-PE", 20490: "es-PR", 3082: "es", 1034: "es", 21514: "es-US", 14346: "es-UY", 8202: "es-VE", 2077: "sv-FI", 1053: "sv", 1114: "syr", 1064: "tg", 2143: "tzm", 1097: "ta", 1092: "tt", 1098: "te", 1054: "th", 1105: "bo", 1055: "tr", 1090: "tk", 1152: "ug", 1058: "uk", 1070: "hsb", 1056: "ur", 2115: "uz-Cyrl", 1091: "uz", 1066: "vi", 1106: "cy", 1160: "wo", 1157: "sah", 1144: "ii", 1130: "yo" };
          var nt = "utf-16", st = { 0: "macintosh", 1: "x-mac-japanese", 2: "x-mac-chinesetrad", 3: "x-mac-korean", 6: "x-mac-greek", 7: "x-mac-cyrillic", 9: "x-mac-devanagai", 10: "x-mac-gurmukhi", 11: "x-mac-gujarati", 12: "x-mac-oriya", 13: "x-mac-bengali", 14: "x-mac-tamil", 15: "x-mac-telugu", 16: "x-mac-kannada", 17: "x-mac-malayalam", 18: "x-mac-sinhalese", 19: "x-mac-burmese", 20: "x-mac-khmer", 21: "x-mac-thai", 22: "x-mac-lao", 23: "x-mac-georgian", 24: "x-mac-armenian", 25: "x-mac-chinesesimp", 26: "x-mac-tibetan", 27: "x-mac-mongolian", 28: "x-mac-ethiopic", 29: "x-mac-ce", 30: "x-mac-vietnamese", 31: "x-mac-extarabic" }, it = { 15: "x-mac-icelandic", 17: "x-mac-turkish", 18: "x-mac-croatian", 24: "x-mac-ce", 25: "x-mac-ce", 26: "x-mac-ce", 27: "x-mac-ce", 28: "x-mac-ce", 30: "x-mac-icelandic", 37: "x-mac-romanian", 38: "x-mac-ce", 39: "x-mac-ce", 40: "x-mac-ce", 143: "x-mac-inuit", 146: "x-mac-gaelic" };
          function at(e4, t4, r4) {
            switch (e4) {
              case 0:
                return nt;
              case 1:
                return it[r4] || st[t4];
              case 3:
                if (t4 === 1 || t4 === 10)
                  return nt;
            }
          }
          function lt(e4) {
            var t4, r4 = {};
            for (t4 in e4)
              r4[e4[t4]] = parseInt(t4);
            return r4;
          }
          function ut(e4, t4, r4, o3, n2, s3) {
            return new S.Record("NameRecord", [{ name: "platformID", type: "USHORT", value: e4 }, { name: "encodingID", type: "USHORT", value: t4 }, { name: "languageID", type: "USHORT", value: r4 }, { name: "nameID", type: "USHORT", value: o3 }, { name: "length", type: "USHORT", value: n2 }, { name: "offset", type: "USHORT", value: s3 }]);
          }
          function ct(e4, t4) {
            if ((r4 = function(e5, t5) {
              var r5 = e5.length, o4 = t5.length - r5 + 1;
              e:
                for (var n3 = 0;n3 < o4; n3++)
                  for (;n3 < o4; n3++) {
                    for (var s3 = 0;s3 < r5; s3++)
                      if (t5[n3 + s3] !== e5[s3])
                        continue e;
                    return n3;
                  }
              return -1;
            }(e4, t4)) < 0)
              for (var r4 = t4.length, o3 = 0, n2 = e4.length;o3 < n2; ++o3)
                t4.push(e4[o3]);
            return r4;
          }
          var dt = { parse: function(e4, t4, r4) {
            for (var o3 = {}, n2 = new R.Parser(e4, t4), t4 = n2.parseUShort(), s3 = n2.parseUShort(), i2 = n2.offset + n2.parseUShort(), a2 = 0;a2 < s3; a2++) {
              var l2 = n2.parseUShort(), u2 = n2.parseUShort(), c2 = n2.parseUShort(), d2 = n2.parseUShort(), d2 = et[d2] || d2, h2 = n2.parseUShort(), f2 = n2.parseUShort(), p2 = function(e5, t5, r5) {
                switch (e5) {
                  case 0:
                    if (t5 === 65535)
                      return "und";
                    if (r5)
                      return r5[t5];
                    break;
                  case 1:
                    return tt[t5];
                  case 3:
                    return ot[t5];
                }
              }(l2, c2, r4), l2 = at(l2, u2, c2);
              l2 !== undefined && p2 !== undefined && (u2 = undefined, (u2 = l2 === nt ? m.UTF16(e4, i2 + f2, h2) : m.MACSTRING(e4, i2 + f2, h2, l2)) && ((c2 = (c2 = o3[d2]) === undefined ? o3[d2] = {} : c2)[p2] = u2));
            }
            return t4 === 1 && n2.parseUShort(), o3;
          }, make: function(e4, t4) {
            var r4, o3 = [], n2 = {}, s3 = lt(et);
            for (r4 in e4) {
              var i2 = s3[r4];
              if (i2 === undefined && (i2 = r4), h2 = parseInt(i2), isNaN(h2))
                throw new Error('Name table entry "' + r4 + '" does not exist, see nameTableNames for complete list.');
              n2[h2] = e4[r4], o3.push(h2);
            }
            for (var a2 = lt(tt), l2 = lt(ot), u2 = [], c2 = [], d2 = 0;d2 < o3.length; d2++) {
              var h2, f2, p2 = n2[h2 = o3[d2]];
              for (f2 in p2) {
                var m2 = p2[f2], y2 = 1, g2 = a2[f2], v2 = rt[g2], b2 = at(y2, v2, g2), b2 = w.MACSTRING(m2, b2), j2 = (b2 === undefined && (y2 = 0, (g2 = t4.indexOf(f2)) < 0 && (g2 = t4.length, t4.push(f2)), v2 = 4, b2 = w.UTF16(m2)), ct(b2, c2)), y2 = (u2.push(ut(y2, v2, g2, h2, b2.length, j2)), l2[f2]);
                y2 !== undefined && (g2 = ct(v2 = w.UTF16(m2), c2), u2.push(ut(3, 1, y2, h2, v2.length, g2)));
              }
            }
            u2.sort(function(e5, t5) {
              return e5.platformID - t5.platformID || e5.encodingID - t5.encodingID || e5.languageID - t5.languageID || e5.nameID - t5.nameID;
            });
            for (var _2 = new S.Table("name", [{ name: "format", type: "USHORT", value: 0 }, { name: "count", type: "USHORT", value: u2.length }, { name: "stringOffset", type: "USHORT", value: 6 + 12 * u2.length }]), x2 = 0;x2 < u2.length; x2++)
              _2.fields.push({ name: "record_" + x2, type: "RECORD", value: u2[x2] });
            return _2.fields.push({ name: "strings", type: "LITERAL", value: c2 }), _2;
          } }, ht = [{ begin: 0, end: 127 }, { begin: 128, end: 255 }, { begin: 256, end: 383 }, { begin: 384, end: 591 }, { begin: 592, end: 687 }, { begin: 688, end: 767 }, { begin: 768, end: 879 }, { begin: 880, end: 1023 }, { begin: 11392, end: 11519 }, { begin: 1024, end: 1279 }, { begin: 1328, end: 1423 }, { begin: 1424, end: 1535 }, { begin: 42240, end: 42559 }, { begin: 1536, end: 1791 }, { begin: 1984, end: 2047 }, { begin: 2304, end: 2431 }, { begin: 2432, end: 2559 }, { begin: 2560, end: 2687 }, { begin: 2688, end: 2815 }, { begin: 2816, end: 2943 }, { begin: 2944, end: 3071 }, { begin: 3072, end: 3199 }, { begin: 3200, end: 3327 }, { begin: 3328, end: 3455 }, { begin: 3584, end: 3711 }, { begin: 3712, end: 3839 }, { begin: 4256, end: 4351 }, { begin: 6912, end: 7039 }, { begin: 4352, end: 4607 }, { begin: 7680, end: 7935 }, { begin: 7936, end: 8191 }, { begin: 8192, end: 8303 }, { begin: 8304, end: 8351 }, { begin: 8352, end: 8399 }, { begin: 8400, end: 8447 }, { begin: 8448, end: 8527 }, { begin: 8528, end: 8591 }, { begin: 8592, end: 8703 }, { begin: 8704, end: 8959 }, { begin: 8960, end: 9215 }, { begin: 9216, end: 9279 }, { begin: 9280, end: 9311 }, { begin: 9312, end: 9471 }, { begin: 9472, end: 9599 }, { begin: 9600, end: 9631 }, { begin: 9632, end: 9727 }, { begin: 9728, end: 9983 }, { begin: 9984, end: 10175 }, { begin: 12288, end: 12351 }, { begin: 12352, end: 12447 }, { begin: 12448, end: 12543 }, { begin: 12544, end: 12591 }, { begin: 12592, end: 12687 }, { begin: 43072, end: 43135 }, { begin: 12800, end: 13055 }, { begin: 13056, end: 13311 }, { begin: 44032, end: 55215 }, { begin: 55296, end: 57343 }, { begin: 67840, end: 67871 }, { begin: 19968, end: 40959 }, { begin: 57344, end: 63743 }, { begin: 12736, end: 12783 }, { begin: 64256, end: 64335 }, { begin: 64336, end: 65023 }, { begin: 65056, end: 65071 }, { begin: 65040, end: 65055 }, { begin: 65104, end: 65135 }, { begin: 65136, end: 65279 }, { begin: 65280, end: 65519 }, { begin: 65520, end: 65535 }, { begin: 3840, end: 4095 }, { begin: 1792, end: 1871 }, { begin: 1920, end: 1983 }, { begin: 3456, end: 3583 }, { begin: 4096, end: 4255 }, { begin: 4608, end: 4991 }, { begin: 5024, end: 5119 }, { begin: 5120, end: 5759 }, { begin: 5760, end: 5791 }, { begin: 5792, end: 5887 }, { begin: 6016, end: 6143 }, { begin: 6144, end: 6319 }, { begin: 10240, end: 10495 }, { begin: 40960, end: 42127 }, { begin: 5888, end: 5919 }, { begin: 66304, end: 66351 }, { begin: 66352, end: 66383 }, { begin: 66560, end: 66639 }, { begin: 118784, end: 119039 }, { begin: 119808, end: 120831 }, { begin: 1044480, end: 1048573 }, { begin: 65024, end: 65039 }, { begin: 917504, end: 917631 }, { begin: 6400, end: 6479 }, { begin: 6480, end: 6527 }, { begin: 6528, end: 6623 }, { begin: 6656, end: 6687 }, { begin: 11264, end: 11359 }, { begin: 11568, end: 11647 }, { begin: 19904, end: 19967 }, { begin: 43008, end: 43055 }, { begin: 65536, end: 65663 }, { begin: 65856, end: 65935 }, { begin: 66432, end: 66463 }, { begin: 66464, end: 66527 }, { begin: 66640, end: 66687 }, { begin: 66688, end: 66735 }, { begin: 67584, end: 67647 }, { begin: 68096, end: 68191 }, { begin: 119552, end: 119647 }, { begin: 73728, end: 74751 }, { begin: 119648, end: 119679 }, { begin: 7040, end: 7103 }, { begin: 7168, end: 7247 }, { begin: 7248, end: 7295 }, { begin: 43136, end: 43231 }, { begin: 43264, end: 43311 }, { begin: 43312, end: 43359 }, { begin: 43520, end: 43615 }, { begin: 65936, end: 65999 }, { begin: 66000, end: 66047 }, { begin: 66208, end: 66271 }, { begin: 127024, end: 127135 }];
          var ft = { parse: function(e4, t4) {
            var r4 = {}, o3 = new R.Parser(e4, t4);
            r4.version = o3.parseUShort(), r4.xAvgCharWidth = o3.parseShort(), r4.usWeightClass = o3.parseUShort(), r4.usWidthClass = o3.parseUShort(), r4.fsType = o3.parseUShort(), r4.ySubscriptXSize = o3.parseShort(), r4.ySubscriptYSize = o3.parseShort(), r4.ySubscriptXOffset = o3.parseShort(), r4.ySubscriptYOffset = o3.parseShort(), r4.ySuperscriptXSize = o3.parseShort(), r4.ySuperscriptYSize = o3.parseShort(), r4.ySuperscriptXOffset = o3.parseShort(), r4.ySuperscriptYOffset = o3.parseShort(), r4.yStrikeoutSize = o3.parseShort(), r4.yStrikeoutPosition = o3.parseShort(), r4.sFamilyClass = o3.parseShort(), r4.panose = [];
            for (var n2 = 0;n2 < 10; n2++)
              r4.panose[n2] = o3.parseByte();
            return r4.ulUnicodeRange1 = o3.parseULong(), r4.ulUnicodeRange2 = o3.parseULong(), r4.ulUnicodeRange3 = o3.parseULong(), r4.ulUnicodeRange4 = o3.parseULong(), r4.achVendID = String.fromCharCode(o3.parseByte(), o3.parseByte(), o3.parseByte(), o3.parseByte()), r4.fsSelection = o3.parseUShort(), r4.usFirstCharIndex = o3.parseUShort(), r4.usLastCharIndex = o3.parseUShort(), r4.sTypoAscender = o3.parseShort(), r4.sTypoDescender = o3.parseShort(), r4.sTypoLineGap = o3.parseShort(), r4.usWinAscent = o3.parseUShort(), r4.usWinDescent = o3.parseUShort(), 1 <= r4.version && (r4.ulCodePageRange1 = o3.parseULong(), r4.ulCodePageRange2 = o3.parseULong()), 2 <= r4.version && (r4.sxHeight = o3.parseShort(), r4.sCapHeight = o3.parseShort(), r4.usDefaultChar = o3.parseUShort(), r4.usBreakChar = o3.parseUShort(), r4.usMaxContent = o3.parseUShort()), r4;
          }, make: function(e4) {
            return new S.Table("OS/2", [{ name: "version", type: "USHORT", value: 3 }, { name: "xAvgCharWidth", type: "SHORT", value: 0 }, { name: "usWeightClass", type: "USHORT", value: 0 }, { name: "usWidthClass", type: "USHORT", value: 0 }, { name: "fsType", type: "USHORT", value: 0 }, { name: "ySubscriptXSize", type: "SHORT", value: 650 }, { name: "ySubscriptYSize", type: "SHORT", value: 699 }, { name: "ySubscriptXOffset", type: "SHORT", value: 0 }, { name: "ySubscriptYOffset", type: "SHORT", value: 140 }, { name: "ySuperscriptXSize", type: "SHORT", value: 650 }, { name: "ySuperscriptYSize", type: "SHORT", value: 699 }, { name: "ySuperscriptXOffset", type: "SHORT", value: 0 }, { name: "ySuperscriptYOffset", type: "SHORT", value: 479 }, { name: "yStrikeoutSize", type: "SHORT", value: 49 }, { name: "yStrikeoutPosition", type: "SHORT", value: 258 }, { name: "sFamilyClass", type: "SHORT", value: 0 }, { name: "bFamilyType", type: "BYTE", value: 0 }, { name: "bSerifStyle", type: "BYTE", value: 0 }, { name: "bWeight", type: "BYTE", value: 0 }, { name: "bProportion", type: "BYTE", value: 0 }, { name: "bContrast", type: "BYTE", value: 0 }, { name: "bStrokeVariation", type: "BYTE", value: 0 }, { name: "bArmStyle", type: "BYTE", value: 0 }, { name: "bLetterform", type: "BYTE", value: 0 }, { name: "bMidline", type: "BYTE", value: 0 }, { name: "bXHeight", type: "BYTE", value: 0 }, { name: "ulUnicodeRange1", type: "ULONG", value: 0 }, { name: "ulUnicodeRange2", type: "ULONG", value: 0 }, { name: "ulUnicodeRange3", type: "ULONG", value: 0 }, { name: "ulUnicodeRange4", type: "ULONG", value: 0 }, { name: "achVendID", type: "CHARARRAY", value: "XXXX" }, { name: "fsSelection", type: "USHORT", value: 0 }, { name: "usFirstCharIndex", type: "USHORT", value: 0 }, { name: "usLastCharIndex", type: "USHORT", value: 0 }, { name: "sTypoAscender", type: "SHORT", value: 0 }, { name: "sTypoDescender", type: "SHORT", value: 0 }, { name: "sTypoLineGap", type: "SHORT", value: 0 }, { name: "usWinAscent", type: "USHORT", value: 0 }, { name: "usWinDescent", type: "USHORT", value: 0 }, { name: "ulCodePageRange1", type: "ULONG", value: 0 }, { name: "ulCodePageRange2", type: "ULONG", value: 0 }, { name: "sxHeight", type: "SHORT", value: 0 }, { name: "sCapHeight", type: "SHORT", value: 0 }, { name: "usDefaultChar", type: "USHORT", value: 0 }, { name: "usBreakChar", type: "USHORT", value: 0 }, { name: "usMaxContext", type: "USHORT", value: 0 }], e4);
          }, unicodeRanges: ht, getUnicodeRange: function(e4) {
            for (var t4 = 0;t4 < ht.length; t4 += 1) {
              var r4 = ht[t4];
              if (e4 >= r4.begin && e4 < r4.end)
                return t4;
            }
            return -1;
          } };
          var pt = { parse: function(e4, t4) {
            var r4 = {}, o3 = new R.Parser(e4, t4);
            switch (r4.version = o3.parseVersion(), r4.italicAngle = o3.parseFixed(), r4.underlinePosition = o3.parseShort(), r4.underlineThickness = o3.parseShort(), r4.isFixedPitch = o3.parseULong(), r4.minMemType42 = o3.parseULong(), r4.maxMemType42 = o3.parseULong(), r4.minMemType1 = o3.parseULong(), r4.maxMemType1 = o3.parseULong(), r4.version) {
              case 1:
                r4.names = c.slice();
                break;
              case 2:
                r4.numberOfGlyphs = o3.parseUShort(), r4.glyphNameIndex = new Array(r4.numberOfGlyphs);
                for (var n2 = 0;n2 < r4.numberOfGlyphs; n2++)
                  r4.glyphNameIndex[n2] = o3.parseUShort();
                r4.names = [];
                for (var s3, i2 = 0;i2 < r4.numberOfGlyphs; i2++)
                  r4.glyphNameIndex[i2] >= c.length && (s3 = o3.parseChar(), r4.names.push(o3.parseString(s3)));
                break;
              case 2.5:
                r4.numberOfGlyphs = o3.parseUShort(), r4.offset = new Array(r4.numberOfGlyphs);
                for (var a2 = 0;a2 < r4.numberOfGlyphs; a2++)
                  r4.offset[a2] = o3.parseChar();
            }
            return r4;
          }, make: function() {
            return new S.Table("post", [{ name: "version", type: "FIXED", value: 196608 }, { name: "italicAngle", type: "FIXED", value: 0 }, { name: "underlinePosition", type: "FWORD", value: 0 }, { name: "underlineThickness", type: "FWORD", value: 0 }, { name: "isFixedPitch", type: "ULONG", value: 0 }, { name: "minMemType42", type: "ULONG", value: 0 }, { name: "maxMemType42", type: "ULONG", value: 0 }, { name: "minMemType1", type: "ULONG", value: 0 }, { name: "maxMemType1", type: "ULONG", value: 0 }]);
          } }, o2 = new Array(9), s2 = (o2[1] = function() {
            var e4 = this.offset + this.relativeOffset, t4 = this.parseUShort();
            return t4 === 1 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), deltaGlyphId: this.parseUShort() } : t4 === 2 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), substitute: this.parseOffset16List() } : void L.assert(false, "0x" + e4.toString(16) + ": lookup type 1 format must be 1 or 2.");
          }, o2[2] = function() {
            var e4 = this.parseUShort();
            return L.argument(e4 === 1, "GSUB Multiple Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), sequences: this.parseListOfLists() };
          }, o2[3] = function() {
            var e4 = this.parseUShort();
            return L.argument(e4 === 1, "GSUB Alternate Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), alternateSets: this.parseListOfLists() };
          }, o2[4] = function() {
            var e4 = this.parseUShort();
            return L.argument(e4 === 1, "GSUB ligature table identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), ligatureSets: this.parseListOfLists(function() {
              return { ligGlyph: this.parseUShort(), components: this.parseUShortList(this.parseUShort() - 1) };
            }) };
          }, { sequenceIndex: u.uShort, lookupListIndex: u.uShort });
          o2[5] = function() {
            var e4, t4, r4 = this.offset + this.relativeOffset, o3 = this.parseUShort();
            return o3 === 1 ? { substFormat: o3, coverage: this.parsePointer(u.coverage), ruleSets: this.parseListOfLists(function() {
              var e5 = this.parseUShort(), t5 = this.parseUShort();
              return { input: this.parseUShortList(e5 - 1), lookupRecords: this.parseRecordList(t5, s2) };
            }) } : o3 === 2 ? { substFormat: o3, coverage: this.parsePointer(u.coverage), classDef: this.parsePointer(u.classDef), classSets: this.parseListOfLists(function() {
              var e5 = this.parseUShort(), t5 = this.parseUShort();
              return { classes: this.parseUShortList(e5 - 1), lookupRecords: this.parseRecordList(t5, s2) };
            }) } : o3 === 3 ? (e4 = this.parseUShort(), t4 = this.parseUShort(), { substFormat: o3, coverages: this.parseList(e4, u.pointer(u.coverage)), lookupRecords: this.parseRecordList(t4, s2) }) : void L.assert(false, "0x" + r4.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
          }, o2[6] = function() {
            var e4 = this.offset + this.relativeOffset, t4 = this.parseUShort();
            return t4 === 1 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), chainRuleSets: this.parseListOfLists(function() {
              return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s2) };
            }) } : t4 === 2 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), backtrackClassDef: this.parsePointer(u.classDef), inputClassDef: this.parsePointer(u.classDef), lookaheadClassDef: this.parsePointer(u.classDef), chainClassSet: this.parseListOfLists(function() {
              return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s2) };
            }) } : t4 === 3 ? { substFormat: 3, backtrackCoverage: this.parseList(u.pointer(u.coverage)), inputCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), lookupRecords: this.parseRecordList(s2) } : void L.assert(false, "0x" + e4.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
          }, o2[7] = function() {
            var e4 = this.parseUShort(), e4 = (L.argument(e4 === 1, "GSUB Extension Substitution subtable identifier-format must be 1"), this.parseUShort()), t4 = new u(this.data, this.offset + this.parseULong());
            return { substFormat: 1, lookupType: e4, extension: o2[e4].call(t4) };
          }, o2[8] = function() {
            var e4 = this.parseUShort();
            return L.argument(e4 === 1, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), backtrackCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), substitutes: this.parseUShortList() };
          };
          var mt = new Array(9);
          mt[1] = function(e4) {
            return e4.substFormat === 1 ? new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }, { name: "deltaGlyphID", type: "USHORT", value: e4.deltaGlyphId }]) : new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 2 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.ushortList("substitute", e4.substitute)));
          }, mt[3] = function(e4) {
            return L.assert(e4.substFormat === 1, "Lookup type 3 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.tableList("altSet", e4.alternateSets, function(e5) {
              return new S.Table("alternateSetTable", S.ushortList("alternate", e5));
            })));
          }, mt[4] = function(e4) {
            return L.assert(e4.substFormat === 1, "Lookup type 4 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.tableList("ligSet", e4.ligatureSets, function(e5) {
              return new S.Table("ligatureSetTable", S.tableList("ligature", e5, function(e6) {
                return new S.Table("ligatureTable", [{ name: "ligGlyph", type: "USHORT", value: e6.ligGlyph }].concat(S.ushortList("component", e6.components, e6.components.length + 1)));
              }));
            })));
          };
          var yt = { parse: function(e4, t4) {
            return t4 = (e4 = new u(e4, t4 = t4 || 0)).parseVersion(1), L.argument(t4 === 1 || t4 === 1.1, "Unsupported GSUB table version."), t4 === 1 ? { version: t4, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(o2) } : { version: t4, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(o2), variations: e4.parseFeatureVariationsList() };
          }, make: function(e4) {
            return new S.Table("GSUB", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e4.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e4.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e4.lookups, mt) }]);
          } };
          var gt = { parse: function(e4, t4) {
            for (var r4 = new R.Parser(e4, t4), o3 = r4.parseULong(), n2 = (L.argument(o3 === 1, "Unsupported META table version."), r4.parseULong(), r4.parseULong(), r4.parseULong()), s3 = {}, i2 = 0;i2 < n2; i2++) {
              var a2 = r4.parseTag(), l2 = r4.parseULong(), u2 = r4.parseULong(), l2 = m.UTF8(e4, t4 + l2, u2);
              s3[a2] = l2;
            }
            return s3;
          }, make: function(e4) {
            var t4, r4 = Object.keys(e4).length, o3 = "", n2 = 16 + 12 * r4, s3 = new S.Table("meta", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "offset", type: "ULONG", value: n2 }, { name: "numTags", type: "ULONG", value: r4 }]);
            for (t4 in e4) {
              var i2 = o3.length;
              o3 += e4[t4], s3.fields.push({ name: "tag " + t4, type: "TAG", value: t4 }), s3.fields.push({ name: "offset " + t4, type: "ULONG", value: n2 + i2 }), s3.fields.push({ name: "length " + t4, type: "ULONG", value: e4[t4].length });
            }
            return s3.fields.push({ name: "stringPool", type: "CHARARRAY", value: o3 }), s3;
          } };
          function vt(e4) {
            return Math.log(e4) / Math.log(2) | 0;
          }
          function bt(e4) {
            for (;e4.length % 4 != 0; )
              e4.push(0);
            for (var t4 = 0, r4 = 0;r4 < e4.length; r4 += 4)
              t4 += (e4[r4] << 24) + (e4[r4 + 1] << 16) + (e4[r4 + 2] << 8) + e4[r4 + 3];
            return t4 %= Math.pow(2, 32);
          }
          function jt(e4, t4, r4, o3) {
            return new S.Record("Table Record", [{ name: "tag", type: "TAG", value: e4 !== undefined ? e4 : "" }, { name: "checkSum", type: "ULONG", value: t4 !== undefined ? t4 : 0 }, { name: "offset", type: "ULONG", value: r4 !== undefined ? r4 : 0 }, { name: "length", type: "ULONG", value: o3 !== undefined ? o3 : 0 }]);
          }
          function _t(e4) {
            for (var t4 = new S.Table("sfnt", [{ name: "version", type: "TAG", value: "OTTO" }, { name: "numTables", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), r4 = (t4.tables = e4, t4.numTables = e4.length, Math.pow(2, vt(t4.numTables))), o3 = (t4.searchRange = 16 * r4, t4.entrySelector = vt(r4), t4.rangeShift = 16 * t4.numTables - t4.searchRange, []), n2 = [], s3 = t4.sizeOf() + jt().sizeOf() * t4.numTables;s3 % 4 != 0; )
              s3 += 1, n2.push({ name: "padding", type: "BYTE", value: 0 });
            for (var i2 = 0;i2 < e4.length; i2 += 1) {
              var a2 = e4[i2], l2 = (L.argument(a2.tableName.length === 4, "Table name" + a2.tableName + " is invalid."), a2.sizeOf()), u2 = jt(a2.tableName, bt(a2.encode()), s3, l2);
              for (o3.push({ name: u2.tag + " Table Record", type: "RECORD", value: u2 }), n2.push({ name: a2.tableName + " table", type: "RECORD", value: a2 }), s3 += l2, L.argument(!isNaN(s3), "Something went wrong calculating the offset.");s3 % 4 != 0; )
                s3 += 1, n2.push({ name: "padding", type: "BYTE", value: 0 });
            }
            return o3.sort(function(e5, t5) {
              return e5.value.tag > t5.value.tag ? 1 : -1;
            }), t4.fields = t4.fields.concat(o3), t4.fields = t4.fields.concat(n2), t4;
          }
          function xt(e4, t4, r4) {
            for (var o3 = 0;o3 < t4.length; o3 += 1) {
              var n2 = e4.charToGlyphIndex(t4[o3]);
              if (0 < n2)
                return e4.glyphs.get(n2).getMetrics();
            }
            return r4;
          }
          var wt = { make: _t, fontToTable: function(e4) {
            for (var t4, r4 = [], o3 = [], n2 = [], s3 = [], i2 = [], a2 = [], l2 = [], u2 = 0, c2 = 0, d2 = 0, h2 = 0, f2 = 0, p2 = 0;p2 < e4.glyphs.length; p2 += 1) {
              var m2 = e4.glyphs.get(p2), y2 = 0 | m2.unicode;
              if (isNaN(m2.advanceWidth))
                throw new Error("Glyph " + m2.name + " (" + p2 + "): advanceWidth is not a number.");
              (y2 < t4 || t4 === undefined) && 0 < y2 && (t4 = y2), u2 < y2 && (u2 = y2);
              var y2 = ft.getUnicodeRange(y2);
              if (y2 < 32)
                c2 |= 1 << y2;
              else if (y2 < 64)
                d2 |= 1 << y2 - 32;
              else if (y2 < 96)
                h2 |= 1 << y2 - 64;
              else {
                if (!(y2 < 123))
                  throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                f2 |= 1 << y2 - 96;
              }
              m2.name !== ".notdef" && (y2 = m2.getMetrics(), r4.push(y2.xMin), o3.push(y2.yMin), n2.push(y2.xMax), s3.push(y2.yMax), a2.push(y2.leftSideBearing), l2.push(y2.rightSideBearing), i2.push(m2.advanceWidth));
            }
            var g2, v2 = { xMin: Math.min.apply(null, r4), yMin: Math.min.apply(null, o3), xMax: Math.max.apply(null, n2), yMax: Math.max.apply(null, s3), advanceWidthMax: Math.max.apply(null, i2), advanceWidthAvg: function(e5) {
              for (var t5 = 0, r5 = 0;r5 < e5.length; r5 += 1)
                t5 += e5[r5];
              return t5 / e5.length;
            }(i2), minLeftSideBearing: Math.min.apply(null, a2), maxLeftSideBearing: Math.max.apply(null, a2), minRightSideBearing: Math.min.apply(null, l2) }, b2 = (v2.ascender = e4.ascender, v2.descender = e4.descender, Ze.make({ flags: 3, unitsPerEm: e4.unitsPerEm, xMin: v2.xMin, yMin: v2.yMin, xMax: v2.xMax, yMax: v2.yMax, lowestRecPPEM: 3, createdTimestamp: e4.createdTimestamp })), j2 = Qe.make({ ascender: v2.ascender, descender: v2.descender, advanceWidthMax: v2.advanceWidthMax, minLeftSideBearing: v2.minLeftSideBearing, minRightSideBearing: v2.minRightSideBearing, xMaxExtent: v2.maxLeftSideBearing + (v2.xMax - v2.xMin), numberOfHMetrics: e4.glyphs.length }), _2 = $e.make(e4.glyphs.length), x2 = ft.make({ xAvgCharWidth: Math.round(v2.advanceWidthAvg), usWeightClass: e4.tables.os2.usWeightClass, usWidthClass: e4.tables.os2.usWidthClass, usFirstCharIndex: t4, usLastCharIndex: u2, ulUnicodeRange1: c2, ulUnicodeRange2: d2, ulUnicodeRange3: h2, ulUnicodeRange4: f2, fsSelection: e4.tables.os2.fsSelection, sTypoAscender: v2.ascender, sTypoDescender: v2.descender, sTypoLineGap: 0, usWinAscent: v2.yMax, usWinDescent: Math.abs(v2.yMin), ulCodePageRange1: 1, sxHeight: xt(e4, "xyvw", { yMax: Math.round(v2.ascender / 2) }).yMax, sCapHeight: xt(e4, "HIKLEFJMNTZBDPRAGOQSUVWXY", v2).yMax, usDefaultChar: e4.hasChar(" ") ? 32 : 0, usBreakChar: e4.hasChar(" ") ? 32 : 0 }), w2 = Je.make(e4.glyphs), S2 = we.make(e4.glyphs), T2 = e4.getEnglishName("fontFamily"), M2 = e4.getEnglishName("fontSubfamily"), E2 = T2 + " " + M2, k2 = (k2 = e4.getEnglishName("postScriptName")) || T2.replace(/\s/g, "") + "-" + M2, C2 = {};
            for (g2 in e4.names)
              C2[g2] = e4.names[g2];
            C2.uniqueID || (C2.uniqueID = { en: e4.getEnglishName("manufacturer") + ":" + E2 }), C2.postScriptName || (C2.postScriptName = { en: k2 }), C2.preferredFamily || (C2.preferredFamily = e4.names.fontFamily), C2.preferredSubfamily || (C2.preferredSubfamily = e4.names.fontSubfamily);
            var O2 = [], P2 = dt.make(C2, O2), O2 = 0 < O2.length ? Ke.make(O2) : undefined, A2 = pt.make(), E2 = Ye.make(e4.glyphs, { version: e4.getEnglishName("version"), fullName: E2, familyName: T2, weightName: M2, postScriptName: k2, unitsPerEm: e4.unitsPerEm, fontBBox: [0, v2.yMin, v2.ascender, v2.advanceWidthMax] }), T2 = e4.metas && 0 < Object.keys(e4.metas).length ? gt.make(e4.metas) : undefined, M2 = [b2, j2, _2, x2, P2, S2, A2, E2, w2];
            O2 && M2.push(O2), e4.tables.gsub && M2.push(yt.make(e4.tables.gsub)), T2 && M2.push(T2);
            for (var D2 = bt((k2 = _t(M2)).encode()), L2 = k2.fields, R2 = false, I2 = 0;I2 < L2.length; I2 += 1)
              if (L2[I2].name === "head table") {
                L2[I2].value.checkSumAdjustment = 2981146554 - D2, R2 = true;
                break;
              }
            if (R2)
              return k2;
            throw new Error("Could not find head table with checkSum to adjust.");
          }, computeCheckSum: bt };
          function St(e4, t4) {
            for (var r4 = 0, o3 = e4.length - 1;r4 <= o3; ) {
              var n2 = r4 + o3 >>> 1, s3 = e4[n2].tag;
              if (s3 === t4)
                return n2;
              s3 < t4 ? r4 = 1 + n2 : o3 = n2 - 1;
            }
            return -r4 - 1;
          }
          function Tt(e4, t4) {
            for (var r4 = 0, o3 = e4.length - 1;r4 <= o3; ) {
              var n2 = r4 + o3 >>> 1, s3 = e4[n2];
              if (s3 === t4)
                return n2;
              s3 < t4 ? r4 = 1 + n2 : o3 = n2 - 1;
            }
            return -r4 - 1;
          }
          function Mt(e4, t4) {
            for (var r4 = 0, o3 = e4.length - 1;r4 <= o3; ) {
              var n2, s3 = r4 + o3 >>> 1, i2 = (n2 = e4[s3]).start;
              if (i2 === t4)
                return n2;
              i2 < t4 ? r4 = 1 + s3 : o3 = s3 - 1;
            }
            if (0 < r4)
              return t4 > (n2 = e4[r4 - 1]).end ? 0 : n2;
          }
          function Et(e4, t4) {
            this.font = e4, this.tableName = t4;
          }
          function kt(e4) {
            Et.call(this, e4, "gpos");
          }
          function i(e4) {
            Et.call(this, e4, "gsub");
          }
          function Ct(e4, t4, r4) {
            for (var o3 = e4.subtables, n2 = 0;n2 < o3.length; n2++) {
              var s3 = o3[n2];
              if (s3.substFormat === t4)
                return s3;
            }
            if (r4)
              return o3.push(r4), r4;
          }
          function Ot(e4) {
            for (var t4 = new ArrayBuffer(e4.length), r4 = new Uint8Array(t4), o3 = 0;o3 < e4.length; ++o3)
              r4[o3] = e4[o3];
            return t4;
          }
          function _(e4, t4) {
            if (!e4)
              throw t4;
          }
          function Pt(e4, t4, r4, o3, n2) {
            var s3 = 0 < (t4 & o3) ? (s3 = e4.parseByte(), r4 + (s3 = (t4 & n2) == 0 ? -s3 : s3)) : 0 < (t4 & n2) ? r4 : r4 + e4.parseShort();
            return s3;
          }
          function At(e4, t4, r4) {
            var o3, n2 = new R.Parser(t4, r4);
            if (e4.numberOfContours = n2.parseShort(), e4._xMin = n2.parseShort(), e4._yMin = n2.parseShort(), e4._xMax = n2.parseShort(), e4._yMax = n2.parseShort(), 0 < e4.numberOfContours) {
              for (var s3 = e4.endPointIndices = [], i2 = 0;i2 < e4.numberOfContours; i2 += 1)
                s3.push(n2.parseUShort());
              e4.instructionLength = n2.parseUShort(), e4.instructions = [];
              for (var a2 = 0;a2 < e4.instructionLength; a2 += 1)
                e4.instructions.push(n2.parseByte());
              for (var l2 = s3[s3.length - 1] + 1, u2 = [], c2 = 0;c2 < l2; c2 += 1)
                if (o3 = n2.parseByte(), u2.push(o3), 0 < (8 & o3))
                  for (var d2 = n2.parseByte(), h2 = 0;h2 < d2; h2 += 1)
                    u2.push(o3), c2 += 1;
              if (L.argument(u2.length === l2, "Bad flags."), 0 < s3.length) {
                var f2, p2 = [];
                if (0 < l2) {
                  for (var m2 = 0;m2 < l2; m2 += 1)
                    o3 = u2[m2], (f2 = {}).onCurve = !!(1 & o3), f2.lastPointOfContour = 0 <= s3.indexOf(m2), p2.push(f2);
                  for (var y2 = 0, g2 = 0;g2 < l2; g2 += 1)
                    o3 = u2[g2], (f2 = p2[g2]).x = Pt(n2, o3, y2, 2, 16), y2 = f2.x;
                  for (var v2 = 0, b2 = 0;b2 < l2; b2 += 1)
                    o3 = u2[b2], (f2 = p2[b2]).y = Pt(n2, o3, v2, 4, 32), v2 = f2.y;
                }
                e4.points = p2;
              } else
                e4.points = [];
            } else if (e4.numberOfContours === 0)
              e4.points = [];
            else {
              e4.isComposite = true, e4.points = [], e4.components = [];
              for (var j2 = true;j2; ) {
                u2 = n2.parseUShort();
                var _2 = { glyphIndex: n2.parseUShort(), xScale: 1, scale01: 0, scale10: 0, yScale: 1, dx: 0, dy: 0 };
                0 < (1 & u2) ? 0 < (2 & u2) ? (_2.dx = n2.parseShort(), _2.dy = n2.parseShort()) : _2.matchedPoints = [n2.parseUShort(), n2.parseUShort()] : 0 < (2 & u2) ? (_2.dx = n2.parseChar(), _2.dy = n2.parseChar()) : _2.matchedPoints = [n2.parseByte(), n2.parseByte()], 0 < (8 & u2) ? _2.xScale = _2.yScale = n2.parseF2Dot14() : 0 < (64 & u2) ? (_2.xScale = n2.parseF2Dot14(), _2.yScale = n2.parseF2Dot14()) : 0 < (128 & u2) && (_2.xScale = n2.parseF2Dot14(), _2.scale01 = n2.parseF2Dot14(), _2.scale10 = n2.parseF2Dot14(), _2.yScale = n2.parseF2Dot14()), e4.components.push(_2), j2 = !!(32 & u2);
              }
              if (256 & u2) {
                e4.instructionLength = n2.parseUShort(), e4.instructions = [];
                for (var x2 = 0;x2 < e4.instructionLength; x2 += 1)
                  e4.instructions.push(n2.parseByte());
              }
            }
          }
          function Lt(e4, t4) {
            for (var r4 = [], o3 = 0;o3 < e4.length; o3 += 1) {
              var n2 = e4[o3], n2 = { x: t4.xScale * n2.x + t4.scale01 * n2.y + t4.dx, y: t4.scale10 * n2.x + t4.yScale * n2.y + t4.dy, onCurve: n2.onCurve, lastPointOfContour: n2.lastPointOfContour };
              r4.push(n2);
            }
            return r4;
          }
          function Rt(e4) {
            var t4 = new h;
            if (e4)
              for (var r4 = function(e5) {
                for (var t5 = [], r5 = [], o4 = 0;o4 < e5.length; o4 += 1) {
                  var n3 = e5[o4];
                  r5.push(n3), n3.lastPointOfContour && (t5.push(r5), r5 = []);
                }
                return L.argument(r5.length === 0, "There are still points left in the current contour."), t5;
              }(e4), o3 = 0;o3 < r4.length; ++o3) {
                var n2, s3 = r4[o3], i2 = s3[s3.length - 1], a2 = s3[0];
                i2.onCurve ? t4.moveTo(i2.x, i2.y) : a2.onCurve ? t4.moveTo(a2.x, a2.y) : (n2 = { x: 0.5 * (i2.x + a2.x), y: 0.5 * (i2.y + a2.y) }, t4.moveTo(n2.x, n2.y));
                for (var l2 = 0;l2 < s3.length; ++l2) {
                  var u2, c2 = i2, i2 = a2, a2 = s3[(l2 + 1) % s3.length];
                  i2.onCurve ? t4.lineTo(i2.x, i2.y) : (u2 = a2, c2.onCurve || (i2.x, c2.x, i2.y, c2.y), a2.onCurve || (u2 = { x: 0.5 * (i2.x + a2.x), y: 0.5 * (i2.y + a2.y) }), t4.quadraticCurveTo(i2.x, i2.y, u2.x, u2.y));
                }
                t4.closePath();
              }
            return t4;
          }
          function It(e4, t4) {
            if (t4.isComposite)
              for (var r4 = 0;r4 < t4.components.length; r4 += 1) {
                var o3 = t4.components[r4], n2 = e4.get(o3.glyphIndex);
                if (n2.getPath(), n2.points) {
                  var s3 = undefined;
                  if (o3.matchedPoints === undefined)
                    s3 = Lt(n2.points, o3);
                  else {
                    if (o3.matchedPoints[0] > t4.points.length - 1 || o3.matchedPoints[1] > n2.points.length - 1)
                      throw Error("Matched points out of range in " + t4.name);
                    var i2 = t4.points[o3.matchedPoints[0]], a2 = n2.points[o3.matchedPoints[1]], o3 = { xScale: o3.xScale, scale01: o3.scale01, scale10: o3.scale10, yScale: o3.yScale, dx: 0, dy: 0 }, a2 = Lt([a2], o3)[0];
                    o3.dx = i2.x - a2.x, o3.dy = i2.y - a2.y, s3 = Lt(n2.points, o3);
                  }
                  t4.points = t4.points.concat(s3);
                }
              }
            return Rt(t4.points);
          }
          (kt.prototype = Et.prototype = { searchTag: St, binSearch: Tt, getTable: function(e4) {
            var t4 = this.font.tables[this.tableName];
            return t4 = !t4 && e4 ? this.font.tables[this.tableName] = this.createDefaultTable() : t4;
          }, getScriptNames: function() {
            var e4 = this.getTable();
            return e4 ? e4.scripts.map(function(e5) {
              return e5.tag;
            }) : [];
          }, getDefaultScriptName: function() {
            var e4 = this.getTable();
            if (e4) {
              for (var t4 = false, r4 = 0;r4 < e4.scripts.length; r4++) {
                var o3 = e4.scripts[r4].tag;
                if (o3 === "DFLT")
                  return o3;
                o3 === "latn" && (t4 = true);
              }
              return t4 ? "latn" : undefined;
            }
          }, getScriptTable: function(e4, t4) {
            var r4, o3 = this.getTable(t4);
            if (o3)
              return r4 = o3.scripts, 0 <= (o3 = St(o3.scripts, e4 = e4 || "DFLT")) ? r4[o3].script : t4 ? (r4.splice(-1 - o3, 0, t4 = { tag: e4, script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }), t4.script) : undefined;
          }, getLangSysTable: function(e4, t4, r4) {
            var o3, e4 = this.getScriptTable(e4, r4);
            if (e4)
              return t4 && t4 !== "dflt" && t4 !== "DFLT" ? 0 <= (o3 = St(e4.langSysRecords, t4)) ? e4.langSysRecords[o3].langSys : r4 ? (e4.langSysRecords.splice(-1 - o3, 0, r4 = { tag: t4, langSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] } }), r4.langSys) : undefined : e4.defaultLangSys;
          }, getFeatureTable: function(e4, t4, r4, o3) {
            e4 = this.getLangSysTable(e4, t4, o3);
            if (e4) {
              for (var n2, s3 = e4.featureIndexes, i2 = this.font.tables[this.tableName].features, a2 = 0;a2 < s3.length; a2++)
                if ((n2 = i2[s3[a2]]).tag === r4)
                  return n2.feature;
              if (o3)
                return t4 = i2.length, L.assert(t4 === 0 || r4 >= i2[t4 - 1].tag, "Features must be added in alphabetical order."), i2.push(n2 = { tag: r4, feature: { params: 0, lookupListIndexes: [] } }), s3.push(t4), n2.feature;
            }
          }, getLookupTables: function(e4, t4, r4, o3, n2) {
            var e4 = this.getFeatureTable(e4, t4, r4, n2), s3 = [];
            if (e4) {
              for (var i2, a2 = e4.lookupListIndexes, l2 = this.font.tables[this.tableName].lookups, u2 = 0;u2 < a2.length; u2++)
                (i2 = l2[a2[u2]]).lookupType === o3 && s3.push(i2);
              if (s3.length === 0 && n2)
                return t4 = l2.length, l2.push(i2 = { lookupType: o3, lookupFlag: 0, subtables: [], markFilteringSet: undefined }), a2.push(t4), [i2];
            }
            return s3;
          }, getGlyphClass: function(e4, t4) {
            switch (e4.format) {
              case 1:
                return e4.startGlyph <= t4 && t4 < e4.startGlyph + e4.classes.length ? e4.classes[t4 - e4.startGlyph] : 0;
              case 2:
                var r4 = Mt(e4.ranges, t4);
                return r4 ? r4.classId : 0;
            }
          }, getCoverageIndex: function(e4, t4) {
            switch (e4.format) {
              case 1:
                var r4 = Tt(e4.glyphs, t4);
                return 0 <= r4 ? r4 : -1;
              case 2:
                r4 = Mt(e4.ranges, t4);
                return r4 ? r4.index + t4 - r4.start : -1;
            }
          }, expandCoverage: function(e4) {
            if (e4.format === 1)
              return e4.glyphs;
            for (var t4 = [], r4 = e4.ranges, o3 = 0;o3 < r4.length; o3++)
              for (var n2 = r4[o3], s3 = n2.start, i2 = n2.end, a2 = s3;a2 <= i2; a2++)
                t4.push(a2);
            return t4;
          } }).init = function() {
            var e4 = this.getDefaultScriptName();
            this.defaultKerningTables = this.getKerningTables(e4);
          }, kt.prototype.getKerningValue = function(e4, t4, r4) {
            for (var o3 = 0;o3 < e4.length; o3++)
              for (var n2 = e4[o3].subtables, s3 = 0;s3 < n2.length; s3++) {
                var i2 = n2[s3], a2 = this.getCoverageIndex(i2.coverage, t4);
                if (!(a2 < 0))
                  switch (i2.posFormat) {
                    case 1:
                      for (var l2 = i2.pairSets[a2], u2 = 0;u2 < l2.length; u2++) {
                        var c2 = l2[u2];
                        if (c2.secondGlyph === r4)
                          return c2.value1 && c2.value1.xAdvance || 0;
                      }
                      break;
                    case 2:
                      var d2 = this.getGlyphClass(i2.classDef1, t4), h2 = this.getGlyphClass(i2.classDef2, r4), d2 = i2.classRecords[d2][h2];
                      return d2.value1 && d2.value1.xAdvance || 0;
                  }
              }
            return 0;
          }, kt.prototype.getKerningTables = function(e4, t4) {
            if (this.font.tables.gpos)
              return this.getLookupTables(e4, t4, "kern", 2);
          }, (i.prototype = Et.prototype).createDefaultTable = function() {
            return { version: 1, scripts: [{ tag: "DFLT", script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }], features: [], lookups: [] };
          }, i.prototype.getSingle = function(e4, t4, r4) {
            for (var o3 = [], n2 = this.getLookupTables(t4, r4, e4, 1), s3 = 0;s3 < n2.length; s3++)
              for (var i2 = n2[s3].subtables, a2 = 0;a2 < i2.length; a2++) {
                var l2 = i2[a2], u2 = this.expandCoverage(l2.coverage), c2 = undefined;
                if (l2.substFormat === 1)
                  for (var d2 = l2.deltaGlyphId, c2 = 0;c2 < u2.length; c2++) {
                    var h2 = u2[c2];
                    o3.push({ sub: h2, by: h2 + d2 });
                  }
                else {
                  var f2 = l2.substitute;
                  for (c2 = 0;c2 < u2.length; c2++)
                    o3.push({ sub: u2[c2], by: f2[c2] });
                }
              }
            return o3;
          }, i.prototype.getAlternates = function(e4, t4, r4) {
            for (var o3 = [], n2 = this.getLookupTables(t4, r4, e4, 3), s3 = 0;s3 < n2.length; s3++)
              for (var i2 = n2[s3].subtables, a2 = 0;a2 < i2.length; a2++)
                for (var l2 = i2[a2], u2 = this.expandCoverage(l2.coverage), c2 = l2.alternateSets, d2 = 0;d2 < u2.length; d2++)
                  o3.push({ sub: u2[d2], by: c2[d2] });
            return o3;
          }, i.prototype.getLigatures = function(e4, t4, r4) {
            for (var o3 = [], n2 = this.getLookupTables(t4, r4, e4, 4), s3 = 0;s3 < n2.length; s3++)
              for (var i2 = n2[s3].subtables, a2 = 0;a2 < i2.length; a2++)
                for (var l2 = i2[a2], u2 = this.expandCoverage(l2.coverage), c2 = l2.ligatureSets, d2 = 0;d2 < u2.length; d2++)
                  for (var h2 = u2[d2], f2 = c2[d2], p2 = 0;p2 < f2.length; p2++) {
                    var m2 = f2[p2];
                    o3.push({ sub: [h2].concat(m2.components), by: m2.ligGlyph });
                  }
            return o3;
          }, i.prototype.addSingle = function(e4, t4, r4, o3) {
            r4 = Ct(this.getLookupTables(r4, o3, e4, 1, true)[0], 2, { substFormat: 2, coverage: { format: 1, glyphs: [] }, substitute: [] }), L.assert(r4.coverage.format === 1, "Ligature: unable to modify coverage table format " + r4.coverage.format), o3 = t4.sub, e4 = this.binSearch(r4.coverage.glyphs, o3);
            e4 < 0 && (r4.coverage.glyphs.splice(e4 = -1 - e4, 0, o3), r4.substitute.splice(e4, 0, 0)), r4.substitute[e4] = t4.by;
          }, i.prototype.addAlternate = function(e4, t4, r4, o3) {
            r4 = Ct(this.getLookupTables(r4, o3, e4, 3, true)[0], 1, { substFormat: 1, coverage: { format: 1, glyphs: [] }, alternateSets: [] }), L.assert(r4.coverage.format === 1, "Ligature: unable to modify coverage table format " + r4.coverage.format), o3 = t4.sub, e4 = this.binSearch(r4.coverage.glyphs, o3);
            e4 < 0 && (r4.coverage.glyphs.splice(e4 = -1 - e4, 0, o3), r4.alternateSets.splice(e4, 0, 0)), r4.alternateSets[e4] = t4.by;
          }, i.prototype.addLigature = function(e4, t4, r4, o3) {
            var r4 = this.getLookupTables(r4, o3, e4, 4, true)[0], o3 = r4.subtables[0], e4 = (o3 || (r4.subtables[0] = o3 = { substFormat: 1, coverage: { format: 1, glyphs: [] }, ligatureSets: [] }), L.assert(o3.coverage.format === 1, "Ligature: unable to modify coverage table format " + o3.coverage.format), t4.sub[0]), n2 = t4.sub.slice(1), r4 = { ligGlyph: t4.by, components: n2 }, t4 = this.binSearch(o3.coverage.glyphs, e4);
            if (0 <= t4) {
              for (var s3 = o3.ligatureSets[t4], i2 = 0;i2 < s3.length; i2++)
                if (function(e5, t5) {
                  var r5 = e5.length;
                  if (r5 === t5.length) {
                    for (var o4 = 0;o4 < r5; o4++)
                      if (e5[o4] !== t5[o4])
                        return;
                    return 1;
                  }
                }(s3[i2].components, n2))
                  return;
              s3.push(r4);
            } else
              o3.coverage.glyphs.splice(t4 = -1 - t4, 0, e4), o3.ligatureSets.splice(t4, 0, [r4]);
          }, i.prototype.getFeature = function(e4, t4, r4) {
            if (/ss\d\d/.test(e4))
              return this.getSingle(e4, t4, r4);
            switch (e4) {
              case "aalt":
              case "salt":
                return this.getSingle(e4, t4, r4).concat(this.getAlternates(e4, t4, r4));
              case "dlig":
              case "liga":
              case "rlig":
                return this.getLigatures(e4, t4, r4);
            }
          }, i.prototype.add = function(e4, t4, r4, o3) {
            if (/ss\d\d/.test(e4))
              return this.addSingle(e4, t4, r4, o3);
            switch (e4) {
              case "aalt":
              case "salt":
                return typeof t4.by == "number" ? this.addSingle(e4, t4, r4, o3) : this.addAlternate(e4, t4, r4, o3);
              case "dlig":
              case "liga":
              case "rlig":
                return this.addLigature(e4, t4, r4, o3);
            }
          };
          var Dt = { getPath: Rt, parse: function(e4, t4, r4, o3) {
            for (var n2 = new p.GlyphSet(o3), s3 = 0;s3 < r4.length - 1; s3 += 1) {
              var i2 = r4[s3];
              i2 !== r4[s3 + 1] ? n2.push(s3, p.ttfGlyphLoader(o3, s3, At, e4, t4 + i2, It)) : n2.push(s3, p.glyphLoader(o3, s3));
            }
            return n2;
          } };
          function Ft(e4) {
            this.font = e4, this.getCommands = function(e5) {
              return Dt.getPath(e5).commands;
            }, this._fpgmState = this._prepState = undefined, this._errorState = 0;
          }
          function Ut(e4) {
            return e4;
          }
          function Nt(e4) {
            return Math.sign(e4) * Math.round(Math.abs(e4));
          }
          function Bt(e4) {
            return Math.sign(e4) * Math.round(Math.abs(2 * e4)) / 2;
          }
          function Gt(e4) {
            return Math.sign(e4) * (Math.round(Math.abs(e4) + 0.5) - 0.5);
          }
          function Vt(e4) {
            return Math.sign(e4) * Math.ceil(Math.abs(e4));
          }
          function zt(e4) {
            return Math.sign(e4) * Math.floor(Math.abs(e4));
          }
          function Ht(e4) {
            var t4 = this.srPeriod, r4 = this.srPhase, o3 = 1;
            return e4 < 0 && (e4 = -e4, o3 = -1), e4 += this.srThreshold - r4, e4 = Math.trunc(e4 / t4) * t4, (e4 += r4) < 0 ? r4 * o3 : e4 * o3;
          }
          var x = { x: 1, y: 0, axis: "x", distance: function(e4, t4, r4, o3) {
            return (r4 ? e4.xo : e4.x) - (o3 ? t4.xo : t4.x);
          }, interpolate: function(e4, t4, r4, o3) {
            var n2, s3, i2, a2, l2, u2, c2;
            if (!o3 || o3 === this)
              return n2 = e4.xo - t4.xo, s3 = e4.xo - r4.xo, l2 = t4.x - t4.xo, u2 = r4.x - r4.xo, (c2 = (i2 = Math.abs(n2)) + (a2 = Math.abs(s3))) === 0 ? void (e4.x = e4.xo + (l2 + u2) / 2) : void (e4.x = e4.xo + (l2 * a2 + u2 * i2) / c2);
            n2 = o3.distance(e4, t4, true, true), s3 = o3.distance(e4, r4, true, true), l2 = o3.distance(t4, t4, false, true), u2 = o3.distance(r4, r4, false, true), (c2 = (i2 = Math.abs(n2)) + (a2 = Math.abs(s3))) === 0 ? x.setRelative(e4, e4, (l2 + u2) / 2, o3, true) : x.setRelative(e4, e4, (l2 * a2 + u2 * i2) / c2, o3, true);
          }, normalSlope: Number.NEGATIVE_INFINITY, setRelative: function(e4, t4, r4, o3, n2) {
            var s3, i2;
            o3 && o3 !== this ? (s3 = n2 ? t4.xo : t4.x, i2 = n2 ? t4.yo : t4.y, s3 += r4 * o3.x, i2 += r4 * o3.y, e4.x = s3 + (e4.y - i2) / o3.normalSlope) : e4.x = (n2 ? t4.xo : t4.x) + r4;
          }, slope: 0, touch: function(e4) {
            e4.xTouched = true;
          }, touched: function(e4) {
            return e4.xTouched;
          }, untouch: function(e4) {
            e4.xTouched = false;
          } }, T = { x: 0, y: 1, axis: "y", distance: function(e4, t4, r4, o3) {
            return (r4 ? e4.yo : e4.y) - (o3 ? t4.yo : t4.y);
          }, interpolate: function(e4, t4, r4, o3) {
            var n2, s3, i2, a2, l2, u2, c2;
            if (!o3 || o3 === this)
              return n2 = e4.yo - t4.yo, s3 = e4.yo - r4.yo, l2 = t4.y - t4.yo, u2 = r4.y - r4.yo, (c2 = (i2 = Math.abs(n2)) + (a2 = Math.abs(s3))) === 0 ? void (e4.y = e4.yo + (l2 + u2) / 2) : void (e4.y = e4.yo + (l2 * a2 + u2 * i2) / c2);
            n2 = o3.distance(e4, t4, true, true), s3 = o3.distance(e4, r4, true, true), l2 = o3.distance(t4, t4, false, true), u2 = o3.distance(r4, r4, false, true), (c2 = (i2 = Math.abs(n2)) + (a2 = Math.abs(s3))) === 0 ? T.setRelative(e4, e4, (l2 + u2) / 2, o3, true) : T.setRelative(e4, e4, (l2 * a2 + u2 * i2) / c2, o3, true);
          }, normalSlope: 0, setRelative: function(e4, t4, r4, o3, n2) {
            var s3, i2;
            o3 && o3 !== this ? (s3 = n2 ? t4.xo : t4.x, i2 = n2 ? t4.yo : t4.y, s3 += r4 * o3.x, i2 += r4 * o3.y, e4.y = i2 + o3.normalSlope * (e4.x - s3)) : e4.y = (n2 ? t4.yo : t4.y) + r4;
          }, slope: Number.POSITIVE_INFINITY, touch: function(e4) {
            e4.yTouched = true;
          }, touched: function(e4) {
            return e4.yTouched;
          }, untouch: function(e4) {
            e4.yTouched = false;
          } };
          function Wt(e4, t4) {
            this.x = e4, this.y = t4, this.axis = undefined, this.slope = t4 / e4, this.normalSlope = -e4 / t4, Object.freeze(this);
          }
          function qt(e4, t4) {
            var r4 = Math.sqrt(e4 * e4 + t4 * t4);
            return t4 /= r4, (e4 /= r4) === 1 && t4 === 0 ? x : e4 === 0 && t4 === 1 ? T : new Wt(e4, t4);
          }
          function M(e4, t4, r4, o3) {
            this.x = this.xo = Math.round(64 * e4) / 64, this.y = this.yo = Math.round(64 * t4) / 64, this.lastPointOfContour = r4, this.onCurve = o3, this.prevPointOnContour = undefined, this.nextPointOnContour = undefined, this.xTouched = false, this.yTouched = false, Object.preventExtensions(this);
          }
          Object.freeze(x), Object.freeze(T), Wt.prototype.distance = function(e4, t4, r4, o3) {
            return this.x * x.distance(e4, t4, r4, o3) + this.y * T.distance(e4, t4, r4, o3);
          }, Wt.prototype.interpolate = function(e4, t4, r4, o3) {
            var n2 = o3.distance(e4, t4, true, true), s3 = o3.distance(e4, r4, true, true), t4 = o3.distance(t4, t4, false, true), r4 = o3.distance(r4, r4, false, true), n2 = Math.abs(n2), s3 = Math.abs(s3), i2 = n2 + s3;
            i2 === 0 ? this.setRelative(e4, e4, (t4 + r4) / 2, o3, true) : this.setRelative(e4, e4, (t4 * s3 + r4 * n2) / i2, o3, true);
          }, Wt.prototype.setRelative = function(e4, t4, r4, o3, n2) {
            var s3 = n2 ? t4.xo : t4.x, n2 = n2 ? t4.yo : t4.y, t4 = s3 + r4 * (o3 = o3 || this).x, s3 = n2 + r4 * o3.y, n2 = o3.normalSlope, r4 = this.slope, o3 = e4.x, i2 = e4.y;
            e4.x = (r4 * o3 - n2 * t4 + s3 - i2) / (r4 - n2), e4.y = r4 * (e4.x - o3) + i2;
          }, Wt.prototype.touch = function(e4) {
            e4.xTouched = true, e4.yTouched = true;
          }, M.prototype.nextTouched = function(e4) {
            for (var t4 = this.nextPointOnContour;!e4.touched(t4) && t4 !== this; )
              t4 = t4.nextPointOnContour;
            return t4;
          }, M.prototype.prevTouched = function(e4) {
            for (var t4 = this.prevPointOnContour;!e4.touched(t4) && t4 !== this; )
              t4 = t4.prevPointOnContour;
            return t4;
          };
          var Xt = Object.freeze(new M(0, 0)), Yt = { cvCutIn: 17 / 16, deltaBase: 9, deltaShift: 0.125, loop: 1, minDis: 1, autoFlip: true };
          function E(e4, t4) {
            switch (this.env = e4, this.stack = [], this.prog = t4, e4) {
              case "glyf":
                this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
              case "prep":
                this.fv = this.pv = this.dpv = x, this.round = Nt;
            }
          }
          function Zt(e4) {
            for (var t4 = e4.tZone = new Array(e4.gZone.length), r4 = 0;r4 < t4.length; r4++)
              t4[r4] = new M(0, 0);
          }
          function Qt(e4, t4) {
            var r4, o3 = e4.prog, n2 = e4.ip, s3 = 1;
            do {
              if ((r4 = o3[++n2]) === 88)
                s3++;
              else if (r4 === 89)
                s3--;
              else if (r4 === 64)
                n2 += o3[n2 + 1] + 1;
              else if (r4 === 65)
                n2 += 2 * o3[n2 + 1] + 1;
              else if (176 <= r4 && r4 <= 183)
                n2 += r4 - 176 + 1;
              else if (184 <= r4 && r4 <= 191)
                n2 += 2 * (r4 - 184 + 1);
              else if (t4 && s3 === 1 && r4 === 27)
                break;
            } while (0 < s3);
            e4.ip = n2;
          }
          function Jt(e4, t4) {
            j.DEBUG && console.log(t4.step, "SVTCA[" + e4.axis + "]"), t4.fv = t4.pv = t4.dpv = e4;
          }
          function Kt(e4, t4) {
            j.DEBUG && console.log(t4.step, "SPVTCA[" + e4.axis + "]"), t4.pv = t4.dpv = e4;
          }
          function $t(e4, t4) {
            j.DEBUG && console.log(t4.step, "SFVTCA[" + e4.axis + "]"), t4.fv = e4;
          }
          function er(e4, t4) {
            var r4, o3 = t4.stack, n2 = o3.pop(), o3 = o3.pop(), s3 = t4.z2[n2], i2 = t4.z1[o3];
            j.DEBUG && console.log("SPVTL[" + e4 + "]", n2, o3), n2 = e4 ? (r4 = s3.y - i2.y, i2.x - s3.x) : (r4 = i2.x - s3.x, i2.y - s3.y), t4.pv = t4.dpv = qt(r4, n2);
          }
          function tr(e4, t4) {
            var r4, o3 = t4.stack, n2 = o3.pop(), o3 = o3.pop(), s3 = t4.z2[n2], i2 = t4.z1[o3];
            j.DEBUG && console.log("SFVTL[" + e4 + "]", n2, o3), n2 = e4 ? (r4 = s3.y - i2.y, i2.x - s3.x) : (r4 = i2.x - s3.x, i2.y - s3.y), t4.fv = qt(r4, n2);
          }
          function rr(e4) {
            j.DEBUG && console.log(e4.step, "POP[]"), e4.stack.pop();
          }
          function or(e4, t4) {
            var r4 = t4.stack.pop(), o3 = t4.z0[r4], n2 = t4.fv, s3 = t4.pv, i2 = (j.DEBUG && console.log(t4.step, "MDAP[" + e4 + "]", r4), s3.distance(o3, Xt));
            e4 && (i2 = t4.round(i2)), n2.setRelative(o3, Xt, i2, s3), n2.touch(o3), t4.rp0 = t4.rp1 = r4;
          }
          function nr(e4, t4) {
            var r4, o3, n2, s3 = t4.z2, i2 = s3.length - 2;
            j.DEBUG && console.log(t4.step, "IUP[" + e4.axis + "]");
            for (var a2 = 0;a2 < i2; a2++)
              r4 = s3[a2], e4.touched(r4) || (o3 = r4.prevTouched(e4)) !== r4 && (o3 === (n2 = r4.nextTouched(e4)) && e4.setRelative(r4, r4, e4.distance(o3, o3, false, true), e4, true), e4.interpolate(r4, o3, n2, e4));
          }
          function sr(e4, t4) {
            for (var r4 = t4.stack, o3 = e4 ? t4.rp1 : t4.rp2, n2 = (e4 ? t4.z0 : t4.z1)[o3], s3 = t4.fv, i2 = t4.pv, a2 = t4.loop, l2 = t4.z2;a2--; ) {
              var u2 = r4.pop(), c2 = l2[u2], d2 = i2.distance(n2, n2, false, true);
              s3.setRelative(c2, c2, d2, i2), s3.touch(c2), j.DEBUG && console.log(t4.step, (1 < t4.loop ? "loop " + (t4.loop - a2) + ": " : "") + "SHP[" + (e4 ? "rp1" : "rp2") + "]", u2);
            }
            t4.loop = 1;
          }
          function ir(e4, t4) {
            for (var r4 = t4.stack, o3 = e4 ? t4.rp1 : t4.rp2, n2 = (e4 ? t4.z0 : t4.z1)[o3], s3 = t4.fv, i2 = t4.pv, o3 = r4.pop(), a2 = t4.z2[t4.contours[o3]], l2 = a2, u2 = (j.DEBUG && console.log(t4.step, "SHC[" + e4 + "]", o3), i2.distance(n2, n2, false, true));l2 !== n2 && s3.setRelative(l2, l2, u2, i2), (l2 = l2.nextPointOnContour) !== a2; )
              ;
          }
          function ar(e4, t4) {
            var r4, o3, n2 = t4.stack, s3 = e4 ? t4.rp1 : t4.rp2, s3 = (e4 ? t4.z0 : t4.z1)[s3], i2 = t4.fv, a2 = t4.pv, n2 = n2.pop();
            switch (j.DEBUG && console.log(t4.step, "SHZ[" + e4 + "]", n2), n2) {
              case 0:
                r4 = t4.tZone;
                break;
              case 1:
                r4 = t4.gZone;
                break;
              default:
                throw new Error("Invalid zone");
            }
            for (var l2 = a2.distance(s3, s3, false, true), u2 = r4.length - 2, c2 = 0;c2 < u2; c2++)
              o3 = r4[c2], i2.setRelative(o3, o3, l2, a2);
          }
          function lr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop() / 64, r4 = r4.pop(), n2 = t4.z1[r4], s3 = t4.z0[t4.rp0], i2 = t4.fv, a2 = t4.pv;
            i2.setRelative(n2, s3, o3, a2), i2.touch(n2), j.DEBUG && console.log(t4.step, "MSIRP[" + e4 + "]", o3, r4), t4.rp1 = t4.rp0, t4.rp2 = r4, e4 && (t4.rp0 = r4);
          }
          function ur(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop(), r4 = r4.pop(), n2 = t4.z0[r4], s3 = t4.fv, i2 = t4.pv, a2 = t4.cvt[o3], o3 = (j.DEBUG && console.log(t4.step, "MIAP[" + e4 + "]", o3, "(", a2, ")", r4), i2.distance(n2, Xt));
            e4 && (Math.abs(o3 - a2) < t4.cvCutIn && (o3 = a2), o3 = t4.round(o3)), s3.setRelative(n2, Xt, o3, i2), t4.zp0 === 0 && (n2.xo = n2.x, n2.yo = n2.y), s3.touch(n2), t4.rp0 = t4.rp1 = r4;
          }
          function cr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop(), n2 = t4.z2[o3];
            j.DEBUG && console.log(t4.step, "GC[" + e4 + "]", o3), r4.push(64 * t4.dpv.distance(n2, Xt, e4, false));
          }
          function dr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop(), r4 = r4.pop(), n2 = t4.z1[o3], s3 = t4.z0[r4], s3 = t4.dpv.distance(s3, n2, e4, e4);
            j.DEBUG && console.log(t4.step, "MD[" + e4 + "]", o3, r4, "->", s3), t4.stack.push(Math.round(64 * s3));
          }
          function hr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop(), n2 = t4.fv, s3 = t4.pv, i2 = t4.ppem, a2 = t4.deltaBase + 16 * (e4 - 1), l2 = t4.deltaShift, u2 = t4.z0;
            j.DEBUG && console.log(t4.step, "DELTAP[" + e4 + "]", o3, r4);
            for (var c2 = 0;c2 < o3; c2++) {
              var d2 = r4.pop(), h2 = r4.pop();
              a2 + ((240 & h2) >> 4) === i2 && (0 <= (h2 = (15 & h2) - 8) && h2++, j.DEBUG && console.log(t4.step, "DELTAPFIX", d2, "by", h2 * l2), d2 = u2[d2], n2.setRelative(d2, d2, h2 * l2, s3));
            }
          }
          function fr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop();
            j.DEBUG && console.log(t4.step, "ROUND[]"), r4.push(64 * t4.round(o3 / 64));
          }
          function pr(e4, t4) {
            var r4 = t4.stack, o3 = r4.pop(), n2 = t4.ppem, s3 = t4.deltaBase + 16 * (e4 - 1), i2 = t4.deltaShift;
            j.DEBUG && console.log(t4.step, "DELTAC[" + e4 + "]", o3, r4);
            for (var a2 = 0;a2 < o3; a2++) {
              var l2 = r4.pop(), u2 = r4.pop();
              s3 + ((240 & u2) >> 4) === n2 && (0 <= (u2 = (15 & u2) - 8) && u2++, u2 = u2 * i2, j.DEBUG && console.log(t4.step, "DELTACFIX", l2, "by", u2), t4.cvt[l2] += u2);
            }
          }
          function mr(e4, t4) {
            var r4, o3 = t4.stack, n2 = o3.pop(), o3 = o3.pop(), s3 = t4.z2[n2], i2 = t4.z1[o3];
            j.DEBUG && console.log(t4.step, "SDPVTL[" + e4 + "]", n2, o3), n2 = e4 ? (r4 = s3.y - i2.y, i2.x - s3.x) : (r4 = i2.x - s3.x, i2.y - s3.y), t4.dpv = qt(r4, n2);
          }
          function k(e4, t4) {
            var { stack: r4, prog: o3, ip: n2 } = t4;
            j.DEBUG && console.log(t4.step, "PUSHB[" + e4 + "]");
            for (var s3 = 0;s3 < e4; s3++)
              r4.push(o3[++n2]);
            t4.ip = n2;
          }
          function C(e4, t4) {
            var { ip: r4, prog: o3, stack: n2 } = t4;
            j.DEBUG && console.log(t4.ip, "PUSHW[" + e4 + "]");
            for (var s3 = 0;s3 < e4; s3++) {
              var i2 = o3[++r4] << 8 | o3[++r4];
              32768 & i2 && (i2 = -(1 + (65535 ^ i2))), n2.push(i2);
            }
            t4.ip = r4;
          }
          function O(e4, t4, r4, o3, n2, s3) {
            var i2, a2, l2 = s3.stack, u2 = e4 && l2.pop(), l2 = l2.pop(), c2 = s3.rp0, c2 = s3.z0[c2], d2 = s3.z1[l2], h2 = s3.minDis, f2 = s3.fv, p2 = s3.dpv, m2 = i2 = p2.distance(d2, c2, true, true), y2 = 0 <= m2 ? 1 : -1;
            m2 = Math.abs(m2), e4 && (a2 = s3.cvt[u2], o3 && Math.abs(m2 - a2) < s3.cvCutIn && (m2 = a2)), r4 && m2 < h2 && (m2 = h2), o3 && (m2 = s3.round(m2)), f2.setRelative(d2, c2, y2 * m2, p2), f2.touch(d2), j.DEBUG && console.log(s3.step, (e4 ? "MIRP[" : "MDRP[") + (t4 ? "M" : "m") + (r4 ? ">" : "_") + (o3 ? "R" : "_") + (n2 === 0 ? "Gr" : n2 === 1 ? "Bl" : n2 === 2 ? "Wh" : "") + "]", e4 ? u2 + "(" + s3.cvt[u2] + "," + a2 + ")" : "", l2, "(d =", i2, "->", y2 * m2, ")"), s3.rp1 = s3.rp0, s3.rp2 = l2, t4 && (s3.rp0 = l2);
          }
          Ft.prototype.exec = function(e4, t4) {
            if (typeof t4 != "number")
              throw new Error("Point size is not a number!");
            if (!(2 < this._errorState)) {
              var r4 = this.font, o3 = this._prepState;
              if (!o3 || o3.ppem !== t4) {
                var n2 = this._fpgmState;
                if (!n2) {
                  E.prototype = Yt, (n2 = this._fpgmState = new E("fpgm", r4.tables.fpgm)).funcs = [], n2.font = r4, j.DEBUG && (console.log("---EXEC FPGM---"), n2.step = -1);
                  try {
                    vr(n2);
                  } catch (e5) {
                    return console.log("Hinting error in FPGM:" + e5), void (this._errorState = 3);
                  }
                }
                E.prototype = n2, (o3 = this._prepState = new E("prep", r4.tables.prep)).ppem = t4;
                var s3 = r4.tables.cvt;
                if (s3)
                  for (var i2 = o3.cvt = new Array(s3.length), a2 = t4 / r4.unitsPerEm, l2 = 0;l2 < s3.length; l2++)
                    i2[l2] = s3[l2] * a2;
                else
                  o3.cvt = [];
                j.DEBUG && (console.log("---EXEC PREP---"), o3.step = -1);
                try {
                  vr(o3);
                } catch (e5) {
                  this._errorState < 2 && console.log("Hinting error in PREP:" + e5), this._errorState = 2;
                }
              }
              if (!(1 < this._errorState))
                try {
                  return yr(e4, o3);
                } catch (e5) {
                  this._errorState < 1 && (console.log("Hinting error:" + e5), console.log("Note: further hinting errors are silenced")), this._errorState = 1;
                }
            }
          };
          var yr = function(e4, t4) {
            var r4 = t4.ppem / t4.font.unitsPerEm, o3 = r4, n2 = e4.components;
            if (E.prototype = t4, n2) {
              for (var s3 = t4.font, i2 = [], a2 = [], l2 = 0;l2 < n2.length; l2++) {
                var u2 = n2[l2], c2 = s3.glyphs.get(u2.glyphIndex), d2 = new E("glyf", c2.instructions);
                j.DEBUG && (console.log("---EXEC COMP " + l2 + "---"), d2.step = -1), gr(c2, d2, r4, o3);
                for (var h2 = Math.round(u2.dx * r4), f2 = Math.round(u2.dy * o3), p2 = d2.gZone, m2 = d2.contours, y2 = 0;y2 < p2.length; y2++) {
                  var g2 = p2[y2];
                  g2.xTouched = g2.yTouched = false, g2.xo = g2.x = g2.x + h2, g2.yo = g2.y = g2.y + f2;
                }
                var v2 = i2.length;
                i2.push.apply(i2, p2);
                for (var b2 = 0;b2 < m2.length; b2++)
                  a2.push(m2[b2] + v2);
              }
              e4.instructions && !d2.inhibitGridFit && ((d2 = new E("glyf", e4.instructions)).gZone = d2.z0 = d2.z1 = d2.z2 = i2, d2.contours = a2, i2.push(new M(0, 0), new M(Math.round(e4.advanceWidth * r4), 0)), j.DEBUG && (console.log("---EXEC COMPOSITE---"), d2.step = -1), vr(d2), i2.length -= 2);
            } else
              d2 = new E("glyf", e4.instructions), j.DEBUG && (console.log("---EXEC GLYPH---"), d2.step = -1), gr(e4, d2, r4, o3), i2 = d2.gZone;
            return i2;
          }, gr = function(e4, t4, r4, o3) {
            for (var n2, s3, i2, a2 = e4.points || [], l2 = a2.length, u2 = t4.gZone = t4.z0 = t4.z1 = t4.z2 = [], c2 = t4.contours = [], d2 = 0;d2 < l2; d2++)
              n2 = a2[d2], u2[d2] = new M(n2.x * r4, n2.y * o3, n2.lastPointOfContour, n2.onCurve);
            for (var h2 = 0;h2 < l2; h2++)
              n2 = u2[h2], s3 || (s3 = n2, c2.push(h2)), n2.lastPointOfContour ? ((n2.nextPointOnContour = s3).prevPointOnContour = n2, s3 = undefined) : (i2 = u2[h2 + 1], (n2.nextPointOnContour = i2).prevPointOnContour = n2);
            if (!t4.inhibitGridFit) {
              if (j.DEBUG) {
                console.log("PROCESSING GLYPH", t4.stack);
                for (var f2 = 0;f2 < l2; f2++)
                  console.log(f2, u2[f2].x, u2[f2].y);
              }
              if (u2.push(new M(0, 0), new M(Math.round(e4.advanceWidth * r4), 0)), vr(t4), u2.length -= 2, j.DEBUG) {
                console.log("FINISHED GLYPH", t4.stack);
                for (var p2 = 0;p2 < l2; p2++)
                  console.log(p2, u2[p2].x, u2[p2].y);
              }
            }
          }, vr = function(e4) {
            var t4 = e4.prog;
            if (t4) {
              var r4, o3 = t4.length;
              for (e4.ip = 0;e4.ip < o3; e4.ip++) {
                if (j.DEBUG && e4.step++, !(r4 = br[t4[e4.ip]]))
                  throw new Error("unknown instruction: 0x" + Number(t4[e4.ip]).toString(16));
                r4(e4);
              }
            }
          }, br = [Jt.bind(undefined, T), Jt.bind(undefined, x), Kt.bind(undefined, T), Kt.bind(undefined, x), $t.bind(undefined, T), $t.bind(undefined, x), er.bind(undefined, 0), er.bind(undefined, 1), tr.bind(undefined, 0), tr.bind(undefined, 1), function(e4) {
            var t4 = (r4 = e4.stack).pop(), r4 = r4.pop();
            j.DEBUG && console.log(e4.step, "SPVFS[]", t4, r4), e4.pv = e4.dpv = qt(r4, t4);
          }, function(e4) {
            var t4 = (r4 = e4.stack).pop(), r4 = r4.pop();
            j.DEBUG && console.log(e4.step, "SPVFS[]", t4, r4), e4.fv = qt(r4, t4);
          }, function(e4) {
            var { stack: t4, pv: r4 } = e4;
            j.DEBUG && console.log(e4.step, "GPV[]"), t4.push(16384 * r4.x), t4.push(16384 * r4.y);
          }, function(e4) {
            var { stack: t4, fv: r4 } = e4;
            j.DEBUG && console.log(e4.step, "GFV[]"), t4.push(16384 * r4.x), t4.push(16384 * r4.y);
          }, function(e4) {
            e4.fv = e4.pv, j.DEBUG && console.log(e4.step, "SFVTPV[]");
          }, function(e4) {
            var t4 = (s3 = e4.stack).pop(), r4 = s3.pop(), o3 = s3.pop(), n2 = s3.pop(), s3 = s3.pop(), i2 = e4.z0, a2 = e4.z1, l2 = i2[t4], i2 = i2[r4], u2 = a2[o3], a2 = a2[n2], e4 = e4.z2[s3], t4 = (j.DEBUG && console.log("ISECT[], ", t4, r4, o3, n2, s3), l2.x), r4 = l2.y, o3 = i2.x, n2 = i2.y, s3 = u2.x, l2 = u2.y, i2 = a2.x, u2 = a2.y, a2 = (t4 - o3) * (l2 - u2) - (r4 - n2) * (s3 - i2), c2 = t4 * n2 - r4 * o3, d2 = s3 * u2 - l2 * i2;
            e4.x = (c2 * (s3 - i2) - d2 * (t4 - o3)) / a2, e4.y = (c2 * (l2 - u2) - d2 * (r4 - n2)) / a2;
          }, function(e4) {
            e4.rp0 = e4.stack.pop(), j.DEBUG && console.log(e4.step, "SRP0[]", e4.rp0);
          }, function(e4) {
            e4.rp1 = e4.stack.pop(), j.DEBUG && console.log(e4.step, "SRP1[]", e4.rp1);
          }, function(e4) {
            e4.rp2 = e4.stack.pop(), j.DEBUG && console.log(e4.step, "SRP2[]", e4.rp2);
          }, function(e4) {
            var t4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "SZP0[]", t4), e4.zp0 = t4) {
              case 0:
                e4.tZone || Zt(e4), e4.z0 = e4.tZone;
                break;
              case 1:
                e4.z0 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "SZP1[]", t4), e4.zp1 = t4) {
              case 0:
                e4.tZone || Zt(e4), e4.z1 = e4.tZone;
                break;
              case 1:
                e4.z1 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "SZP2[]", t4), e4.zp2 = t4) {
              case 0:
                e4.tZone || Zt(e4), e4.z2 = e4.tZone;
                break;
              case 1:
                e4.z2 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "SZPS[]", t4), e4.zp0 = e4.zp1 = e4.zp2 = t4) {
              case 0:
                e4.tZone || Zt(e4), e4.z0 = e4.z1 = e4.z2 = e4.tZone;
                break;
              case 1:
                e4.z0 = e4.z1 = e4.z2 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            e4.loop = e4.stack.pop(), j.DEBUG && console.log(e4.step, "SLOOP[]", e4.loop);
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "RTG[]"), e4.round = Nt;
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "RTHG[]"), e4.round = Gt;
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SMD[]", t4), e4.minDis = t4 / 64;
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "ELSE[]"), Qt(e4, false);
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "JMPR[]", t4), e4.ip += t4 - 1;
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SCVTCI[]", t4), e4.cvCutIn = t4 / 64;
          }, undefined, undefined, function(e4) {
            var t4 = e4.stack;
            j.DEBUG && console.log(e4.step, "DUP[]"), t4.push(t4[t4.length - 1]);
          }, rr, function(e4) {
            j.DEBUG && console.log(e4.step, "CLEAR[]"), e4.stack.length = 0;
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "SWAP[]"), t4.push(r4), t4.push(o3);
          }, function(e4) {
            var t4 = e4.stack;
            j.DEBUG && console.log(e4.step, "DEPTH[]"), t4.push(t4.length);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "CINDEX[]", r4), t4.push(t4[t4.length - r4]);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "MINDEX[]", r4), t4.push(t4.splice(t4.length - r4, 1)[0]);
          }, undefined, undefined, undefined, function(e4) {
            var t4 = (o3 = e4.stack).pop(), r4 = o3.pop(), o3 = (j.DEBUG && console.log(e4.step, "LOOPCALL[]", t4, r4), e4.ip), n2 = e4.prog;
            e4.prog = e4.funcs[t4];
            for (var s3 = 0;s3 < r4; s3++)
              vr(e4), j.DEBUG && console.log(++e4.step, s3 + 1 < r4 ? "next loopcall" : "done loopcall", s3);
            e4.ip = o3, e4.prog = n2;
          }, function(e4) {
            var t4 = e4.stack.pop(), r4 = (j.DEBUG && console.log(e4.step, "CALL[]", t4), e4.ip), o3 = e4.prog;
            e4.prog = e4.funcs[t4], vr(e4), e4.ip = r4, e4.prog = o3, j.DEBUG && console.log(++e4.step, "returning from", t4);
          }, function(e4) {
            if (e4.env !== "fpgm")
              throw new Error("FDEF not allowed here");
            var { stack: t4, prog: r4, ip: o3 } = e4, t4 = t4.pop(), n2 = o3;
            for (j.DEBUG && console.log(e4.step, "FDEF[]", t4);r4[++o3] !== 45; )
              ;
            e4.ip = o3, e4.funcs[t4] = r4.slice(n2 + 1, o3);
          }, undefined, or.bind(undefined, 0), or.bind(undefined, 1), nr.bind(undefined, T), nr.bind(undefined, x), sr.bind(undefined, 0), sr.bind(undefined, 1), ir.bind(undefined, 0), ir.bind(undefined, 1), ar.bind(undefined, 0), ar.bind(undefined, 1), function(e4) {
            for (var { stack: t4, loop: r4, fv: o3 } = e4, n2 = t4.pop() / 64, s3 = e4.z2;r4--; ) {
              var i2 = t4.pop(), a2 = s3[i2];
              j.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - r4) + ": " : "") + "SHPIX[]", i2, n2), o3.setRelative(a2, a2, n2), o3.touch(a2);
            }
            e4.loop = 1;
          }, function(e4) {
            for (var { stack: t4, rp1: r4, rp2: o3, loop: n2 } = e4, s3 = e4.z0[r4], i2 = e4.z1[o3], a2 = e4.fv, l2 = e4.dpv, u2 = e4.z2;n2--; ) {
              var c2 = t4.pop(), d2 = u2[c2];
              j.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - n2) + ": " : "") + "IP[]", c2, r4, "<->", o3), a2.interpolate(d2, s3, i2, l2), a2.touch(d2);
            }
            e4.loop = 1;
          }, lr.bind(undefined, 0), lr.bind(undefined, 1), function(e4) {
            for (var { stack: t4, rp0: r4 } = e4, o3 = e4.z0[r4], n2 = e4.loop, s3 = e4.fv, i2 = e4.pv, a2 = e4.z1;n2--; ) {
              var l2 = t4.pop(), u2 = a2[l2];
              j.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - n2) + ": " : "") + "ALIGNRP[]", l2), s3.setRelative(u2, o3, 0, i2), s3.touch(u2);
            }
            e4.loop = 1;
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "RTDG[]"), e4.round = Bt;
          }, ur.bind(undefined, 0), ur.bind(undefined, 1), function(e4) {
            var { prog: t4, ip: r4, stack: o3 } = e4, n2 = t4[++r4];
            j.DEBUG && console.log(e4.step, "NPUSHB[]", n2);
            for (var s3 = 0;s3 < n2; s3++)
              o3.push(t4[++r4]);
            e4.ip = r4;
          }, function(e4) {
            var { ip: t4, prog: r4, stack: o3 } = e4, n2 = r4[++t4];
            j.DEBUG && console.log(e4.step, "NPUSHW[]", n2);
            for (var s3 = 0;s3 < n2; s3++) {
              var i2 = r4[++t4] << 8 | r4[++t4];
              32768 & i2 && (i2 = -(1 + (65535 ^ i2))), o3.push(i2);
            }
            e4.ip = t4;
          }, function(e4) {
            var t4 = e4.stack, r4 = (r4 = e4.store) || (e4.store = []), o3 = t4.pop(), t4 = t4.pop();
            j.DEBUG && console.log(e4.step, "WS", o3, t4), r4[t4] = o3;
          }, function(e4) {
            var { stack: t4, store: r4 } = e4, o3 = t4.pop(), e4 = (j.DEBUG && console.log(e4.step, "RS", o3), r4 && r4[o3] || 0);
            t4.push(e4);
          }, function(e4) {
            var t4 = (r4 = e4.stack).pop(), r4 = r4.pop();
            j.DEBUG && console.log(e4.step, "WCVTP", t4, r4), e4.cvt[r4] = t4 / 64;
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "RCVT", r4), t4.push(64 * e4.cvt[r4]);
          }, cr.bind(undefined, 0), cr.bind(undefined, 1), undefined, dr.bind(undefined, 0), dr.bind(undefined, 1), function(e4) {
            j.DEBUG && console.log(e4.step, "MPPEM[]"), e4.stack.push(e4.ppem);
          }, undefined, function(e4) {
            j.DEBUG && console.log(e4.step, "FLIPON[]"), e4.autoFlip = true;
          }, undefined, undefined, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "LT[]", r4, o3), t4.push(o3 < r4 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "LTEQ[]", r4, o3), t4.push(o3 <= r4 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "GT[]", r4, o3), t4.push(r4 < o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "GTEQ[]", r4, o3), t4.push(r4 <= o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "EQ[]", r4, o3), t4.push(r4 === o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "NEQ[]", r4, o3), t4.push(r4 !== o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "ODD[]", r4), t4.push(Math.trunc(r4) % 2 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "EVEN[]", r4), t4.push(Math.trunc(r4) % 2 ? 0 : 1);
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "IF[]", t4), t4 || (Qt(e4, true), j.DEBUG && console.log(e4.step, "EIF[]"));
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "EIF[]");
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "AND[]", r4, o3), t4.push(r4 && o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "OR[]", r4, o3), t4.push(r4 || o3 ? 1 : 0);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "NOT[]", r4), t4.push(r4 ? 0 : 1);
          }, hr.bind(undefined, 1), function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SDB[]", t4), e4.deltaBase = t4;
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SDS[]", t4), e4.deltaShift = Math.pow(0.5, t4);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "ADD[]", r4, o3), t4.push(o3 + r4);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "SUB[]", r4, o3), t4.push(o3 - r4);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "DIV[]", r4, o3), t4.push(64 * o3 / r4);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "MUL[]", r4, o3), t4.push(o3 * r4 / 64);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "ABS[]", r4), t4.push(Math.abs(r4));
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "NEG[]", r4), t4.push(-r4);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "FLOOR[]", r4), t4.push(64 * Math.floor(r4 / 64));
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop();
            j.DEBUG && console.log(e4.step, "CEILING[]", r4), t4.push(64 * Math.ceil(r4 / 64));
          }, fr.bind(undefined, 0), fr.bind(undefined, 1), fr.bind(undefined, 2), fr.bind(undefined, 3), undefined, undefined, undefined, undefined, function(e4) {
            var t4 = (r4 = e4.stack).pop(), r4 = r4.pop();
            j.DEBUG && console.log(e4.step, "WCVTF[]", t4, r4), e4.cvt[r4] = t4 * e4.ppem / e4.font.unitsPerEm;
          }, hr.bind(undefined, 2), hr.bind(undefined, 3), pr.bind(undefined, 1), pr.bind(undefined, 2), pr.bind(undefined, 3), function(e4) {
            var t4, r4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "SROUND[]", r4), e4.round = Ht, 192 & r4) {
              case 0:
                t4 = 0.5;
                break;
              case 64:
                t4 = 1;
                break;
              case 128:
                t4 = 2;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            switch (e4.srPeriod = t4, 48 & r4) {
              case 0:
                e4.srPhase = 0;
                break;
              case 16:
                e4.srPhase = 0.25 * t4;
                break;
              case 32:
                e4.srPhase = 0.5 * t4;
                break;
              case 48:
                e4.srPhase = 0.75 * t4;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            e4.srThreshold = (r4 &= 15) === 0 ? 0 : (r4 / 8 - 0.5) * t4;
          }, function(e4) {
            var t4, r4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "S45ROUND[]", r4), e4.round = Ht, 192 & r4) {
              case 0:
                t4 = Math.sqrt(2) / 2;
                break;
              case 64:
                t4 = Math.sqrt(2);
                break;
              case 128:
                t4 = 2 * Math.sqrt(2);
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            switch (e4.srPeriod = t4, 48 & r4) {
              case 0:
                e4.srPhase = 0;
                break;
              case 16:
                e4.srPhase = 0.25 * t4;
                break;
              case 32:
                e4.srPhase = 0.5 * t4;
                break;
              case 48:
                e4.srPhase = 0.75 * t4;
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            e4.srThreshold = (r4 &= 15) === 0 ? 0 : (r4 / 8 - 0.5) * t4;
          }, undefined, undefined, function(e4) {
            j.DEBUG && console.log(e4.step, "ROFF[]"), e4.round = Ut;
          }, undefined, function(e4) {
            j.DEBUG && console.log(e4.step, "RUTG[]"), e4.round = Vt;
          }, function(e4) {
            j.DEBUG && console.log(e4.step, "RDTG[]"), e4.round = zt;
          }, rr, rr, undefined, undefined, undefined, undefined, undefined, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SCANCTRL[]", t4);
          }, mr.bind(undefined, 0), mr.bind(undefined, 1), function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = 0;
            j.DEBUG && console.log(e4.step, "GETINFO[]", r4), 1 & r4 && (o3 = 35), 32 & r4 && (o3 |= 4096), t4.push(o3);
          }, undefined, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop(), n2 = t4.pop();
            j.DEBUG && console.log(e4.step, "ROLL[]"), t4.push(o3), t4.push(r4), t4.push(n2);
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "MAX[]", r4, o3), t4.push(Math.max(o3, r4));
          }, function(e4) {
            var t4 = e4.stack, r4 = t4.pop(), o3 = t4.pop();
            j.DEBUG && console.log(e4.step, "MIN[]", r4, o3), t4.push(Math.min(o3, r4));
          }, function(e4) {
            var t4 = e4.stack.pop();
            j.DEBUG && console.log(e4.step, "SCANTYPE[]", t4);
          }, function(e4) {
            var t4 = e4.stack.pop(), r4 = e4.stack.pop();
            switch (j.DEBUG && console.log(e4.step, "INSTCTRL[]", t4, r4), t4) {
              case 1:
                return void (e4.inhibitGridFit = !!r4);
              case 2:
                return void (e4.ignoreCvt = !!r4);
              default:
                throw new Error("invalid INSTCTRL[] selector");
            }
          }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, k.bind(undefined, 1), k.bind(undefined, 2), k.bind(undefined, 3), k.bind(undefined, 4), k.bind(undefined, 5), k.bind(undefined, 6), k.bind(undefined, 7), k.bind(undefined, 8), C.bind(undefined, 1), C.bind(undefined, 2), C.bind(undefined, 3), C.bind(undefined, 4), C.bind(undefined, 5), C.bind(undefined, 6), C.bind(undefined, 7), C.bind(undefined, 8), O.bind(undefined, 0, 0, 0, 0, 0), O.bind(undefined, 0, 0, 0, 0, 1), O.bind(undefined, 0, 0, 0, 0, 2), O.bind(undefined, 0, 0, 0, 0, 3), O.bind(undefined, 0, 0, 0, 1, 0), O.bind(undefined, 0, 0, 0, 1, 1), O.bind(undefined, 0, 0, 0, 1, 2), O.bind(undefined, 0, 0, 0, 1, 3), O.bind(undefined, 0, 0, 1, 0, 0), O.bind(undefined, 0, 0, 1, 0, 1), O.bind(undefined, 0, 0, 1, 0, 2), O.bind(undefined, 0, 0, 1, 0, 3), O.bind(undefined, 0, 0, 1, 1, 0), O.bind(undefined, 0, 0, 1, 1, 1), O.bind(undefined, 0, 0, 1, 1, 2), O.bind(undefined, 0, 0, 1, 1, 3), O.bind(undefined, 0, 1, 0, 0, 0), O.bind(undefined, 0, 1, 0, 0, 1), O.bind(undefined, 0, 1, 0, 0, 2), O.bind(undefined, 0, 1, 0, 0, 3), O.bind(undefined, 0, 1, 0, 1, 0), O.bind(undefined, 0, 1, 0, 1, 1), O.bind(undefined, 0, 1, 0, 1, 2), O.bind(undefined, 0, 1, 0, 1, 3), O.bind(undefined, 0, 1, 1, 0, 0), O.bind(undefined, 0, 1, 1, 0, 1), O.bind(undefined, 0, 1, 1, 0, 2), O.bind(undefined, 0, 1, 1, 0, 3), O.bind(undefined, 0, 1, 1, 1, 0), O.bind(undefined, 0, 1, 1, 1, 1), O.bind(undefined, 0, 1, 1, 1, 2), O.bind(undefined, 0, 1, 1, 1, 3), O.bind(undefined, 1, 0, 0, 0, 0), O.bind(undefined, 1, 0, 0, 0, 1), O.bind(undefined, 1, 0, 0, 0, 2), O.bind(undefined, 1, 0, 0, 0, 3), O.bind(undefined, 1, 0, 0, 1, 0), O.bind(undefined, 1, 0, 0, 1, 1), O.bind(undefined, 1, 0, 0, 1, 2), O.bind(undefined, 1, 0, 0, 1, 3), O.bind(undefined, 1, 0, 1, 0, 0), O.bind(undefined, 1, 0, 1, 0, 1), O.bind(undefined, 1, 0, 1, 0, 2), O.bind(undefined, 1, 0, 1, 0, 3), O.bind(undefined, 1, 0, 1, 1, 0), O.bind(undefined, 1, 0, 1, 1, 1), O.bind(undefined, 1, 0, 1, 1, 2), O.bind(undefined, 1, 0, 1, 1, 3), O.bind(undefined, 1, 1, 0, 0, 0), O.bind(undefined, 1, 1, 0, 0, 1), O.bind(undefined, 1, 1, 0, 0, 2), O.bind(undefined, 1, 1, 0, 0, 3), O.bind(undefined, 1, 1, 0, 1, 0), O.bind(undefined, 1, 1, 0, 1, 1), O.bind(undefined, 1, 1, 0, 1, 2), O.bind(undefined, 1, 1, 0, 1, 3), O.bind(undefined, 1, 1, 1, 0, 0), O.bind(undefined, 1, 1, 1, 0, 1), O.bind(undefined, 1, 1, 1, 0, 2), O.bind(undefined, 1, 1, 1, 0, 3), O.bind(undefined, 1, 1, 1, 1, 0), O.bind(undefined, 1, 1, 1, 1, 1), O.bind(undefined, 1, 1, 1, 1, 2), O.bind(undefined, 1, 1, 1, 1, 3)], jr = Array.from || function(e4) {
            return e4.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
          };
          function P(e4) {
            (e4 = e4 || {}).empty || (_(e4.familyName, "When creating a new Font object, familyName is required."), _(e4.styleName, "When creating a new Font object, styleName is required."), _(e4.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), _(e4.ascender, "When creating a new Font object, ascender is required."), _(e4.descender, "When creating a new Font object, descender is required."), _(e4.descender < 0, "Descender should be negative (e.g. -512)."), this.names = { fontFamily: { en: e4.familyName || " " }, fontSubfamily: { en: e4.styleName || " " }, fullName: { en: e4.fullName || e4.familyName + " " + e4.styleName }, postScriptName: { en: e4.postScriptName || (e4.familyName + e4.styleName).replace(/\s/g, "") }, designer: { en: e4.designer || " " }, designerURL: { en: e4.designerURL || " " }, manufacturer: { en: e4.manufacturer || " " }, manufacturerURL: { en: e4.manufacturerURL || " " }, license: { en: e4.license || " " }, licenseURL: { en: e4.licenseURL || " " }, version: { en: e4.version || "Version 0.1" }, description: { en: e4.description || " " }, copyright: { en: e4.copyright || " " }, trademark: { en: e4.trademark || " " } }, this.unitsPerEm = e4.unitsPerEm || 1000, this.ascender = e4.ascender, this.descender = e4.descender, this.createdTimestamp = e4.createdTimestamp, this.tables = { os2: { usWeightClass: e4.weightClass || this.usWeightClasses.MEDIUM, usWidthClass: e4.widthClass || this.usWidthClasses.MEDIUM, fsSelection: e4.fsSelection || this.fsSelectionValues.REGULAR } }), this.supported = true, this.glyphs = new p.GlyphSet(this, e4.glyphs || []), this.encoding = new Ee(this), this.position = new kt(this), this.substitution = new i(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", { get: function() {
              return this._hinting || (this.outlinesFormat === "truetype" ? this._hinting = new Ft(this) : undefined);
            } });
          }
          function _r(e4, t4) {
            var r4, o3 = JSON.stringify(e4), n2 = 256;
            for (r4 in t4) {
              var s3 = parseInt(r4);
              if (s3 && !(s3 < 256)) {
                if (JSON.stringify(t4[r4]) === o3)
                  return s3;
                n2 <= s3 && (n2 = s3 + 1);
              }
            }
            return t4[n2] = e4, n2;
          }
          P.prototype.hasChar = function(e4) {
            return this.encoding.charToGlyphIndex(e4) !== null;
          }, P.prototype.charToGlyphIndex = function(e4) {
            return this.encoding.charToGlyphIndex(e4);
          }, P.prototype.charToGlyph = function(e4) {
            e4 = this.charToGlyphIndex(e4);
            return this.glyphs.get(e4) || this.glyphs.get(0);
          }, P.prototype.stringToGlyphs = function(e4, t4) {
            t4 = t4 || this.defaultRenderOptions;
            for (var r4 = jr(e4), o3 = [], n2 = 0;n2 < r4.length; n2 += 1) {
              var s3 = r4[n2];
              o3.push(this.charToGlyphIndex(s3));
            }
            var i2 = o3.length;
            if (t4.features) {
              var e4 = t4.script || this.substitution.getDefaultScriptName(), a2 = [];
              t4.features.liga && (a2 = a2.concat(this.substitution.getFeature("liga", e4, t4.language))), t4.features.rlig && (a2 = a2.concat(this.substitution.getFeature("rlig", e4, t4.language)));
              for (var l2 = 0;l2 < i2; l2 += 1)
                for (var u2 = 0;u2 < a2.length; u2++) {
                  for (var c2 = a2[u2], d2 = c2.sub, h2 = d2.length, f2 = 0;f2 < h2 && d2[f2] === o3[l2 + f2]; )
                    f2++;
                  f2 === h2 && (o3.splice(l2, h2, c2.by), i2 = i2 - h2 + 1);
                }
            }
            for (var p2 = new Array(i2), m2 = this.glyphs.get(0), y2 = 0;y2 < i2; y2 += 1)
              p2[y2] = this.glyphs.get(o3[y2]) || m2;
            return p2;
          }, P.prototype.nameToGlyphIndex = function(e4) {
            return this.glyphNames.nameToGlyphIndex(e4);
          }, P.prototype.nameToGlyph = function(e4) {
            e4 = this.nameToGlyphIndex(e4);
            return this.glyphs.get(e4) || this.glyphs.get(0);
          }, P.prototype.glyphIndexToName = function(e4) {
            return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e4) : "";
          }, P.prototype.getKerningValue = function(e4, t4) {
            e4 = e4.index || e4, t4 = t4.index || t4;
            var r4 = this.position.defaultKerningTables;
            return r4 ? this.position.getKerningValue(r4, e4, t4) : this.kerningPairs[e4 + "," + t4] || 0;
          }, P.prototype.defaultRenderOptions = { kerning: true, features: { liga: true, rlig: true } }, P.prototype.forEachGlyph = function(e4, t4, r4, o3, n2, s3) {
            t4 = t4 !== undefined ? t4 : 0, r4 = r4 !== undefined ? r4 : 0, n2 = n2 || this.defaultRenderOptions;
            var i2, a2 = 1 / this.unitsPerEm * (o3 = o3 !== undefined ? o3 : 72), l2 = this.stringToGlyphs(e4, n2);
            n2.kerning && (e4 = n2.script || this.position.getDefaultScriptName(), i2 = this.position.getKerningTables(e4, n2.language));
            for (var u2 = 0;u2 < l2.length; u2 += 1) {
              var c2 = l2[u2];
              s3.call(this, c2, t4, r4, o3, n2), c2.advanceWidth && (t4 += c2.advanceWidth * a2), n2.kerning && u2 < l2.length - 1 && (t4 += (i2 ? this.position.getKerningValue(i2, c2.index, l2[u2 + 1].index) : this.getKerningValue(c2, l2[u2 + 1])) * a2), n2.letterSpacing ? t4 += n2.letterSpacing * o3 : n2.tracking && (t4 += n2.tracking / 1000 * o3);
            }
            return t4;
          }, P.prototype.getPath = function(e4, t4, r4, o3, n2) {
            var s3 = new h;
            return this.forEachGlyph(e4, t4, r4, o3, n2, function(e5, t5, r5, o4) {
              e5 = e5.getPath(t5, r5, o4, n2, this);
              s3.extend(e5);
            }), s3;
          }, P.prototype.getPaths = function(e4, t4, r4, o3, n2) {
            var s3 = [];
            return this.forEachGlyph(e4, t4, r4, o3, n2, function(e5, t5, r5, o4) {
              e5 = e5.getPath(t5, r5, o4, n2, this);
              s3.push(e5);
            }), s3;
          }, P.prototype.getAdvanceWidth = function(e4, t4, r4) {
            return this.forEachGlyph(e4, 0, 0, t4, r4, function() {
            });
          }, P.prototype.draw = function(e4, t4, r4, o3, n2, s3) {
            this.getPath(t4, r4, o3, n2, s3).draw(e4);
          }, P.prototype.drawPoints = function(n2, e4, t4, r4, o3, s3) {
            this.forEachGlyph(e4, t4, r4, o3, s3, function(e5, t5, r5, o4) {
              e5.drawPoints(n2, t5, r5, o4);
            });
          }, P.prototype.drawMetrics = function(n2, e4, t4, r4, o3, s3) {
            this.forEachGlyph(e4, t4, r4, o3, s3, function(e5, t5, r5, o4) {
              e5.drawMetrics(n2, t5, r5, o4);
            });
          }, P.prototype.getEnglishName = function(e4) {
            e4 = this.names[e4];
            if (e4)
              return e4.en;
          }, P.prototype.validate = function() {
            var t4 = this;
            function e4(e5) {
              e5 = t4.getEnglishName(e5);
              e5 && e5.trim().length;
            }
            e4("fontFamily"), e4("weightName"), e4("manufacturer"), e4("copyright"), e4("version"), this.unitsPerEm;
          }, P.prototype.toTables = function() {
            return wt.fontToTable(this);
          }, P.prototype.toBuffer = function() {
            return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
          }, P.prototype.toArrayBuffer = function() {
            for (var e4 = this.toTables().encode(), t4 = new ArrayBuffer(e4.length), r4 = new Uint8Array(t4), o3 = 0;o3 < e4.length; o3++)
              r4[o3] = e4[o3];
            return t4;
          }, P.prototype.download = function(t4) {
            var e4 = this.getEnglishName("fontFamily"), r4 = this.getEnglishName("fontSubfamily"), o3 = (t4 = t4 || e4.replace(/\s/g, "") + "-" + r4 + ".otf", this.toArrayBuffer());
            typeof window != "undefined" ? (window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, o3.byteLength, function(e5) {
              e5.root.getFile(t4, { create: true }, function(r5) {
                r5.createWriter(function(e6) {
                  var t5 = new DataView(o3), t5 = new Blob([t5], { type: "font/opentype" });
                  e6.write(t5), e6.addEventListener("writeend", function() {
                    location.href = r5.toURL();
                  }, false);
                });
              });
            }, function(e5) {
              throw new Error(e5.name + ": " + e5.message);
            })) : (e4 = Ar("fs"), r4 = function(e5) {
              for (var t5 = new Pr(e5.byteLength), r5 = new Uint8Array(e5), o4 = 0;o4 < t5.length; ++o4)
                t5[o4] = r5[o4];
              return t5;
            }(o3), e4.writeFileSync(t4, r4));
          }, P.prototype.fsSelectionValues = { ITALIC: 1, UNDERSCORE: 2, NEGATIVE: 4, OUTLINED: 8, STRIKEOUT: 16, BOLD: 32, REGULAR: 64, USER_TYPO_METRICS: 128, WWS: 256, OBLIQUE: 512 }, P.prototype.usWidthClasses = { ULTRA_CONDENSED: 1, EXTRA_CONDENSED: 2, CONDENSED: 3, SEMI_CONDENSED: 4, MEDIUM: 5, SEMI_EXPANDED: 6, EXPANDED: 7, EXTRA_EXPANDED: 8, ULTRA_EXPANDED: 9 }, P.prototype.usWeightClasses = { THIN: 100, EXTRA_LIGHT: 200, LIGHT: 300, NORMAL: 400, MEDIUM: 500, SEMI_BOLD: 600, BOLD: 700, EXTRA_BOLD: 800, BLACK: 900 };
          var xr = { make: function(e4, t4) {
            var r4 = new S.Table("fvar", [{ name: "version", type: "ULONG", value: 65536 }, { name: "offsetToData", type: "USHORT", value: 0 }, { name: "countSizePairs", type: "USHORT", value: 2 }, { name: "axisCount", type: "USHORT", value: e4.axes.length }, { name: "axisSize", type: "USHORT", value: 20 }, { name: "instanceCount", type: "USHORT", value: e4.instances.length }, { name: "instanceSize", type: "USHORT", value: 4 + 4 * e4.axes.length }]);
            r4.offsetToData = r4.sizeOf();
            for (var o3, n2, s3, i2 = 0;i2 < e4.axes.length; i2++)
              r4.fields = r4.fields.concat((o3 = i2, n2 = e4.axes[i2], s3 = t4, s3 = _r(n2.name, t4), [{ name: "tag_" + o3, type: "TAG", value: n2.tag }, { name: "minValue_" + o3, type: "FIXED", value: n2.minValue << 16 }, { name: "defaultValue_" + o3, type: "FIXED", value: n2.defaultValue << 16 }, { name: "maxValue_" + o3, type: "FIXED", value: n2.maxValue << 16 }, { name: "flags_" + o3, type: "USHORT", value: 0 }, { name: "nameID_" + o3, type: "USHORT", value: s3 }]));
            for (var a2 = 0;a2 < e4.instances.length; a2++)
              r4.fields = r4.fields.concat(function(e5, t5, r5, o4) {
                for (var n3 = [{ name: "nameID_" + e5, type: "USHORT", value: _r(t5.name, o4) }, { name: "flags_" + e5, type: "USHORT", value: 0 }], s4 = 0;s4 < r5.length; ++s4) {
                  var i3 = r5[s4].tag;
                  n3.push({ name: "axis_" + e5 + " " + i3, type: "FIXED", value: t5.coordinates[i3] << 16 });
                }
                return n3;
              }(a2, e4.instances[a2], e4.axes, t4));
            return r4;
          }, parse: function(e4, t4, r4) {
            for (var o3, n2, s3, i2, a2 = new R.Parser(e4, t4), l2 = a2.parseULong(), u2 = (L.argument(l2 === 65536, "Unsupported fvar table version."), a2.parseOffset16()), c2 = (a2.skip("uShort", 1), a2.parseUShort()), d2 = a2.parseUShort(), h2 = a2.parseUShort(), f2 = a2.parseUShort(), p2 = [], m2 = 0;m2 < c2; m2++)
              p2.push((o3 = e4, n2 = t4 + u2 + m2 * d2, s3 = r4, undefined, i2 = {}, o3 = new R.Parser(o3, n2), i2.tag = o3.parseTag(), i2.minValue = o3.parseFixed(), i2.defaultValue = o3.parseFixed(), i2.maxValue = o3.parseFixed(), o3.skip("uShort", 1), i2.name = s3[o3.parseUShort()] || {}, i2));
            for (var y2 = [], g2 = t4 + u2 + c2 * d2, v2 = 0;v2 < h2; v2++)
              y2.push(function(e5, t5, r5, o4) {
                var n3 = {}, s4 = new R.Parser(e5, t5);
                n3.name = o4[s4.parseUShort()] || {}, s4.skip("uShort", 1), n3.coordinates = {};
                for (var i3 = 0;i3 < r5.length; ++i3)
                  n3.coordinates[r5[i3].tag] = s4.parseFixed();
                return n3;
              }(e4, g2 + v2 * f2, p2, r4));
            return { axes: p2, instances: y2 };
          } }, A = new Array(10);
          A[1] = function() {
            var e4 = this.offset + this.relativeOffset, t4 = this.parseUShort();
            return t4 === 1 ? { posFormat: 1, coverage: this.parsePointer(u.coverage), value: this.parseValueRecord() } : t4 === 2 ? { posFormat: 2, coverage: this.parsePointer(u.coverage), values: this.parseValueRecordList() } : void L.assert(false, "0x" + e4.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
          }, A[2] = function() {
            var e4, t4, r4, o3, n2 = this.offset + this.relativeOffset, s3 = this.parseUShort(), n2 = (L.assert(s3 === 1 || s3 === 2, "0x" + n2.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."), this.parsePointer(u.coverage)), i2 = this.parseUShort(), a2 = this.parseUShort();
            return s3 === 1 ? { posFormat: s3, coverage: n2, valueFormat1: i2, valueFormat2: a2, pairSets: this.parseList(u.pointer(u.list(function() {
              return { secondGlyph: this.parseUShort(), value1: this.parseValueRecord(i2), value2: this.parseValueRecord(a2) };
            }))) } : s3 === 2 ? (e4 = this.parsePointer(u.classDef), t4 = this.parsePointer(u.classDef), r4 = this.parseUShort(), o3 = this.parseUShort(), { posFormat: s3, coverage: n2, valueFormat1: i2, valueFormat2: a2, classDef1: e4, classDef2: t4, class1Count: r4, class2Count: o3, classRecords: this.parseList(r4, u.list(o3, function() {
              return { value1: this.parseValueRecord(i2), value2: this.parseValueRecord(a2) };
            })) }) : undefined;
          }, A[3] = function() {
            return { error: "GPOS Lookup 3 not supported" };
          }, A[4] = function() {
            return { error: "GPOS Lookup 4 not supported" };
          }, A[5] = function() {
            return { error: "GPOS Lookup 5 not supported" };
          }, A[6] = function() {
            return { error: "GPOS Lookup 6 not supported" };
          }, A[7] = function() {
            return { error: "GPOS Lookup 7 not supported" };
          }, A[8] = function() {
            return { error: "GPOS Lookup 8 not supported" };
          }, A[9] = function() {
            return { error: "GPOS Lookup 9 not supported" };
          };
          var wr = new Array(10);
          var Sr = { parse: function(e4, t4) {
            return t4 = (e4 = new u(e4, t4 = t4 || 0)).parseVersion(1), L.argument(t4 === 1 || t4 === 1.1, "Unsupported GPOS table version " + t4), t4 === 1 ? { version: t4, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(A) } : { version: t4, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(A), variations: e4.parseFeatureVariationsList() };
          }, make: function(e4) {
            return new S.Table("GPOS", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e4.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e4.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e4.lookups, wr) }]);
          } };
          var Tr = { parse: function(e4, t4) {
            if (e4 = new R.Parser(e4, t4), (t4 = e4.parseUShort()) === 0) {
              var r4 = e4, o3 = {}, n2 = (r4.skip("uShort"), r4.parseUShort()), s3 = (L.argument(n2 === 0, "Unsupported kern sub-table version."), r4.skip("uShort", 2), r4.parseUShort());
              r4.skip("uShort", 3);
              for (var i2 = 0;i2 < s3; i2 += 1) {
                var a2 = r4.parseUShort(), l2 = r4.parseUShort(), u2 = r4.parseShort();
                o3[a2 + "," + l2] = u2;
              }
              return o3;
            }
            if (t4 !== 1)
              throw new Error("Unsupported kern table version (" + t4 + ").");
            var c2 = e4, d2 = {}, n2 = (c2.skip("uShort"), 1 < c2.parseULong() && console.warn("Only the first kern subtable is supported."), c2.skip("uLong"), 255 & c2.parseUShort());
            if (c2.skip("uShort"), n2 == 0) {
              var h2 = c2.parseUShort();
              c2.skip("uShort", 3);
              for (var f2 = 0;f2 < h2; f2 += 1) {
                var p2 = c2.parseUShort(), m2 = c2.parseUShort(), y2 = c2.parseShort();
                d2[p2 + "," + m2] = y2;
              }
            }
            return d2;
          } };
          var Mr = { parse: function(e4, t4, r4, o3) {
            for (var n2 = new R.Parser(e4, t4), s3 = o3 ? n2.parseUShort : n2.parseULong, i2 = [], a2 = 0;a2 < r4 + 1; a2 += 1) {
              var l2 = s3.call(n2);
              o3 && (l2 *= 2), i2.push(l2);
            }
            return i2;
          } };
          function Er(e4, r4) {
            Ar("fs").readFile(e4, function(e5, t4) {
              if (e5)
                return r4(e5.message);
              r4(null, Ot(t4));
            });
          }
          function kr(e4, t4) {
            var r4 = new XMLHttpRequest;
            r4.open("get", e4, true), r4.responseType = "arraybuffer", r4.onload = function() {
              return r4.response ? t4(null, r4.response) : t4("Font could not be loaded: " + r4.statusText);
            }, r4.onerror = function() {
              t4("Font could not be loaded");
            }, r4.send();
          }
          function Cr(e4, t4) {
            for (var r4 = [], o3 = 12, n2 = 0;n2 < t4; n2 += 1) {
              var s3 = R.getTag(e4, o3), i2 = R.getULong(e4, o3 + 4), a2 = R.getULong(e4, o3 + 8), l2 = R.getULong(e4, o3 + 12);
              r4.push({ tag: s3, checksum: i2, offset: a2, length: l2, compression: false }), o3 += 16;
            }
            return r4;
          }
          function I(e4, t4) {
            if (t4.compression !== "WOFF")
              return { data: e4, offset: t4.offset };
            var e4 = new Uint8Array(e4.buffer, t4.offset + 2, t4.compressedLength - 2), r4 = new Uint8Array(t4.length);
            if (re(e4, r4), r4.byteLength !== t4.length)
              throw new Error("Decompression error: " + t4.tag + " decompressed length doesn't match recorded length");
            return { data: new DataView(r4.buffer, 0), offset: 0 };
          }
          function Or(e4) {
            var t4, r4, o3, n2, s3, i2, a2, l2, u2, c2, d2, h2, f2, p2, m2 = new P({ empty: true }), y2 = new DataView(e4, 0), g2 = [], e4 = R.getTag(y2, 0);
            if (e4 === String.fromCharCode(0, 1, 0, 0) || e4 === "true" || e4 === "typ1")
              m2.outlinesFormat = "truetype", g2 = Cr(y2, o3 = R.getUShort(y2, 4));
            else if (e4 === "OTTO")
              m2.outlinesFormat = "cff", g2 = Cr(y2, o3 = R.getUShort(y2, 4));
            else {
              if (e4 !== "wOFF")
                throw new Error("Unsupported OpenType signature " + e4);
              var v2 = R.getTag(y2, 4);
              if (v2 === String.fromCharCode(0, 1, 0, 0))
                m2.outlinesFormat = "truetype";
              else {
                if (v2 !== "OTTO")
                  throw new Error("Unsupported OpenType flavor " + e4);
                m2.outlinesFormat = "cff";
              }
              g2 = function(e5, t5) {
                for (var r5 = [], o4 = 44, n3 = 0;n3 < t5; n3 += 1) {
                  var s4 = R.getTag(e5, o4), i3 = R.getULong(e5, o4 + 4), a3 = R.getULong(e5, o4 + 8), l3 = R.getULong(e5, o4 + 12), u3 = undefined, u3 = a3 < l3 && "WOFF";
                  r5.push({ tag: s4, offset: i3, compression: u3, compressedLength: a3, length: l3 }), o4 += 20;
                }
                return r5;
              }(y2, o3 = R.getUShort(y2, 12));
            }
            for (var b2 = 0;b2 < o3; b2 += 1) {
              var j2 = g2[b2], _2 = undefined;
              switch (j2.tag) {
                case "cmap":
                  _2 = I(y2, j2), m2.tables.cmap = we.parse(_2.data, _2.offset), m2.encoding = new ke(m2.tables.cmap);
                  break;
                case "cvt ":
                  _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.cvt = p2.parseShortList(j2.length / 2);
                  break;
                case "fvar":
                  s3 = j2;
                  break;
                case "fpgm":
                  _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.fpgm = p2.parseByteList(j2.length);
                  break;
                case "head":
                  _2 = I(y2, j2), m2.tables.head = Ze.parse(_2.data, _2.offset), m2.unitsPerEm = m2.tables.head.unitsPerEm, t4 = m2.tables.head.indexToLocFormat;
                  break;
                case "hhea":
                  _2 = I(y2, j2), m2.tables.hhea = Qe.parse(_2.data, _2.offset), m2.ascender = m2.tables.hhea.ascender, m2.descender = m2.tables.hhea.descender, m2.numberOfHMetrics = m2.tables.hhea.numberOfHMetrics;
                  break;
                case "hmtx":
                  u2 = j2;
                  break;
                case "ltag":
                  _2 = I(y2, j2), r4 = Ke.parse(_2.data, _2.offset);
                  break;
                case "maxp":
                  _2 = I(y2, j2), m2.tables.maxp = $e.parse(_2.data, _2.offset), m2.numGlyphs = m2.tables.maxp.numGlyphs;
                  break;
                case "name":
                  h2 = j2;
                  break;
                case "OS/2":
                  _2 = I(y2, j2), m2.tables.os2 = ft.parse(_2.data, _2.offset);
                  break;
                case "post":
                  _2 = I(y2, j2), m2.tables.post = pt.parse(_2.data, _2.offset), m2.glyphNames = new Oe(m2.tables.post);
                  break;
                case "prep":
                  _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.prep = p2.parseByteList(j2.length);
                  break;
                case "glyf":
                  i2 = j2;
                  break;
                case "loca":
                  d2 = j2;
                  break;
                case "CFF ":
                  n2 = j2;
                  break;
                case "kern":
                  c2 = j2;
                  break;
                case "GPOS":
                  a2 = j2;
                  break;
                case "GSUB":
                  l2 = j2;
                  break;
                case "meta":
                  f2 = j2;
              }
            }
            v2 = I(y2, h2);
            if (m2.tables.name = dt.parse(v2.data, v2.offset, r4), m2.names = m2.tables.name, i2 && d2) {
              e4 = t4 === 0, v2 = I(y2, d2), v2 = Mr.parse(v2.data, v2.offset, m2.numGlyphs, e4), e4 = I(y2, i2);
              m2.glyphs = Dt.parse(e4.data, e4.offset, v2, m2);
            } else {
              if (!n2)
                throw new Error("Font doesn't contain TrueType or CFF outlines.");
              e4 = I(y2, n2);
              Ye.parse(e4.data, e4.offset, m2);
            }
            for (var v2 = I(y2, u2), x2 = (Je.parse(v2.data, v2.offset, m2.numberOfHMetrics, m2.numGlyphs, m2.glyphs), m2), w2 = x2.tables.cmap.glyphIndexMap, S2 = Object.keys(w2), T2 = 0;T2 < S2.length; T2 += 1) {
              var M2, E2 = S2[T2], k2 = w2[E2];
              (M2 = x2.glyphs.get(k2)).addUnicode(parseInt(E2));
            }
            for (var C2 = 0;C2 < x2.glyphs.length; C2 += 1)
              M2 = x2.glyphs.get(C2), x2.cffEncoding ? x2.isCIDFont ? M2.name = "gid" + C2 : M2.name = x2.cffEncoding.charset[C2] : x2.glyphNames.names && (M2.name = x2.glyphNames.glyphIndexToName(C2));
            return c2 ? (e4 = I(y2, c2), m2.kerningPairs = Tr.parse(e4.data, e4.offset)) : m2.kerningPairs = {}, a2 && (v2 = I(y2, a2), m2.tables.gpos = Sr.parse(v2.data, v2.offset), m2.position.init()), l2 && (e4 = I(y2, l2), m2.tables.gsub = yt.parse(e4.data, e4.offset)), s3 && (v2 = I(y2, s3), m2.tables.fvar = xr.parse(v2.data, v2.offset, m2.names)), f2 && (e4 = I(y2, f2), m2.tables.meta = gt.parse(e4.data, e4.offset), m2.metas = m2.tables.meta), m2;
          }
          j.Font = P, j.Glyph = f, j.Path = h, j.BoundingBox = a, j._parse = R, j.parse = Or, j.load = function(e4, o3) {
            (typeof window == "undefined" ? Er : kr)(e4, function(e5, t4) {
              if (e5)
                return o3(e5);
              var r4;
              try {
                r4 = Or(t4);
              } catch (e6) {
                return o3(e6, null);
              }
              return o3(null, r4);
            });
          }, j.loadSync = function(e4) {
            return Or(Ot(Ar("fs").readFileSync(e4)));
          }, Object.defineProperty(j, "__esModule", { value: true });
        }, typeof o == "object" && r2 !== undefined ? t2(o) : typeof s == "function" && s.amd ? s(["exports"], t2) : t2(e2.opentype = {});
      }).call(this, Ar("buffer").Buffer);
    }, { buffer: 4, fs: 2 }], 250: [function(e2, t2, u) {
      (function(n) {
        function s2(e3, t3) {
          for (var r2 = 0, o2 = e3.length - 1;0 <= o2; o2--) {
            var n2 = e3[o2];
            n2 === "." ? e3.splice(o2, 1) : n2 === ".." ? (e3.splice(o2, 1), r2++) : r2 && (e3.splice(o2, 1), r2--);
          }
          if (t3)
            for (;r2--; )
              e3.unshift("..");
          return e3;
        }
        function i(e3, t3) {
          if (e3.filter)
            return e3.filter(t3);
          for (var r2 = [], o2 = 0;o2 < e3.length; o2++)
            t3(e3[o2], o2, e3) && r2.push(e3[o2]);
          return r2;
        }
        u.resolve = function() {
          for (var e3 = "", t3 = false, r2 = arguments.length - 1;-1 <= r2 && !t3; r2--) {
            var o2 = 0 <= r2 ? arguments[r2] : n.cwd();
            if (typeof o2 != "string")
              throw new TypeError("Arguments to path.resolve must be strings");
            o2 && (e3 = o2 + "/" + e3, t3 = o2.charAt(0) === "/");
          }
          return (t3 ? "/" : "") + (e3 = s2(i(e3.split("/"), function(e4) {
            return !!e4;
          }), !t3).join("/")) || ".";
        }, u.normalize = function(e3) {
          var t3 = u.isAbsolute(e3), r2 = o(e3, -1) === "/";
          return (e3 = (e3 = s2(i(e3.split("/"), function(e4) {
            return !!e4;
          }), !t3).join("/")) || t3 ? e3 : ".") && r2 && (e3 += "/"), (t3 ? "/" : "") + e3;
        }, u.isAbsolute = function(e3) {
          return e3.charAt(0) === "/";
        }, u.join = function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          return u.normalize(i(e3, function(e4, t3) {
            if (typeof e4 != "string")
              throw new TypeError("Arguments to path.join must be strings");
            return e4;
          }).join("/"));
        }, u.relative = function(e3, t3) {
          function r2(e4) {
            for (var t4 = 0;t4 < e4.length && e4[t4] === ""; t4++)
              ;
            for (var r3 = e4.length - 1;0 <= r3 && e4[r3] === ""; r3--)
              ;
            return r3 < t4 ? [] : e4.slice(t4, r3 - t4 + 1);
          }
          e3 = u.resolve(e3).substr(1), t3 = u.resolve(t3).substr(1);
          for (var o2 = r2(e3.split("/")), n2 = r2(t3.split("/")), s3 = Math.min(o2.length, n2.length), i2 = s3, a = 0;a < s3; a++)
            if (o2[a] !== n2[a]) {
              i2 = a;
              break;
            }
          for (var l = [], a = i2;a < o2.length; a++)
            l.push("..");
          return (l = l.concat(n2.slice(i2))).join("/");
        }, u.sep = "/", u.delimiter = ":", u.dirname = function(e3) {
          if (typeof e3 != "string" && (e3 += ""), e3.length === 0)
            return ".";
          for (var t3 = e3.charCodeAt(0) === 47, r2 = -1, o2 = true, n2 = e3.length - 1;1 <= n2; --n2)
            if (e3.charCodeAt(n2) === 47) {
              if (!o2) {
                r2 = n2;
                break;
              }
            } else
              o2 = false;
          return r2 === -1 ? t3 ? "/" : "." : t3 && r2 === 1 ? "/" : e3.slice(0, r2);
        }, u.basename = function(e3, t3) {
          e3 = function(e4) {
            typeof e4 != "string" && (e4 += "");
            for (var t4 = 0, r2 = -1, o2 = true, n2 = e4.length - 1;0 <= n2; --n2)
              if (e4.charCodeAt(n2) === 47) {
                if (!o2) {
                  t4 = n2 + 1;
                  break;
                }
              } else
                r2 === -1 && (o2 = false, r2 = n2 + 1);
            return r2 === -1 ? "" : e4.slice(t4, r2);
          }(e3);
          return e3 = t3 && e3.substr(-1 * t3.length) === t3 ? e3.substr(0, e3.length - t3.length) : e3;
        }, u.extname = function(e3) {
          typeof e3 != "string" && (e3 += "");
          for (var t3 = -1, r2 = 0, o2 = -1, n2 = true, s3 = 0, i2 = e3.length - 1;0 <= i2; --i2) {
            var a = e3.charCodeAt(i2);
            if (a === 47) {
              if (n2)
                continue;
              r2 = i2 + 1;
              break;
            }
            o2 === -1 && (n2 = false, o2 = i2 + 1), a === 46 ? t3 === -1 ? t3 = i2 : s3 !== 1 && (s3 = 1) : t3 !== -1 && (s3 = -1);
          }
          return t3 === -1 || o2 === -1 || s3 === 0 || s3 === 1 && t3 === o2 - 1 && t3 === r2 + 1 ? "" : e3.slice(t3, o2);
        };
        var o = "ab".substr(-1) === "b" ? function(e3, t3, r2) {
          return e3.substr(t3, r2);
        } : function(e3, t3, r2) {
          return t3 < 0 && (t3 = e3.length + t3), e3.substr(t3, r2);
        };
      }).call(this, e2("_process"));
    }, { _process: 251 }], 251: [function(e2, t2, r2) {
      var o, n, t2 = t2.exports = {};
      function s2() {
        throw new Error("setTimeout has not been defined");
      }
      function i() {
        throw new Error("clearTimeout has not been defined");
      }
      try {
        o = typeof setTimeout == "function" ? setTimeout : s2;
      } catch (e3) {
        o = s2;
      }
      try {
        n = typeof clearTimeout == "function" ? clearTimeout : i;
      } catch (e3) {
        n = i;
      }
      function a(t3) {
        if (o === setTimeout)
          return setTimeout(t3, 0);
        if ((o === s2 || !o) && setTimeout)
          return (o = setTimeout)(t3, 0);
        try {
          return o(t3, 0);
        } catch (e3) {
          try {
            return o.call(null, t3, 0);
          } catch (e4) {
            return o.call(this, t3, 0);
          }
        }
      }
      var l, u = [], c = false, d = -1;
      function h() {
        c && l && (c = false, l.length ? u = l.concat(u) : d = -1, u.length && f());
      }
      function f() {
        if (!c) {
          for (var e3 = a(h), t3 = (c = true, u.length);t3; ) {
            for (l = u, u = [];++d < t3; )
              l && l[d].run();
            d = -1, t3 = u.length;
          }
          l = null, c = false, function(t4) {
            if (n === clearTimeout)
              return clearTimeout(t4);
            if ((n === i || !n) && clearTimeout)
              return (n = clearTimeout)(t4);
            try {
              n(t4);
            } catch (e4) {
              try {
                return n.call(null, t4);
              } catch (e5) {
                return n.call(this, t4);
              }
            }
          }(e3);
        }
      }
      function p(e3, t3) {
        this.fun = e3, this.array = t3;
      }
      function m() {
      }
      t2.nextTick = function(e3) {
        var t3 = new Array(arguments.length - 1);
        if (1 < arguments.length)
          for (var r3 = 1;r3 < arguments.length; r3++)
            t3[r3 - 1] = arguments[r3];
        u.push(new p(e3, t3)), u.length !== 1 || c || a(f);
      }, p.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, t2.title = "browser", t2.browser = true, t2.env = {}, t2.argv = [], t2.version = "", t2.versions = {}, t2.on = m, t2.addListener = m, t2.once = m, t2.off = m, t2.removeListener = m, t2.removeAllListeners = m, t2.emit = m, t2.prependListener = m, t2.prependOnceListener = m, t2.listeners = function(e3) {
        return [];
      }, t2.binding = function(e3) {
        throw new Error("process.binding is not supported");
      }, t2.cwd = function() {
        return "/";
      }, t2.chdir = function(e3) {
        throw new Error("process.chdir is not supported");
      }, t2.umask = function() {
        return 0;
      };
    }, {}], 252: [function(e2, t2, r2) {
      t2 = function(s2) {
        var l, e3 = Object.prototype, u = e3.hasOwnProperty, t3 = typeof Symbol == "function" ? Symbol : {}, o = t3.iterator || "@@iterator", r3 = t3.asyncIterator || "@@asyncIterator", n = t3.toStringTag || "@@toStringTag";
        function i(e4, t4, r4, o2) {
          var n2, s3, i2, a2, t4 = t4 && t4.prototype instanceof y ? t4 : y, t4 = Object.create(t4.prototype), o2 = new S(o2 || []);
          return t4._invoke = (n2 = e4, s3 = r4, i2 = o2, a2 = d, function(e5, t5) {
            if (a2 === f)
              throw new Error("Generator is already running");
            if (a2 === p) {
              if (e5 === "throw")
                throw t5;
              return M();
            }
            for (i2.method = e5, i2.arg = t5;; ) {
              var r5 = i2.delegate;
              if (r5) {
                r5 = function e(t6, r6) {
                  var o3 = t6.iterator[r6.method];
                  if (o3 === l) {
                    if (r6.delegate = null, r6.method === "throw") {
                      if (t6.iterator.return && (r6.method = "return", r6.arg = l, e(t6, r6), r6.method === "throw"))
                        return m;
                      r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a 'throw' method");
                    }
                    return m;
                  }
                  o3 = c(o3, t6.iterator, r6.arg);
                  if (o3.type === "throw")
                    return r6.method = "throw", r6.arg = o3.arg, r6.delegate = null, m;
                  o3 = o3.arg;
                  if (!o3)
                    return r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, m;
                  {
                    if (!o3.done)
                      return o3;
                    r6[t6.resultName] = o3.value, r6.next = t6.nextLoc, r6.method !== "return" && (r6.method = "next", r6.arg = l);
                  }
                  r6.delegate = null;
                  return m;
                }(r5, i2);
                if (r5) {
                  if (r5 === m)
                    continue;
                  return r5;
                }
              }
              if (i2.method === "next")
                i2.sent = i2._sent = i2.arg;
              else if (i2.method === "throw") {
                if (a2 === d)
                  throw a2 = p, i2.arg;
                i2.dispatchException(i2.arg);
              } else
                i2.method === "return" && i2.abrupt("return", i2.arg);
              a2 = f;
              r5 = c(n2, s3, i2);
              if (r5.type === "normal") {
                if (a2 = i2.done ? p : h, r5.arg !== m)
                  return { value: r5.arg, done: i2.done };
              } else
                r5.type === "throw" && (a2 = p, i2.method = "throw", i2.arg = r5.arg);
            }
          }), t4;
        }
        function c(e4, t4, r4) {
          try {
            return { type: "normal", arg: e4.call(t4, r4) };
          } catch (e5) {
            return { type: "throw", arg: e5 };
          }
        }
        s2.wrap = i;
        var d = "suspendedStart", h = "suspendedYield", f = "executing", p = "completed", m = {};
        function y() {
        }
        function a() {
        }
        function g() {
        }
        var t3 = {}, v = (t3[o] = function() {
          return this;
        }, Object.getPrototypeOf), v = v && v(v(T([]))), b = (v && v !== e3 && u.call(v, o) && (t3 = v), g.prototype = y.prototype = Object.create(t3));
        function j(e4) {
          ["next", "throw", "return"].forEach(function(t4) {
            e4[t4] = function(e5) {
              return this._invoke(t4, e5);
            };
          });
        }
        function _(i2) {
          var t4;
          this._invoke = function(r4, o2) {
            function e4() {
              return new Promise(function(e5, t5) {
                (function t(e6, r5, o3, n2) {
                  var s3, e6 = c(i2[e6], i2, r5);
                  if (e6.type !== "throw")
                    return (r5 = (s3 = e6.arg).value) && typeof r5 == "object" && u.call(r5, "__await") ? Promise.resolve(r5.__await).then(function(e7) {
                      t("next", e7, o3, n2);
                    }, function(e7) {
                      t("throw", e7, o3, n2);
                    }) : Promise.resolve(r5).then(function(e7) {
                      s3.value = e7, o3(s3);
                    }, function(e7) {
                      return t("throw", e7, o3, n2);
                    });
                  n2(e6.arg);
                })(r4, o2, e5, t5);
              });
            }
            return t4 = t4 ? t4.then(e4, e4) : e4();
          };
        }
        function x(e4) {
          var t4 = { tryLoc: e4[0] };
          1 in e4 && (t4.catchLoc = e4[1]), 2 in e4 && (t4.finallyLoc = e4[2], t4.afterLoc = e4[3]), this.tryEntries.push(t4);
        }
        function w(e4) {
          var t4 = e4.completion || {};
          t4.type = "normal", delete t4.arg, e4.completion = t4;
        }
        function S(e4) {
          this.tryEntries = [{ tryLoc: "root" }], e4.forEach(x, this), this.reset(true);
        }
        function T(t4) {
          if (t4) {
            var r4, e4 = t4[o];
            if (e4)
              return e4.call(t4);
            if (typeof t4.next == "function")
              return t4;
            if (!isNaN(t4.length))
              return r4 = -1, (e4 = function e() {
                for (;++r4 < t4.length; )
                  if (u.call(t4, r4))
                    return e.value = t4[r4], e.done = false, e;
                return e.value = l, e.done = true, e;
              }).next = e4;
          }
          return { next: M };
        }
        function M() {
          return { value: l, done: true };
        }
        return (a.prototype = b.constructor = g).constructor = a, g[n] = a.displayName = "GeneratorFunction", s2.isGeneratorFunction = function(e4) {
          e4 = typeof e4 == "function" && e4.constructor;
          return !!e4 && (e4 === a || (e4.displayName || e4.name) === "GeneratorFunction");
        }, s2.mark = function(e4) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(e4, g) : (e4.__proto__ = g, (n in e4) || (e4[n] = "GeneratorFunction")), e4.prototype = Object.create(b), e4;
        }, s2.awrap = function(e4) {
          return { __await: e4 };
        }, j(_.prototype), _.prototype[r3] = function() {
          return this;
        }, s2.AsyncIterator = _, s2.async = function(e4, t4, r4, o2) {
          var n2 = new _(i(e4, t4, r4, o2));
          return s2.isGeneratorFunction(t4) ? n2 : n2.next().then(function(e5) {
            return e5.done ? e5.value : n2.next();
          });
        }, j(b), b[n] = "Generator", b[o] = function() {
          return this;
        }, b.toString = function() {
          return "[object Generator]";
        }, s2.keys = function(r4) {
          var e4, o2 = [];
          for (e4 in r4)
            o2.push(e4);
          return o2.reverse(), function e() {
            for (;o2.length; ) {
              var t4 = o2.pop();
              if (t4 in r4)
                return e.value = t4, e.done = false, e;
            }
            return e.done = true, e;
          };
        }, s2.values = T, S.prototype = { constructor: S, reset: function(e4) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = false, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(w), !e4)
            for (var t4 in this)
              t4.charAt(0) === "t" && u.call(this, t4) && !isNaN(+t4.slice(1)) && (this[t4] = l);
        }, stop: function() {
          this.done = true;
          var e4 = this.tryEntries[0].completion;
          if (e4.type === "throw")
            throw e4.arg;
          return this.rval;
        }, dispatchException: function(r4) {
          if (this.done)
            throw r4;
          var o2 = this;
          function e4(e5, t5) {
            return s3.type = "throw", s3.arg = r4, o2.next = e5, t5 && (o2.method = "next", o2.arg = l), !!t5;
          }
          for (var t4 = this.tryEntries.length - 1;0 <= t4; --t4) {
            var n2 = this.tryEntries[t4], s3 = n2.completion;
            if (n2.tryLoc === "root")
              return e4("end");
            if (n2.tryLoc <= this.prev) {
              var i2 = u.call(n2, "catchLoc"), a2 = u.call(n2, "finallyLoc");
              if (i2 && a2) {
                if (this.prev < n2.catchLoc)
                  return e4(n2.catchLoc, true);
                if (this.prev < n2.finallyLoc)
                  return e4(n2.finallyLoc);
              } else if (i2) {
                if (this.prev < n2.catchLoc)
                  return e4(n2.catchLoc, true);
              } else {
                if (!a2)
                  throw new Error("try statement without catch or finally");
                if (this.prev < n2.finallyLoc)
                  return e4(n2.finallyLoc);
              }
            }
          }
        }, abrupt: function(e4, t4) {
          for (var r4 = this.tryEntries.length - 1;0 <= r4; --r4) {
            var o2 = this.tryEntries[r4];
            if (o2.tryLoc <= this.prev && u.call(o2, "finallyLoc") && this.prev < o2.finallyLoc) {
              var n2 = o2;
              break;
            }
          }
          var s3 = (n2 = n2 && (e4 === "break" || e4 === "continue") && n2.tryLoc <= t4 && t4 <= n2.finallyLoc ? null : n2) ? n2.completion : {};
          return s3.type = e4, s3.arg = t4, n2 ? (this.method = "next", this.next = n2.finallyLoc, m) : this.complete(s3);
        }, complete: function(e4, t4) {
          if (e4.type === "throw")
            throw e4.arg;
          return e4.type === "break" || e4.type === "continue" ? this.next = e4.arg : e4.type === "return" ? (this.rval = this.arg = e4.arg, this.method = "return", this.next = "end") : e4.type === "normal" && t4 && (this.next = t4), m;
        }, finish: function(e4) {
          for (var t4 = this.tryEntries.length - 1;0 <= t4; --t4) {
            var r4 = this.tryEntries[t4];
            if (r4.finallyLoc === e4)
              return this.complete(r4.completion, r4.afterLoc), w(r4), m;
          }
        }, catch: function(e4) {
          for (var t4 = this.tryEntries.length - 1;0 <= t4; --t4) {
            var r4, o2, n2 = this.tryEntries[t4];
            if (n2.tryLoc === e4)
              return (r4 = n2.completion).type === "throw" && (o2 = r4.arg, w(n2)), o2;
          }
          throw new Error("illegal catch attempt");
        }, delegateYield: function(e4, t4, r4) {
          return this.delegate = { iterator: T(e4), resultName: t4, nextLoc: r4 }, this.method === "next" && (this.arg = l), m;
        } }, s2;
      }(typeof t2 == "object" ? t2.exports : {});
      try {
        regeneratorRuntime = t2;
      } catch (e3) {
        Function("r", "regeneratorRuntime = r")(t2);
      }
    }, {}], 253: [function(e2, t2, r2) {
      (function(e3) {
        var t3, r3, i, o, n, s2, a, l, u, c;
        function d(e4) {
          if (typeof e4 != "string" && (e4 = String(e4)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e4))
            throw new TypeError("Invalid character in header field name");
          return e4.toLowerCase();
        }
        function h(e4) {
          return e4 = typeof e4 != "string" ? String(e4) : e4;
        }
        function f(t4) {
          var e4 = { next: function() {
            var e5 = t4.shift();
            return { done: e5 === undefined, value: e5 };
          } };
          return r3 && (e4[Symbol.iterator] = function() {
            return e4;
          }), e4;
        }
        function p(t4) {
          this.map = {}, t4 instanceof p ? t4.forEach(function(e4, t5) {
            this.append(t5, e4);
          }, this) : Array.isArray(t4) ? t4.forEach(function(e4) {
            this.append(e4[0], e4[1]);
          }, this) : t4 && Object.getOwnPropertyNames(t4).forEach(function(e4) {
            this.append(e4, t4[e4]);
          }, this);
        }
        function m(e4) {
          if (e4.bodyUsed)
            return Promise.reject(new TypeError("Already read"));
          e4.bodyUsed = true;
        }
        function y(r4) {
          return new Promise(function(e4, t4) {
            r4.onload = function() {
              e4(r4.result);
            }, r4.onerror = function() {
              t4(r4.error);
            };
          });
        }
        function g(e4) {
          var t4 = new FileReader, r4 = y(t4);
          return t4.readAsArrayBuffer(e4), r4;
        }
        function v(e4) {
          var t4;
          return e4.slice ? e4.slice(0) : ((t4 = new Uint8Array(e4.byteLength)).set(new Uint8Array(e4)), t4.buffer);
        }
        function b() {
          return this.bodyUsed = false, this._initBody = function(e4) {
            if (this._bodyInit = e4)
              if (typeof e4 == "string")
                this._bodyText = e4;
              else if (i && Blob.prototype.isPrototypeOf(e4))
                this._bodyBlob = e4;
              else if (o && FormData.prototype.isPrototypeOf(e4))
                this._bodyFormData = e4;
              else if (t3 && URLSearchParams.prototype.isPrototypeOf(e4))
                this._bodyText = e4.toString();
              else if (n && i && a(e4))
                this._bodyArrayBuffer = v(e4.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);
              else {
                if (!n || !ArrayBuffer.prototype.isPrototypeOf(e4) && !l(e4))
                  throw new Error("unsupported BodyInit type");
                this._bodyArrayBuffer = v(e4);
              }
            else
              this._bodyText = "";
            this.headers.get("content-type") || (typeof e4 == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t3 && URLSearchParams.prototype.isPrototypeOf(e4) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, i && (this.blob = function() {
            var e4 = m(this);
            if (e4)
              return e4;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g);
          }), this.text = function() {
            var e4, t4, r4 = m(this);
            if (r4)
              return r4;
            if (this._bodyBlob)
              return r4 = this._bodyBlob, e4 = new FileReader, t4 = y(e4), e4.readAsText(r4), t4;
            if (this._bodyArrayBuffer)
              return Promise.resolve(function(e5) {
                for (var t5 = new Uint8Array(e5), r5 = new Array(t5.length), o2 = 0;o2 < t5.length; o2++)
                  r5[o2] = String.fromCharCode(t5[o2]);
                return r5.join("");
              }(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, o && (this.formData = function() {
            return this.text().then(_);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        function j(e4, t4) {
          var r4, o2 = (t4 = t4 || {}).body;
          if (e4 instanceof j) {
            if (e4.bodyUsed)
              throw new TypeError("Already read");
            this.url = e4.url, this.credentials = e4.credentials, t4.headers || (this.headers = new p(e4.headers)), this.method = e4.method, this.mode = e4.mode, o2 || e4._bodyInit == null || (o2 = e4._bodyInit, e4.bodyUsed = true);
          } else
            this.url = String(e4);
          if (this.credentials = t4.credentials || this.credentials || "omit", !t4.headers && this.headers || (this.headers = new p(t4.headers)), this.method = (e4 = t4.method || this.method || "GET", r4 = e4.toUpperCase(), -1 < u.indexOf(r4) ? r4 : e4), this.mode = t4.mode || this.mode || null, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && o2)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          this._initBody(o2);
        }
        function _(e4) {
          var r4 = new FormData;
          return e4.trim().split("&").forEach(function(e5) {
            var t4;
            e5 && (t4 = (e5 = e5.split("=")).shift().replace(/\+/g, " "), e5 = e5.join("=").replace(/\+/g, " "), r4.append(decodeURIComponent(t4), decodeURIComponent(e5)));
          }), r4;
        }
        function x(e4, t4) {
          t4 = t4 || {}, this.type = "default", this.status = t4.status === undefined ? 200 : t4.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t4 ? t4.statusText : "OK", this.headers = new p(t4.headers), this.url = t4.url || "", this._initBody(e4);
        }
        e3.fetch || (t3 = ("URLSearchParams" in e3), r3 = ("Symbol" in e3) && ("iterator" in Symbol), i = ("FileReader" in e3) && ("Blob" in e3) && function() {
          try {
            return new Blob, true;
          } catch (e4) {
            return false;
          }
        }(), o = ("FormData" in e3), (n = ("ArrayBuffer" in e3)) && (s2 = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], a = function(e4) {
          return e4 && DataView.prototype.isPrototypeOf(e4);
        }, l = ArrayBuffer.isView || function(e4) {
          return e4 && -1 < s2.indexOf(Object.prototype.toString.call(e4));
        }), p.prototype.append = function(e4, t4) {
          e4 = d(e4), t4 = h(t4);
          var r4 = this.map[e4];
          this.map[e4] = r4 ? r4 + "," + t4 : t4;
        }, p.prototype.delete = function(e4) {
          delete this.map[d(e4)];
        }, p.prototype.get = function(e4) {
          return e4 = d(e4), this.has(e4) ? this.map[e4] : null;
        }, p.prototype.has = function(e4) {
          return this.map.hasOwnProperty(d(e4));
        }, p.prototype.set = function(e4, t4) {
          this.map[d(e4)] = h(t4);
        }, p.prototype.forEach = function(e4, t4) {
          for (var r4 in this.map)
            this.map.hasOwnProperty(r4) && e4.call(t4, this.map[r4], r4, this);
        }, p.prototype.keys = function() {
          var r4 = [];
          return this.forEach(function(e4, t4) {
            r4.push(t4);
          }), f(r4);
        }, p.prototype.values = function() {
          var t4 = [];
          return this.forEach(function(e4) {
            t4.push(e4);
          }), f(t4);
        }, p.prototype.entries = function() {
          var r4 = [];
          return this.forEach(function(e4, t4) {
            r4.push([t4, e4]);
          }), f(r4);
        }, r3 && (p.prototype[Symbol.iterator] = p.prototype.entries), u = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"], j.prototype.clone = function() {
          return new j(this, { body: this._bodyInit });
        }, b.call(j.prototype), b.call(x.prototype), x.prototype.clone = function() {
          return new x(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new p(this.headers), url: this.url });
        }, x.error = function() {
          var e4 = new x(null, { status: 0, statusText: "" });
          return e4.type = "error", e4;
        }, c = [301, 302, 303, 307, 308], x.redirect = function(e4, t4) {
          if (c.indexOf(t4) === -1)
            throw new RangeError("Invalid status code");
          return new x(null, { status: t4, headers: { location: e4 } });
        }, e3.Headers = p, e3.Request = j, e3.Response = x, e3.fetch = function(r4, s3) {
          return new Promise(function(o2, e4) {
            var t4 = new j(r4, s3), n2 = new XMLHttpRequest;
            n2.onload = function() {
              var r5, e5 = { status: n2.status, statusText: n2.statusText, headers: (e5 = n2.getAllResponseHeaders() || "", r5 = new p, e5.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e6) {
                var e6 = e6.split(":"), t6 = e6.shift().trim();
                t6 && (e6 = e6.join(":").trim(), r5.append(t6, e6));
              }), r5) }, t5 = (e5.url = ("responseURL" in n2) ? n2.responseURL : e5.headers.get("X-Request-URL"), ("response" in n2) ? n2.response : n2.responseText);
              o2(new x(t5, e5));
            }, n2.onerror = function() {
              e4(new TypeError("Network request failed"));
            }, n2.ontimeout = function() {
              e4(new TypeError("Network request failed"));
            }, n2.open(t4.method, t4.url, true), t4.credentials === "include" ? n2.withCredentials = true : t4.credentials === "omit" && (n2.withCredentials = false), "responseType" in n2 && i && (n2.responseType = "blob"), t4.headers.forEach(function(e5, t5) {
              n2.setRequestHeader(t5, e5);
            }), n2.send(t4._bodyInit === undefined ? null : t4._bodyInit);
          });
        }, e3.fetch.polyfill = true);
      })(typeof self != "undefined" ? self : this);
    }, {}], 254: [function(e2, t2, r2) {
      e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l, o = n(e2("../core/main")), u = n(e2("../color/color_conversion"));
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      var c = [{ h: 0, s: 0, b: 0.8275, name: "gray" }, { h: 0, s: 0, b: 0.8627, name: "gray" }, { h: 0, s: 0, b: 0.7529, name: "gray" }, { h: 0.0167, s: 0.1176, b: 1, name: "light pink" }], d = [{ h: 0, s: 0, b: 0, name: "black" }, { h: 0, s: 0, b: 0.5, name: "gray" }, { h: 0, s: 0, b: 1, name: "white" }, { h: 0, s: 0.5, b: 0.5, name: "dark maroon" }, { h: 0, s: 0.5, b: 1, name: "salmon pink" }, { h: 0, s: 1, b: 0, name: "black" }, { h: 0, s: 1, b: 0.5, name: "dark red" }, { h: 0, s: 1, b: 1, name: "red" }, { h: 5, s: 0, b: 1, name: "very light peach" }, { h: 5, s: 0.5, b: 0.5, name: "brown" }, { h: 5, s: 0.5, b: 1, name: "peach" }, { h: 5, s: 1, b: 0.5, name: "brick red" }, { h: 5, s: 1, b: 1, name: "crimson" }, { h: 10, s: 0, b: 1, name: "light peach" }, { h: 10, s: 0.5, b: 0.5, name: "brown" }, { h: 10, s: 0.5, b: 1, name: "light orange" }, { h: 10, s: 1, b: 0.5, name: "brown" }, { h: 10, s: 1, b: 1, name: "orange" }, { h: 15, s: 0, b: 1, name: "very light yellow" }, { h: 15, s: 0.5, b: 0.5, name: "olive green" }, { h: 15, s: 0.5, b: 1, name: "light yellow" }, { h: 15, s: 1, b: 0, name: "dark olive green" }, { h: 15, s: 1, b: 0.5, name: "olive green" }, { h: 15, s: 1, b: 1, name: "yellow" }, { h: 20, s: 0, b: 1, name: "very light yellow" }, { h: 20, s: 0.5, b: 0.5, name: "olive green" }, { h: 20, s: 0.5, b: 1, name: "light yellow green" }, { h: 20, s: 1, b: 0, name: "dark olive green" }, { h: 20, s: 1, b: 0.5, name: "dark yellow green" }, { h: 20, s: 1, b: 1, name: "yellow green" }, { h: 25, s: 0.5, b: 0.5, name: "dark yellow green" }, { h: 25, s: 0.5, b: 1, name: "light green" }, { h: 25, s: 1, b: 0.5, name: "dark green" }, { h: 25, s: 1, b: 1, name: "green" }, { h: 30, s: 0.5, b: 1, name: "light green" }, { h: 30, s: 1, b: 0.5, name: "dark green" }, { h: 30, s: 1, b: 1, name: "green" }, { h: 35, s: 0, b: 0.5, name: "light green" }, { h: 35, s: 0, b: 1, name: "very light green" }, { h: 35, s: 0.5, b: 0.5, name: "dark green" }, { h: 35, s: 0.5, b: 1, name: "light green" }, { h: 35, s: 1, b: 0, name: "very dark green" }, { h: 35, s: 1, b: 0.5, name: "dark green" }, { h: 35, s: 1, b: 1, name: "green" }, { h: 40, s: 0, b: 1, name: "very light green" }, { h: 40, s: 0.5, b: 0.5, name: "dark green" }, { h: 40, s: 0.5, b: 1, name: "light green" }, { h: 40, s: 1, b: 0.5, name: "dark green" }, { h: 40, s: 1, b: 1, name: "green" }, { h: 45, s: 0.5, b: 1, name: "light turquoise" }, { h: 45, s: 1, b: 0.5, name: "dark turquoise" }, { h: 45, s: 1, b: 1, name: "turquoise" }, { h: 50, s: 0, b: 1, name: "light sky blue" }, { h: 50, s: 0.5, b: 0.5, name: "dark cyan" }, { h: 50, s: 0.5, b: 1, name: "light cyan" }, { h: 50, s: 1, b: 0.5, name: "dark cyan" }, { h: 50, s: 1, b: 1, name: "cyan" }, { h: 55, s: 0, b: 1, name: "light sky blue" }, { h: 55, s: 0.5, b: 1, name: "light sky blue" }, { h: 55, s: 1, b: 0.5, name: "dark blue" }, { h: 55, s: 1, b: 1, name: "sky blue" }, { h: 60, s: 0, b: 0.5, name: "gray" }, { h: 60, s: 0, b: 1, name: "very light blue" }, { h: 60, s: 0.5, b: 0.5, name: "blue" }, { h: 60, s: 0.5, b: 1, name: "light blue" }, { h: 60, s: 1, b: 0.5, name: "navy blue" }, { h: 60, s: 1, b: 1, name: "blue" }, { h: 65, s: 0, b: 1, name: "lavender" }, { h: 65, s: 0.5, b: 0.5, name: "navy blue" }, { h: 65, s: 0.5, b: 1, name: "light purple" }, { h: 65, s: 1, b: 0.5, name: "dark navy blue" }, { h: 65, s: 1, b: 1, name: "blue" }, { h: 70, s: 0, b: 1, name: "lavender" }, { h: 70, s: 0.5, b: 0.5, name: "navy blue" }, { h: 70, s: 0.5, b: 1, name: "lavender blue" }, { h: 70, s: 1, b: 0.5, name: "dark navy blue" }, { h: 70, s: 1, b: 1, name: "blue" }, { h: 75, s: 0.5, b: 1, name: "lavender" }, { h: 75, s: 1, b: 0.5, name: "dark purple" }, { h: 75, s: 1, b: 1, name: "purple" }, { h: 80, s: 0.5, b: 1, name: "pinkish purple" }, { h: 80, s: 1, b: 0.5, name: "dark purple" }, { h: 80, s: 1, b: 1, name: "purple" }, { h: 85, s: 0, b: 1, name: "light pink" }, { h: 85, s: 0.5, b: 0.5, name: "purple" }, { h: 85, s: 0.5, b: 1, name: "light fuchsia" }, { h: 85, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 85, s: 1, b: 1, name: "fuchsia" }, { h: 90, s: 0.5, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 0.5, b: 1, name: "hot pink" }, { h: 90, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 1, b: 1, name: "fuchsia" }, { h: 95, s: 0, b: 1, name: "pink" }, { h: 95, s: 0.5, b: 1, name: "light pink" }, { h: 95, s: 1, b: 0.5, name: "dark magenta" }, { h: 95, s: 1, b: 1, name: "magenta" }];
      o.default.prototype._rgbColorName = function(e3) {
        var t3, r3, e3 = u.default._rgbaToHSBA(e3), o2 = [(l = e3)[0], e3[1], e3[2]];
        o2[0] !== 0 && (o2[0] = Math.round(100 * o2[0]), (e3 = o2[0].toString().split(""))[r3 = e3.length - 1] = parseInt(e3[r3]), e3[r3] < 2.5 ? e3[r3] = 0 : 2.5 <= e3[r3] && e3[r3] < 7.5 && (e3[r3] = 5), e3.length === 2 ? (e3[0] = parseInt(e3[0]), 7.5 <= e3[r3] && (e3[r3] = 0, e3[0] = e3[0] + 1), o2[0] = 10 * e3[0] + e3[1]) : 7.5 <= e3[r3] ? o2[0] = 10 : o2[0] = e3[r3]), o2[2] = o2[2] / 255;
        for (var n2 = o2.length - 1;1 <= n2; n2--)
          o2[n2] <= 0.25 ? o2[n2] = 0 : 0.25 < o2[n2] && o2[n2] < 0.75 ? o2[n2] = 0.5 : o2[n2] = 1;
        if (o2[0] === 0 && o2[1] === 0 && o2[2] === 1) {
          for (var s2 = 2;0 <= s2; s2--)
            l[s2] = Math.round(1e4 * l[s2]) / 1e4;
          for (var i = 0;i < c.length; i++) {
            if (c[i].h === l[0] && c[i].s === l[1] && c[i].b === l[2]) {
              t3 = c[i].name;
              break;
            }
            t3 = "white";
          }
        } else
          for (var a = 0;a < d.length; a++)
            if (d[a].h === o2[0] && d[a].s === o2[1] && d[a].b === o2[2]) {
              t3 = d[a].name;
              break;
            }
        return t3;
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../color/color_conversion": 260, "../core/main": 275, "core-js/modules/es.function.name": 168, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.split": 198 }], 255: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.replace"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      var i = "_Description", a = "_fallbackDesc", l = "_fallbackTable", u = "_Label", c = "_labelDesc", d = "_labelTable";
      function h(e3) {
        if (e3 === "label" || e3 === "fallback")
          throw new Error("description should not be LABEL or FALLBACK");
        return e3.endsWith(".") || e3.endsWith(";") || e3.endsWith(",") || e3.endsWith("?") || e3.endsWith("!") || (e3 += "."), e3;
      }
      s2.default.prototype.describe = function(e3, t3) {
        var r3;
        s2.default._validateParameters("describe", arguments), typeof e3 == "string" && (r3 = this.canvas.id, e3 = h(e3), this.dummyDOM || (this.dummyDOM = document.getElementById(r3).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e3 && (this.descriptions.fallback.innerHTML = e3) : this._describeHTML("fallback", e3), t3 === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e3 && (this.descriptions.label.innerHTML = e3) : this._describeHTML("label", e3)));
      }, s2.default.prototype.describeElement = function(e3, t3, r3) {
        var o, n;
        s2.default._validateParameters("describeElement", arguments), typeof t3 == "string" && typeof e3 == "string" && (o = this.canvas.id, t3 = h(t3), n = function(e4) {
          if (e4 === "label" || e4 === "fallback")
            throw new Error("element name should not be LABEL or FALLBACK");
          e4.endsWith(".") || e4.endsWith(";") || e4.endsWith(",") ? e4 = e4.replace(/.$/, ":") : e4.endsWith(":") || (e4 += ":");
          return e4;
        }(e3), e3 = e3.replace(/[^a-zA-Z0-9]/g, ""), n = '<th scope="row">'.concat(n, "</th><td>").concat(t3, "</td>"), this.dummyDOM || (this.dummyDOM = document.getElementById(o).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = { fallbackElements: {} }, this.descriptions.fallbackElements[e3] ? this.descriptions.fallbackElements[e3].innerHTML !== n && (this.descriptions.fallbackElements[e3].innerHTML = n) : this._describeElementHTML("fallback", e3, n), r3 === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e3] ? this.descriptions.labelElements[e3].innerHTML !== n && (this.descriptions.labelElements[e3].innerHTML = n) : this._describeElementHTML("label", e3, n)));
      }, s2.default.prototype._describeHTML = function(e3, t3) {
        var r3, o = this.canvas.id;
        e3 === "fallback" ? (this.dummyDOM.querySelector("#".concat(o + i)) ? this.dummyDOM.querySelector("#" + o + l).insertAdjacentHTML("beforebegin", '<p id="'.concat(o + a, '"></p>')) : (r3 = '<div id="'.concat(o).concat(i, '" role="region" aria-label="Canvas Description"><p id="').concat(o).concat(a, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")).insertAdjacentHTML("beforebegin", r3) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = r3), this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(o).concat(a)), this.descriptions.fallback.innerHTML = t3) : e3 === "label" && (this.dummyDOM.querySelector("#".concat(o + u)) ? this.dummyDOM.querySelector("#".concat(o + d)) && this.dummyDOM.querySelector("#".concat(o + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(o).concat(c, '"></p>')) : (r3 = '<div id="'.concat(o).concat(u, '" class="p5Label"><p id="').concat(o).concat(c, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", r3) : this.dummyDOM.querySelector("#" + o).insertAdjacentHTML("afterend", r3)), this.descriptions.label = this.dummyDOM.querySelector("#" + o + c), this.descriptions.label.innerHTML = t3);
      }, s2.default.prototype._describeElementHTML = function(e3, t3, r3) {
        var o, n = this.canvas.id;
        e3 === "fallback" ? (this.dummyDOM.querySelector("#".concat(n + i)) ? this.dummyDOM.querySelector("#" + n + l) || this.dummyDOM.querySelector("#" + n + a).insertAdjacentHTML("afterend", '<table id="'.concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table>')) : (o = '<div id="'.concat(n).concat(i, '" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).innerHTML = o), (o = document.createElement("tr")).id = n + "_fte_" + t3, this.dummyDOM.querySelector("#" + n + l).appendChild(o), this.descriptions.fallbackElements[t3] = this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t3)), this.descriptions.fallbackElements[t3].innerHTML = r3) : e3 === "label" && (this.dummyDOM.querySelector("#".concat(n + u)) ? this.dummyDOM.querySelector("#".concat(n + d)) || this.dummyDOM.querySelector("#" + n + c).insertAdjacentHTML("afterend", '<table id="'.concat(n + d, '"></table>')) : (o = '<div id="'.concat(n).concat(u, '" class="p5Label"><table id="').concat(n).concat(d, '"></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).insertAdjacentHTML("afterend", o)), (e3 = document.createElement("tr")).id = n + "_lte_" + t3, this.dummyDOM.querySelector("#" + n + d).appendChild(e3), this.descriptions.labelElements[t3] = this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t3)), this.descriptions.labelElements[t3].innerHTML = r3);
      };
      e2 = s2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.ends-with": 190, "core-js/modules/es.string.replace": 196 }], 256: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.string.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype._updateGridOutput = function(e3) {
        var t3, r3, o, n;
        this.dummyDOM.querySelector("#".concat(e3, "_summary")) && (t3 = this._accessibleOutputs[e3], o = function(e4, t4, r4, o2) {
          t4 = "".concat(t4, " canvas, ").concat(r4, " by ").concat(o2, " pixels, contains ").concat(e4[0]);
          t4 = (e4[0] === 1 ? "".concat(t4, " shape: ") : "".concat(t4, " shapes: ")).concat(e4[1]);
          return t4;
        }((r3 = function(e4, t4) {
          var r4, o2 = "", n2 = "", s2 = 0;
          for (r4 in t4) {
            var i, a = 0;
            for (i in t4[r4]) {
              var l = '<li id="'.concat(e4, "shape").concat(s2, '">').concat(t4[r4][i].color, " ").concat(r4, ",");
              r4 === "line" ? l += " location = ".concat(t4[r4][i].pos, ", length = ").concat(t4[r4][i].length, " pixels") : (l += " location = ".concat(t4[r4][i].pos), r4 !== "point" && (l += ", area = ".concat(t4[r4][i].area, " %")), l += "</li>"), o2 += l, a++, s2++;
            }
            n2 = 1 < a ? "".concat(n2, " ").concat(a, " ").concat(r4, "s") : "".concat(n2, " ").concat(a, " ").concat(r4);
          }
          return { numShapes: [s2, n2], details: o2 };
        }(e3, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e4, t4) {
          var r4, o2, n2 = 0, s2 = "", i = Array.from(Array(10), function() {
            return Array(10);
          });
          for (r4 in t4)
            for (var a in t4[r4]) {
              var l = undefined;
              l = r4 !== "line" ? '<a href="#'.concat(e4, "shape").concat(n2, '">').concat(t4[r4][a].color, " ").concat(r4, "</a>") : '<a href="#'.concat(e4, "shape").concat(n2, '">').concat(t4[r4][a].color, " ").concat(r4, " midpoint</a>"), i[t4[r4][a].loc.locY][t4[r4][a].loc.locX] ? i[t4[r4][a].loc.locY][t4[r4][a].loc.locX] = i[t4[r4][a].loc.locY][t4[r4][a].loc.locX] + "  " + l : i[t4[r4][a].loc.locY][t4[r4][a].loc.locX] = l, n2++;
            }
          for (o2 in i) {
            var u, c = "<tr>";
            for (u in i[o2])
              c += "<td>", i[o2][u] !== undefined && (c += i[o2][u]), c += "</td>";
            s2 = s2 + c + "</tr>";
          }
          return s2;
        }(e3, this.ingredients.shapes), o !== t3.summary.innerHTML && (t3.summary.innerHTML = o), n !== t3.map.innerHTML && (t3.map.innerHTML = n), r3.details !== t3.shapeDetails.innerHTML && (t3.shapeDetails.innerHTML = r3.details), this._accessibleOutputs[e3] = t3);
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.map": 164, "core-js/modules/es.string.iterator": 192 }], 257: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.to-fixed"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function l(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function u(e3, t3, r3) {
        t3 = Math.floor(e3[0] / t3 * 10), e3 = Math.floor(e3[1] / r3 * 10);
        return t3 === 10 && (t3 -= 1), e3 === 10 && (e3 -= 1), { locX: t3, locY: e3 };
      }
      o.default.prototype.textOutput = function(e3) {
        o.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = true, this._createOutput("textOutput", "Fallback"), e3 === this.LABEL && (this._accessibleOutputs.textLabel = true, this._createOutput("textOutput", "Label")));
      }, o.default.prototype.gridOutput = function(e3) {
        o.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = true, this._createOutput("gridOutput", "Fallback"), e3 === this.LABEL && (this._accessibleOutputs.gridLabel = true, this._createOutput("gridOutput", "Label")));
      }, o.default.prototype._addAccsOutput = function() {
        return this._accessibleOutputs || (this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }), this._accessibleOutputs.grid || this._accessibleOutputs.text;
      }, o.default.prototype._createOutput = function(e3, t3) {
        var r3, o2, n, s2 = this.canvas.id, i = (this.ingredients || (this.ingredients = { shapes: {}, colors: { background: "white", fill: "white", stroke: "black" }, pShapes: "" }), this.dummyDOM || (this.dummyDOM = document.getElementById(s2).parentNode), "");
        t3 === "Fallback" ? (r3 = s2 + e3, this.dummyDOM.querySelector("#".concat(o2 = s2 + "accessibleOutput")) || (this.dummyDOM.querySelector("#".concat(s2, "_Description")) ? this.dummyDOM.querySelector("#".concat(s2, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(o2, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(s2)).innerHTML = '<div id="'.concat(o2, '" role="region" aria-label="Canvas Outputs"></div>'))) : t3 === "Label" && (r3 = s2 + e3 + (i = t3), this.dummyDOM.querySelector("#".concat(o2 = s2 + "accessibleOutput" + t3)) || (this.dummyDOM.querySelector("#".concat(s2, "_Label")) ? this.dummyDOM.querySelector("#".concat(s2, "_Label")) : this.dummyDOM.querySelector("#".concat(s2))).insertAdjacentHTML("afterend", '<div id="'.concat(o2, '"></div>'))), this._accessibleOutputs[r3] = {}, e3 === "textOutput" ? (i = "#".concat(s2, "gridOutput").concat(i), n = '<div id="'.concat(r3, '">Text Output<div id="').concat(r3, 'Summary" aria-label="text output summary"><p id="').concat(r3, '_summary"></p><ul id="').concat(r3, '_list"></ul></div><table id="').concat(r3, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("beforebegin", n) : this.dummyDOM.querySelector("#".concat(o2)).innerHTML = n, this._accessibleOutputs[r3].list = this.dummyDOM.querySelector("#".concat(r3, "_list"))) : e3 === "gridOutput" && (i = "#".concat(s2, "textOutput").concat(i), n = '<div id="'.concat(r3, '">Grid Output<p id="').concat(r3, '_summary" aria-label="grid output summary"><table id="').concat(r3, '_map" summary="grid output content"></table><ul id="').concat(r3, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("afterend", n) : this.dummyDOM.querySelector("#".concat(o2)).innerHTML = n, this._accessibleOutputs[r3].map = this.dummyDOM.querySelector("#".concat(r3, "_map"))), this._accessibleOutputs[r3].shapeDetails = this.dummyDOM.querySelector("#".concat(r3, "_shapeDetails")), this._accessibleOutputs[r3].summary = this.dummyDOM.querySelector("#".concat(r3, "_summary"));
      }, o.default.prototype._updateAccsOutput = function() {
        var e3 = this.canvas.id;
        JSON.stringify(this.ingredients.shapes) !== this.ingredients.pShapes && (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e3 + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e3 + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e3 + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e3 + "gridOutputLabel"));
      }, o.default.prototype._accsBackground = function(e3) {
        this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e3 && (this.ingredients.colors.backgroundRGBA = e3, this.ingredients.colors.background = this._rgbColorName(e3));
      }, o.default.prototype._accsCanvasColors = function(e3, t3) {
        e3 === "fill" ? this.ingredients.colors.fillRGBA !== t3 && (this.ingredients.colors.fillRGBA = t3, this.ingredients.colors.fill = this._rgbColorName(t3)) : e3 === "stroke" && this.ingredients.colors.strokeRGBA !== t3 && (this.ingredients.colors.strokeRGBA = t3, this.ingredients.colors.stroke = this._rgbColorName(t3));
      }, o.default.prototype._accsOutput = function(e3, t3) {
        e3 === "ellipse" && t3[2] === t3[3] ? e3 = "circle" : e3 === "rectangle" && t3[2] === t3[3] && (e3 = "square");
        var r3, o2, n = {}, s2 = true, i = function(e4, t4) {
          var r4;
          e4 = e4 === "rectangle" || e4 === "ellipse" || e4 === "arc" || e4 === "circle" || e4 === "square" ? (r4 = Math.round(t4[0] + t4[2] / 2), Math.round(t4[1] + t4[3] / 2)) : e4 === "triangle" ? (r4 = (t4[0] + t4[2] + t4[4]) / 3, (t4[1] + t4[3] + t4[5]) / 3) : e4 === "quadrilateral" ? (r4 = (t4[0] + t4[2] + t4[4] + t4[6]) / 4, (t4[1] + t4[3] + t4[5] + t4[7]) / 4) : e4 === "line" ? (r4 = (t4[0] + t4[2]) / 2, (t4[1] + t4[3]) / 2) : (r4 = t4[0], t4[1]);
          return [r4, e4];
        }(e3, t3);
        if (e3 === "line" ? (n.color = this.ingredients.colors.stroke, n.length = Math.round(this.dist(t3[0], t3[1], t3[2], t3[3])), r3 = this._getPos(t3[0], [1]), o2 = this._getPos(t3[2], [3]), n.loc = u(i, this.width, this.height), n.pos = r3 === o2 ? "at ".concat(r3) : "from ".concat(r3, " to ").concat(o2)) : (e3 === "point" ? n.color = this.ingredients.colors.stroke : (n.color = this.ingredients.colors.fill, n.area = this._getArea(e3, t3)), n.pos = this._getPos.apply(this, l(i)), n.loc = u(i, this.width, this.height)), this.ingredients.shapes[e3]) {
          if (this.ingredients.shapes[e3] !== [n]) {
            for (var a in this.ingredients.shapes[e3])
              JSON.stringify(this.ingredients.shapes[e3][a]) === JSON.stringify(n) && (s2 = false);
            s2 === true && this.ingredients.shapes[e3].push(n);
          }
        } else
          this.ingredients.shapes[e3] = [n];
      }, o.default.prototype._getPos = function(e3, t3) {
        var e3 = new DOMPointReadOnly(e3, t3), t3 = this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform(), e3 = e3.matrixTransform(t3), t3 = e3.x, e3 = e3.y, r3 = this.width, o2 = this.height;
        return t3 < 0.4 * r3 ? e3 < 0.4 * o2 ? "top left" : 0.6 * o2 < e3 ? "bottom left" : "mid left" : 0.6 * r3 < t3 ? e3 < 0.4 * o2 ? "top right" : 0.6 * o2 < e3 ? "bottom right" : "mid right" : e3 < 0.4 * o2 ? "top middle" : 0.6 * o2 < e3 ? "bottom middle" : "middle";
      }, o.default.prototype._getArea = function(e3, t3) {
        var r3, o2, n = 0, s2 = (e3 === "arc" ? (n = (r3 = ((t3[5] - t3[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI)) * t3[2] * t3[3] / 8, t3[6] !== "open" && t3[6] !== "chord" || (o2 = t3[0], u2 = t3[1], s2 = t3[0] + t3[2] / 2 * Math.cos(t3[4]).toFixed(2), c = t3[1] + t3[3] / 2 * Math.sin(t3[4]).toFixed(2), a = t3[0] + t3[2] / 2 * Math.cos(t3[5]).toFixed(2), i = t3[1] + t3[3] / 2 * Math.sin(t3[5]).toFixed(2), o2 = Math.abs(o2 * (c - i) + s2 * (i - u2) + a * (u2 - c)) / 2, r3 > Math.PI ? n += o2 : n -= o2)) : e3 === "ellipse" || e3 === "circle" ? n = 3.14 * t3[2] / 2 * t3[3] / 2 : e3 === "line" || e3 === "point" ? n = 0 : e3 === "quadrilateral" ? n = Math.abs((t3[6] + t3[0]) * (t3[7] - t3[1]) + (t3[0] + t3[2]) * (t3[1] - t3[3]) + (t3[2] + t3[4]) * (t3[3] - t3[5]) + (t3[4] + t3[6]) * (t3[5] - t3[7])) / 2 : e3 === "rectangle" || e3 === "square" ? n = t3[2] * t3[3] : e3 === "triangle" && (n = Math.abs(t3[0] * (t3[3] - t3[5]) + t3[2] * (t3[5] - t3[1]) + t3[4] * (t3[1] - t3[3])) / 2), this.width * this._pixelDensity), i = this.height * this._pixelDensity, a = [new DOMPoint(0, 0), new DOMPoint(s2, 0), new DOMPoint(s2, i), new DOMPoint(0, i)], l2 = (this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform()).inverse(), u2 = a.map(function(e4) {
          return e4.matrixTransform(l2);
        }), c = Math.abs((u2[3].x + u2[0].x) * (u2[3].y - u2[0].y) + (u2[0].x + u2[1].x) * (u2[0].y - u2[1].y) + (u2[1].x + u2[2].x) * (u2[1].y - u2[2].y) + (u2[2].x + u2[3].x) * (u2[2].y - u2[3].y)) / 2;
        return Math.round(100 * n / c);
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.number.to-fixed": 175, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 258: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.concat"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype._updateTextOutput = function(e3) {
        var t3, r3, o, n;
        this.dummyDOM.querySelector("#".concat(e3, "_summary")) && (t3 = this._accessibleOutputs[e3], o = function(e4, t4, r4, o2) {
          r4 = "Your output is a, ".concat(r4, " by ").concat(o2, " pixels, ").concat(t4, " canvas containing the following");
          r4 = e4 === 1 ? "".concat(r4, " shape:") : "".concat(r4, " ").concat(e4, " shapes:");
          return r4;
        }((r3 = function(e4, t4) {
          var r4, o2 = "", n2 = 0;
          for (r4 in t4)
            for (var s2 in t4[r4]) {
              var i = '<li><a href="#'.concat(e4, "shape").concat(n2, '">').concat(t4[r4][s2].color, " ").concat(r4, "</a>");
              r4 === "line" ? i += ", ".concat(t4[r4][s2].pos, ", ").concat(t4[r4][s2].length, " pixels long.</li>") : (i += ", at ".concat(t4[r4][s2].pos), r4 !== "point" && (i += ", covering ".concat(t4[r4][s2].area, "% of the canvas")), i += ".</li>"), o2 += i, n2++;
            }
          return { numShapes: n2, listShapes: o2 };
        }(e3, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e4, t4) {
          var r4, o2 = "", n2 = 0;
          for (r4 in t4)
            for (var s2 in t4[r4]) {
              var i = '<tr id="'.concat(e4, "shape").concat(n2, '"><th>').concat(t4[r4][s2].color, " ").concat(r4, "</th>");
              r4 === "line" ? i += "<td>location = ".concat(t4[r4][s2].pos, "</td><td>length = ").concat(t4[r4][s2].length, " pixels</td></tr>") : (i += "<td>location = ".concat(t4[r4][s2].pos, "</td>"), r4 !== "point" && (i += "<td> area = ".concat(t4[r4][s2].area, "%</td>")), i += "</tr>"), o2 += i, n2++;
            }
          return o2;
        }(e3, this.ingredients.shapes), o !== t3.summary.innerHTML && (t3.summary.innerHTML = o), r3.listShapes !== t3.list.innerHTML && (t3.list.innerHTML = r3.listShapes), n !== t3.shapeDetails.innerHTML && (t3.shapeDetails.innerHTML = n), this._accessibleOutputs[e3] = t3);
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151 }], 259: [function(e2, t2, r2) {
      var o = (o = e2("./core/main")) && o.__esModule ? o : { default: o };
      e2("./core/constants"), e2("./core/environment"), e2("./core/friendly_errors/stacktrace"), e2("./core/friendly_errors/validate_params"), e2("./core/friendly_errors/file_errors"), e2("./core/friendly_errors/fes_core"), e2("./core/friendly_errors/sketch_reader"), e2("./core/helpers"), e2("./core/legacy"), e2("./core/preload"), e2("./core/p5.Element"), e2("./core/p5.Graphics"), e2("./core/p5.Renderer"), e2("./core/p5.Renderer2D"), e2("./core/rendering"), e2("./core/shim"), e2("./core/structure"), e2("./core/transform"), e2("./core/shape/2d_primitives"), e2("./core/shape/attributes"), e2("./core/shape/curves"), e2("./core/shape/vertex"), e2("./accessibility/outputs"), e2("./accessibility/textOutput"), e2("./accessibility/gridOutput"), e2("./accessibility/color_namer"), e2("./color/color_conversion"), e2("./color/creating_reading"), e2("./color/p5.Color"), e2("./color/setting"), e2("./data/p5.TypedDict"), e2("./data/local_storage.js"), e2("./dom/dom"), e2("./accessibility/describe"), e2("./events/acceleration"), e2("./events/keyboard"), e2("./events/mouse"), e2("./events/touch"), e2("./image/filters"), e2("./image/image"), e2("./image/loading_displaying"), e2("./image/p5.Image"), e2("./image/pixels"), e2("./io/files"), e2("./io/p5.Table"), e2("./io/p5.TableRow"), e2("./io/p5.XML"), e2("./math/calculation"), e2("./math/math"), e2("./math/noise"), e2("./math/p5.Vector"), e2("./math/random"), e2("./math/trigonometry"), e2("./typography/attributes"), e2("./typography/loading_displaying"), e2("./typography/p5.Font"), e2("./utilities/array_functions"), e2("./utilities/conversion"), e2("./utilities/string_functions"), e2("./utilities/time_date"), e2("./webgl/3d_primitives"), e2("./webgl/interaction"), e2("./webgl/light"), e2("./webgl/loading"), e2("./webgl/material"), e2("./webgl/p5.Camera"), e2("./webgl/p5.DataArray"), e2("./webgl/p5.Geometry"), e2("./webgl/p5.Matrix"), e2("./webgl/p5.RendererGL.Immediate"), e2("./webgl/p5.RendererGL"), e2("./webgl/p5.RendererGL.Retained"), e2("./webgl/p5.Framebuffer"), e2("./webgl/p5.Shader"), e2("./webgl/p5.RenderBuffer"), e2("./webgl/p5.Texture"), e2("./webgl/text"), e2("./core/init"), t2.exports = o.default;
    }, { "./accessibility/color_namer": 254, "./accessibility/describe": 255, "./accessibility/gridOutput": 256, "./accessibility/outputs": 257, "./accessibility/textOutput": 258, "./color/color_conversion": 260, "./color/creating_reading": 261, "./color/p5.Color": 262, "./color/setting": 263, "./core/constants": 264, "./core/environment": 265, "./core/friendly_errors/fes_core": 266, "./core/friendly_errors/file_errors": 267, "./core/friendly_errors/sketch_reader": 268, "./core/friendly_errors/stacktrace": 269, "./core/friendly_errors/validate_params": 270, "./core/helpers": 271, "./core/init": 272, "./core/legacy": 274, "./core/main": 275, "./core/p5.Element": 276, "./core/p5.Graphics": 277, "./core/p5.Renderer": 278, "./core/p5.Renderer2D": 279, "./core/preload": 280, "./core/rendering": 281, "./core/shape/2d_primitives": 282, "./core/shape/attributes": 283, "./core/shape/curves": 284, "./core/shape/vertex": 285, "./core/shim": 286, "./core/structure": 287, "./core/transform": 288, "./data/local_storage.js": 289, "./data/p5.TypedDict": 290, "./dom/dom": 291, "./events/acceleration": 292, "./events/keyboard": 293, "./events/mouse": 294, "./events/touch": 295, "./image/filters": 296, "./image/image": 297, "./image/loading_displaying": 298, "./image/p5.Image": 299, "./image/pixels": 300, "./io/files": 301, "./io/p5.Table": 302, "./io/p5.TableRow": 303, "./io/p5.XML": 304, "./math/calculation": 305, "./math/math": 306, "./math/noise": 307, "./math/p5.Vector": 308, "./math/random": 309, "./math/trigonometry": 310, "./typography/attributes": 311, "./typography/loading_displaying": 312, "./typography/p5.Font": 313, "./utilities/array_functions": 314, "./utilities/conversion": 315, "./utilities/string_functions": 316, "./utilities/time_date": 317, "./webgl/3d_primitives": 318, "./webgl/interaction": 320, "./webgl/light": 321, "./webgl/loading": 322, "./webgl/material": 323, "./webgl/p5.Camera": 324, "./webgl/p5.DataArray": 325, "./webgl/p5.Framebuffer": 326, "./webgl/p5.Geometry": 327, "./webgl/p5.Matrix": 328, "./webgl/p5.RenderBuffer": 329, "./webgl/p5.RendererGL": 332, "./webgl/p5.RendererGL.Immediate": 330, "./webgl/p5.RendererGL.Retained": 331, "./webgl/p5.Shader": 333, "./webgl/p5.Texture": 334, "./webgl/text": 335 }], 260: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.ColorConversion = { _hsbaToHSLA: function(e3) {
        var t3 = e3[0], r3 = e3[1], o = e3[2], n = (2 - r3) * o / 2;
        return n != 0 && (n == 1 ? r3 = 0 : n < 0.5 ? r3 /= 2 - r3 : r3 = r3 * o / (2 - 2 * n)), [t3, r3, n, e3[3]];
      }, _hsbaToRGBA: function(e3) {
        var t3, r3, o, n, s2, i = 6 * e3[0], a = e3[1], l = e3[2];
        return a === 0 ? [l, l, l, e3[3]] : (r3 = l * (1 - a), o = l * (1 - a * (i - (t3 = Math.floor(i)))), a = l * (1 - a * (1 + t3 - i)), i = t3 === 1 ? (n = o, s2 = l, r3) : t3 === 2 ? (n = r3, s2 = l, a) : t3 === 3 ? (n = r3, s2 = o, l) : t3 === 4 ? (n = a, s2 = r3, l) : t3 === 5 ? (n = l, s2 = r3, o) : (n = l, s2 = a, r3), [n, s2, i, e3[3]]);
      }, _hslaToHSBA: function(e3) {
        var t3 = e3[0], r3 = e3[1], o = e3[2], n = o < 0.5 ? (1 + r3) * o : o + r3 - o * r3;
        return [t3, r3 = 2 * (n - o) / n, n, e3[3]];
      }, _hslaToRGBA: function(e3) {
        var t3, r3 = 6 * e3[0], o = e3[1], n = e3[2];
        return o === 0 ? [n, n, n, e3[3]] : [(t3 = function(e4, t4, r4) {
          return e4 < 0 ? e4 += 6 : 6 <= e4 && (e4 -= 6), e4 < 1 ? t4 + (r4 - t4) * e4 : e4 < 3 ? r4 : e4 < 4 ? t4 + (r4 - t4) * (4 - e4) : t4;
        })(2 + r3, o = 2 * n - (n = n < 0.5 ? (1 + o) * n : n + o - n * o), n), t3(r3, o, n), t3(r3 - 2, o, n), e3[3]];
      }, _rgbaToHSBA: function(e3) {
        var t3, r3, o = e3[0], n = e3[1], s2 = e3[2], i = Math.max(o, n, s2), a = i - Math.min(o, n, s2);
        return a == 0 ? r3 = t3 = 0 : (r3 = a / i, o === i ? t3 = (n - s2) / a : n === i ? t3 = 2 + (s2 - o) / a : s2 === i && (t3 = 4 + (o - n) / a), t3 < 0 ? t3 += 6 : 6 <= t3 && (t3 -= 6)), [t3 / 6, r3, i, e3[3]];
      }, _rgbaToHSLA: function(e3) {
        var t3, r3, o = e3[0], n = e3[1], s2 = e3[2], i = Math.max(o, n, s2), a = Math.min(o, n, s2), l = i + a, a = i - a;
        return a == 0 ? r3 = t3 = 0 : (r3 = l < 1 ? a / l : a / (2 - l), o === i ? t3 = (n - s2) / a : n === i ? t3 = 2 + (s2 - o) / a : s2 === i && (t3 = 4 + (o - n) / a), t3 < 0 ? t3 += 6 : 6 <= t3 && (t3 -= 6)), [t3 / 6, r3, l / 2, e3[3]];
      } };
      e2 = e2.default.ColorConversion;
      r2.default = e2;
    }, { "../core/main": 275 }], 261: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.map"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, u = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Color"), e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), l.default.prototype.alpha = function(e3) {
        return l.default._validateParameters("alpha", arguments), this.color(e3)._getAlpha();
      }, l.default.prototype.blue = function(e3) {
        return l.default._validateParameters("blue", arguments), this.color(e3)._getBlue();
      }, l.default.prototype.brightness = function(e3) {
        return l.default._validateParameters("brightness", arguments), this.color(e3)._getBrightness();
      }, l.default.prototype.color = function() {
        var e3;
        return l.default._validateParameters("color", arguments), arguments[0] instanceof l.default.Color ? arguments[0] : (e3 = arguments[0] instanceof Array ? arguments[0] : arguments, new l.default.Color(this, e3));
      }, l.default.prototype.green = function(e3) {
        return l.default._validateParameters("green", arguments), this.color(e3)._getGreen();
      }, l.default.prototype.hue = function(e3) {
        return l.default._validateParameters("hue", arguments), this.color(e3)._getHue();
      }, l.default.prototype.lerpColor = function(e3, t3, r3) {
        l.default._validateParameters("lerpColor", arguments);
        var o2, n2, s2, i2 = this._colorMode, a2 = this._colorMaxes;
        if (i2 === u.RGB)
          n2 = e3.levels.map(function(e4) {
            return e4 / 255;
          }), s2 = t3.levels.map(function(e4) {
            return e4 / 255;
          });
        else if (i2 === u.HSB)
          e3._getBrightness(), t3._getBrightness(), n2 = e3.hsba, s2 = t3.hsba;
        else {
          if (i2 !== u.HSL)
            throw new Error("".concat(i2, "cannot be used for interpolation."));
          e3._getLightness(), t3._getLightness(), n2 = e3.hsla, s2 = t3.hsla;
        }
        return r3 = Math.max(Math.min(r3, 1), 0), this.lerp === undefined && (this.lerp = function(e4, t4, r4) {
          return r4 * (t4 - e4) + e4;
        }), e3 = this.lerp(n2[0], s2[0], r3), t3 = this.lerp(n2[1], s2[1], r3), o2 = this.lerp(n2[2], s2[2], r3), n2 = this.lerp(n2[3], s2[3], r3), e3 *= a2[i2][0], t3 *= a2[i2][1], o2 *= a2[i2][2], n2 *= a2[i2][3], this.color(e3, t3, o2, n2);
      }, l.default.prototype.lightness = function(e3) {
        return l.default._validateParameters("lightness", arguments), this.color(e3)._getLightness();
      }, l.default.prototype.red = function(e3) {
        return l.default._validateParameters("red", arguments), this.color(e3)._getRed();
      }, l.default.prototype.saturation = function(e3) {
        return l.default._validateParameters("saturation", arguments), this.color(e3)._getSaturation();
      };
      var n = l.default;
      r2.default = n;
    }, { "../core/constants": 264, "../core/friendly_errors/fes_core": 266, "../core/friendly_errors/file_errors": 267, "../core/friendly_errors/validate_params": 270, "../core/main": 275, "./p5.Color": 262, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 262: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = s2(e2("../core/main")), d = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")), h = s2(e2("./color_conversion"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      var f = { aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", rebeccapurple: "#663399", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32" }, e2 = /\s*/, u = /(\d{1,3})/, c = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, p = new RegExp("".concat(c.source, "%")), m = { HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, RGB: new RegExp(["^rgb\\(", u.source, ",", u.source, ",", u.source, "\\)$"].join(e2.source), "i"), RGB_PERCENT: new RegExp(["^rgb\\(", p.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), RGBA: new RegExp(["^rgba\\(", u.source, ",", u.source, ",", u.source, ",", c.source, "\\)$"].join(e2.source), "i"), RGBA_PERCENT: new RegExp(["^rgba\\(", p.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i"), HSL: new RegExp(["^hsl\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), HSLA: new RegExp(["^hsla\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i"), HSB: new RegExp(["^hsb\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), HSBA: new RegExp(["^hsba\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i") }, u = (n.default.Color = function() {
        function c2(e4, t4) {
          if (!(this instanceof c2))
            throw new TypeError("Cannot call a class as a function");
          if (this._storeModeAndMaxes(e4._colorMode, e4._colorMaxes), ![d.RGB, d.HSL, d.HSB].includes(this.mode))
            throw new Error("".concat(this.mode, " is an invalid colorMode."));
          this._array = c2._parseInputs.apply(this, t4), this._calculateLevels();
        }
        var e3, t3, r3;
        return e3 = c2, r3 = [{ key: "_parseInputs", value: function(e4, t4, r4, o2) {
          var n2, s3 = arguments.length, i2 = this.mode, a2 = this.maxes[i2], l2 = [];
          if (3 <= s3) {
            for (l2[0] = e4 / a2[0], l2[1] = t4 / a2[1], l2[2] = r4 / a2[2], l2[3] = typeof o2 == "number" ? o2 / a2[3] : 1, n2 = l2.length - 1;0 <= n2; --n2) {
              var u2 = l2[n2];
              u2 < 0 ? l2[n2] = 0 : 1 < u2 && (l2[n2] = 1);
            }
            return i2 === d.HSL ? h.default._hslaToRGBA(l2) : i2 === d.HSB ? h.default._hsbaToRGBA(l2) : l2;
          }
          if (s3 === 1 && typeof e4 == "string") {
            r4 = e4.trim().toLowerCase();
            if (f[r4])
              return c2._parseInputs.call(this, f[r4]);
            if (m.HEX3.test(r4))
              return (l2 = m.HEX3.exec(r4).slice(1).map(function(e5) {
                return parseInt(e5 + e5, 16) / 255;
              }))[3] = 1, l2;
            if (m.HEX6.test(r4))
              return (l2 = m.HEX6.exec(r4).slice(1).map(function(e5) {
                return parseInt(e5, 16) / 255;
              }))[3] = 1, l2;
            if (m.HEX4.test(r4))
              return l2 = m.HEX4.exec(r4).slice(1).map(function(e5) {
                return parseInt(e5 + e5, 16) / 255;
              });
            if (m.HEX8.test(r4))
              return l2 = m.HEX8.exec(r4).slice(1).map(function(e5) {
                return parseInt(e5, 16) / 255;
              });
            if (m.RGB.test(r4))
              return (l2 = m.RGB.exec(r4).slice(1).map(function(e5) {
                return e5 / 255;
              }))[3] = 1, l2;
            if (m.RGB_PERCENT.test(r4))
              return (l2 = m.RGB_PERCENT.exec(r4).slice(1).map(function(e5) {
                return parseFloat(e5) / 100;
              }))[3] = 1, l2;
            if (m.RGBA.test(r4))
              return l2 = m.RGBA.exec(r4).slice(1).map(function(e5, t5) {
                return t5 === 3 ? parseFloat(e5) : e5 / 255;
              });
            if (m.RGBA_PERCENT.test(r4))
              return l2 = m.RGBA_PERCENT.exec(r4).slice(1).map(function(e5, t5) {
                return t5 === 3 ? parseFloat(e5) : parseFloat(e5) / 100;
              });
            if (m.HSL.test(r4) ? (l2 = m.HSL.exec(r4).slice(1).map(function(e5, t5) {
              return t5 === 0 ? parseInt(e5, 10) / 360 : parseInt(e5, 10) / 100;
            }))[3] = 1 : m.HSLA.test(r4) && (l2 = m.HSLA.exec(r4).slice(1).map(function(e5, t5) {
              return t5 === 0 ? parseInt(e5, 10) / 360 : t5 === 3 ? parseFloat(e5) : parseInt(e5, 10) / 100;
            })), (l2 = l2.map(function(e5) {
              return Math.max(Math.min(e5, 1), 0);
            })).length)
              return h.default._hslaToRGBA(l2);
            if (m.HSB.test(r4) ? (l2 = m.HSB.exec(r4).slice(1).map(function(e5, t5) {
              return t5 === 0 ? parseInt(e5, 10) / 360 : parseInt(e5, 10) / 100;
            }))[3] = 1 : m.HSBA.test(r4) && (l2 = m.HSBA.exec(r4).slice(1).map(function(e5, t5) {
              return t5 === 0 ? parseInt(e5, 10) / 360 : t5 === 3 ? parseFloat(e5) : parseInt(e5, 10) / 100;
            })), l2.length) {
              for (n2 = l2.length - 1;0 <= n2; --n2)
                l2[n2] = Math.max(Math.min(l2[n2], 1), 0);
              return h.default._hsbaToRGBA(l2);
            }
            l2 = [1, 1, 1, 1];
          } else {
            if (s3 !== 1 && s3 !== 2 || typeof e4 != "number")
              throw new Error("".concat(arguments, "is not a valid color representation."));
            l2[0] = e4 / a2[2], l2[1] = e4 / a2[2], l2[2] = e4 / a2[2], l2[3] = typeof t4 == "number" ? t4 / a2[3] : 1, l2 = l2.map(function(e5) {
              return Math.max(Math.min(e5, 1), 0);
            });
          }
          return l2;
        } }], (t3 = [{ key: "toString", value: function(e4) {
          var t4 = this.levels, r4 = this._array, o2 = r4[3];
          switch (e4) {
            case "#rrggbb":
              return "#".concat(t4[0] < 16 ? "0".concat(t4[0].toString(16)) : t4[0].toString(16), t4[1] < 16 ? "0".concat(t4[1].toString(16)) : t4[1].toString(16), t4[2] < 16 ? "0".concat(t4[2].toString(16)) : t4[2].toString(16));
            case "#rrggbbaa":
              return "#".concat(t4[0] < 16 ? "0".concat(t4[0].toString(16)) : t4[0].toString(16), t4[1] < 16 ? "0".concat(t4[1].toString(16)) : t4[1].toString(16), t4[2] < 16 ? "0".concat(t4[2].toString(16)) : t4[2].toString(16), t4[3] < 16 ? "0".concat(t4[3].toString(16)) : t4[3].toString(16));
            case "#rgb":
              return "#".concat(Math.round(15 * r4[0]).toString(16), Math.round(15 * r4[1]).toString(16), Math.round(15 * r4[2]).toString(16));
            case "#rgba":
              return "#".concat(Math.round(15 * r4[0]).toString(16), Math.round(15 * r4[1]).toString(16), Math.round(15 * r4[2]).toString(16), Math.round(15 * r4[3]).toString(16));
            case "rgb":
              return "rgb(".concat(t4[0], ", ", t4[1], ", ", t4[2], ")");
            case "rgb%":
              return "rgb(".concat((100 * r4[0]).toPrecision(3), "%, ", (100 * r4[1]).toPrecision(3), "%, ", (100 * r4[2]).toPrecision(3), "%)");
            case "rgba%":
              return "rgba(".concat((100 * r4[0]).toPrecision(3), "%, ", (100 * r4[1]).toPrecision(3), "%, ", (100 * r4[2]).toPrecision(3), "%, ", (100 * r4[3]).toPrecision(3), "%)");
            case "hsb":
            case "hsv":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ")");
            case "hsb%":
            case "hsv%":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
            case "hsba":
            case "hsva":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ", ", o2, ")");
            case "hsba%":
            case "hsva%":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * o2).toPrecision(3), "%)");
            case "hsl":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ")");
            case "hsl%":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
            case "hsla":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ", ", o2, ")");
            case "hsla%":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * o2).toPrecision(3), "%)");
            default:
              return "rgba(".concat(t4[0], ",", t4[1], ",", t4[2], ",", o2, ")");
          }
        } }, { key: "setRed", value: function(e4) {
          this._array[0] = e4 / this.maxes[d.RGB][0], this._calculateLevels();
        } }, { key: "setGreen", value: function(e4) {
          this._array[1] = e4 / this.maxes[d.RGB][1], this._calculateLevels();
        } }, { key: "setBlue", value: function(e4) {
          this._array[2] = e4 / this.maxes[d.RGB][2], this._calculateLevels();
        } }, { key: "setAlpha", value: function(e4) {
          this._array[3] = e4 / this.maxes[this.mode][3], this._calculateLevels();
        } }, { key: "_calculateLevels", value: function() {
          for (var e4 = this._array, t4 = this.levels = new Array(e4.length), r4 = e4.length - 1;0 <= r4; --r4)
            t4[r4] = Math.round(255 * e4[r4]);
          this.hsla = null, this.hsba = null;
        } }, { key: "_getAlpha", value: function() {
          return this._array[3] * this.maxes[this.mode][3];
        } }, { key: "_storeModeAndMaxes", value: function(e4, t4) {
          this.mode = e4, this.maxes = t4;
        } }, { key: "_getMode", value: function() {
          return this.mode;
        } }, { key: "_getMaxes", value: function() {
          return this.maxes;
        } }, { key: "_getBlue", value: function() {
          return this._array[2] * this.maxes[d.RGB][2];
        } }, { key: "_getBrightness", value: function() {
          return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[d.HSB][2];
        } }, { key: "_getGreen", value: function() {
          return this._array[1] * this.maxes[d.RGB][1];
        } }, { key: "_getHue", value: function() {
          return this.mode === d.HSB ? (this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[d.HSB][0]) : (this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[d.HSL][0]);
        } }, { key: "_getLightness", value: function() {
          return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[d.HSL][2];
        } }, { key: "_getRed", value: function() {
          return this._array[0] * this.maxes[d.RGB][0];
        } }, { key: "_getSaturation", value: function() {
          return this.mode === d.HSB ? (this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[d.HSB][1]) : (this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[d.HSL][1]);
        } }]) && l(e3.prototype, t3), r3 && l(e3, r3), c2;
      }(), n.default.Color);
      r2.default = u;
    }, { "../core/constants": 264, "../core/main": 275, "./color_conversion": 260, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.constructor": 186, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.trim": 201, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 263: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.fill"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, a = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Color"), s2.default.prototype.beginClip = function() {
        this._renderer.beginClip(0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {});
      }, s2.default.prototype.endClip = function() {
        this._renderer.endClip();
      }, s2.default.prototype.clip = function(e3, t3) {
        this._renderer.beginClip(t3), e3(), this._renderer.endClip(t3);
      }, s2.default.prototype.background = function() {
        var e3;
        return (e3 = this._renderer).background.apply(e3, arguments), this;
      }, s2.default.prototype.clear = function() {
        return this._renderer.clear((arguments.length <= 0 ? undefined : arguments[0]) || 0, (arguments.length <= 1 ? undefined : arguments[1]) || 0, (arguments.length <= 2 ? undefined : arguments[2]) || 0, (arguments.length <= 3 ? undefined : arguments[3]) || 0), this;
      }, s2.default.prototype.colorMode = function(e3, t3, r3, o2, n2) {
        return s2.default._validateParameters("colorMode", arguments), e3 !== a.RGB && e3 !== a.HSB && e3 !== a.HSL || (this._colorMode = e3, e3 = this._colorMaxes[e3], arguments.length === 2 ? (e3[0] = t3, e3[1] = t3, e3[2] = t3, e3[3] = t3) : arguments.length === 4 ? (e3[0] = t3, e3[1] = r3, e3[2] = o2) : arguments.length === 5 && (e3[0] = t3, e3[1] = r3, e3[2] = o2, e3[3] = n2)), this;
      }, s2.default.prototype.fill = function() {
        var e3;
        return this._renderer._setProperty("_fillSet", true), this._renderer._setProperty("_doFill", true), (e3 = this._renderer).fill.apply(e3, arguments), this;
      }, s2.default.prototype.noFill = function() {
        return this._renderer._setProperty("_doFill", false), this;
      }, s2.default.prototype.noStroke = function() {
        return this._renderer._setProperty("_doStroke", false), this;
      }, s2.default.prototype.stroke = function() {
        var e3;
        return this._renderer._setProperty("_strokeSet", true), this._renderer._setProperty("_doStroke", true), (e3 = this._renderer).stroke.apply(e3, arguments), this;
      }, s2.default.prototype.erase = function() {
        return this._renderer.erase(0 < arguments.length && arguments[0] !== undefined ? arguments[0] : 255, 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 255), this;
      }, s2.default.prototype.noErase = function() {
        return this._renderer.noErase(), this;
      };
      var n = s2.default;
      r2.default = n;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.Color": 262, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 264: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.QUADRATIC = r2.LINEAR = r2._CTX_MIDDLE = r2._DEFAULT_LEADMULT = r2._DEFAULT_TEXT_FILL = r2.WORD = r2.CHAR = r2.BOLDITALIC = r2.BOLD = r2.ITALIC = r2.NORMAL = r2.BLUR = r2.ERODE = r2.DILATE = r2.POSTERIZE = r2.INVERT = r2.OPAQUE = r2.GRAY = r2.THRESHOLD = r2.BURN = r2.DODGE = r2.SOFT_LIGHT = r2.HARD_LIGHT = r2.OVERLAY = r2.REPLACE = r2.SCREEN = r2.MULTIPLY = r2.EXCLUSION = r2.SUBTRACT = r2.DIFFERENCE = r2.LIGHTEST = r2.DARKEST = r2.ADD = r2.REMOVE = r2.BLEND = r2.UP_ARROW = r2.TAB = r2.SHIFT = r2.RIGHT_ARROW = r2.RETURN = r2.OPTION = r2.LEFT_ARROW = r2.ESCAPE = r2.ENTER = r2.DOWN_ARROW = r2.DELETE = r2.CONTROL = r2.BACKSPACE = r2.ALT = r2.AUTO = r2.HSL = r2.HSB = r2.RGB = r2.MITER = r2.BEVEL = r2.ROUND = r2.SQUARE = r2.PROJECT = r2.PIE = r2.CHORD = r2.OPEN = r2.CLOSE = r2.TESS = r2.QUAD_STRIP = r2.QUADS = r2.TRIANGLE_STRIP = r2.TRIANGLE_FAN = r2.TRIANGLES = r2.LINE_LOOP = r2.LINE_STRIP = r2.LINES = r2.POINTS = r2.BASELINE = r2.BOTTOM = r2.TOP = r2.CENTER = r2.LEFT = r2.RIGHT = r2.RADIUS = r2.CORNERS = r2.CORNER = r2.RAD_TO_DEG = r2.DEG_TO_RAD = r2.RADIANS = r2.DEGREES = r2.TWO_PI = r2.TAU = r2.QUARTER_PI = r2.PI = r2.HALF_PI = r2.WAIT = r2.TEXT = r2.MOVE = r2.HAND = r2.CROSS = r2.ARROW = r2.WEBGL2 = r2.WEBGL = r2.P2D = r2.VERSION = undefined, r2.RGBA = r2.HALF_FLOAT = r2.FLOAT = r2.UNSIGNED_INT = r2.UNSIGNED_BYTE = r2.COVER = r2.CONTAIN = r2.FALLBACK = r2.LABEL = r2.AXES = r2.GRID = r2._DEFAULT_FILL = r2._DEFAULT_STROKE = r2.PORTRAIT = r2.LANDSCAPE = r2.SMOOTH = r2.FLAT = r2.MIRROR = r2.CLAMP = r2.REPEAT = r2.NEAREST = r2.IMAGE = r2.IMMEDIATE = r2.TEXTURE = r2.FILL = r2.STROKE = r2.CURVE = r2.BEZIER = undefined;
      var o = Math.PI, n = (r2.VERSION = "1.9.0", r2.P2D = "p2d", r2.WEBGL = "webgl", r2.WEBGL2 = "webgl2", r2.ARROW = "default", r2.CROSS = "crosshair", r2.HAND = "pointer", r2.MOVE = "move", r2.TEXT = "text", r2.WAIT = "wait", o / 2), n = (r2.HALF_PI = n, o), n = (r2.PI = n, o / 4), n = (r2.QUARTER_PI = n, 2 * o), n = (r2.TAU = n, 2 * o), n = (r2.TWO_PI = n, r2.DEGREES = "degrees", r2.RADIANS = "radians", o / 180), n = (r2.DEG_TO_RAD = n, 180 / o);
      r2.RAD_TO_DEG = n, r2.CORNER = "corner", r2.CORNERS = "corners", r2.RADIUS = "radius", r2.RIGHT = "right", r2.LEFT = "left", r2.CENTER = "center", r2.TOP = "top", r2.BOTTOM = "bottom", r2.BASELINE = "alphabetic", r2.POINTS = 0, r2.LINES = 1, r2.LINE_STRIP = 3, r2.LINE_LOOP = 2, r2.TRIANGLES = 4, r2.TRIANGLE_FAN = 6, r2.TRIANGLE_STRIP = 5, r2.QUADS = "quads", r2.QUAD_STRIP = "quad_strip", r2.TESS = "tess", r2.CLOSE = "close", r2.OPEN = "open", r2.CHORD = "chord", r2.PIE = "pie", r2.PROJECT = "square", r2.SQUARE = "butt", r2.ROUND = "round", r2.BEVEL = "bevel", r2.MITER = "miter", r2.RGB = "rgb", r2.HSB = "hsb", r2.HSL = "hsl", r2.AUTO = "auto", r2.ALT = 18, r2.BACKSPACE = 8, r2.CONTROL = 17, r2.DELETE = 46, r2.DOWN_ARROW = 40, r2.ENTER = 13, r2.ESCAPE = 27, r2.LEFT_ARROW = 37, r2.OPTION = 18, r2.RETURN = 13, r2.RIGHT_ARROW = 39, r2.SHIFT = 16, r2.TAB = 9, r2.UP_ARROW = 38, r2.BLEND = "source-over", r2.REMOVE = "destination-out", r2.ADD = "lighter", r2.DARKEST = "darken", r2.LIGHTEST = "lighten", r2.DIFFERENCE = "difference", r2.SUBTRACT = "subtract", r2.EXCLUSION = "exclusion", r2.MULTIPLY = "multiply", r2.SCREEN = "screen", r2.REPLACE = "copy", r2.OVERLAY = "overlay", r2.HARD_LIGHT = "hard-light", r2.SOFT_LIGHT = "soft-light", r2.DODGE = "color-dodge", r2.BURN = "color-burn", r2.THRESHOLD = "threshold", r2.GRAY = "gray", r2.OPAQUE = "opaque", r2.INVERT = "invert", r2.POSTERIZE = "posterize", r2.DILATE = "dilate", r2.ERODE = "erode", r2.BLUR = "blur", r2.NORMAL = "normal", r2.ITALIC = "italic", r2.BOLD = "bold", r2.BOLDITALIC = "bold italic", r2.CHAR = "CHAR", r2.WORD = "WORD", r2._DEFAULT_TEXT_FILL = "#000000", r2._DEFAULT_LEADMULT = 1.25, r2._CTX_MIDDLE = "middle", r2.LINEAR = "linear", r2.QUADRATIC = "quadratic", r2.BEZIER = "bezier", r2.CURVE = "curve", r2.STROKE = "stroke", r2.FILL = "fill", r2.TEXTURE = "texture", r2.IMMEDIATE = "immediate", r2.IMAGE = "image", r2.NEAREST = "nearest", r2.REPEAT = "repeat", r2.CLAMP = "clamp", r2.MIRROR = "mirror", r2.FLAT = "flat", r2.SMOOTH = "smooth", r2.LANDSCAPE = "landscape", r2.PORTRAIT = "portrait", r2._DEFAULT_STROKE = "#000000", r2._DEFAULT_FILL = "#FFFFFF", r2.GRID = "grid", r2.AXES = "axes", r2.LABEL = "label", r2.FALLBACK = "fallback", r2.CONTAIN = "contain", r2.COVER = "cover", r2.UNSIGNED_BYTE = "unsigned-byte", r2.UNSIGNED_INT = "unsigned-int", r2.FLOAT = "float", r2.HALF_FLOAT = "half-float";
      r2.RGBA = "rgba";
    }, {}], 265: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.search"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.search"), e2("core-js/modules/es.string.split"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (s2 = e2("./main")) && s2.__esModule ? s2 : { default: s2 }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      var l = [s2.ARROW, s2.CROSS, s2.HAND, s2.MOVE, s2.TEXT, s2.WAIT], u = (n.default.prototype._frameRate = 0, n.default.prototype._lastFrameTime = window.performance.now(), n.default.prototype._targetFrameRate = 60, window.print), c = false;
      function d() {
        return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
      }
      function h() {
        return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
      }
      n.default.prototype.print = function() {
        var e3;
        arguments.length ? (e3 = console).log.apply(e3, arguments) : c || (u(), window.confirm("You just tried to print the webpage. Do you want to prevent this from running again?") && (c = true));
      }, n.default.prototype.frameCount = 0, n.default.prototype.deltaTime = 0, n.default.prototype.focused = document.hasFocus(), n.default.prototype.cursor = function(e3, t3, r3) {
        var o2, n2 = "auto", s3 = this._curElement.elt;
        l.includes(e3) ? n2 = e3 : typeof e3 == "string" && (o2 = "", t3 && r3 && typeof t3 == "number" && typeof r3 == "number" && (o2 = "".concat(t3, " ").concat(r3)), n2 = e3.substring(0, 7) === "http://" || e3.substring(0, 8) === "https://" || /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e3) ? "url(".concat(e3, ") ").concat(o2, ", auto") : e3), s3.style.cursor = n2;
      }, n.default.prototype.frameRate = function(e3) {
        return n.default._validateParameters("frameRate", arguments), typeof e3 != "number" || e3 < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e3), e3 === 0 && this._setProperty("_frameRate", e3), this);
      }, n.default.prototype.getFrameRate = function() {
        return this.frameRate();
      }, n.default.prototype.setFrameRate = function(e3) {
        return this.frameRate(e3);
      }, n.default.prototype.getTargetFrameRate = function() {
        return this._targetFrameRate;
      }, n.default.prototype.noCursor = function() {
        this._curElement.elt.style.cursor = "none";
      }, n.default.prototype.webglVersion = s2.P2D, n.default.prototype.displayWidth = screen.width, n.default.prototype.displayHeight = screen.height, n.default.prototype.windowWidth = d(), n.default.prototype.windowHeight = h(), n.default.prototype._onresize = function(e3) {
        this._setProperty("windowWidth", d()), this._setProperty("windowHeight", h());
        var t3 = this._isGlobal ? window : this;
        typeof t3.windowResized != "function" || (t3 = t3.windowResized(e3)) === undefined || t3 || e3.preventDefault();
      }, n.default.prototype.width = 0, n.default.prototype.height = 0, n.default.prototype.fullscreen = function(e3) {
        if (n.default._validateParameters("fullscreen", arguments), e3 === undefined)
          return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
        if (e3) {
          e3 = document.documentElement;
          if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled))
            throw new Error("Fullscreen not enabled in this browser.");
          e3.requestFullscreen ? e3.requestFullscreen() : e3.mozRequestFullScreen ? e3.mozRequestFullScreen() : e3.webkitRequestFullscreen ? e3.webkitRequestFullscreen() : e3.msRequestFullscreen && e3.msRequestFullscreen();
        } else
          document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
      }, n.default.prototype.pixelDensity = function(e3) {
        var t3;
        return n.default._validateParameters("pixelDensity", arguments), typeof e3 == "number" ? (e3 !== this._pixelDensity && (this._pixelDensity = e3), (t3 = this).resizeCanvas(this.width, this.height, true)) : t3 = this._pixelDensity, t3;
      }, n.default.prototype.displayDensity = function() {
        return window.devicePixelRatio;
      }, n.default.prototype.getURL = function() {
        return location.href;
      }, n.default.prototype.getURLPath = function() {
        return location.pathname.split("/").filter(function(e3) {
          return e3 !== "";
        });
      }, n.default.prototype.getURLParams = function() {
        for (var e3, t3 = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r3 = {};(e3 = t3.exec(location.search)) != null; )
          e3.index === t3.lastIndex && t3.lastIndex++, r3[e3[1]] = e3[2];
        return r3;
      };
      e2 = n.default;
      r2.default = e2;
    }, { "./constants": 264, "./main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.search": 197, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 266: [function(r2, e2, t2) {
      r2("core-js/modules/es.symbol"), r2("core-js/modules/es.symbol.description"), r2("core-js/modules/es.symbol.iterator"), r2("core-js/modules/es.array.concat"), r2("core-js/modules/es.array.filter"), r2("core-js/modules/es.array.for-each"), r2("core-js/modules/es.array.includes"), r2("core-js/modules/es.array.iterator"), r2("core-js/modules/es.array.join"), r2("core-js/modules/es.array.map"), r2("core-js/modules/es.array.slice"), r2("core-js/modules/es.array.some"), r2("core-js/modules/es.function.name"), r2("core-js/modules/es.object.assign"), r2("core-js/modules/es.object.get-own-property-names"), r2("core-js/modules/es.object.keys"), r2("core-js/modules/es.object.to-string"), r2("core-js/modules/es.regexp.constructor"), r2("core-js/modules/es.regexp.exec"), r2("core-js/modules/es.regexp.to-string"), r2("core-js/modules/es.string.iterator"), r2("core-js/modules/es.string.match"), r2("core-js/modules/es.string.replace"), r2("core-js/modules/es.string.split"), r2("core-js/modules/es.string.starts-with"), r2("core-js/modules/web.dom-collections.for-each"), r2("core-js/modules/web.dom-collections.iterator"), r2("core-js/modules/es.symbol"), r2("core-js/modules/es.symbol.description"), r2("core-js/modules/es.symbol.iterator"), r2("core-js/modules/es.array.concat"), r2("core-js/modules/es.array.filter"), r2("core-js/modules/es.array.for-each"), r2("core-js/modules/es.array.includes"), r2("core-js/modules/es.array.iterator"), r2("core-js/modules/es.array.join"), r2("core-js/modules/es.array.map"), r2("core-js/modules/es.array.slice"), r2("core-js/modules/es.array.some"), r2("core-js/modules/es.function.name"), r2("core-js/modules/es.object.assign"), r2("core-js/modules/es.object.get-own-property-names"), r2("core-js/modules/es.object.keys"), r2("core-js/modules/es.object.to-string"), r2("core-js/modules/es.regexp.constructor"), r2("core-js/modules/es.regexp.exec"), r2("core-js/modules/es.regexp.to-string"), r2("core-js/modules/es.string.iterator"), r2("core-js/modules/es.string.match"), r2("core-js/modules/es.string.replace"), r2("core-js/modules/es.string.split"), r2("core-js/modules/es.string.starts-with"), r2("core-js/modules/web.dom-collections.for-each"), r2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(t2, "__esModule", { value: true }), t2.default = undefined;
      var o = (l = r2("../main")) && l.__esModule ? l : { default: l };
      r2("../internationalization");
      function n(r3, o2) {
        o2 = o2 || console.log.bind(console), s2 || i(), s2.some(function(e3) {
          var t3;
          if (r3.message && r3.message.match("\\W?".concat(e3.name, "\\W")) !== null)
            return t3 = e3.type === "function" ? "".concat(e3.name, "()") : e3.name, o2("Did you just try to use p5.js's ".concat(t3, " ").concat(e3.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(a)), true;
        });
      }
      var s2 = null, i = null, a = (o.default._friendlyError = o.default._checkForUserDefinedFunctions = o.default._fesErrorMonitor = function() {
      }, s2 = null, "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), i = function() {
        function e3(r3) {
          return Object.getOwnPropertyNames(r3).filter(function(e4) {
            return e4[0] !== "_" && (!(e4 in t3) && (t3[e4] = true));
          }).map(function(e4) {
            var t4 = typeof r3[e4] == "function" ? "function" : e4 === e4.toUpperCase() ? "constant" : "variable";
            return { name: e4, type: t4 };
          });
        }
        var t3 = {};
        (s2 = [].concat(e3(o.default.prototype), e3(r2("../constants")))).sort(function(e4, t4) {
          return t4.name.length - e4.name.length;
        });
      }, l = (o.default.prototype._helpForMisusedAtTopLevelCode = n, document.readyState !== "complete" && (window.addEventListener("error", n, false), window.addEventListener("load", function() {
        window.removeEventListener("error", n, false);
      })), o.default);
      t2.default = l;
    }, { "../constants": 264, "../internationalization": 273, "../main": 275, "./browser_errors": undefined, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.some": 166, "core-js/modules/es.function.name": 168, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.get-own-property-names": 179, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.constructor": 186, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.starts-with": 199, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 267: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var o = (o = e2("../main")) && o.__esModule ? o : { default: o };
      e2("../internationalization");
      o.default._friendlyFileLoadError = function() {
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../internationalization": 273, "../main": 275 }], 268: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = O(e2("../main")), s2 = e2("../internationalization"), a = C(e2("../constants")), l, u, c, d, h, f, p, m, y, g, v, b, j, _, x, w, S, T, M, E, I;
      function k() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, k = function() {
          return e3;
        }, e3);
      }
      function C(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = k();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2, n2 = {}, s3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3)
          Object.prototype.hasOwnProperty.call(e3, r3) && ((o2 = s3 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (o2.get || o2.set) ? Object.defineProperty(n2, r3, o2) : n2[r3] = e3[r3]);
        return n2.default = e3, t3 && t3.set(e3, n2), n2;
      }
      function O(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function D(e3) {
        return L(e3) || A(e3) || P();
      }
      function P() {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }
      function A(e3) {
        if (Symbol.iterator in Object(e3) || Object.prototype.toString.call(e3) === "[object Arguments]")
          return Array.from(e3);
      }
      function L(e3) {
        if (Array.isArray(e3)) {
          for (var t3 = 0, r3 = new Array(e3.length);t3 < e3.length; t3++)
            r3[t3] = e3[t3];
          return r3;
        }
      }
      n.default._fesCodeReader = function() {
      };
      var R = n.default;
      r2.default = R;
    }, { "../constants": 264, "../internationalization": 273, "../main": 275, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.constructor": 186, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.trim": 201, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 269: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../main")) && e2.__esModule ? e2 : { default: e2 };
      function o() {
        var t3 = /(^|@)\S+:\d+/, r3 = /^\s*at .*(\S+:\d+|\(native\))/m, o2 = /^(eval@)?(\[native code])?$/;
        return { parse: function(e3) {
          return e3.stacktrace !== undefined || e3["opera#sourceloc"] !== undefined ? this.parseOpera(e3) : e3.stack && e3.stack.match(r3) ? this.parseV8OrIE(e3) : e3.stack ? this.parseFFOrSafari(e3) : undefined;
        }, extractLocation: function(e3) {
          return e3.indexOf(":") === -1 ? [e3] : [(e3 = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e3.replace(/[()]/g, "")))[1], e3[2] || undefined, e3[3] || undefined];
        }, parseV8OrIE: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !!e4.match(r3);
          }, this).map(function(e4) {
            var t4 = (e4 = -1 < e4.indexOf("(eval ") ? e4.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "") : e4).replace(/^\s+/, "").replace(/\(eval code/g, "("), r4 = t4.match(/ (\((.+):(\d+):(\d+)\)$)/), t4 = (t4 = r4 ? t4.replace(r4[0], "") : t4).split(/\s+/).slice(1), r4 = this.extractLocation(r4 ? r4[1] : t4.pop());
            return { functionName: t4.join(" ") || undefined, fileName: -1 < ["eval", "<anonymous>"].indexOf(r4[0]) ? undefined : r4[0], lineNumber: r4[1], columnNumber: r4[2], source: e4 };
          }, this);
        }, parseFFOrSafari: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !e4.match(o2);
          }, this).map(function(e4) {
            var t4, r4;
            return (e4 = -1 < e4.indexOf(" > eval") ? e4.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1") : e4).indexOf("@") === -1 && e4.indexOf(":") === -1 ? { functionName: e4 } : { functionName: (r4 = e4.match(t4 = /((.*".+"[^@]*)?[^@]*)(?:@)/)) && r4[1] ? r4[1] : undefined, fileName: (r4 = this.extractLocation(e4.replace(t4, "")))[0], lineNumber: r4[1], columnNumber: r4[2], source: e4 };
          }, this);
        }, parseOpera: function(e3) {
          return !e3.stacktrace || -1 < e3.message.indexOf("\n") && e3.message.split("\n").length > e3.stacktrace.split("\n").length ? this.parseOpera9(e3) : e3.stack ? this.parseOpera11(e3) : this.parseOpera10(e3);
        }, parseOpera9: function(e3) {
          for (var t4 = /Line (\d+).*script (?:in )?(\S+)/i, r4 = e3.message.split("\n"), o3 = [], n = 2, s2 = r4.length;n < s2; n += 2) {
            var i = t4.exec(r4[n]);
            i && o3.push({ fileName: i[2], lineNumber: i[1], source: r4[n] });
          }
          return o3;
        }, parseOpera10: function(e3) {
          for (var t4 = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r4 = e3.stacktrace.split("\n"), o3 = [], n = 0, s2 = r4.length;n < s2; n += 2) {
            var i = t4.exec(r4[n]);
            i && o3.push({ functionName: i[3] || undefined, fileName: i[2], lineNumber: i[1], source: r4[n] });
          }
          return o3;
        }, parseOpera11: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !!e4.match(t3) && !e4.match(/^Error created at/);
          }, this).map(function(e4) {
            var t4, r4 = e4.split("@"), o3 = this.extractLocation(r4.pop()), r4 = r4.shift() || "";
            return { functionName: r4.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || undefined, args: (t4 = r4.match(/\(([^)]*)\)/) ? r4.replace(/^[^(]+\(([^)]*)\)$/, "$1") : t4) === undefined || t4 === "[arguments not available]" ? undefined : t4.split(","), fileName: o3[0], lineNumber: o3[1], columnNumber: o3[2], source: e4 };
          }, this);
        } };
      }
      e2.default._getErrorStackParser = function() {
        return new o;
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../main": 275, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198 }], 270: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (n = e2("../main")) && n.__esModule ? n : { default: n };
      (function(e3) {
        if (e3 && e3.__esModule)
          return;
        if (e3 === null || a(e3) !== "object" && typeof e3 != "function")
          return;
        var t3 = i();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
      })(e2("../constants")), e2("../internationalization");
      function i() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, i = function() {
          return e3;
        }, e3);
      }
      function a(e3) {
        return (a = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      n.default._validateParameters = n.default._clearValidateParamsCache = function() {
      };
      e2 = n.default;
      r2.default = e2;
    }, { "../../../docs/parameterData.json": undefined, "../constants": 264, "../internationalization": 273, "../main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.last-index-of": 163, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.function.name": 168, "core-js/modules/es.map": 169, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.set": 189, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 271: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      r2.default = { modeAdjust: function(e3, t3, r3, o2, n) {
        return n === s2.CORNER ? { x: e3, y: t3, w: r3, h: o2 } : n === s2.CORNERS ? { x: e3, y: t3, w: r3 - e3, h: o2 - t3 } : n === s2.RADIUS ? { x: e3 - r3, y: t3 - o2, w: 2 * r3, h: 2 * o2 } : n === s2.CENTER ? { x: e3 - 0.5 * r3, y: t3 - 0.5 * o2, w: r3, h: o2 } : undefined;
      } };
    }, { "./constants": 264, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 272: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator");
      var o = (n = e2("../core/main")) && n.__esModule ? n : { default: n };
      e2("./internationalization");
      var n = Promise.resolve();
      Promise.all([new Promise(function(e3, t3) {
        document.readyState === "complete" ? e3() : window.addEventListener("load", e3, false);
      }), n]).then(function() {
        window._setupDone !== undefined ? console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import") : window.mocha || (window.setup && typeof window.setup == "function" || window.draw && typeof window.draw == "function") && !o.default.instance && new o.default;
      });
    }, { "../core/main": 275, "./internationalization": 273, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.string.iterator": 192, "core-js/modules/web.dom-collections.iterator": 238 }], 273: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.setTranslatorLanguage = r2.currentTranslatorLanguage = r2.availableTranslatorLanguages = r2.initialize = r2.translator = undefined;
      var n, s2, o = a(e2("i18next")), i = a(e2("i18next-browser-languagedetector"));
      function a(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      var u = function() {
        function r3(e4, t4) {
          if (!(this instanceof r3))
            throw new TypeError("Cannot call a class as a function");
          this.init(e4, t4);
        }
        var e3, t3, o2;
        return e3 = r3, (t3 = [{ key: "fetchWithTimeout", value: function(e4, t4) {
          var r4 = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : 2000;
          return Promise.race([fetch(e4, t4), new Promise(function(e5, t5) {
            return setTimeout(function() {
              return t5(new Error("timeout"));
            }, r4);
          })]);
        } }, { key: "init", value: function(e4) {
          var t4 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : {};
          this.services = e4, this.options = t4;
        } }, { key: "read", value: function(e4, t4, r4) {
          var o3 = this.options.loadPath;
          e4 === this.options.fallback ? r4(null, n[e4][t4]) : s2.includes(e4) ? (o3 = this.services.interpolator.interpolate(o3, { lng: e4, ns: t4 }), this.loadUrl(o3, r4)) : r4("Not found", false);
        } }, { key: "loadUrl", value: function(t4, r4) {
          this.fetchWithTimeout(t4).then(function(e4) {
            if (e4.ok)
              return e4.json();
            throw new Error("failed loading ".concat(t4));
          }, function() {
            throw new Error("failed loading ".concat(t4));
          }).then(function(e4) {
            return r4(null, e4);
          }).catch(r4);
        } }]) && l(e3.prototype, t3), o2 && l(e3, o2), r3;
      }();
      u.type = "backend", r2.translator = function(e3, t3) {
        console.debug("p5.js translator called before translations were loaded"), o.default.t(e3, t3);
      }, r2.initialize = function() {
        return o.default.use(i.default).use(u).init({ fallbackLng: "en", nestingPrefix: "$tr(", nestingSuffix: ")", defaultNS: "translation", returnEmptyString: false, interpolation: { escapeValue: false }, detection: { checkWhitelist: false, order: ["querystring", "navigator", "htmlTag", "path", "subdomain"], caches: [] }, backend: { fallback: "en", loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json" }, partialBundledLanguages: true, resources: n }).then(function(e3) {
          r2.translator = e3;
        }, function(e3) {
          return console.debug("Translations failed to load (".concat(e3, ")"));
        });
      }, r2.availableTranslatorLanguages = function() {
        return o.default.languages;
      }, r2.currentTranslatorLanguage = function(e3) {
        return o.default.language;
      };
      r2.setTranslatorLanguage = function(e3) {
        return o.default.changeLanguage(e3 || undefined, function(e4) {
          return console.debug("Translations failed to load (".concat(e4, ")"));
        });
      };
    }, { "../../translations": undefined, "../../translations/dev": undefined, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.split": 198, "core-js/modules/web.dom-collections.iterator": 238, i18next: 3, "i18next-browser-languagedetector": 3 }], 274: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.pushStyle = function() {
        throw new Error("pushStyle() not used, see push()");
      }, e2.default.prototype.popStyle = function() {
        throw new Error("popStyle() not used, see pop()");
      }, e2.default.prototype.popMatrix = function() {
        throw new Error("popMatrix() not used, see pop()");
      }, e2.default.prototype.pushMatrix = function() {
        throw new Error("pushMatrix() not used, see push()");
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "./main": 275 }], 275: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-own-property-names"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-names"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined, e2("./shim");
      var n = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      var l, u = function() {
        function g(e4, t4) {
          var d = this;
          if (!(this instanceof g))
            throw new TypeError("Cannot call a class as a function");
          this._setupDone = false, this._preloadDone = false, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t4, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = false, this._loop = true, this._startListener = null, this._initializeInstanceVariables(), this._defaultCanvasSize = { width: 100, height: 100 }, this._events = { mousemove: null, mousedown: null, mouseup: null, dragend: null, dragover: null, click: null, dblclick: null, mouseover: null, mouseout: null, keydown: null, keyup: null, keypress: null, touchstart: null, touchmove: null, touchend: null, resize: null, blur: null }, this._millisStart = -1, this._recording = false, this._lcg_random_state = null, this._gaussian_previous = false, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
          var t4 = Object.getOwnPropertyNames(g.prototype._registeredMethods), r4 = true, o2 = false, n2 = undefined;
          try {
            for (var s3, i2 = t4[Symbol.iterator]();!(r4 = (s3 = i2.next()).done); r4 = true) {
              var a2 = s3.value;
              this._registeredMethods[a2] = g.prototype._registeredMethods[a2].slice();
            }
          } catch (e5) {
            o2 = true, n2 = e5;
          } finally {
            try {
              r4 || i2.return == null || i2.return();
            } finally {
              if (o2)
                throw n2;
            }
          }
          window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), g.prototype.callRegisteredHooksFor = function(t5) {
            var e5 = this || g.prototype, r5 = this._isGlobal ? window : this;
            if (e5._registeredMethods.hasOwnProperty(t5)) {
              var e5 = e5._registeredMethods[t5], o3 = true, t5 = false, n3 = undefined;
              try {
                for (var s4, i3 = e5[Symbol.iterator]();!(o3 = (s4 = i3.next()).done); o3 = true) {
                  var a3 = s4.value;
                  typeof a3 == "function" && a3.call(r5);
                }
              } catch (e6) {
                t5 = true, n3 = e6;
              } finally {
                try {
                  o3 || i3.return == null || i3.return();
                } finally {
                  if (t5)
                    throw n3;
                }
              }
            }
          }, this._start = function() {
            d._userNode && typeof d._userNode == "string" && (d._userNode = document.getElementById(d._userNode));
            var e5 = d._isGlobal ? window : d;
            if (e5.preload) {
              d.callRegisteredHooksFor("beforePreload");
              var t5, r5 = document.getElementById(d._loadingScreenId), o3 = (r5 || ((r5 = document.createElement("div")).innerHTML = "Loading...", r5.style.position = "absolute", r5.id = d._loadingScreenId, (d._userNode || document.body).appendChild(r5)), d._preloadMethods);
              for (t5 in o3) {
                o3[t5] = o3[t5] || g;
                var n3 = o3[t5];
                n3 !== g.prototype && n3 !== g || (d._isGlobal && (window[t5] = d._wrapPreload(d, t5)), n3 = d), d._registeredPreloadMethods[t5] = n3[t5], n3[t5] = d._wrapPreload(n3, t5);
              }
              e5.preload(), d._runIfPreloadsAreDone();
            } else
              d._setup(), d._recording || d._draw();
          }, this._runIfPreloadsAreDone = function() {
            var e5, t5 = this._isGlobal ? window : this;
            t5._preloadCount === 0 && ((e5 = document.getElementById(t5._loadingScreenId)) && e5.parentNode.removeChild(e5), this.callRegisteredHooksFor("afterPreload"), this._setupDone || (this._lastTargetFrameTime = window.performance.now(), this._lastRealFrameTime = window.performance.now(), t5._setup(), this._recording || t5._draw()));
          }, this._decrementPreload = function() {
            var e5 = this._isGlobal ? window : this;
            e5._preloadDone || typeof e5.preload != "function" || (e5._setProperty("_preloadCount", e5._preloadCount - 1), e5._runIfPreloadsAreDone());
          }, this._wrapPreload = function(o3, n3) {
            var s4 = this;
            return function() {
              s4._incrementPreload();
              for (var e5 = arguments.length, t5 = new Array(e5), r5 = 0;r5 < e5; r5++)
                t5[r5] = arguments[r5];
              return s4._registeredPreloadMethods[n3].apply(o3, t5);
            };
          }, this._incrementPreload = function() {
            var e5 = this._isGlobal ? window : this;
            e5._preloadDone || e5._setProperty("_preloadCount", e5._preloadCount + 1);
          }, this._setup = function() {
            d.callRegisteredHooksFor("beforeSetup"), d.createCanvas(d._defaultCanvasSize.width, d._defaultCanvasSize.height, "p2d");
            var e5 = d._isGlobal ? window : d;
            if (typeof e5.preload == "function")
              for (var t5 in d._preloadMethods)
                e5[t5] = d._preloadMethods[t5][t5], e5[t5] && d && (e5[t5] = e5[t5].bind(d));
            d._millisStart = window.performance.now(), e5._preloadDone = true, typeof e5.setup == "function" && e5.setup();
            var r5 = document.getElementsByTagName("canvas"), o3 = true, n3 = false, s4 = undefined;
            try {
              for (var i3, a3 = r5[Symbol.iterator]();!(o3 = (i3 = a3.next()).done); o3 = true) {
                var l3 = i3.value;
                l3.dataset.hidden === "true" && (l3.style.visibility = "", delete l3.dataset.hidden);
              }
            } catch (e6) {
              n3 = true, s4 = e6;
            } finally {
              try {
                o3 || a3.return == null || a3.return();
              } finally {
                if (n3)
                  throw s4;
              }
            }
            d._lastTargetFrameTime = window.performance.now(), d._lastRealFrameTime = window.performance.now(), d._setupDone = true, (d._accessibleOutputs.grid || d._accessibleOutputs.text) && d._updateAccsOutput(), d.callRegisteredHooksFor("afterSetup");
          }, this._draw = function() {
            var e5 = window.performance.now(), t5 = e5 - d._lastTargetFrameTime, r5 = 1000 / d._targetFrameRate;
            (!d._loop || r5 - 5 <= t5) && (d.deltaTime = e5 - d._lastRealFrameTime, d._setProperty("deltaTime", d.deltaTime), d._frameRate = 1000 / d.deltaTime, d.redraw(), d._lastTargetFrameTime = Math.max(d._lastTargetFrameTime + r5, e5), d._lastRealFrameTime = e5, d._updateMouseCoords !== undefined && (d._updateMouseCoords(), d._setProperty("movedX", 0), d._setProperty("movedY", 0))), d._loop && (d._requestAnimId = window.requestAnimationFrame(d._draw));
          }, this._setProperty = function(e5, t5) {
            d[e5] = t5, d._isGlobal && (window[e5] = t5);
          }, this.remove = function() {
            d._startListener && window.removeEventListener("load", d._startListener, false);
            var t5 = document.getElementById(d._loadingScreenId);
            if (t5 && (t5.parentNode.removeChild(t5), d._incrementPreload()), d._curElement) {
              for (var e5 in d._loop = false, d._requestAnimId && window.cancelAnimationFrame(d._requestAnimId), d._events)
                window.removeEventListener(e5, d._events[e5]);
              var r5 = true, t5 = false, o3 = undefined;
              try {
                for (var n3, s4 = d._elements[Symbol.iterator]();!(r5 = (n3 = s4.next()).done); r5 = true) {
                  var i3, a3 = n3.value;
                  for (i3 in a3.elt && a3.elt.parentNode && a3.elt.parentNode.removeChild(a3.elt), a3._events)
                    a3.elt.removeEventListener(i3, a3._events[i3]);
                }
              } catch (e6) {
                t5 = true, o3 = e6;
              } finally {
                try {
                  r5 || s4.return == null || s4.return();
                } finally {
                  if (t5)
                    throw o3;
                }
              }
              var l3 = d;
              d._registeredMethods.remove.forEach(function(e6) {
                e6 !== undefined && e6.call(l3);
              });
            }
            if (d._isGlobal) {
              for (var u3 in g.prototype)
                try {
                  delete window[u3];
                } catch (e6) {
                  window[u3] = undefined;
                }
              for (var c2 in d)
                if (d.hasOwnProperty(c2))
                  try {
                    delete window[c2];
                  } catch (e6) {
                    window[c2] = undefined;
                  }
              g.instance = null;
            }
          }, this._registeredMethods.init.forEach(function(e5) {
            e5 !== undefined && e5.call(this);
          }, this), this._setupPromisePreloads();
          var l2, u2, c = this._createFriendlyGlobalFunctionBinder();
          if (e4)
            e4(this), g._checkForUserDefinedFunctions(this);
          else {
            for (var h in this._isGlobal = true, g.instance = this, g.prototype)
              typeof g.prototype[h] == "function" ? (l2 = h.substring(2), this._events.hasOwnProperty(l2) || (Math.hasOwnProperty(h) && Math[h] === g.prototype[h] ? c(h, g.prototype[h]) : c(h, g.prototype[h].bind(this)))) : c(h, g.prototype[h]);
            for (var f in this)
              this.hasOwnProperty(f) && c(f, this[f]);
          }
          for (u2 in this._events) {
            var p = this["_on".concat(u2)];
            p && (p = p.bind(this), window.addEventListener(u2, p, { passive: false }), this._events[u2] = p);
          }
          function m() {
            d._setProperty("focused", true);
          }
          function y() {
            d._setProperty("focused", false);
          }
          window.addEventListener("focus", m), window.addEventListener("blur", y), this.registerMethod("remove", function() {
            window.removeEventListener("focus", m), window.removeEventListener("blur", y);
          }), document.readyState === "complete" ? this._start() : (this._startListener = this._start.bind(this), window.addEventListener("load", this._startListener, false));
        }
        var e3, t3, r3;
        return e3 = g, (t3 = [{ key: "_initializeInstanceVariables", value: function() {
          this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }, this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = n.RGB, this._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, this._downKeys = {};
        } }, { key: "registerPreloadMethod", value: function(e4, t4) {
          g.prototype._preloadMethods.hasOwnProperty(e4) || (g.prototype._preloadMethods[e4] = t4);
        } }, { key: "registerMethod", value: function(e4, t4) {
          var r4 = this || g.prototype;
          r4._registeredMethods.hasOwnProperty(e4) || (r4._registeredMethods[e4] = []), r4._registeredMethods[e4].push(t4);
        } }, { key: "unregisterMethod", value: function(e4, t4) {
          var r4 = this || g.prototype;
          if (r4._registeredMethods.hasOwnProperty(e4)) {
            for (var o2 = r4._registeredMethods[e4], n2 = [], s3 = 0;s3 < o2.length; s3++)
              o2[s3] === t4 && n2.push(s3);
            for (var i2 = n2.length - 1;0 <= i2; i2--)
              o2.splice(n2[i2], 1);
          }
        } }, { key: "_createFriendlyGlobalFunctionBinder", value: function() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {}, r4 = e4.globalObject || window;
          e4.log || console.log.bind(console);
          return function(e5, t4) {
            g.disableFriendlyErrors, r4[e5] = t4;
          };
        } }]) && s2(e3.prototype, t3), r3 && s2(e3, r3), g;
      }();
      for (l in u.instance = null, u.disableFriendlyErrors = false, n)
        u.prototype[l] = n[l];
      u.VERSION = n.VERSION, u.prototype._preloadMethods = { loadJSON: u.prototype, loadImage: u.prototype, loadStrings: u.prototype, loadXML: u.prototype, loadBytes: u.prototype, loadTable: u.prototype, loadFont: u.prototype, loadModel: u.prototype, loadShader: u.prototype }, u.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] }, u.prototype._registeredPreloadMethods = {}, r2.default = u;
    }, { "./constants": 264, "./shim": 286, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-own-property-names": 179, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 276: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      n.default.Element = function() {
        function r3(e4, t4) {
          if (!(this instanceof r3))
            throw new TypeError("Cannot call a class as a function");
          this.elt = e4, this._pInst = this._pixelsState = t4, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
        }
        var e3, t3, o;
        return e3 = r3, o = [{ key: "_adjustListener", value: function(e4, t4, r4) {
          return t4 === false ? n.default.Element._detachListener(e4, r4) : n.default.Element._attachListener(e4, t4, r4), this;
        } }, { key: "_attachListener", value: function(e4, t4, r4) {
          r4._events[e4] && n.default.Element._detachListener(e4, r4);
          t4 = t4.bind(r4);
          r4.elt.addEventListener(e4, t4, false), r4._events[e4] = t4;
        } }, { key: "_detachListener", value: function(e4, t4) {
          var r4 = t4._events[e4];
          t4.elt.removeEventListener(e4, r4, false), t4._events[e4] = null;
        } }], (t3 = [{ key: "parent", value: function(e4) {
          return e4 === undefined ? this.elt.parentNode : (typeof e4 == "string" ? (e4[0] === "#" && (e4 = e4.substring(1)), e4 = document.getElementById(e4)) : e4 instanceof n.default.Element && (e4 = e4.elt), e4.appendChild(this.elt), this);
        } }, { key: "id", value: function(e4) {
          return e4 === undefined ? this.elt.id : (this.elt.id = e4, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
        } }, { key: "class", value: function(e4) {
          return e4 === undefined ? this.elt.className : (this.elt.className = e4, this);
        } }, { key: "mousePressed", value: function(t4) {
          return n.default.Element._adjustListener("mousedown", function(e4) {
            return this._pInst._setProperty("mouseIsPressed", true), this._pInst._setMouseButton(e4), t4.call(this, e4);
          }, this), this;
        } }, { key: "doubleClicked", value: function(e4) {
          return n.default.Element._adjustListener("dblclick", e4, this), this;
        } }, { key: "mouseWheel", value: function(e4) {
          return n.default.Element._adjustListener("wheel", e4, this), this;
        } }, { key: "mouseReleased", value: function(e4) {
          return n.default.Element._adjustListener("mouseup", e4, this), this;
        } }, { key: "mouseClicked", value: function(e4) {
          return n.default.Element._adjustListener("click", e4, this), this;
        } }, { key: "mouseMoved", value: function(e4) {
          return n.default.Element._adjustListener("mousemove", e4, this), this;
        } }, { key: "mouseOver", value: function(e4) {
          return n.default.Element._adjustListener("mouseover", e4, this), this;
        } }, { key: "mouseOut", value: function(e4) {
          return n.default.Element._adjustListener("mouseout", e4, this), this;
        } }, { key: "touchStarted", value: function(e4) {
          return n.default.Element._adjustListener("touchstart", e4, this), this;
        } }, { key: "touchMoved", value: function(e4) {
          return n.default.Element._adjustListener("touchmove", e4, this), this;
        } }, { key: "touchEnded", value: function(e4) {
          return n.default.Element._adjustListener("touchend", e4, this), this;
        } }, { key: "dragOver", value: function(e4) {
          return n.default.Element._adjustListener("dragover", e4, this), this;
        } }, { key: "dragLeave", value: function(e4) {
          return n.default.Element._adjustListener("dragleave", e4, this), this;
        } }, { key: "_setProperty", value: function(e4, t4) {
          this[e4] = t4;
        } }]) && s2(e3.prototype, t3), o && s2(e3, o), r3;
      }();
      e2 = n.default.Element;
      r2.default = e2;
    }, { "./main": 275 }], 277: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-prototype-of"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var c = (u = e2("./main")) && u.__esModule ? u : { default: u }, d = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function s2(e3, t3) {
        return (s2 = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function h(r3) {
        return function() {
          var e3, t3 = l(r3);
          return f(this, function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = l(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments));
        };
      }
      function f(e3, t3) {
        return !t3 || i(t3) !== "object" && typeof t3 != "function" ? p(e3) : t3;
      }
      function p(e3) {
        if (e3 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function l(e3) {
        return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      c.default.Graphics = function(e3) {
        var t3 = u2;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && s2(t3, e3);
        var r3, l2 = h(u2);
        function u2(e4, t4, r4, o2, n2) {
          var s3;
          if (!(this instanceof u2))
            throw new TypeError("Cannot call a class as a function");
          a2 = n2 || document.createElement("canvas"), (s3 = l2.call(this, a2, o2)).canvas = a2;
          var i2, a2 = r4 || d.P2D, r4 = o2._userNode || document.body;
          for (i2 in n2 || r4.appendChild(s3.canvas), c.default.prototype)
            s3[i2] || (typeof c.default.prototype[i2] == "function" ? s3[i2] = c.default.prototype[i2].bind(p(s3)) : s3[i2] = c.default.prototype[i2]);
          return c.default.prototype._initializeInstanceVariables.apply(p(s3)), s3.width = e4, s3.height = t4, s3._pixelDensity = o2._pixelDensity, a2 === d.WEBGL ? s3._renderer = new c.default.RendererGL(s3.canvas, p(s3), false) : s3._renderer = new c.default.Renderer2D(s3.canvas, p(s3), false), o2._elements.push(p(s3)), Object.defineProperty(p(s3), "deltaTime", { get: function() {
            return this._pInst.deltaTime;
          } }), s3._renderer.resize(e4, t4), s3._renderer._applyDefaults(), f(s3, p(s3));
        }
        return t3 = u2, (e3 = [{ key: "reset", value: function() {
          this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
        } }, { key: "remove", value: function() {
          this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
          var e4, t4 = this._pInst._elements.indexOf(this);
          for (e4 in t4 !== -1 && this._pInst._elements.splice(t4, 1), this._events)
            this.elt.removeEventListener(e4, this._events[e4]);
        } }, { key: "createFramebuffer", value: function(e4) {
          return new c.default.Framebuffer(this, e4);
        } }]) && n(t3.prototype, e3), r3 && n(t3, r3), u2;
      }(c.default.Element);
      var u = c.default.Graphics;
      r2.default = u;
    }, { "./constants": 264, "./main": 275, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.splice": 167, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 278: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var a = (s2 = e2("./main")) && s2.__esModule ? s2 : { default: s2 }, P = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || l(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = i();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, i = function() {
          return e3;
        }, e3);
      }
      function l(e3) {
        return (l = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function u(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function c(e3, t3) {
        return (c = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function d(o2) {
        return function() {
          var e3, t3, r3 = n(o2);
          return e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = n(this).constructor, Reflect.construct(r3, arguments, e3)) : r3.apply(this, arguments), r3 = this, !(t3 = e3) || l(t3) !== "object" && typeof t3 != "function" ? h(r3) : t3;
        };
      }
      function h(e3) {
        if (e3 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function n(e3) {
        return (n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      var s2 = function(e3) {
        var t3 = s3;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && c(t3, e3);
        var r3, n2 = d(s3);
        function s3(e4, t4, r4) {
          var o2;
          if (this instanceof s3)
            return (o2 = n2.call(this, e4, t4)).canvas = e4, o2._pixelsState = t4, r4 ? (o2._isMainCanvas = true, o2._pInst._setProperty("_curElement", h(o2)), o2._pInst._setProperty("canvas", o2.canvas), o2._pInst._setProperty("width", o2.width), o2._pInst._setProperty("height", o2.height)) : (o2.canvas.style.display = "none", o2._styles = []), o2._clipping = false, o2._clipInvert = false, o2._textSize = 12, o2._textLeading = 15, o2._textFont = "sans-serif", o2._textStyle = P.NORMAL, o2._textAscent = null, o2._textDescent = null, o2._textAlign = P.LEFT, o2._textBaseline = P.BASELINE, o2._textWrap = P.WORD, o2._rectMode = P.CORNER, o2._ellipseMode = P.CENTER, o2._curveTightness = 0, o2._imageMode = P.CORNER, o2._tint = null, o2._doStroke = true, o2._doFill = true, o2._strokeSet = false, o2._fillSet = false, o2._leadingSet = false, o2._pushPopDepth = 0, o2;
          throw new TypeError("Cannot call a class as a function");
        }
        return t3 = s3, (e3 = [{ key: "push", value: function() {
          return this._pushPopDepth++, { properties: { _doStroke: this._doStroke, _strokeSet: this._strokeSet, _doFill: this._doFill, _fillSet: this._fillSet, _tint: this._tint, _imageMode: this._imageMode, _rectMode: this._rectMode, _ellipseMode: this._ellipseMode, _textFont: this._textFont, _textLeading: this._textLeading, _leadingSet: this._leadingSet, _textSize: this._textSize, _textAlign: this._textAlign, _textBaseline: this._textBaseline, _textStyle: this._textStyle, _textWrap: this._textWrap } };
        } }, { key: "pop", value: function(e4) {
          this._pushPopDepth--, e4.properties && Object.assign(this, e4.properties);
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {};
          if (this._clipping)
            throw new Error("It looks like you're trying to clip while already in the middle of clipping. Did you forget to endClip()?");
          this._clipping = true, this._clipInvert = e4.invert;
        } }, { key: "endClip", value: function() {
          if (!this._clipping)
            throw new Error("It looks like you've called endClip() without beginClip(). Did you forget to call beginClip() first?");
          this._clipping = false;
        } }, { key: "resize", value: function(e4, t4) {
          this.width = e4, this.height = t4, this.elt.width = e4 * this._pInst._pixelDensity, this.elt.height = t4 * this._pInst._pixelDensity, this.elt.style.width = "".concat(e4, "px"), this.elt.style.height = "".concat(t4, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
        } }, { key: "get", value: function(e4, t4, r4, o2) {
          var n3 = this._pixelsState, s4 = n3._pixelDensity, i2 = this.canvas;
          if (e4 === undefined && t4 === undefined)
            e4 = t4 = 0, r4 = n3.width, o2 = n3.height;
          else if (e4 *= s4, t4 *= s4, r4 === undefined && o2 === undefined)
            return e4 < 0 || t4 < 0 || e4 >= i2.width || t4 >= i2.height ? [0, 0, 0, 0] : this._getPixel(e4, t4);
          n3 = new a.default.Image(r4 * s4, o2 * s4);
          return n3.pixelDensity(s4), n3.canvas.getContext("2d").drawImage(i2, e4, t4, r4 * s4, o2 * s4, 0, 0, r4 * s4, o2 * s4), n3;
        } }, { key: "textLeading", value: function(e4) {
          return typeof e4 == "number" ? (this._setProperty("_leadingSet", true), this._setProperty("_textLeading", e4), this._pInst) : this._textLeading;
        } }, { key: "textStyle", value: function(e4) {
          return e4 ? (e4 !== P.NORMAL && e4 !== P.ITALIC && e4 !== P.BOLD && e4 !== P.BOLDITALIC || this._setProperty("_textStyle", e4), this._applyTextProperties()) : this._textStyle;
        } }, { key: "textAscent", value: function() {
          return this._textAscent === null && this._updateTextMetrics(), this._textAscent;
        } }, { key: "textDescent", value: function() {
          return this._textDescent === null && this._updateTextMetrics(), this._textDescent;
        } }, { key: "textAlign", value: function(e4, t4) {
          return e4 !== undefined ? (this._setProperty("_textAlign", e4), t4 !== undefined && this._setProperty("_textBaseline", t4), this._applyTextProperties()) : { horizontal: this._textAlign, vertical: this._textBaseline };
        } }, { key: "textWrap", value: function(e4) {
          return this._setProperty("_textWrap", e4), this._textWrap;
        } }, { key: "text", value: function(e4, t4, r4, o2, n3) {
          var s4, i2, a2, l2, u2 = this._pInst, c2 = this._textWrap, d2 = Number.MAX_VALUE, h2 = r4;
          if ((this._doFill || this._doStroke) && e4 !== undefined) {
            if (s4 = (e4 = (e4 = typeof e4 != "string" ? e4.toString() : e4).replace(/(\t)/g, "  ")).split("\n"), o2 !== undefined) {
              switch (this._rectMode === P.CENTER && (t4 -= o2 / 2), this._textAlign) {
                case P.CENTER:
                  t4 += o2 / 2;
                  break;
                case P.RIGHT:
                  t4 += o2;
              }
              if (n3 !== undefined) {
                this._rectMode === P.CENTER && (r4 -= n3 / 2, h2 -= n3 / 2);
                var e4 = r4, f2 = u2.textAscent();
                switch (this._textBaseline) {
                  case P.BOTTOM:
                    l2 = r4 + n3, r4 = Math.max(l2, r4), h2 += f2;
                    break;
                  case P.CENTER:
                    l2 = r4 + n3 / 2, r4 = Math.max(l2, r4), h2 += f2 / 2;
                }
                d2 = r4 + n3 - f2, this._textBaseline === P.CENTER && (d2 = e4 + n3 - f2 / 2);
              } else
                this._textBaseline !== P.BOTTOM && this._textBaseline !== P.CENTER || (h2 = r4 - (e4 = u2.textSize() * this._textLeading) / 2, d2 = r4 + e4 / 2);
              if (c2 === P.WORD) {
                for (var p = [], m = 0;m < s4.length; m++) {
                  for (var y = "", g = s4[m].split(" "), v = 0;v < g.length; v++)
                    i2 = "".concat(y + g[v]) + " ", y = o2 < (a2 = this.textWidth(i2)) && 0 < y.length ? (p.push(y), "".concat(g[v]) + " ") : i2;
                  p.push(y);
                }
                var b = 0;
                this._textBaseline === P.CENTER ? b = (p.length - 1) * u2.textLeading() / 2 : this._textBaseline === P.BOTTOM && (b = (p.length - 1) * u2.textLeading());
                for (var j = 0;j < s4.length; j++) {
                  y = "", g = s4[j].split(" ");
                  for (var _ = 0;_ < g.length; _++)
                    i2 = "".concat(y + g[_]) + " ", o2 < (a2 = this.textWidth(i2)) && 0 < y.length ? (this._renderText(u2, y.trim(), t4, r4 - b, d2, h2), y = "".concat(g[_]) + " ", r4 += u2.textLeading()) : y = i2;
                  this._renderText(u2, y.trim(), t4, r4 - b, d2, h2), r4 += u2.textLeading();
                }
              } else {
                for (var x = [], w = 0;w < s4.length; w++)
                  for (var S = s4[w].split(y = ""), T = 0;T < S.length; T++)
                    i2 = "".concat(y + S[T]), (a2 = this.textWidth(i2)) <= o2 ? y += S[T] : o2 < a2 && 0 < y.length && (x.push(y), y = "".concat(S[T]));
                x.push(y);
                var M = 0;
                this._textBaseline === P.CENTER ? M = (x.length - 1) * u2.textLeading() / 2 : this._textBaseline === P.BOTTOM && (M = (x.length - 1) * u2.textLeading());
                for (var E = 0;E < s4.length; E++) {
                  S = s4[E].split(y = "");
                  for (var k = 0;k < S.length; k++)
                    i2 = "".concat(y + S[k]), (a2 = this.textWidth(i2)) <= o2 ? y += S[k] : o2 < a2 && 0 < y.length && (this._renderText(u2, y.trim(), t4, r4 - M, d2, h2), r4 += u2.textLeading(), y = "".concat(S[k]));
                }
                this._renderText(u2, y.trim(), t4, r4 - M, d2, h2), r4 += u2.textLeading();
              }
            } else {
              var C = 0;
              this._textBaseline === P.CENTER ? C = (s4.length - 1) * u2.textLeading() / 2 : this._textBaseline === P.BOTTOM && (C = (s4.length - 1) * u2.textLeading());
              for (var O = 0;O < s4.length; O++)
                this._renderText(u2, s4[O], t4, r4 - C, d2, h2 - C), r4 += u2.textLeading();
            }
            return u2;
          }
        } }, { key: "_applyDefaults", value: function() {
          return this;
        } }, { key: "_isOpenType", value: function() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : this._textFont;
          return l(e4) === "object" && e4.font && e4.font.supported;
        } }, { key: "_updateTextMetrics", value: function() {
          var e4, t4, r4, o2, n3, s4;
          return this._isOpenType() ? (this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent())) : ((e4 = document.createElement("span")).style.fontFamily = this._textFont, e4.style.fontSize = "".concat(this._textSize, "px"), e4.innerHTML = "ABCjgq|", (s4 = document.createElement("div")).style.display = "inline-block", s4.style.width = "1px", s4.style.height = "0px", o2 = ((t4 = document.createElement("div")).appendChild(e4), t4.appendChild(s4), t4.style.height = "0px", t4.style.overflow = "hidden", document.body.appendChild(t4), s4.style.verticalAlign = "baseline", f(s4)), n3 = f(e4), r4 = o2[1] - n3[1], o2 = (s4.style.verticalAlign = "bottom", f(s4)), n3 = f(e4), s4 = o2[1] - n3[1] - r4, document.body.removeChild(t4), this._setProperty("_textAscent", r4), this._setProperty("_textDescent", s4)), this;
        } }]) && u(t3.prototype, e3), r3 && u(t3, r3), s3;
      }(a.default.Element);
      function f(e3) {
        var t3 = 0, r3 = 0;
        if (e3.offsetParent)
          for (;t3 += e3.offsetLeft, r3 += e3.offsetTop, e3 = e3.offsetParent; )
            ;
        else
          t3 += e3.offsetLeft, r3 += e3.offsetTop;
        return [t3, r3];
      }
      s2.prototype.textSize = function(e3) {
        return typeof e3 == "number" ? (this._setProperty("_textSize", e3), this._leadingSet || this._setProperty("_textLeading", e3 * P._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
      }, a.default.Renderer = s2;
      e2 = a.default.Renderer;
      r2.default = e2;
    }, { "../core/constants": 264, "./main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.trim": 201, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 279: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var d = (n = e2("./main")) && n.__esModule ? n : { default: n }, p = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function l(e3, t3, r3) {
        return (l = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function(e4, t4, r4) {
          var e4 = function(e5, t5) {
            for (;!Object.prototype.hasOwnProperty.call(e5, t5) && (e5 = h(e5)) !== null; )
              ;
            return e5;
          }(e4, t4);
          if (e4)
            return (e4 = Object.getOwnPropertyDescriptor(e4, t4)).get ? e4.get.call(r4) : e4.value;
        })(e3, t3, r3 || e3);
      }
      function u(e3, t3) {
        return (u = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function c(r3) {
        return function() {
          var e3, t3 = h(r3), t3 = (e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = h(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments), this);
          if (!e3 || i(e3) !== "object" && typeof e3 != "function") {
            if (t3 !== undefined)
              return t3;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function h(e3) {
        return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      e2("./p5.Renderer");
      var f = "rgba(0,0,0,0)", n = function(e3) {
        var t3 = n2;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && u(t3, e3);
        var r3, o2 = c(n2);
        function n2(e4, t4, r4) {
          if (this instanceof n2)
            return (e4 = o2.call(this, e4, t4, r4)).drawingContext = e4.canvas.getContext("2d"), e4._pInst._setProperty("drawingContext", e4.drawingContext), e4;
          throw new TypeError("Cannot call a class as a function");
        }
        return t3 = n2, (e3 = [{ key: "getFilterGraphicsLayer", value: function() {
          var e4;
          return this.filterGraphicsLayer || (e4 = (this._pInst instanceof d.default.Graphics ? this._pInst : this)._pInst, this.filterGraphicsLayer = new d.default.Graphics(this.width, this.height, p.WEBGL, e4)), this.filterGraphicsLayer.width === this.width && this.filterGraphicsLayer.height === this.height || this.filterGraphicsLayer.resizeCanvas(this.width, this.height), this.filterGraphicsLayer.pixelDensity() !== this._pInst.pixelDensity() && this.filterGraphicsLayer.pixelDensity(this._pInst.pixelDensity()), this.filterGraphicsLayer;
        } }, { key: "_applyDefaults", value: function() {
          this._cachedFillStyle = this._cachedStrokeStyle = undefined, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
        } }, { key: "resize", value: function(e4, t4) {
          l(h(n2.prototype), "resize", this).call(this, e4, t4), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
        } }, { key: "background", value: function() {
          var e4, t4;
          this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? undefined : arguments[0]) instanceof d.default.Image ? 0 <= (arguments.length <= 1 ? undefined : arguments[1]) ? (e4 = arguments.length <= 0 ? undefined : arguments[0], this.drawingContext.globalAlpha = (arguments.length <= 1 ? undefined : arguments[1]) / 255, this._pInst.image(e4, 0, 0, this.width, this.height)) : this._pInst.image(arguments.length <= 0 ? undefined : arguments[0], 0, 0, this.width, this.height) : (e4 = this._getFill(), t4 = (t4 = this._pInst).color.apply(t4, arguments), this._pInst._addAccsOutput() && this._pInst._accsBackground(t4.levels), t4 = t4.toString(), this._setFill(t4), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e4), this._isErasing && this._pInst.erase()), this.drawingContext.restore();
        } }, { key: "clear", value: function() {
          this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
        } }, { key: "fill", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments);
          this._setFill(e4.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", e4.levels);
        } }, { key: "stroke", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments);
          this._setStroke(e4.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", e4.levels);
        } }, { key: "erase", value: function(e4, t4) {
          this._isErasing || (this._cachedFillStyle = this.drawingContext.fillStyle, e4 = this._pInst.color(255, e4).toString(), this.drawingContext.fillStyle = e4, this._cachedStrokeStyle = this.drawingContext.strokeStyle, e4 = this._pInst.color(255, t4).toString(), this.drawingContext.strokeStyle = e4, t4 = this._cachedBlendMode, this.blendMode(p.REMOVE), this._cachedBlendMode = t4, this._isErasing = true);
        } }, { key: "noErase", value: function() {
          this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = false);
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {}, e4 = (l(h(n2.prototype), "beginClip", this).call(this, e4), this._cachedFillStyle = this.drawingContext.fillStyle, this._pInst.color(255, 0).toString()), e4 = (this.drawingContext.fillStyle = e4, this._cachedStrokeStyle = this.drawingContext.strokeStyle, this._pInst.color(255, 0).toString()), e4 = (this.drawingContext.strokeStyle = e4, this._cachedBlendMode);
          this.blendMode(p.BLEND), this._cachedBlendMode = e4, this.drawingContext.beginPath(), this._clipInvert && (this.drawingContext.moveTo(-2 * this.width, -2 * this.height), this.drawingContext.lineTo(-2 * this.width, 2 * this.height), this.drawingContext.lineTo(2 * this.width, 2 * this.height), this.drawingContext.lineTo(2 * this.width, -2 * this.height), this.drawingContext.closePath());
        } }, { key: "endClip", value: function() {
          this._doFillStrokeClose(), this.drawingContext.clip(), l(h(n2.prototype), "endClip", this).call(this), this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode);
        } }, { key: "image", value: function(e4, t4, r4, o3, n3, s3, i2, a2, l2) {
          e4.gifProperties && e4._animateGif(this._pInst);
          try {
            d.default.MediaElement && e4 instanceof d.default.MediaElement && e4._ensureCanvas();
            var u2 = (u2 = this._tint && e4.canvas ? this._getTintedImageCanvas(e4) : u2) || e4.canvas || e4.elt, c2 = 1;
            e4.width && 0 < e4.width && (c2 = u2.width / e4.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u2, c2 * t4, c2 * r4, c2 * o3, c2 * n3, s3, i2, a2, l2), this._isErasing && this._pInst.erase();
          } catch (e5) {
            if (e5.name !== "NS_ERROR_NOT_AVAILABLE")
              throw e5;
          }
        } }, { key: "_getTintedImageCanvas", value: function(e4) {
          if (!e4.canvas)
            return e4;
          e4.tintCanvas || (e4.tintCanvas = document.createElement("canvas")), e4.tintCanvas.width !== e4.canvas.width && (e4.tintCanvas.width = e4.canvas.width), e4.tintCanvas.height !== e4.canvas.height && (e4.tintCanvas.height = e4.canvas.height);
          var t4 = e4.tintCanvas.getContext("2d");
          return t4.save(), t4.clearRect(0, 0, e4.canvas.width, e4.canvas.height), (this._tint[0] < 255 || this._tint[1] < 255 || this._tint[2] < 255) && (t4.drawImage(e4.canvas, 0, 0), t4.globalCompositeOperation = "luminosity", t4.drawImage(e4.canvas, 0, 0), t4.globalCompositeOperation = "color", t4.drawImage(e4.canvas, 0, 0), t4.globalCompositeOperation = "multiply", t4.fillStyle = "rgb(".concat(this._tint.slice(0, 3).join(", "), ")"), t4.fillRect(0, 0, e4.canvas.width, e4.canvas.height), t4.globalCompositeOperation = "destination-in"), t4.globalAlpha = this._tint[3] / 255, t4.drawImage(e4.canvas, 0, 0), t4.restore(), e4.tintCanvas;
        } }, { key: "blendMode", value: function(e4) {
          if (e4 === p.SUBTRACT)
            console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
          else {
            if (e4 !== p.BLEND && e4 !== p.REMOVE && e4 !== p.DARKEST && e4 !== p.LIGHTEST && e4 !== p.DIFFERENCE && e4 !== p.MULTIPLY && e4 !== p.EXCLUSION && e4 !== p.SCREEN && e4 !== p.REPLACE && e4 !== p.OVERLAY && e4 !== p.HARD_LIGHT && e4 !== p.SOFT_LIGHT && e4 !== p.DODGE && e4 !== p.BURN && e4 !== p.ADD)
              throw new Error("Mode ".concat(e4, " not recognized."));
            this._cachedBlendMode = e4, this.drawingContext.globalCompositeOperation = e4;
          }
        } }, { key: "blend", value: function() {
          for (var e4 = this.drawingContext.globalCompositeOperation, t4 = arguments.length, r4 = new Array(t4), o3 = 0;o3 < t4; o3++)
            r4[o3] = arguments[o3];
          var n3 = r4[r4.length - 1], s3 = Array.prototype.slice.call(r4, 0, r4.length - 1);
          this.drawingContext.globalCompositeOperation = n3, d.default.prototype.copy.apply(this, s3), this.drawingContext.globalCompositeOperation = e4;
        } }, { key: "_getPixel", value: function(e4, t4) {
          e4 = this.drawingContext.getImageData(e4, t4, 1, 1).data;
          return [e4[0], e4[1], e4[2], e4[3]];
        } }, { key: "loadPixels", value: function() {
          var e4 = this._pixelsState, t4 = e4._pixelDensity, r4 = this.width * t4, t4 = this.height * t4, r4 = this.drawingContext.getImageData(0, 0, r4, t4);
          e4._setProperty("imageData", r4), e4._setProperty("pixels", r4.data);
        } }, { key: "set", value: function(e4, t4, r4) {
          e4 = Math.floor(e4), t4 = Math.floor(t4);
          var o3 = this._pixelsState;
          if (r4 instanceof d.default.Image)
            this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o3._pixelDensity, o3._pixelDensity), this.drawingContext.clearRect(e4, t4, r4.width, r4.height), this.drawingContext.drawImage(r4.canvas, e4, t4), this.drawingContext.restore();
          else {
            var n3 = 0, s3 = 0, i2 = 0, a2 = 0, l2 = 4 * (t4 * o3._pixelDensity * (this.width * o3._pixelDensity) + e4 * o3._pixelDensity);
            if (o3.imageData || o3.loadPixels.call(o3), typeof r4 == "number")
              l2 < o3.pixels.length && (i2 = s3 = n3 = r4, a2 = 255);
            else if (r4 instanceof Array) {
              if (r4.length < 4)
                throw new Error("pixel array must be of the form [R, G, B, A]");
              l2 < o3.pixels.length && (n3 = r4[0], s3 = r4[1], i2 = r4[2], a2 = r4[3]);
            } else
              r4 instanceof d.default.Color && l2 < o3.pixels.length && (n3 = r4.levels[0], s3 = r4.levels[1], i2 = r4.levels[2], a2 = r4.levels[3]);
            for (var u2 = 0;u2 < o3._pixelDensity; u2++)
              for (var c2 = 0;c2 < o3._pixelDensity; c2++)
                l2 = 4 * ((t4 * o3._pixelDensity + c2) * this.width * o3._pixelDensity + (e4 * o3._pixelDensity + u2)), o3.pixels[l2] = n3, o3.pixels[l2 + 1] = s3, o3.pixels[l2 + 2] = i2, o3.pixels[l2 + 3] = a2;
          }
        } }, { key: "updatePixels", value: function(e4, t4, r4, o3) {
          var n3 = this._pixelsState, s3 = n3._pixelDensity;
          e4 === undefined && t4 === undefined && r4 === undefined && o3 === undefined && (t4 = e4 = 0, r4 = this.width, o3 = this.height), e4 *= s3, t4 *= s3, r4 *= s3, o3 *= s3, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n3.imageData), this.drawingContext.putImageData(n3.imageData, e4, t4, 0, 0, r4, o3);
        } }, { key: "_acuteArcToBezier", value: function(e4, t4) {
          var r4 = t4 / 2, o3 = Math.cos(r4), n3 = Math.sin(r4), s3 = 1 / Math.tan(r4), r4 = e4 + r4, i2 = Math.cos(r4), r4 = Math.sin(r4), a2 = (4 - o3) / 3, n3 = n3 + (o3 - a2) * s3;
          return { ax: Math.cos(e4).toFixed(7), ay: Math.sin(e4).toFixed(7), bx: (a2 * i2 + n3 * r4).toFixed(7), by: (a2 * r4 - n3 * i2).toFixed(7), cx: (a2 * i2 - n3 * r4).toFixed(7), cy: (a2 * r4 + n3 * i2).toFixed(7), dx: Math.cos(e4 + t4).toFixed(7), dy: Math.sin(e4 + t4).toFixed(7) };
        } }, { key: "arc", value: function(r4, o3, e4, t4, n3, s3, i2) {
          var a2, l2 = this.drawingContext, u2 = e4 / 2, c2 = t4 / 2, d2 = [];
          for (r4 += u2, o3 += c2;0.00001 <= s3 - n3; )
            a2 = Math.min(s3 - n3, p.HALF_PI), d2.push(this._acuteArcToBezier(n3, a2)), n3 += a2;
          return this._doFill && (this._clipping || l2.beginPath(), d2.forEach(function(e5, t5) {
            t5 === 0 && l2.moveTo(r4 + e5.ax * u2, o3 + e5.ay * c2), l2.bezierCurveTo(r4 + e5.bx * u2, o3 + e5.by * c2, r4 + e5.cx * u2, o3 + e5.cy * c2, r4 + e5.dx * u2, o3 + e5.dy * c2);
          }), i2 !== p.PIE && i2 != null || l2.lineTo(r4, o3), l2.closePath(), this._clipping || l2.fill()), this._doStroke && (this._clipping || l2.beginPath(), d2.forEach(function(e5, t5) {
            t5 === 0 && l2.moveTo(r4 + e5.ax * u2, o3 + e5.ay * c2), l2.bezierCurveTo(r4 + e5.bx * u2, o3 + e5.by * c2, r4 + e5.cx * u2, o3 + e5.cy * c2, r4 + e5.dx * u2, o3 + e5.dy * c2);
          }), i2 === p.PIE ? (l2.lineTo(r4, o3), l2.closePath()) : i2 === p.CHORD && l2.closePath(), this._clipping || l2.stroke()), this;
        } }, { key: "ellipse", value: function(e4) {
          var t4 = this.drawingContext, r4 = this._doFill, o3 = this._doStroke, n3 = parseFloat(e4[0]), s3 = parseFloat(e4[1]), i2 = parseFloat(e4[2]), e4 = parseFloat(e4[3]);
          if (r4 && !o3) {
            if (this._getFill() === f)
              return this;
          } else if (!r4 && o3 && this._getStroke() === f)
            return this;
          var a2 = i2 / 2 * 0.5522847498, l2 = e4 / 2 * 0.5522847498, u2 = n3 + i2, c2 = s3 + e4, i2 = n3 + i2 / 2, e4 = s3 + e4 / 2;
          this._clipping || t4.beginPath(), t4.moveTo(n3, e4), t4.bezierCurveTo(n3, e4 - l2, i2 - a2, s3, i2, s3), t4.bezierCurveTo(i2 + a2, s3, u2, e4 - l2, u2, e4), t4.bezierCurveTo(u2, e4 + l2, i2 + a2, c2, i2, c2), t4.bezierCurveTo(i2 - a2, c2, n3, e4 + l2, n3, e4), !this._clipping && r4 && t4.fill(), !this._clipping && o3 && t4.stroke();
        } }, { key: "line", value: function(e4, t4, r4, o3) {
          var n3 = this.drawingContext;
          return this._doStroke && this._getStroke() !== f && (this._clipping || n3.beginPath(), n3.moveTo(e4, t4), n3.lineTo(r4, o3), n3.stroke()), this;
        } }, { key: "point", value: function(e4, t4) {
          var r4, o3, n3 = this.drawingContext;
          return !this._doStroke || this._getStroke() === f ? this : (r4 = this._getStroke(), o3 = this._getFill(), this._clipping || this._setFill(r4), this._clipping || n3.beginPath(), n3.arc(e4, t4, n3.lineWidth / 2, 0, p.TWO_PI, false), void (this._clipping || (n3.fill(), this._setFill(o3))));
        } }, { key: "quad", value: function(e4, t4, r4, o3, n3, s3, i2, a2) {
          var l2 = this.drawingContext, u2 = this._doFill, c2 = this._doStroke;
          if (u2 && !c2) {
            if (this._getFill() === f)
              return this;
          } else if (!u2 && c2 && this._getStroke() === f)
            return this;
          return this._clipping || l2.beginPath(), l2.moveTo(e4, t4), l2.lineTo(r4, o3), l2.lineTo(n3, s3), l2.lineTo(i2, a2), l2.closePath(), !this._clipping && u2 && l2.fill(), !this._clipping && c2 && l2.stroke(), this;
        } }, { key: "rect", value: function(e4) {
          var t4, r4, o3 = e4[0], n3 = e4[1], s3 = e4[2], i2 = e4[3], a2 = e4[4], l2 = e4[5], u2 = e4[6], e4 = e4[7], c2 = this.drawingContext, d2 = this._doFill, h2 = this._doStroke;
          if (d2 && !h2) {
            if (this._getFill() === f)
              return this;
          } else if (!d2 && h2 && this._getStroke() === f)
            return this;
          return this._clipping || c2.beginPath(), a2 === undefined ? c2.rect(o3, n3, s3, i2) : (l2 === undefined && (l2 = a2), u2 === undefined && (u2 = l2), e4 === undefined && (e4 = u2), h2 = (d2 = Math.abs(s3)) / 2, r4 = (t4 = Math.abs(i2)) / 2, t4 < 2 * (a2 = d2 < 2 * a2 ? h2 : a2) && (a2 = r4), t4 < 2 * (l2 = d2 < 2 * l2 ? h2 : l2) && (l2 = r4), t4 < 2 * (u2 = d2 < 2 * u2 ? h2 : u2) && (u2 = r4), t4 < 2 * (e4 = d2 < 2 * e4 ? h2 : e4) && (e4 = r4), this._clipping || c2.beginPath(), c2.moveTo(o3 + a2, n3), c2.arcTo(o3 + s3, n3, o3 + s3, n3 + i2, l2), c2.arcTo(o3 + s3, n3 + i2, o3, n3 + i2, u2), c2.arcTo(o3, n3 + i2, o3, n3, e4), c2.arcTo(o3, n3, o3 + s3, n3, a2), c2.closePath()), !this._clipping && this._doFill && c2.fill(), !this._clipping && this._doStroke && c2.stroke(), this;
        } }, { key: "triangle", value: function(e4) {
          var t4 = this.drawingContext, r4 = this._doFill, o3 = this._doStroke, n3 = e4[0], s3 = e4[1], i2 = e4[2], a2 = e4[3], l2 = e4[4], e4 = e4[5];
          if (r4 && !o3) {
            if (this._getFill() === f)
              return this;
          } else if (!r4 && o3 && this._getStroke() === f)
            return this;
          this._clipping || t4.beginPath(), t4.moveTo(n3, s3), t4.lineTo(i2, a2), t4.lineTo(l2, e4), t4.closePath(), !this._clipping && r4 && t4.fill(), !this._clipping && o3 && t4.stroke();
        } }, { key: "endShape", value: function(e4, t4, r4, o3, n3, s3, i2) {
          if (t4.length !== 0 && (this._doStroke || this._doFill)) {
            var a2, l2, u2, c2 = e4 === p.CLOSE, d2 = (c2 && !s3 && t4.push(t4[0]), t4.length);
            if (r4 && i2 === null) {
              if (3 < d2) {
                var h2 = [], f2 = 1 - this._curveTightness;
                for (this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t4[1][0], t4[1][1]), l2 = 1;l2 + 2 < d2; l2++)
                  a2 = t4[l2], h2[0] = [a2[0], a2[1]], h2[1] = [a2[0] + (f2 * t4[l2 + 1][0] - f2 * t4[l2 - 1][0]) / 6, a2[1] + (f2 * t4[l2 + 1][1] - f2 * t4[l2 - 1][1]) / 6], h2[2] = [t4[l2 + 1][0] + (f2 * t4[l2][0] - f2 * t4[l2 + 2][0]) / 6, t4[l2 + 1][1] + (f2 * t4[l2][1] - f2 * t4[l2 + 2][1]) / 6], h2[3] = [t4[l2 + 1][0], t4[l2 + 1][1]], this.drawingContext.bezierCurveTo(h2[1][0], h2[1][1], h2[2][0], h2[2][1], h2[3][0], h2[3][1]);
                c2 && this.drawingContext.lineTo(t4[l2 + 1][0], t4[l2 + 1][1]), this._doFillStrokeClose(c2);
              }
            } else if (o3 && i2 === null) {
              for (this._clipping || this.drawingContext.beginPath(), l2 = 0;l2 < d2; l2++)
                t4[l2].isVert ? t4[l2].moveTo ? this.drawingContext.moveTo(t4[l2][0], t4[l2][1]) : this.drawingContext.lineTo(t4[l2][0], t4[l2][1]) : this.drawingContext.bezierCurveTo(t4[l2][0], t4[l2][1], t4[l2][2], t4[l2][3], t4[l2][4], t4[l2][5]);
              this._doFillStrokeClose(c2);
            } else if (n3 && i2 === null) {
              for (this._clipping || this.drawingContext.beginPath(), l2 = 0;l2 < d2; l2++)
                t4[l2].isVert ? t4[l2].moveTo ? this.drawingContext.moveTo(t4[l2][0], t4[l2][1]) : this.drawingContext.lineTo(t4[l2][0], t4[l2][1]) : this.drawingContext.quadraticCurveTo(t4[l2][0], t4[l2][1], t4[l2][2], t4[l2][3]);
              this._doFillStrokeClose(c2);
            } else if (i2 === p.POINTS)
              for (l2 = 0;l2 < d2; l2++)
                a2 = t4[l2], this._doStroke && this._pInst.stroke(a2[6]), this._pInst.point(a2[0], a2[1]);
            else if (i2 === p.LINES)
              for (l2 = 0;l2 + 1 < d2; l2 += 2)
                a2 = t4[l2], this._doStroke && this._pInst.stroke(t4[l2 + 1][6]), this._pInst.line(a2[0], a2[1], t4[l2 + 1][0], t4[l2 + 1][1]);
            else if (i2 === p.TRIANGLES)
              for (l2 = 0;l2 + 2 < d2; l2 += 3)
                a2 = t4[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(a2[0], a2[1]), this.drawingContext.lineTo(t4[l2 + 1][0], t4[l2 + 1][1]), this.drawingContext.lineTo(t4[l2 + 2][0], t4[l2 + 2][1]), this.drawingContext.closePath(), !this._clipping && this._doFill && (this._pInst.fill(t4[l2 + 2][5]), this.drawingContext.fill()), !this._clipping && this._doStroke && (this._pInst.stroke(t4[l2 + 2][6]), this.drawingContext.stroke());
            else if (i2 === p.TRIANGLE_STRIP)
              for (l2 = 0;l2 + 1 < d2; l2++)
                a2 = t4[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t4[l2 + 1][0], t4[l2 + 1][1]), this.drawingContext.lineTo(a2[0], a2[1]), !this._clipping && this._doStroke && this._pInst.stroke(t4[l2 + 1][6]), !this._clipping && this._doFill && this._pInst.fill(t4[l2 + 1][5]), l2 + 2 < d2 && (this.drawingContext.lineTo(t4[l2 + 2][0], t4[l2 + 2][1]), !this._clipping && this._doStroke && this._pInst.stroke(t4[l2 + 2][6]), !this._clipping && this._doFill && this._pInst.fill(t4[l2 + 2][5])), this._doFillStrokeClose(c2);
            else if (i2 === p.TRIANGLE_FAN) {
              if (2 < d2) {
                for (this._clipping || this.drawingContext.beginPath(), l2 = 2;l2 < d2; l2++)
                  a2 = t4[l2], this.drawingContext.moveTo(t4[0][0], t4[0][1]), this.drawingContext.lineTo(t4[l2 - 1][0], t4[l2 - 1][1]), this.drawingContext.lineTo(a2[0], a2[1]), this.drawingContext.lineTo(t4[0][0], t4[0][1]), l2 < d2 - 1 && (this._doFill && a2[5] !== t4[l2 + 1][5] || this._doStroke && a2[6] !== t4[l2 + 1][6]) && (!this._clipping && this._doFill && (this._pInst.fill(a2[5]), this.drawingContext.fill(), this._pInst.fill(t4[l2 + 1][5])), !this._clipping && this._doStroke && (this._pInst.stroke(a2[6]), this.drawingContext.stroke(), this._pInst.stroke(t4[l2 + 1][6])), this.drawingContext.closePath(), this._clipping || this.drawingContext.beginPath());
                this._doFillStrokeClose(c2);
              }
            } else if (i2 === p.QUADS)
              for (l2 = 0;l2 + 3 < d2; l2 += 4) {
                for (a2 = t4[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(a2[0], a2[1]), u2 = 1;u2 < 4; u2++)
                  this.drawingContext.lineTo(t4[l2 + u2][0], t4[l2 + u2][1]);
                this.drawingContext.lineTo(a2[0], a2[1]), !this._clipping && this._doFill && this._pInst.fill(t4[l2 + 3][5]), !this._clipping && this._doStroke && this._pInst.stroke(t4[l2 + 3][6]), this._doFillStrokeClose(c2);
              }
            else if (i2 === p.QUAD_STRIP) {
              if (3 < d2)
                for (l2 = 0;l2 + 1 < d2; l2 += 2)
                  a2 = t4[l2], this._clipping || this.drawingContext.beginPath(), l2 + 3 < d2 ? (this.drawingContext.moveTo(t4[l2 + 2][0], t4[l2 + 2][1]), this.drawingContext.lineTo(a2[0], a2[1]), this.drawingContext.lineTo(t4[l2 + 1][0], t4[l2 + 1][1]), this.drawingContext.lineTo(t4[l2 + 3][0], t4[l2 + 3][1]), !this._clipping && this._doFill && this._pInst.fill(t4[l2 + 3][5]), !this._clipping && this._doStroke && this._pInst.stroke(t4[l2 + 3][6])) : (this.drawingContext.moveTo(a2[0], a2[1]), this.drawingContext.lineTo(t4[l2 + 1][0], t4[l2 + 1][1])), this._doFillStrokeClose(c2);
            } else {
              for (this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t4[0][0], t4[0][1]), l2 = 1;l2 < d2; l2++)
                (a2 = t4[l2]).isVert && (a2.moveTo ? (c2 && this.drawingContext.closePath(), this.drawingContext.moveTo(a2[0], a2[1])) : this.drawingContext.lineTo(a2[0], a2[1]));
              this._doFillStrokeClose(c2);
            }
            s3 = n3 = o3 = r4 = false, c2 && t4.pop();
          }
          return this;
        } }, { key: "strokeCap", value: function(e4) {
          return e4 !== p.ROUND && e4 !== p.SQUARE && e4 !== p.PROJECT || (this.drawingContext.lineCap = e4), this;
        } }, { key: "strokeJoin", value: function(e4) {
          return e4 !== p.ROUND && e4 !== p.BEVEL && e4 !== p.MITER || (this.drawingContext.lineJoin = e4), this;
        } }, { key: "strokeWeight", value: function(e4) {
          return this.drawingContext.lineWidth = e4 === undefined || e4 === 0 ? 0.0001 : e4, this;
        } }, { key: "_getFill", value: function() {
          return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
        } }, { key: "_setFill", value: function(e4) {
          e4 !== this._cachedFillStyle && (this.drawingContext.fillStyle = e4, this._cachedFillStyle = e4);
        } }, { key: "_getStroke", value: function() {
          return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
        } }, { key: "_setStroke", value: function(e4) {
          e4 !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e4, this._cachedStrokeStyle = e4);
        } }, { key: "bezier", value: function(e4, t4, r4, o3, n3, s3, i2, a2) {
          return this._pInst.beginShape(), this._pInst.vertex(e4, t4), this._pInst.bezierVertex(r4, o3, n3, s3, i2, a2), this._pInst.endShape(), this;
        } }, { key: "curve", value: function(e4, t4, r4, o3, n3, s3, i2, a2) {
          return this._pInst.beginShape(), this._pInst.curveVertex(e4, t4), this._pInst.curveVertex(r4, o3), this._pInst.curveVertex(n3, s3), this._pInst.curveVertex(i2, a2), this._pInst.endShape(), this;
        } }, { key: "_doFillStrokeClose", value: function(e4) {
          e4 && this.drawingContext.closePath(), !this._clipping && this._doFill && this.drawingContext.fill(), !this._clipping && this._doStroke && this.drawingContext.stroke();
        } }, { key: "applyMatrix", value: function(e4, t4, r4, o3, n3, s3) {
          this.drawingContext.transform(e4, t4, r4, o3, n3, s3);
        } }, { key: "resetMatrix", value: function() {
          return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
        } }, { key: "rotate", value: function(e4) {
          this.drawingContext.rotate(e4);
        } }, { key: "scale", value: function(e4, t4) {
          return this.drawingContext.scale(e4, t4), this;
        } }, { key: "translate", value: function(e4, t4) {
          return e4 instanceof d.default.Vector && (t4 = e4.y, e4 = e4.x), this.drawingContext.translate(e4, t4), this;
        } }, { key: "_renderText", value: function(e4, t4, r4, o3, n3, s3) {
          if (!(o3 < s3 || n3 <= o3))
            return e4.push(), this._isOpenType() ? this._textFont._renderPath(t4, r4, o3, { renderer: this }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t4, r4, o3), !this._clipping && this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t4, r4, o3))), e4.pop(), e4;
        } }, { key: "textWidth", value: function(e4) {
          return this._isOpenType() ? this._textFont._textWidth(e4, this._textSize) : this.drawingContext.measureText(e4).width;
        } }, { key: "_applyTextProperties", value: function() {
          var e4, t4 = this._pInst;
          return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e4 = this._textFont, this._isOpenType() && (e4 = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(e4 || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t4;
        } }, { key: "push", value: function() {
          return this.drawingContext.save(), l(h(n2.prototype), "push", this).call(this);
        } }, { key: "pop", value: function(e4) {
          this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, l(h(n2.prototype), "pop", this).call(this, e4);
        } }]) && s2(t3.prototype, e3), r3 && s2(t3, r3), n2;
      }(d.default.Renderer), e2 = (n.prototype.text = function(e3, t3, r3, o2, n2) {
        o2 !== undefined && this.drawingContext.textBaseline === p.BASELINE && (s3 = true, this.drawingContext.textBaseline = p.TOP);
        var s3, o2 = d.default.Renderer.prototype.text.apply(this, arguments);
        return s3 && (this.drawingContext.textBaseline = p.BASELINE), o2;
      }, d.default.Renderer2D = n, d.default.Renderer2D);
      r2.default = e2;
    }, { "./constants": 264, "./main": 275, "./p5.Renderer": 278, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.slice": 165, "core-js/modules/es.function.name": 168, "core-js/modules/es.number.to-fixed": 175, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.reflect.get": 185, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 280: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator");
      var h = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      h.default.prototype._promisePreloads = [];
      function o() {
        return {};
      }
      var f = !(h.default.prototype.registerPromisePreload = function(e3) {
        h.default.prototype._promisePreloads.push(e3);
      });
      h.default.prototype._setupPromisePreloads = function() {
        var e3 = true, t3 = false, r3 = undefined;
        try {
          for (var o2, n = this._promisePreloads[Symbol.iterator]();!(e3 = (o2 = n.next()).done); e3 = true) {
            var s2 = o2.value, i = this, a = s2.method, l = s2.addCallbacks, u = s2.legacyPreloadSetup, c = s2.target || this, d = c[a].bind(c);
            if (c === h.default.prototype) {
              if (f)
                continue;
              i = null, d = c[a];
            }
            c[a] = this._wrapPromisePreload(i, d, l), u && (c[u.method] = this._legacyPreloadGenerator(i, u, c[a]));
          }
        } catch (e4) {
          t3 = true, r3 = e4;
        } finally {
          try {
            e3 || n.return == null || n.return();
          } finally {
            if (t3)
              throw r3;
          }
        }
        f = true;
      }, h.default.prototype._wrapPromisePreload = function(e3, l, u) {
        var t3 = function() {
          for (var e4 = this, t4 = (this._incrementPreload(), null), r3 = null, o2 = arguments.length, n = new Array(o2), s2 = 0;s2 < o2; s2++)
            n[s2] = arguments[s2];
          if (u)
            for (var i = n.length - 1;0 <= i && !r3 && typeof n[i] == "function"; i--)
              r3 = t4, t4 = n.pop();
          var a = Promise.resolve(l.apply(this, n));
          return t4 && a.then(t4), r3 && a.catch(r3), a.then(function() {
            return e4._decrementPreload();
          }), a;
        };
        return t3 = e3 ? t3.bind(e3) : t3;
      };
      h.default.prototype._legacyPreloadGenerator = function(e3, t3, s2) {
        var i = t3.createBaseObject || o, t3 = function() {
          var t4 = this;
          this._incrementPreload();
          for (var e4 = arguments.length, r3 = new Array(e4), o2 = 0;o2 < e4; o2++)
            r3[o2] = arguments[o2];
          var n = i.apply(this, r3);
          return s2.apply(this, r3).then(function(e5) {
            Object.assign(n, e5), t4._decrementPreload();
          }), n;
        };
        return t3 = e3 ? t3.bind(e3) : t3;
      };
    }, { "./main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 281: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = (n = e2("./main")) && n.__esModule ? n : { default: n }, u = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || a(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = i();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("./constants"));
      function i() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, i = function() {
          return e3;
        }, e3);
      }
      function a(e3) {
        return (a = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("./p5.Graphics"), e2("./p5.Renderer2D"), e2("../webgl/p5.RendererGL");
      var c = "defaultCanvas0", n = (l.default.prototype.createCanvas = function(e3, t3, r3, o2) {
        var n2, s2, i2;
        if (l.default._validateParameters("createCanvas", arguments), arguments[2] instanceof HTMLCanvasElement ? (r3 = u.P2D, o2 = arguments[2]) : n2 = r3 || u.P2D, o2)
          (i2 = document.getElementById(c)) && i2.parentNode.removeChild(i2), i2 = o2, this._defaultGraphicsCreated = false;
        else {
          if (n2 === u.WEBGL)
            (i2 = document.getElementById(c)) && (i2.parentNode.removeChild(i2), s2 = this._renderer, this._elements = this._elements.filter(function(e4) {
              return e4 !== s2;
            })), (i2 = document.createElement("canvas")).id = c, i2.classList.add("p5Canvas");
          else if (this._defaultGraphicsCreated)
            i2 = this.canvas;
          else {
            i2 = o2 || document.createElement("canvas");
            for (var a2 = 0;document.getElementById("defaultCanvas".concat(a2)); )
              a2++;
            c = "defaultCanvas".concat(a2), i2.id = c, i2.classList.add("p5Canvas");
          }
          this._setupDone || (i2.dataset.hidden = true, i2.style.visibility = "hidden"), (this._userNode || (document.getElementsByTagName("main").length === 0 && (r3 = document.createElement("main"), document.body.appendChild(r3)), document.getElementsByTagName("main")[0])).appendChild(i2);
        }
        return n2 === u.WEBGL ? (this._setProperty("_renderer", new l.default.RendererGL(i2, this, true)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new l.default.Renderer2D(i2, this, true)), this._defaultGraphicsCreated = true, this._elements.push(this._renderer)), this._renderer.resize(e3, t3), this._renderer._applyDefaults(), this._renderer;
      }, l.default.prototype.resizeCanvas = function(e3, t3, r3) {
        if (l.default._validateParameters("resizeCanvas", arguments), this._renderer) {
          var o2, n2, s2 = {};
          for (o2 in this.drawingContext) {
            var i2 = this.drawingContext[o2];
            a(i2) !== "object" && typeof i2 != "function" && (s2[o2] = i2);
          }
          for (n2 in this.width = e3, this.height = t3, this._renderer.resize(e3, t3), s2)
            try {
              this.drawingContext[n2] = s2[n2];
            } catch (e4) {
            }
          r3 || this.redraw();
        }
        this._addAccsOutput() && this._updateAccsOutput();
      }, l.default.prototype.noCanvas = function() {
        this.canvas && this.canvas.parentNode.removeChild(this.canvas);
      }, l.default.prototype.createGraphics = function(e3, t3) {
        for (var r3 = arguments.length, o2 = new Array(2 < r3 ? r3 - 2 : 0), n2 = 2;n2 < r3; n2++)
          o2[n2 - 2] = arguments[n2];
        return o2[0] instanceof HTMLCanvasElement && (o2[1] = o2[0], o2[0] = u.P2D), l.default._validateParameters("createGraphics", arguments), new l.default.Graphics(e3, t3, o2[0], this, o2[1]);
      }, l.default.prototype.createFramebuffer = function(e3) {
        return new l.default.Framebuffer(this, e3);
      }, l.default.prototype.blendMode = function(e3) {
        l.default._validateParameters("blendMode", arguments), e3 === u.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e3 = u.BLEND), this._renderer.blendMode(e3);
      }, l.default);
      r2.default = n;
    }, { "../webgl/p5.RendererGL": 332, "./constants": 264, "./main": 275, "./p5.Graphics": 277, "./p5.Renderer2D": 279, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 282: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = n(e2("../main")), a = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = c();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../constants")), u = n(e2("../helpers"));
      function c() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, c = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      e2("../friendly_errors/fes_core"), e2("../friendly_errors/file_errors"), e2("../friendly_errors/validate_params"), l.default.prototype._normalizeArcAngles = function(e3, t3, r3, o2, n2) {
        var s3;
        return e3 -= a.TWO_PI * Math.floor(e3 / a.TWO_PI), t3 -= a.TWO_PI * Math.floor(t3 / a.TWO_PI), s3 = Math.min(Math.abs(e3 - t3), a.TWO_PI - Math.abs(e3 - t3)), n2 && (e3 = e3 <= a.HALF_PI ? Math.atan(r3 / o2 * Math.tan(e3)) : e3 > a.HALF_PI && e3 <= 3 * a.HALF_PI ? Math.atan(r3 / o2 * Math.tan(e3)) + a.PI : Math.atan(r3 / o2 * Math.tan(e3)) + a.TWO_PI, t3 = t3 <= a.HALF_PI ? Math.atan(r3 / o2 * Math.tan(t3)) : t3 > a.HALF_PI && t3 <= 3 * a.HALF_PI ? Math.atan(r3 / o2 * Math.tan(t3)) + a.PI : Math.atan(r3 / o2 * Math.tan(t3)) + a.TWO_PI), t3 < e3 && (t3 += a.TWO_PI), { start: e3, stop: t3, correspondToSamePoint: s3 < 0.00001 };
      }, l.default.prototype.arc = function(e3, t3, r3, o2, n2, s3, i2, a2) {
        return l.default._validateParameters("arc", arguments), (this._renderer._doStroke || this._renderer._doFill) && n2 !== s3 && (n2 = this._toRadians(n2), s3 = this._toRadians(s3), r3 = Math.abs(r3), o2 = Math.abs(o2), e3 = u.default.modeAdjust(e3, t3, r3, o2, this._renderer._ellipseMode), (t3 = this._normalizeArcAngles(n2, s3, e3.w, e3.h, true)).correspondToSamePoint ? this._renderer.ellipse([e3.x, e3.y, e3.w, e3.h, a2]) : (this._renderer.arc(e3.x, e3.y, e3.w, e3.h, t3.start, t3.stop, i2, a2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [e3.x, e3.y, e3.w, e3.h, t3.start, t3.stop, i2]))), this;
      }, l.default.prototype.ellipse = function(e3, t3, r3, o2, n2) {
        return l.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
      }, l.default.prototype.circle = function() {
        l.default._validateParameters("circle", arguments);
        var e3 = Array.prototype.slice.call(arguments, 0, 2);
        return e3.push(arguments[2]), e3.push(arguments[2]), this._renderEllipse.apply(this, s2(e3));
      }, l.default.prototype._renderEllipse = function(e3, t3, r3, o2, n2) {
        return (this._renderer._doStroke || this._renderer._doFill) && (r3 < 0 && (r3 = Math.abs(r3)), o2 === undefined ? o2 = r3 : o2 < 0 && (o2 = Math.abs(o2)), e3 = u.default.modeAdjust(e3, t3, r3, o2, this._renderer._ellipseMode), this._renderer.ellipse([e3.x, e3.y, e3.w, e3.h, n2]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [e3.x, e3.y, e3.w, e3.h])), this;
      }, l.default.prototype.line = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return l.default._validateParameters("line", r3), this._renderer._doStroke && (e3 = this._renderer).line.apply(e3, r3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", r3), this;
      }, l.default.prototype.point = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return l.default._validateParameters("point", r3), this._renderer._doStroke && (r3.length === 1 && r3[0] instanceof l.default.Vector ? this._renderer.point.call(this._renderer, r3[0].x, r3[0].y, r3[0].z) : ((e3 = this._renderer).point.apply(e3, r3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", r3))), this;
      }, l.default.prototype.quad = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return l.default._validateParameters("quad", r3), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && r3.length < 12 ? this._renderer.quad.call(this._renderer, r3[0], r3[1], 0, r3[2], r3[3], 0, r3[4], r3[5], 0, r3[6], r3[7], 0, r3[8], r3[9]) : ((e3 = this._renderer).quad.apply(e3, r3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", r3))), this;
      }, l.default.prototype.rect = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return l.default._validateParameters("rect", t3), this._renderRect.apply(this, t3);
      }, l.default.prototype.square = function(e3, t3, r3, o2, n2, s3, i2) {
        return l.default._validateParameters("square", arguments), this._renderRect.call(this, e3, t3, r3, r3, o2, n2, s3, i2);
      }, l.default.prototype._renderRect = function() {
        if (this._renderer._doStroke || this._renderer._doFill) {
          arguments.length === 3 && (arguments[3] = arguments[2]);
          for (var e3 = u.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t3 = [e3.x, e3.y, e3.w, e3.h], r3 = 4;r3 < arguments.length; r3++)
            t3[r3] = arguments[r3];
          this._renderer.rect(t3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [e3.x, e3.y, e3.w, e3.h]);
        }
        return this;
      }, l.default.prototype.triangle = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return l.default._validateParameters("triangle", t3), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t3), this;
      };
      e2 = l.default;
      r2.default = e2;
    }, { "../constants": 264, "../friendly_errors/fes_core": 266, "../friendly_errors/file_errors": 267, "../friendly_errors/validate_params": 270, "../helpers": 271, "../main": 275, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 283: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (l = e2("../main")) && l.__esModule ? l : { default: l }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      n.default.prototype.ellipseMode = function(e3) {
        return n.default._validateParameters("ellipseMode", arguments), e3 !== s2.CORNER && e3 !== s2.CORNERS && e3 !== s2.RADIUS && e3 !== s2.CENTER || (this._renderer._ellipseMode = e3), this;
      }, n.default.prototype.noSmooth = function() {
        return this._renderer.isP3D ? this.setAttributes("antialias", false) : ("imageSmoothingEnabled" in this.drawingContext) && (this.drawingContext.imageSmoothingEnabled = false), this;
      }, n.default.prototype.rectMode = function(e3) {
        return n.default._validateParameters("rectMode", arguments), e3 !== s2.CORNER && e3 !== s2.CORNERS && e3 !== s2.RADIUS && e3 !== s2.CENTER || (this._renderer._rectMode = e3), this;
      }, n.default.prototype.smooth = function() {
        return this.setAttributes("antialias", true), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = true), this;
      }, n.default.prototype.strokeCap = function(e3) {
        return n.default._validateParameters("strokeCap", arguments), e3 !== s2.ROUND && e3 !== s2.SQUARE && e3 !== s2.PROJECT || this._renderer.strokeCap(e3), this;
      }, n.default.prototype.strokeJoin = function(e3) {
        return n.default._validateParameters("strokeJoin", arguments), e3 !== s2.ROUND && e3 !== s2.BEVEL && e3 !== s2.MITER || this._renderer.strokeJoin(e3), this;
      }, n.default.prototype.strokeWeight = function(e3) {
        return n.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e3), this;
      };
      var l = n.default;
      r2.default = l;
    }, { "../constants": 264, "../main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 284: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = (o = e2("../main")) && o.__esModule ? o : { default: o };
      e2("../friendly_errors/fes_core"), e2("../friendly_errors/file_errors"), e2("../friendly_errors/validate_params"), l.default.prototype.bezier = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return l.default._validateParameters("bezier", r3), (this._renderer._doStroke || this._renderer._doFill) && (e3 = this._renderer).bezier.apply(e3, r3), this;
      }, l.default.prototype.bezierDetail = function(e3) {
        return l.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e3, this;
      }, l.default.prototype.bezierPoint = function(e3, t3, r3, o2, n) {
        l.default._validateParameters("bezierPoint", arguments);
        var s2 = 1 - n;
        return Math.pow(s2, 3) * e3 + 3 * Math.pow(s2, 2) * n * t3 + 3 * s2 * Math.pow(n, 2) * r3 + Math.pow(n, 3) * o2;
      }, l.default.prototype.bezierTangent = function(e3, t3, r3, o2, n) {
        l.default._validateParameters("bezierTangent", arguments);
        var s2 = 1 - n;
        return 3 * o2 * Math.pow(n, 2) - 3 * r3 * Math.pow(n, 2) + 6 * r3 * s2 * n - 6 * t3 * s2 * n + 3 * t3 * Math.pow(s2, 2) - 3 * e3 * Math.pow(s2, 2);
      }, l.default.prototype.curve = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return l.default._validateParameters("curve", r3), this._renderer._doStroke && (e3 = this._renderer).curve.apply(e3, r3), this;
      }, l.default.prototype.curveDetail = function(e3) {
        return l.default._validateParameters("curveDetail", arguments), this._curveDetail = e3 < 3 ? 3 : e3, this;
      }, l.default.prototype.curveTightness = function(e3) {
        return l.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e3, this;
      }, l.default.prototype.curvePoint = function(e3, t3, r3, o2, n) {
        l.default._validateParameters("curvePoint", arguments);
        var s2 = this._renderer._curveTightness, i = n * n * n, a = n * n;
        return e3 * ((s2 - 1) / 2 * i + (1 - s2) * a + (s2 - 1) / 2 * n) + t3 * ((s2 + 3) / 2 * i + (-5 - s2) / 2 * a + 1) + r3 * ((-3 - s2) / 2 * i + (s2 + 2) * a + (1 - s2) / 2 * n) + o2 * ((1 - s2) / 2 * i + (s2 - 1) / 2 * a);
      }, l.default.prototype.curveTangent = function(e3, t3, r3, o2, n) {
        l.default._validateParameters("curveTangent", arguments);
        var s2 = this._renderer._curveTightness, i = n * n * 3, n = 2 * n;
        return e3 * ((s2 - 1) / 2 * i + (1 - s2) * n + (s2 - 1) / 2) + t3 * ((s2 + 3) / 2 * i + (-5 - s2) / 2 * n) + r3 * ((-3 - s2) / 2 * i + (s2 + 2) * n + (1 - s2) / 2) + o2 * ((1 - s2) / 2 * i + (s2 - 1) / 2 * n);
      };
      var o = l.default;
      r2.default = o;
    }, { "../friendly_errors/fes_core": 266, "../friendly_errors/file_errors": 267, "../friendly_errors/validate_params": 270, "../main": 275 }], 285: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var a = (y = e2("../main")) && y.__esModule ? y : { default: y }, l = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = u();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../constants"));
      function u() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, u = function() {
          return e3;
        }, e3);
      }
      var n = null, c = [], d = [], h = false, s2 = false, f = false, p = false, m = true, y = (a.default.prototype.beginContour = function() {
        return this._renderer.isP3D ? this._renderer.beginContour() : (d = [], p = true), this;
      }, a.default.prototype.beginShape = function(e3) {
        var t3;
        return a.default._validateParameters("beginShape", arguments), this._renderer.isP3D ? (t3 = this._renderer).beginShape.apply(t3, arguments) : (n = e3 === l.POINTS || e3 === l.LINES || e3 === l.TRIANGLES || e3 === l.TRIANGLE_FAN || e3 === l.TRIANGLE_STRIP || e3 === l.QUADS || e3 === l.QUAD_STRIP ? e3 : null, c = [], d = []), this;
      }, a.default.prototype.bezierVertex = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        if (a.default._validateParameters("bezierVertex", r3), this._renderer.isP3D)
          (e3 = this._renderer).bezierVertex.apply(e3, r3);
        else if (c.length === 0)
          a.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
        else {
          h = true;
          for (var n2 = [], s3 = 0;s3 < r3.length; s3++)
            n2[s3] = r3[s3];
          n2.isVert = false, (p ? d : c).push(n2);
        }
        return this;
      }, a.default.prototype.curveVertex = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        return a.default._validateParameters("curveVertex", r3), this._renderer.isP3D ? (e3 = this._renderer).curveVertex.apply(e3, r3) : (s2 = true, this.vertex(r3[0], r3[1])), this;
      }, a.default.prototype.endContour = function() {
        if (!this._renderer.isP3D) {
          var e3 = d[0].slice();
          e3.isVert = d[0].isVert, e3.moveTo = false, d.push(e3), m && (c.push(c[0]), m = false);
          for (var t3 = 0;t3 < d.length; t3++)
            c.push(d[t3]);
        }
        return this;
      }, a.default.prototype.endShape = function(e3) {
        var t3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 1;
        if (a.default._validateParameters("endShape", arguments), t3 < 1 && (console.log("\uD83C\uDF38 p5.js says: You can not have less than one instance"), t3 = 1), this._renderer.isP3D)
          this._renderer.endShape(e3, s2, h, f, p, n, t3);
        else {
          if (t3 !== 1 && console.log("\uD83C\uDF38 p5.js says: Instancing is only supported in WebGL2 mode"), c.length === 0)
            return this;
          if (!this._renderer._doStroke && !this._renderer._doFill)
            return this;
          t3 = e3 === l.CLOSE;
          t3 && !p && c.push(c[0]), this._renderer.endShape(e3, c, s2, h, f, p, n), m = !(p = f = h = s2 = false), t3 && c.pop();
        }
        return this;
      }, a.default.prototype.quadraticVertex = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        if (a.default._validateParameters("quadraticVertex", r3), this._renderer.isP3D)
          (e3 = this._renderer).quadraticVertex.apply(e3, r3);
        else {
          if (this._contourInited)
            return (e3 = {}).x = r3[0], e3.y = r3[1], e3.x3 = r3[2], e3.y3 = r3[3], e3.type = l.QUADRATIC, this._contourVertices.push(e3), this;
          if (0 < c.length) {
            f = true;
            for (var n2 = [], s3 = 0;s3 < r3.length; s3++)
              n2[s3] = r3[s3];
            n2.isVert = false, (p ? d : c).push(n2);
          } else
            a.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
        }
        return this;
      }, a.default.prototype.vertex = function(e3, t3, r3, o2, n2) {
        var s3;
        return this._renderer.isP3D ? (s3 = this._renderer).vertex.apply(s3, arguments) : ((s3 = []).isVert = true, s3[0] = e3, s3[1] = t3, s3[2] = 0, s3[3] = 0, s3[4] = 0, s3[5] = this._renderer._getFill(), s3[6] = this._renderer._getStroke(), r3 && (s3.moveTo = r3), (p ? (d.length === 0 && (s3.moveTo = true), d) : c).push(s3)), this;
      }, a.default.prototype.normal = function(e3, t3, r3) {
        var o2;
        return this._assert3d("normal"), a.default._validateParameters("normal", arguments), (o2 = this._renderer).normal.apply(o2, arguments), this;
      }, a.default);
      r2.default = y;
    }, { "../constants": 264, "../main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 286: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function a(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function n(e3) {
        return (n = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      var l, u, c;
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e3, t3) {
        window.setTimeout(e3, 1000 / 60);
      }, typeof Uint8ClampedArray == "undefined" || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", { value: Array.prototype.slice, writable: true, configurable: true, enumerable: false }), Object.assign || (l = Object.keys, e2 = Object.defineProperty, u = typeof Symbol == "function" && n(Symbol()) === "symbol", c = Object.prototype.propertyIsEnumerable, e2(Object, "assign", { value: function(e3, t3) {
        if (e3 == null)
          throw new TypeError("target must be an object");
        for (var r3, o2 = Object(e3), n2 = 1;n2 < arguments.length; ++n2) {
          var s2 = Object(arguments[n2]), i = l(s2);
          for (u && Object.getOwnPropertySymbols && i.push.apply(i, a(Object.getOwnPropertySymbols(s2).filter(function(t4) {
            return function(e4) {
              return c.call(t4, e4);
            };
          }(s2)))), r3 = 0;r3 < i.length; ++r3)
            o2[i[r3]] = s2[i[r3]];
        }
        return o2;
      }, configurable: true, enumerable: false, writable: true }));
    }, { "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-clamped-array": 235, "core-js/modules/web.dom-collections.iterator": 238 }], 287: [function(e2, t2, r2) {
      e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.assign"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.noLoop = function() {
        this._loop = false;
      }, e2.default.prototype.loop = function() {
        this._loop || (this._loop = true, this._setupDone && this._draw());
      }, e2.default.prototype.isLooping = function() {
        return this._loop;
      }, e2.default.prototype.push = function() {
        this._styles.push({ props: { _colorMode: this._colorMode }, renderer: this._renderer.push() });
      }, e2.default.prototype.pop = function() {
        var e3 = this._styles.pop();
        e3 ? (this._renderer.pop(e3.renderer), Object.assign(this, e3.props)) : console.warn("pop() was called without matching push()");
      }, e2.default.prototype.redraw = function(e3) {
        if (!this._inUserDraw && this._setupDone) {
          var t3 = parseInt(e3), r3 = ((isNaN(t3) || t3 < 1) && (t3 = 1), this._isGlobal ? window : this);
          if (typeof r3.draw == "function") {
            r3.setup === undefined && r3.scale(r3._pixelDensity, r3._pixelDensity);
            for (var o = 0;o < t3; o++) {
              r3.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r3._renderer.isP3D && r3._renderer._update(), r3._setProperty("frameCount", r3.frameCount + 1), this.callRegisteredHooksFor("pre"), this._inUserDraw = true;
              try {
                r3.draw();
              } finally {
                this._inUserDraw = false;
              }
              this.callRegisteredHooksFor("post");
            }
          }
        }
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "./main": 275, "core-js/modules/es.object.assign": 176 }], 288: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      function o(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      n.default.prototype.applyMatrix = function() {
        var e3 = (arguments.length <= 0 ? undefined : arguments[0]) instanceof Object.getPrototypeOf(Uint8Array);
        return Array.isArray(arguments.length <= 0 ? undefined : arguments[0]) || e3 ? (e3 = this._renderer).applyMatrix.apply(e3, o(arguments.length <= 0 ? undefined : arguments[0])) : (e3 = this._renderer).applyMatrix.apply(e3, arguments), this;
      }, n.default.prototype.resetMatrix = function() {
        return this._renderer.resetMatrix(), this;
      }, n.default.prototype.rotate = function(e3, t3) {
        return n.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e3), t3), this;
      }, n.default.prototype.rotateX = function(e3) {
        return this._assert3d("rotateX"), n.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e3)), this;
      }, n.default.prototype.rotateY = function(e3) {
        return this._assert3d("rotateY"), n.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e3)), this;
      }, n.default.prototype.rotateZ = function(e3) {
        return this._assert3d("rotateZ"), n.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e3)), this;
      }, n.default.prototype.scale = function(e3, t3, r3) {
        var o2;
        return n.default._validateParameters("scale", arguments), e3 instanceof n.default.Vector ? (e3 = (o2 = e3).x, t3 = o2.y, r3 = o2.z) : e3 instanceof Array && (e3 = (o2 = e3)[0], t3 = o2[1], r3 = o2[2] || 1), isNaN(t3) ? t3 = r3 = e3 : isNaN(r3) && (r3 = 1), this._renderer.scale.call(this._renderer, e3, t3, r3), this;
      }, n.default.prototype.shearX = function(e3) {
        n.default._validateParameters("shearX", arguments);
        e3 = this._toRadians(e3);
        return this._renderer.applyMatrix(1, 0, Math.tan(e3), 1, 0, 0), this;
      }, n.default.prototype.shearY = function(e3) {
        n.default._validateParameters("shearY", arguments);
        e3 = this._toRadians(e3);
        return this._renderer.applyMatrix(1, Math.tan(e3), 0, 1, 0, 0), this;
      }, n.default.prototype.translate = function(e3, t3, r3) {
        return n.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e3, t3, r3) : this._renderer.translate(e3, t3), this;
      };
      e2 = n.default;
      r2.default = e2;
    }, { "./main": 275, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/web.dom-collections.iterator": 238 }], 289: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator");
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      n.default.prototype.storeItem = function(e3, t3) {
        typeof e3 != "string" && console.log("The argument that you passed to storeItem() - ".concat(e3, " is not a string.")), e3.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e3, " must not end with 'p5TypeID'.")), t3 === undefined && console.log("You cannot store undefined variables using storeItem().");
        var r3 = i(t3);
        switch (r3) {
          case "number":
          case "boolean":
            t3 = t3.toString();
            break;
          case "object":
            t3 instanceof n.default.Color ? r3 = "p5.Color" : t3 instanceof n.default.Vector && (r3 = "p5.Vector", t3 = [t3.x, t3.y, t3.z]), t3 = JSON.stringify(t3);
        }
        localStorage.setItem(e3, t3);
        e3 = "".concat(e3, "p5TypeID");
        localStorage.setItem(e3, r3);
      }, n.default.prototype.getItem = function(e3) {
        var t3 = localStorage.getItem(e3), r3 = localStorage.getItem("".concat(e3, "p5TypeID"));
        if (r3 === undefined)
          console.log("Unable to determine type of item stored under ".concat(e3, "in local storage. Did you save the item with something other than setItem()?"));
        else if (t3 !== null)
          switch (r3) {
            case "number":
              t3 = parseFloat(t3);
              break;
            case "boolean":
              t3 = t3 === "true";
              break;
            case "object":
              t3 = JSON.parse(t3);
              break;
            case "p5.Color":
              t3 = JSON.parse(t3), t3 = this.color.apply(this, s2(t3.levels));
              break;
            case "p5.Vector":
              t3 = JSON.parse(t3), t3 = this.createVector.apply(this, s2(t3));
          }
        return t3;
      }, n.default.prototype.clearStorage = function() {
        localStorage.clear();
      }, n.default.prototype.removeItem = function(e3) {
        typeof e3 != "string" && console.log("The argument that you passed to removeItem() - ".concat(e3, " is not a string.")), localStorage.removeItem(e3), localStorage.removeItem("".concat(e3, "p5TypeID"));
      };
    }, { "../core/main": 275, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.ends-with": 190, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 290: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function n(e3) {
        return (n = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.object.keys"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function i(e3, t3) {
        if (typeof t3 != "function" && t3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && a(e3, t3);
      }
      function a(e3, t3) {
        return (a = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function l(r3) {
        return function() {
          var e3, t3 = u(r3), t3 = (e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = u(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments), this);
          if (!e3 || n(e3) !== "object" && typeof e3 != "function") {
            if (t3 !== undefined)
              return t3;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function u(e3) {
        return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function c(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function d(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function h(e3, t3, r3) {
        t3 && d(e3.prototype, t3), r3 && d(e3, r3);
      }
      s2.default.prototype.createStringDict = function(e3, t3) {
        return s2.default._validateParameters("createStringDict", arguments), new s2.default.StringDict(e3, t3);
      }, s2.default.prototype.createNumberDict = function(e3, t3) {
        return s2.default._validateParameters("createNumberDict", arguments), new s2.default.NumberDict(e3, t3);
      }, s2.default.TypedDict = function() {
        function r3(e3, t3) {
          return c(this, r3), e3 instanceof Object ? this.data = e3 : (this.data = {}, this.data[e3] = t3), this;
        }
        return h(r3, [{ key: "size", value: function() {
          return Object.keys(this.data).length;
        } }, { key: "hasKey", value: function(e3) {
          return this.data.hasOwnProperty(e3);
        } }, { key: "get", value: function(e3) {
          if (this.data.hasOwnProperty(e3))
            return this.data[e3];
          console.log("".concat(e3, " does not exist in this Dictionary"));
        } }, { key: "set", value: function(e3, t3) {
          this._validate(t3) ? this.data[e3] = t3 : console.log("Those values dont work for this dictionary type.");
        } }, { key: "_addObj", value: function(e3) {
          for (var t3 in e3)
            this.set(t3, e3[t3]);
        } }, { key: "create", value: function(e3, t3) {
          e3 instanceof Object && t3 === undefined ? this._addObj(e3) : e3 !== undefined ? this.set(e3, t3) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
        } }, { key: "clear", value: function() {
          this.data = {};
        } }, { key: "remove", value: function(e3) {
          if (!this.data.hasOwnProperty(e3))
            throw new Error("".concat(e3, " does not exist in this Dictionary"));
          delete this.data[e3];
        } }, { key: "print", value: function() {
          for (var e3 in this.data)
            console.log("key:".concat(e3, " value:").concat(this.data[e3]));
        } }, { key: "saveTable", value: function(e3) {
          var t3, r4 = "";
          for (t3 in this.data)
            r4 += "".concat(t3, ",").concat(this.data[t3], "\n");
          var o2 = new Blob([r4], { type: "text/csv" });
          s2.default.prototype.downloadFile(o2, e3 || "mycsv", "csv");
        } }, { key: "saveJSON", value: function(e3, t3) {
          s2.default.prototype.saveJSON(this.data, e3, t3);
        } }, { key: "_validate", value: function(e3) {
          return true;
        } }]), r3;
      }(), s2.default.StringDict = function() {
        i(n2, s2.default.TypedDict);
        var o2 = l(n2);
        function n2() {
          c(this, n2);
          for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
            t3[r3] = arguments[r3];
          return o2.call.apply(o2, [this].concat(t3));
        }
        return h(n2, [{ key: "_validate", value: function(e3) {
          return typeof e3 == "string";
        } }]), n2;
      }(), s2.default.NumberDict = function() {
        i(n2, s2.default.TypedDict);
        var o2 = l(n2);
        function n2() {
          c(this, n2);
          for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
            t3[r3] = arguments[r3];
          return o2.call.apply(o2, [this].concat(t3));
        }
        return h(n2, [{ key: "_validate", value: function(e3) {
          return typeof e3 == "number";
        } }, { key: "add", value: function(e3, t3) {
          this.data.hasOwnProperty(e3) ? this.data[e3] += t3 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "sub", value: function(e3, t3) {
          this.add(e3, -t3);
        } }, { key: "mult", value: function(e3, t3) {
          this.data.hasOwnProperty(e3) ? this.data[e3] *= t3 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "div", value: function(e3, t3) {
          this.data.hasOwnProperty(e3) ? this.data[e3] /= t3 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "_valueTest", value: function(e3) {
          if (Object.keys(this.data).length === 0)
            throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
          if (Object.keys(this.data).length === 1)
            return this.data[Object.keys(this.data)[0]];
          var t3, r3 = this.data[Object.keys(this.data)[0]];
          for (t3 in this.data)
            this.data[t3] * e3 < r3 * e3 && (r3 = this.data[t3]);
          return r3;
        } }, { key: "minValue", value: function() {
          return this._valueTest(1);
        } }, { key: "maxValue", value: function() {
          return this._valueTest(-1);
        } }, { key: "_keyTest", value: function(e3) {
          if (Object.keys(this.data).length === 0)
            throw new Error("Unable to use minValue on an empty NumberDict");
          if (Object.keys(this.data).length === 1)
            return Object.keys(this.data)[0];
          for (var t3 = Object.keys(this.data)[0], r3 = 1;r3 < Object.keys(this.data).length; r3++)
            Object.keys(this.data)[r3] * e3 < t3 * e3 && (t3 = Object.keys(this.data)[r3]);
          return t3;
        } }, { key: "minKey", value: function() {
          return this._keyTest(1);
        } }, { key: "maxKey", value: function() {
          return this._keyTest(-1);
        } }]), n2;
      }();
      e2 = s2.default.TypedDict;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 291: [function(t2, r2, o) {
      function n(e2) {
        return (n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      t2("core-js/modules/es.symbol"), t2("core-js/modules/es.symbol.description"), t2("core-js/modules/es.symbol.iterator"), t2("core-js/modules/es.array.every"), t2("core-js/modules/es.array.filter"), t2("core-js/modules/es.array.for-each"), t2("core-js/modules/es.array.from"), t2("core-js/modules/es.array.index-of"), t2("core-js/modules/es.array.iterator"), t2("core-js/modules/es.array.map"), t2("core-js/modules/es.array.slice"), t2("core-js/modules/es.array.splice"), t2("core-js/modules/es.function.name"), t2("core-js/modules/es.object.get-prototype-of"), t2("core-js/modules/es.object.to-string"), t2("core-js/modules/es.promise"), t2("core-js/modules/es.reflect.construct"), t2("core-js/modules/es.regexp.exec"), t2("core-js/modules/es.regexp.to-string"), t2("core-js/modules/es.string.iterator"), t2("core-js/modules/es.string.replace"), t2("core-js/modules/es.string.split"), t2("core-js/modules/es.string.trim"), t2("core-js/modules/web.dom-collections.for-each"), t2("core-js/modules/web.dom-collections.iterator"), t2("core-js/modules/web.url"), t2("core-js/modules/es.symbol"), t2("core-js/modules/es.symbol.description"), t2("core-js/modules/es.symbol.iterator"), t2("core-js/modules/es.array.every"), t2("core-js/modules/es.array.filter"), t2("core-js/modules/es.array.for-each"), t2("core-js/modules/es.array.from"), t2("core-js/modules/es.array.index-of"), t2("core-js/modules/es.array.iterator"), t2("core-js/modules/es.array.map"), t2("core-js/modules/es.array.slice"), t2("core-js/modules/es.array.splice"), t2("core-js/modules/es.function.name"), t2("core-js/modules/es.object.to-string"), t2("core-js/modules/es.promise"), t2("core-js/modules/es.regexp.exec"), t2("core-js/modules/es.regexp.to-string"), t2("core-js/modules/es.string.iterator"), t2("core-js/modules/es.string.replace"), t2("core-js/modules/es.string.split"), t2("core-js/modules/es.string.trim"), t2("core-js/modules/web.dom-collections.for-each"), t2("core-js/modules/web.dom-collections.iterator"), t2("core-js/modules/web.url"), Object.defineProperty(o, "__esModule", { value: true }), o.default = undefined;
      var f = (t2 = t2("../core/main")) && t2.__esModule ? t2 : { default: t2 };
      function s2(e2, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, o2.key, o2);
        }
      }
      function a(e2, t3, r3) {
        t3 && s2(e2.prototype, t3), r3 && s2(e2, r3);
      }
      function l(e2, t3) {
        return (l = Object.setPrototypeOf || function(e3, t4) {
          return e3.__proto__ = t4, e3;
        })(e2, t3);
      }
      function u(o2) {
        return function() {
          var e2, t3, r3 = i(o2);
          return e2 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e3) {
              }
            }
          }() ? (e2 = i(this).constructor, Reflect.construct(r3, arguments, e2)) : r3.apply(this, arguments), r3 = this, !(t3 = e2) || h(t3) !== "object" && typeof t3 != "function" ? c(r3) : t3;
        };
      }
      function c(e2) {
        if (e2 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e2;
      }
      function i(e2) {
        return (i = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
          return e3.__proto__ || Object.getPrototypeOf(e3);
        })(e2);
      }
      function d(e2, t3) {
        if (!(e2 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function h(e2) {
        return (h = typeof Symbol == "function" && n(Symbol.iterator) === "symbol" ? function(e3) {
          return n(e3);
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : n(e3);
        })(e2);
      }
      function p(e2, t3, r3) {
        (t3._userNode || document.body).appendChild(e2);
        r3 = new (r3 ? f.default.MediaElement : f.default.Element)(e2, t3);
        return t3._elements.push(r3), r3;
      }
      function m(e2, t3, r3, o2) {
        var n2 = document.createElement(t3), s3 = (typeof (r3 = r3 || "") == "string" && (r3 = [r3]), true), t3 = false, i2 = undefined;
        try {
          for (var a2, l2 = r3[Symbol.iterator]();!(s3 = (a2 = l2.next()).done); s3 = true) {
            var u2 = a2.value, c2 = document.createElement("source");
            c2.setAttribute("src", u2), n2.appendChild(c2);
          }
        } catch (e3) {
          t3 = true, i2 = e3;
        } finally {
          try {
            s3 || l2.return == null || l2.return();
          } finally {
            if (t3)
              throw i2;
          }
        }
        typeof o2 == "function" && n2.addEventListener("canplaythrough", function e() {
          o2(), n2.removeEventListener("canplaythrough", e);
        });
        var d2 = p(n2, e2, true);
        return d2.loadedmetadata = false, n2.addEventListener("loadedmetadata", function() {
          d2.width = n2.videoWidth, d2.height = n2.videoHeight, d2.elt.width === 0 && (d2.elt.width = n2.videoWidth), d2.elt.height === 0 && (d2.elt.height = n2.videoHeight), d2.presetPlaybackRate && (d2.elt.playbackRate = d2.presetPlaybackRate, delete d2.presetPlaybackRate), d2.loadedmetadata = true;
        }), d2;
      }
      f.default.prototype.select = function(e2, t3) {
        f.default._validateParameters("select", arguments);
        t3 = this._getContainer(t3).querySelector(e2);
        return t3 ? this._wrapElement(t3) : null;
      }, f.default.prototype.selectAll = function(e2, t3) {
        f.default._validateParameters("selectAll", arguments);
        var r3 = [], o2 = this._getContainer(t3).querySelectorAll(e2);
        if (o2)
          for (var n2 = 0;n2 < o2.length; n2++) {
            var s3 = this._wrapElement(o2[n2]);
            r3.push(s3);
          }
        return r3;
      }, f.default.prototype._getContainer = function(e2) {
        var t3 = document;
        return typeof e2 == "string" ? t3 = document.querySelector(e2) || document : e2 instanceof f.default.Element ? t3 = e2.elt : e2 instanceof HTMLElement && (t3 = e2), t3;
      }, f.default.prototype._wrapElement = function(e2) {
        var t3, r3 = Array.prototype.slice.call(e2.children);
        return e2.tagName === "INPUT" && e2.type === "checkbox" ? ((t3 = new f.default.Element(e2, this)).checked = function() {
          return arguments.length === 0 ? this.elt.checked : (this.elt.checked = !(arguments.length <= 0 || !arguments[0]), this);
        }, t3) : e2.tagName === "VIDEO" || e2.tagName === "AUDIO" ? new f.default.MediaElement(e2, this) : e2.tagName === "SELECT" ? this.createSelect(new f.default.Element(e2, this)) : 0 < r3.length && r3.every(function(e3) {
          return e3.tagName === "INPUT" || e3.tagName === "LABEL";
        }) ? this.createRadio(new f.default.Element(e2, this)) : new f.default.Element(e2, this);
      }, f.default.prototype.removeElements = function(e2) {
        f.default._validateParameters("removeElements", arguments);
        this._elements.filter(function(e3) {
          return !(e3.elt instanceof HTMLCanvasElement);
        }).map(function(e3) {
          return e3.remove();
        });
      }, f.default.Element.prototype.changed = function(e2) {
        return f.default.Element._adjustListener("change", e2, this), this;
      }, f.default.Element.prototype.input = function(e2) {
        return f.default.Element._adjustListener("input", e2, this), this;
      }, f.default.prototype.createDiv = function() {
        var e2 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : "", t3 = document.createElement("div");
        return t3.innerHTML = e2, p(t3, this);
      }, f.default.prototype.createP = function() {
        var e2 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : "", t3 = document.createElement("p");
        return t3.innerHTML = e2, p(t3, this);
      }, f.default.prototype.createSpan = function() {
        var e2 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : "", t3 = document.createElement("span");
        return t3.innerHTML = e2, p(t3, this);
      }, f.default.prototype.createImg = function() {
        f.default._validateParameters("createImg", arguments);
        var t3, r3 = document.createElement("img"), o2 = arguments;
        return 1 < o2.length && typeof o2[1] == "string" && (r3.alt = o2[1]), 2 < o2.length && typeof o2[2] == "string" && (r3.crossOrigin = o2[2]), r3.src = o2[0], t3 = p(r3, this), r3.addEventListener("load", function() {
          t3.width = r3.offsetWidth || r3.width, t3.height = r3.offsetHeight || r3.height;
          var e2 = o2[o2.length - 1];
          typeof e2 == "function" && e2(t3);
        }), t3;
      }, f.default.prototype.createA = function(e2, t3, r3) {
        f.default._validateParameters("createA", arguments);
        var o2 = document.createElement("a");
        return o2.href = e2, o2.innerHTML = t3, r3 && (o2.target = r3), p(o2, this);
      }, f.default.prototype.createSlider = function(e2, t3, r3, o2) {
        f.default._validateParameters("createSlider", arguments);
        var n2 = document.createElement("input");
        return n2.type = "range", n2.min = e2, n2.max = t3, o2 === 0 ? n2.step = 0.000000000000000001 : o2 && (n2.step = o2), typeof r3 == "number" && (n2.value = r3), p(n2, this);
      }, f.default.prototype.createButton = function(e2, t3) {
        f.default._validateParameters("createButton", arguments);
        var r3 = document.createElement("button");
        return r3.innerHTML = e2, t3 && (r3.value = t3), p(r3, this);
      }, f.default.prototype.createCheckbox = function() {
        for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0;r3 < e2; r3++)
          t3[r3] = arguments[r3];
        f.default._validateParameters("createCheckbox", t3);
        var o2 = document.createElement("div"), n2 = document.createElement("input"), s3 = (n2.type = "checkbox", document.createElement("label")), i2 = (s3.appendChild(n2), o2.appendChild(s3), p(o2, this));
        return i2.checked = function() {
          var e3 = i2.elt.firstElementChild.getElementsByTagName("input")[0];
          if (e3) {
            if (arguments.length === 0)
              return e3.checked;
            e3.checked = !(arguments.length <= 0 || !arguments[0]);
          }
          return i2;
        }, this.value = function(e3) {
          return i2.value = e3, this;
        }, t3[0] && (i2.value(t3[0]), (o2 = document.createElement("span")).innerHTML = t3[0], s3.appendChild(o2)), t3[1] && (n2.checked = true), i2;
      }, f.default.prototype.createSelect = function() {
        for (var e2, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        f.default._validateParameters("createSelect", r3);
        var n2, s3 = r3[0];
        return s3 instanceof f.default.Element && s3.elt instanceof HTMLSelectElement ? this.elt = (e2 = s3).elt : s3 instanceof HTMLSelectElement ? (e2 = p(s3, this), this.elt = s3) : (n2 = document.createElement("select"), s3 && typeof s3 == "boolean" && n2.setAttribute("multiple", "true"), e2 = p(n2, this), this.elt = n2), e2.option = function(e3, t4) {
          var r4;
          if (e3 !== undefined) {
            for (var o3, n3 = 0;n3 < this.elt.length; n3 += 1)
              if (this.elt[n3].textContent === e3) {
                r4 = n3;
                break;
              }
            r4 !== undefined ? t4 === false ? this.elt.remove(r4) : this.elt[r4].value = t4 : ((o3 = document.createElement("option")).textContent = e3, o3.value = t4 === undefined ? e3 : t4, this.elt.appendChild(o3), this._pInst._elements.push(o3));
          }
        }, e2.selected = function(e3) {
          if (e3 !== undefined) {
            for (var t4 = 0;t4 < this.elt.length; t4 += 1)
              this.elt[t4].value.toString() === e3.toString() && (this.elt.selectedIndex = t4);
            return this;
          }
          if (this.elt.getAttribute("multiple")) {
            var r4 = [], o3 = true, n3 = false, s4 = undefined;
            try {
              for (var i2, a2 = this.elt.selectedOptions[Symbol.iterator]();!(o3 = (i2 = a2.next()).done); o3 = true) {
                var l2 = i2.value;
                r4.push(l2.value);
              }
            } catch (e4) {
              n3 = true, s4 = e4;
            } finally {
              try {
                o3 || a2.return == null || a2.return();
              } finally {
                if (n3)
                  throw s4;
              }
            }
            return r4;
          }
          return this.elt.value;
        }, e2.disable = function(e3) {
          if (typeof e3 == "string")
            for (var t4 = 0;t4 < this.elt.length; t4++)
              this.elt[t4].value.toString() === e3 && (this.elt[t4].disabled = true, this.elt[t4].selected = false);
          else
            this.elt.disabled = true;
          return this;
        }, e2.enable = function(e3) {
          if (typeof e3 == "string")
            for (var t4 = 0;t4 < this.elt.length; t4++)
              this.elt[t4].value.toString() === e3 && (this.elt[t4].disabled = false, this.elt[t4].selected = false);
          else {
            this.elt.disabled = false;
            for (var r4 = 0;r4 < this.elt.length; r4++)
              this.elt[r4].disabled = false, this.elt[r4].selected = false;
          }
          return this;
        }, e2;
      }, f.default.prototype.createRadio = function() {
        function t3(e3) {
          return e3 instanceof HTMLInputElement && e3.type === "radio";
        }
        function d2(e3) {
          return e3 instanceof HTMLLabelElement;
        }
        var h2, e2, r3, o2 = arguments.length <= 0 ? undefined : arguments[0];
        o2 instanceof f.default.Element && (o2.elt instanceof HTMLDivElement || o2.elt instanceof HTMLSpanElement) ? (h2 = o2, this.elt = o2.elt) : o2 instanceof HTMLDivElement || o2 instanceof HTMLSpanElement ? (h2 = p(o2, this), e2 = this.elt = o2, typeof (arguments.length <= 1 ? undefined : arguments[1]) == "string" && (r3 = arguments.length <= 1 ? undefined : arguments[1])) : (typeof o2 == "string" && (r3 = o2), e2 = document.createElement("div"), h2 = p(e2, this), this.elt = e2), h2._name = r3 || "radioOption";
        return h2._getOptionsArray = function() {
          return Array.from(this.elt.children).filter(function(e3) {
            return t3(e3) || d2(e3) && t3(e3.firstElementChild);
          }).map(function(e3) {
            return t3(e3) ? e3 : e3.firstElementChild;
          });
        }, h2.option = function(e3, t4) {
          var r4, o3, n2, s3 = true, i2 = false, a2 = undefined;
          try {
            for (var l2, u2 = h2._getOptionsArray()[Symbol.iterator]();!(s3 = (l2 = u2.next()).done); s3 = true) {
              var c2 = l2.value;
              if (c2.value === e3) {
                r4 = c2;
                break;
              }
            }
          } catch (e4) {
            i2 = true, a2 = e4;
          } finally {
            try {
              s3 || u2.return == null || u2.return();
            } finally {
              if (i2)
                throw a2;
            }
          }
          return r4 === undefined && ((r4 = document.createElement("input")).setAttribute("type", "radio"), r4.setAttribute("value", e3)), r4.setAttribute("name", h2._name), d2(r4.parentElement) ? o3 = r4.parentElement : (o3 = document.createElement("label")).insertAdjacentElement("afterbegin", r4), o3.lastElementChild instanceof HTMLSpanElement ? n2 = o3.lastElementChild : (n2 = document.createElement("span"), r4.insertAdjacentElement("afterend", n2)), n2.innerHTML = t4 === undefined ? e3 : t4, this.elt.appendChild(o3), r4;
        }, h2.remove = function(e3) {
          var t4 = true, r4 = false, o3 = undefined;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i2 = n2.value;
              if (i2.value === e3)
                return void (d2(i2.parentElement) ? i2.parentElement : i2).remove();
            }
          } catch (e4) {
            r4 = true, o3 = e4;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o3;
            }
          }
        }, h2.value = function() {
          var e3 = "", t4 = true, r4 = false, o3 = undefined;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i2 = n2.value;
              if (i2.checked) {
                e3 = i2.value;
                break;
              }
            }
          } catch (e4) {
            r4 = true, o3 = e4;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o3;
            }
          }
          return e3;
        }, h2.selected = function(e3) {
          var t4 = null;
          if (e3 === undefined) {
            var r4 = true, o3 = false, n2 = undefined;
            try {
              for (var s3, i2 = h2._getOptionsArray()[Symbol.iterator]();!(r4 = (s3 = i2.next()).done); r4 = true) {
                var a2 = s3.value;
                if (a2.checked) {
                  t4 = a2;
                  break;
                }
              }
            } catch (e4) {
              o3 = true, n2 = e4;
            } finally {
              try {
                r4 || i2.return == null || i2.return();
              } finally {
                if (o3)
                  throw n2;
              }
            }
          } else {
            h2._getOptionsArray().forEach(function(e4) {
              e4.checked = false, e4.removeAttribute("checked");
            });
            var l2 = true, o3 = false, n2 = undefined;
            try {
              for (var u2, c2 = h2._getOptionsArray()[Symbol.iterator]();!(l2 = (u2 = c2.next()).done); l2 = true) {
                var d3 = u2.value;
                d3.value === e3 && (d3.setAttribute("checked", true), d3.checked = true, t4 = d3);
              }
            } catch (e4) {
              o3 = true, n2 = e4;
            } finally {
              try {
                l2 || c2.return == null || c2.return();
              } finally {
                if (o3)
                  throw n2;
              }
            }
          }
          return t4;
        }, h2.disable = function() {
          var e3 = !(0 < arguments.length && arguments[0] !== undefined) || arguments[0], t4 = true, r4 = false, o3 = undefined;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true)
              n2.value.setAttribute("disabled", e3);
          } catch (e4) {
            r4 = true, o3 = e4;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o3;
            }
          }
        }, h2;
      }, f.default.prototype.createColorPicker = function(e2) {
        f.default._validateParameters("createColorPicker", arguments);
        var t3 = document.createElement("input");
        return t3.type = "color", e2 ? e2 instanceof f.default.Color ? t3.value = e2.toString("#rrggbb") : (f.default.prototype._colorMode = "rgb", f.default.prototype._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, t3.value = f.default.prototype.color(e2).toString("#rrggbb")) : t3.value = "#000000", (t3 = p(t3, this)).color = function() {
          return e2 && (e2.mode && (f.default.prototype._colorMode = e2.mode), e2.maxes && (f.default.prototype._colorMaxes = e2.maxes)), f.default.prototype.color(this.elt.value);
        }, t3;
      }, f.default.prototype.createInput = function() {
        var e2 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : "", t3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : "text", r3 = (f.default._validateParameters("createInput", arguments), document.createElement("input"));
        return r3.setAttribute("value", e2), r3.setAttribute("type", t3), p(r3, this);
      }, f.default.prototype.createFileInput = function(a2) {
        var e2, t3 = 1 < arguments.length && arguments[1] !== undefined && arguments[1];
        f.default._validateParameters("createFileInput", arguments);
        if (window.File && window.FileReader && window.FileList && window.Blob)
          return (e2 = document.createElement("input")).setAttribute("type", "file"), t3 && e2.setAttribute("multiple", true), e2.addEventListener("change", function(e3) {
            var t4 = true, r3 = false, o2 = undefined;
            try {
              for (var n2, s3 = e3.target.files[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
                var i2 = n2.value;
                f.default.File._load(i2, a2);
              }
            } catch (e4) {
              r3 = true, o2 = e4;
            } finally {
              try {
                t4 || s3.return == null || s3.return();
              } finally {
                if (r3)
                  throw o2;
              }
            }
          }, false), p(e2, this);
        console.log("The File APIs are not fully supported in this browser. Cannot create element.");
      }, f.default.prototype.createVideo = function(e2, t3) {
        return f.default._validateParameters("createVideo", arguments), m(this, "video", e2, t3);
      }, f.default.prototype.createAudio = function(e2, t3) {
        return f.default._validateParameters("createAudio", arguments), m(this, "audio", e2, t3);
      }, f.default.prototype.VIDEO = "video", f.default.prototype.AUDIO = "audio", navigator.mediaDevices === undefined && (navigator.mediaDevices = {}), navigator.mediaDevices.getUserMedia === undefined && (navigator.mediaDevices.getUserMedia = function(r3) {
        var o2 = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        return o2 ? new Promise(function(e2, t3) {
          o2.call(navigator, r3, e2, t3);
        }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
      }), f.default.prototype.createCapture = function() {
        for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0;r3 < e2; r3++)
          t3[r3] = arguments[r3];
        if (f.default._validateParameters("createCapture", t3), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia)
          throw new DOMException("getUserMedia not supported in this browser");
        for (var o2, n2 = true, s3 = true, i2 = 0, a2 = t3;i2 < a2.length; i2++) {
          var l2 = a2[i2];
          l2 === f.default.prototype.VIDEO ? s3 = false : l2 === f.default.prototype.AUDIO ? n2 = false : h(l2) === "object" ? u2 = l2 : typeof l2 == "function" && (o2 = l2);
        }
        var u2 = u2 || { video: n2, audio: s3 }, c2 = document.createElement("video"), d2 = (c2.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(u2).then(function(t4) {
          try {
            "srcObject" in c2 ? c2.srcObject = t4 : c2.src = window.URL.createObjectURL(t4);
          } catch (e3) {
            c2.src = t4;
          }
        }, console.log), p(c2, this, true));
        return d2.loadedmetadata = false, c2.addEventListener("loadedmetadata", function() {
          c2.play(), c2.width ? (d2.width = c2.width, d2.height = c2.height) : (d2.width = d2.elt.width = c2.videoWidth, d2.height = d2.elt.height = c2.videoHeight), d2.loadedmetadata = true, o2 && o2(c2.srcObject);
        }), d2;
      }, f.default.prototype.createElement = function(e2, t3) {
        f.default._validateParameters("createElement", arguments);
        e2 = document.createElement(e2);
        return t3 !== undefined && (e2.innerHTML = t3), p(e2, this);
      }, f.default.Element.prototype.addClass = function(e2) {
        return this.elt.className ? this.hasClass(e2) || (this.elt.className = this.elt.className + " " + e2) : this.elt.className = e2, this;
      }, f.default.Element.prototype.removeClass = function(e2) {
        return this.elt.classList.remove(e2), this;
      }, f.default.Element.prototype.hasClass = function(e2) {
        return this.elt.classList.contains(e2);
      }, f.default.Element.prototype.toggleClass = function(e2) {
        return this.elt.classList.contains(e2) ? this.elt.classList.remove(e2) : this.elt.classList.add(e2), this;
      }, f.default.Element.prototype.child = function(e2) {
        return e2 === undefined ? this.elt.childNodes : (typeof e2 == "string" ? (e2[0] === "#" && (e2 = e2.substring(1)), e2 = document.getElementById(e2)) : e2 instanceof f.default.Element && (e2 = e2.elt), e2 instanceof HTMLElement && this.elt.appendChild(e2), this);
      }, f.default.Element.prototype.center = function(e2) {
        var t3 = this.elt.style.display, r3 = this.elt.style.display === "none", o2 = this.parent().style.display === "none", n2 = { x: this.elt.offsetLeft, y: this.elt.offsetTop }, s3 = (r3 && this.show(), o2 && this.parent().show(), this.elt.style.display = "block", this.position(0, 0), Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)), i2 = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
        return e2 === "both" || e2 === undefined ? this.position(s3 / 2 + this.parent().offsetLeft, i2 / 2 + this.parent().offsetTop) : e2 === "horizontal" ? this.position(s3 / 2 + this.parent().offsetLeft, n2.y) : e2 === "vertical" && this.position(n2.x, i2 / 2 + this.parent().offsetTop), this.style("display", t3), r3 && this.hide(), o2 && this.parent().hide(), this;
      }, f.default.Element.prototype.html = function() {
        return arguments.length === 0 ? this.elt.innerHTML : (arguments.length <= 1 || !arguments[1] ? this.elt.innerHTML = arguments.length <= 0 ? undefined : arguments[0] : this.elt.insertAdjacentHTML("beforeend", arguments.length <= 0 ? undefined : arguments[0]), this);
      }, f.default.Element.prototype.position = function() {
        return arguments.length === 0 ? { x: this.elt.offsetLeft, y: this.elt.offsetTop } : (this.elt.style.position = (arguments.length <= 2 ? undefined : arguments[2]) !== "static" && (arguments.length <= 2 ? undefined : arguments[2]) !== "fixed" && (arguments.length <= 2 ? undefined : arguments[2]) !== "relative" && (arguments.length <= 2 ? undefined : arguments[2]) !== "sticky" && (arguments.length <= 2 ? undefined : arguments[2]) !== "initial" && (arguments.length <= 2 ? undefined : arguments[2]) !== "inherit" ? "absolute" : arguments.length <= 2 ? undefined : arguments[2], this.elt.style.left = (arguments.length <= 0 ? undefined : arguments[0]) + "px", this.elt.style.top = (arguments.length <= 1 ? undefined : arguments[1]) + "px", this.x = arguments.length <= 0 ? undefined : arguments[0], this.y = arguments.length <= 1 ? undefined : arguments[1], this);
      }, f.default.Element.prototype._translate = function() {
        this.elt.style.position = "absolute";
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), arguments.length === 2 ? this.elt.style.transform = "translate(" + (arguments.length <= 0 ? undefined : arguments[0]) + "px, " + (arguments.length <= 1 ? undefined : arguments[1]) + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + (arguments.length <= 0 ? undefined : arguments[0]) + "px," + (arguments.length <= 1 ? undefined : arguments[1]) + "px," + (arguments.length <= 2 ? undefined : arguments[2]) + "px)", this.elt.parentElement.style.perspective = arguments.length === 3 ? "1000px" : (arguments.length <= 3 ? undefined : arguments[3]) + "px"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype._rotate = function() {
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), arguments.length === 1 ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? undefined : arguments[0]) + "deg)" : arguments.length === 2 ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? undefined : arguments[0]) + "deg, " + (arguments.length <= 1 ? undefined : arguments[1]) + "deg)" : arguments.length === 3 && (this.elt.style.transform = "rotateX(" + (arguments.length <= 0 ? undefined : arguments[0]) + "deg)", this.elt.style.transform += "rotateY(" + (arguments.length <= 1 ? undefined : arguments[1]) + "deg)", this.elt.style.transform += "rotateZ(" + (arguments.length <= 2 ? undefined : arguments[2]) + "deg)"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype.style = function(e2, t3) {
        if ((t3 = t3 instanceof f.default.Color ? "rgba(" + t3.levels[0] + "," + t3.levels[1] + "," + t3.levels[2] + "," + t3.levels[3] / 255 + ")" : t3) === undefined) {
          if (e2.indexOf(":") === -1)
            return window.getComputedStyle(this.elt).getPropertyValue(e2);
          for (var r3 = e2.split(";"), o2 = 0;o2 < r3.length; o2++) {
            var n2 = r3[o2].split(":");
            n2[0] && n2[1] && (this.elt.style[n2[0].trim()] = n2[1].trim());
          }
        } else
          this.elt.style[e2] = t3, e2 !== "width" && e2 !== "height" && e2 !== "left" && e2 !== "top" || (t3 = window.getComputedStyle(this.elt).getPropertyValue(e2).replace(/[^\d.]/g, ""), this[e2] = Math.round(parseFloat(t3, 10)));
        return this;
      }, f.default.Element.prototype.attribute = function(e2, t3) {
        if (this.elt.firstChild == null || this.elt.firstChild.type !== "checkbox" && this.elt.firstChild.type !== "radio")
          return t3 === undefined ? this.elt.getAttribute(e2) : (this.elt.setAttribute(e2, t3), this);
        if (t3 === undefined)
          return this.elt.firstChild.getAttribute(e2);
        for (var r3 = 0;r3 < this.elt.childNodes.length; r3++)
          this.elt.childNodes[r3].setAttribute(e2, t3);
      }, f.default.Element.prototype.removeAttribute = function(e2) {
        if (this.elt.firstChild != null && (this.elt.firstChild.type === "checkbox" || this.elt.firstChild.type === "radio"))
          for (var t3 = 0;t3 < this.elt.childNodes.length; t3++)
            this.elt.childNodes[t3].removeAttribute(e2);
        return this.elt.removeAttribute(e2), this;
      }, f.default.Element.prototype.value = function() {
        return 0 < arguments.length ? (this.elt.value = arguments.length <= 0 ? undefined : arguments[0], this) : this.elt.type === "range" ? parseFloat(this.elt.value) : this.elt.value;
      }, f.default.Element.prototype.show = function() {
        return this.elt.style.display = "block", this;
      }, f.default.Element.prototype.hide = function() {
        return this.elt.style.display = "none", this;
      }, f.default.Element.prototype.size = function(e2, t3) {
        if (arguments.length === 0)
          return { width: this.elt.offsetWidth, height: this.elt.offsetHeight };
        var r3 = e2, o2 = t3, n2 = f.default.prototype.AUTO;
        if (r3 !== n2 || o2 !== n2) {
          if (r3 === n2 ? r3 = t3 * this.width / this.height : o2 === n2 && (o2 = e2 * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
            var s3, i2 = {}, a2 = this.elt.getContext("2d");
            for (s3 in a2)
              i2[s3] = a2[s3];
            for (s3 in this.elt.setAttribute("width", r3 * this._pInst._pixelDensity), this.elt.setAttribute("height", o2 * this._pInst._pixelDensity), this.elt.style.width = r3 + "px", this.elt.style.height = o2 + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), i2)
              this.elt.getContext("2d")[s3] = i2[s3];
          } else
            this.elt.style.width = r3 + "px", this.elt.style.height = o2 + "px", this.elt.width = r3, this.elt.height = o2;
          this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), this._pInst._setProperty("height", this.elt.offsetHeight));
        }
        return this;
      }, f.default.Element.prototype.remove = function() {
        this instanceof f.default.MediaElement && (this.stop(), (t3 = this.elt.srcObject) !== null && t3.getTracks().forEach(function(e3) {
          e3.stop();
        }));
        var e2, t3 = this._pInst._elements.indexOf(this);
        for (e2 in t3 !== -1 && this._pInst._elements.splice(t3, 1), this._events)
          this.elt.removeEventListener(e2, this._events[e2]);
        this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
      }, f.default.Element.prototype.drop = function(a2, l2) {
        var e2;
        return window.File && window.FileReader && window.FileList && window.Blob ? (this._dragDisabled || (this._dragDisabled = true, this.elt.addEventListener("dragover", e2 = function(e3) {
          e3.preventDefault();
        }), this.elt.addEventListener("dragleave", e2)), f.default.Element._attachListener("drop", function(e3) {
          e3.preventDefault(), typeof l2 == "function" && l2.call(this, e3);
          var e3 = e3.dataTransfer.files, t3 = true, r3 = false, o2 = undefined;
          try {
            for (var n2, s3 = e3[Symbol.iterator]();!(t3 = (n2 = s3.next()).done); t3 = true) {
              var i2 = n2.value;
              f.default.File._load(i2, a2);
            }
          } catch (e4) {
            r3 = true, o2 = e4;
          } finally {
            try {
              t3 || s3.return == null || s3.return();
            } finally {
              if (r3)
                throw o2;
            }
          }
        }, this)) : console.log("The File APIs are not fully supported in this browser."), this;
      }, f.default.Element.prototype.draggable = function(r3) {
        var e2, o2 = "ontouchstart" in window, n2 = 0, s3 = 0, i2 = 0, a2 = 0, l2 = o2 ? "touchend" : "mouseup", u2 = o2 ? "touchmove" : "mousemove";
        function c2(e3) {
          var t3;
          e3 = e3 || window.event, a2 = o2 ? (t3 = e3.changedTouches, n2 = i2 - parseInt(t3[0].clientX), s3 = a2 - parseInt(t3[0].clientY), i2 = parseInt(t3[0].clientX), parseInt(t3[0].clientY)) : (n2 = i2 - parseInt(e3.clientX), s3 = a2 - parseInt(e3.clientY), i2 = parseInt(e3.clientX), parseInt(e3.clientY)), r3.style.left = r3.offsetLeft - n2 + "px", r3.style.top = r3.offsetTop - s3 + "px";
        }
        function d2() {
          document.removeEventListener(l2, d2, false), document.removeEventListener(u2, c2, false);
        }
        return r3 === undefined ? e2 = r3 = this.elt : r3 !== this.elt && r3.elt !== this.elt && (r3 = r3.elt, e2 = this.elt), e2.addEventListener(o2 ? "touchstart" : "mousedown", function(e3) {
          {
            var t3;
            e3 = e3 || window.event, a2 = o2 ? (t3 = e3.changedTouches, i2 = parseInt(t3[0].clientX), parseInt(t3[0].clientY)) : (i2 = parseInt(e3.clientX), parseInt(e3.clientY));
          }
          return document.addEventListener(l2, d2, false), document.addEventListener(u2, c2, false), false;
        }, false), e2.style.cursor = "move", this;
      };
      function y(e2, t3, r3, o2) {
        d(this, y), this.callback = e2, this.time = t3, this.id = r3, this.val = o2;
      }
      t2 = function(t3) {
        var r3 = i2;
        if (typeof t3 != "function" && t3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        r3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: r3, writable: true, configurable: true } }), t3 && l(r3, t3);
        var s3 = u(i2);
        function i2(o2, e2) {
          d(this, i2);
          var n2 = c(e2 = s3.call(this, o2, e2));
          return e2.elt.crossOrigin = "anonymous", e2._prevTime = 0, e2._cueIDCounter = 0, e2._cues = [], e2.pixels = [], e2._pixelsState = c(e2), e2._pixelDensity = 1, e2._modified = false, e2._frameOnCanvas = -1, Object.defineProperty(n2, "src", { get: function() {
            var e3 = n2.elt.children[0].src, t4 = n2.elt.src === window.location.href ? "" : n2.elt.src;
            return e3 === window.location.href ? t4 : e3;
          }, set: function(e3) {
            for (var t4 = 0;t4 < n2.elt.children.length; t4++)
              n2.elt.removeChild(n2.elt.children[t4]);
            var r4 = document.createElement("source");
            r4.src = e3, o2.appendChild(r4), n2.elt.src = e3, n2.modified = true;
          } }), n2._onended = function() {
          }, n2.elt.onended = function() {
            n2._onended(n2);
          }, e2;
        }
        return a(i2, [{ key: "play", value: function() {
          var e2;
          return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 1 < this.elt.readyState || this.elt.load(), (e2 = this.elt.play()) && e2.catch && e2.catch(function(e3) {
            e3.name === "NotAllowedError" ? console.error(e3) : console.error("Media play method encountered an unexpected error", e3);
          }), this;
        } }, { key: "stop", value: function() {
          return this.elt.pause(), this.elt.currentTime = 0, this;
        } }, { key: "pause", value: function() {
          return this.elt.pause(), this;
        } }, { key: "loop", value: function() {
          return this.elt.setAttribute("loop", true), this.play(), this;
        } }, { key: "noLoop", value: function() {
          return this.elt.removeAttribute("loop"), this;
        } }, { key: "_setupAutoplayFailDetection", value: function() {
          var t4 = setTimeout(function() {
            console.error(e);
          }, 500);
          this.elt.addEventListener("play", function() {
            return clearTimeout(t4);
          }, { passive: true, once: true });
        } }, { key: "autoplay", value: function(e2) {
          var t4 = this, r4 = this.elt.getAttribute("autoplay");
          return this.elt.setAttribute("autoplay", e2), e2 && !r4 && (e2 = function() {
            return t4._setupAutoplayFailDetection();
          }, this.elt.readyState === 4 ? e2() : this.elt.addEventListener("canplay", e2, { passive: true, once: true })), this;
        } }, { key: "volume", value: function(e2) {
          if (e2 === undefined)
            return this.elt.volume;
          this.elt.volume = e2;
        } }, { key: "speed", value: function(e2) {
          if (e2 === undefined)
            return this.presetPlaybackRate || this.elt.playbackRate;
          this.loadedmetadata ? this.elt.playbackRate = e2 : this.presetPlaybackRate = e2;
        } }, { key: "time", value: function(e2) {
          return e2 === undefined ? this.elt.currentTime : (this.elt.currentTime = e2, this);
        } }, { key: "duration", value: function() {
          return this.elt.duration;
        } }, { key: "_ensureCanvas", value: function() {
          this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(true));
          var e2 = this._frameOnCanvas !== this._pInst.frameCount;
          this.loadedmetadata && e2 && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), this.setModified(true), this._frameOnCanvas = this._pInst.frameCount);
        } }, { key: "loadPixels", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t4 = new Array(e2), r4 = 0;r4 < e2; r4++)
            t4[r4] = arguments[r4];
          return f.default.Renderer2D.prototype.loadPixels.apply(this, t4);
        } }, { key: "updatePixels", value: function(e2, t4, r4, o2) {
          return this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.updatePixels.call(this, e2, t4, r4, o2)), this.setModified(true), this;
        } }, { key: "get", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t4 = new Array(e2), r4 = 0;r4 < e2; r4++)
            t4[r4] = arguments[r4];
          return f.default.Renderer2D.prototype.get.apply(this, t4);
        } }, { key: "_getPixel", value: function() {
          this.loadPixels();
          for (var e2 = arguments.length, t4 = new Array(e2), r4 = 0;r4 < e2; r4++)
            t4[r4] = arguments[r4];
          return f.default.Renderer2D.prototype._getPixel.apply(this, t4);
        } }, { key: "set", value: function(e2, t4, r4) {
          this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.set.call(this, e2, t4, r4), this.setModified(true));
        } }, { key: "copy", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t4 = new Array(e2), r4 = 0;r4 < e2; r4++)
            t4[r4] = arguments[r4];
          f.default.prototype.copy.apply(this, t4);
        } }, { key: "mask", value: function() {
          this.loadPixels(), this.setModified(true);
          for (var e2 = arguments.length, t4 = new Array(e2), r4 = 0;r4 < e2; r4++)
            t4[r4] = arguments[r4];
          f.default.Image.prototype.mask.apply(this, t4);
        } }, { key: "isModified", value: function() {
          return this._modified;
        } }, { key: "setModified", value: function(e2) {
          this._modified = e2;
        } }, { key: "onended", value: function(e2) {
          return this._onended = e2, this;
        } }, { key: "connect", value: function(e2) {
          var t4, r4;
          if (typeof f.default.prototype.getAudioContext == "function")
            t4 = f.default.prototype.getAudioContext(), r4 = f.default.soundOut.input;
          else
            try {
              r4 = (t4 = e2.context).destination;
            } catch (e3) {
              throw "connect() is meant to be used with Web Audio API or p5.sound.js";
            }
          this.audioSourceNode || (this.audioSourceNode = t4.createMediaElementSource(this.elt), this.audioSourceNode.connect(r4)), e2 ? e2.input ? this.audioSourceNode.connect(e2.input) : this.audioSourceNode.connect(e2) : this.audioSourceNode.connect(r4);
        } }, { key: "disconnect", value: function() {
          if (!this.audioSourceNode)
            throw "nothing to disconnect";
          this.audioSourceNode.disconnect();
        } }, { key: "showControls", value: function() {
          this.elt.style["text-align"] = "inherit", this.elt.controls = true;
        } }, { key: "hideControls", value: function() {
          this.elt.controls = false;
        } }, { key: "addCue", value: function(e2, t4, r4) {
          var o2 = this._cueIDCounter++, t4 = new y(t4, e2, o2, r4);
          return this._cues.push(t4), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), o2;
        } }, { key: "removeCue", value: function(e2) {
          for (var t4 = 0;t4 < this._cues.length; t4++)
            this._cues[t4].id === e2 && (console.log(e2), this._cues.splice(t4, 1));
          this._cues.length === 0 && (this.elt.ontimeupdate = null);
        } }, { key: "clearCues", value: function() {
          this._cues = [], this.elt.ontimeupdate = null;
        } }, { key: "_onTimeUpdate", value: function() {
          for (var e2 = this.time(), t4 = 0;t4 < this._cues.length; t4++) {
            var r4 = this._cues[t4].time, o2 = this._cues[t4].val;
            this._prevTime < r4 && r4 <= e2 && this._cues[t4].callback(o2);
          }
          this._prevTime = e2;
        } }]), i2;
      }(f.default.Element), f.default.MediaElement = t2, t2 = function() {
        function r3(e2, t3) {
          d(this, r3), this.file = e2, this._pInst = t3;
          t3 = e2.type.split("/");
          this.type = t3[0], this.subtype = t3[1], this.name = e2.name, this.size = e2.size, this.data = undefined;
        }
        return a(r3, null, [{ key: "_createLoader", value: function(o2, n2) {
          var e2 = new FileReader;
          return e2.onload = function(e3) {
            var t3, r4 = new f.default.File(o2);
            r4.file.type === "application/json" ? r4.data = JSON.parse(e3.target.result) : r4.file.type === "text/xml" ? (t3 = new DOMParser().parseFromString(e3.target.result, "text/xml"), r4.data = new f.default.XML(t3.documentElement)) : r4.data = e3.target.result, n2(r4);
          }, e2;
        } }, { key: "_load", value: function(e2, t3) {
          var r4;
          /^text\//.test(e2.type) || e2.type === "application/json" ? f.default.File._createLoader(e2, t3).readAsText(e2) : /^(video|audio)\//.test(e2.type) ? ((r4 = new f.default.File(e2)).data = URL.createObjectURL(e2), t3(r4)) : f.default.File._createLoader(e2, t3).readAsDataURL(e2);
        } }]), r3;
      }(), f.default.File = t2, t2 = f.default;
      o.default = t2;
    }, { "../core/main": 275, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.function.name": 168, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.trim": 201, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238, "core-js/modules/web.url": 240 }], 292: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (y = e2("../core/main")) && y.__esModule ? y : { default: y }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      n.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", n.default.prototype.accelerationX = 0, n.default.prototype.accelerationY = 0, n.default.prototype.accelerationZ = 0, n.default.prototype.pAccelerationX = 0, n.default.prototype.pAccelerationY = 0, n.default.prototype.pAccelerationZ = 0, n.default.prototype._updatePAccelerations = function() {
        this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
      }, n.default.prototype.rotationX = 0, n.default.prototype.rotationY = 0, n.default.prototype.rotationZ = 0, n.default.prototype.pRotationX = 0, n.default.prototype.pRotationY = 0;
      var l = n.default.prototype.pRotationZ = 0, u = 0, c = 0, d = "clockwise", h = "clockwise", f = "clockwise", p = (n.default.prototype.pRotateDirectionX = undefined, n.default.prototype.pRotateDirectionY = undefined, n.default.prototype.pRotateDirectionZ = undefined, n.default.prototype._updatePRotations = function() {
        this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
      }, n.default.prototype.turnAxis = undefined, 0.5), m = 30, y = (n.default.prototype.setMoveThreshold = function(e3) {
        n.default._validateParameters("setMoveThreshold", arguments), p = e3;
      }, n.default.prototype.setShakeThreshold = function(e3) {
        n.default._validateParameters("setShakeThreshold", arguments), m = e3;
      }, n.default.prototype._ondeviceorientation = function(e3) {
        this._updatePRotations(), this._angleMode === s2.radians && (e3.beta = e3.beta * (_PI / 180), e3.gamma = e3.gamma * (_PI / 180), e3.alpha = e3.alpha * (_PI / 180)), this._setProperty("rotationX", e3.beta), this._setProperty("rotationY", e3.gamma), this._setProperty("rotationZ", e3.alpha), this._handleMotion();
      }, n.default.prototype._ondevicemotion = function(e3) {
        this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e3.acceleration.x), this._setProperty("accelerationY", 2 * e3.acceleration.y), this._setProperty("accelerationZ", 2 * e3.acceleration.z), this._handleMotion();
      }, n.default.prototype._handleMotion = function() {
        window.orientation === 90 || window.orientation === -90 ? this._setProperty("deviceOrientation", "landscape") : window.orientation === 0 ? this._setProperty("deviceOrientation", "portrait") : window.orientation === undefined && this._setProperty("deviceOrientation", "undefined");
        var e3, t3, r3, o2, n2, s3 = this._isGlobal ? window : this;
        typeof s3.deviceMoved == "function" && (Math.abs(this.accelerationX - this.pAccelerationX) > p || Math.abs(this.accelerationY - this.pAccelerationY) > p || Math.abs(this.accelerationZ - this.pAccelerationZ) > p) && s3.deviceMoved(), typeof s3.deviceTurned == "function" && (t3 = this.rotationX + 180, e3 = this.pRotationX + 180, r3 = l + 180, 0 < t3 - e3 && t3 - e3 < 270 || t3 - e3 < -270 ? d = "clockwise" : (t3 - e3 < 0 || 270 < t3 - e3) && (d = "counter-clockwise"), d !== this.pRotateDirectionX && (r3 = t3), 90 < Math.abs(t3 - r3) && Math.abs(t3 - r3) < 270 && (r3 = t3, this._setProperty("turnAxis", "X"), s3.deviceTurned()), this.pRotateDirectionX = d, l = r3 - 180, e3 = this.rotationY + 180, t3 = this.pRotationY + 180, r3 = u + 180, 0 < e3 - t3 && e3 - t3 < 270 || e3 - t3 < -270 ? h = "clockwise" : (e3 - t3 < 0 || 270 < e3 - this.pRotationY) && (h = "counter-clockwise"), h !== this.pRotateDirectionY && (r3 = e3), 90 < Math.abs(e3 - r3) && Math.abs(e3 - r3) < 270 && (r3 = e3, this._setProperty("turnAxis", "Y"), s3.deviceTurned()), this.pRotateDirectionY = h, u = r3 - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? f = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (f = "counter-clockwise"), f !== this.pRotateDirectionZ && (c = this.rotationZ), 90 < Math.abs(this.rotationZ - c) && Math.abs(this.rotationZ - c) < 270 && (c = this.rotationZ, this._setProperty("turnAxis", "Z"), s3.deviceTurned()), this.pRotateDirectionZ = f, this._setProperty("turnAxis", undefined)), typeof s3.deviceShaken == "function" && (this.pAccelerationX !== null && (o2 = Math.abs(this.accelerationX - this.pAccelerationX), n2 = Math.abs(this.accelerationY - this.pAccelerationY)), m < o2 + n2 && s3.deviceShaken());
      }, n.default);
      r2.default = y;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 293: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      o.default.prototype.isKeyPressed = false, o.default.prototype.keyIsPressed = false, o.default.prototype.key = "", o.default.prototype.keyCode = 0, o.default.prototype._onkeydown = function(e3) {
        var t3;
        this._downKeys[e3.which] || (this._setProperty("isKeyPressed", true), this._setProperty("keyIsPressed", true), this._setProperty("keyCode", e3.which), this._downKeys[e3.which] = true, this._setProperty("key", e3.key || String.fromCharCode(e3.which) || e3.which), typeof (t3 = this._isGlobal ? window : this).keyPressed != "function" || e3.charCode || t3.keyPressed(e3) === false && e3.preventDefault());
      }, o.default.prototype._onkeyup = function(e3) {
        this._downKeys[e3.which] = false, this._areDownKeys() || (this._setProperty("isKeyPressed", false), this._setProperty("keyIsPressed", false)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e3.key || String.fromCharCode(e3.which) || e3.which), this._setProperty("keyCode", e3.which);
        var t3 = this._isGlobal ? window : this;
        typeof t3.keyReleased == "function" && t3.keyReleased(e3) === false && e3.preventDefault();
      }, o.default.prototype._onkeypress = function(e3) {
        var t3;
        e3.which !== this._lastKeyCodeTyped && (this._setProperty("_lastKeyCodeTyped", e3.which), this._setProperty("key", e3.key || String.fromCharCode(e3.which) || e3.which), typeof (t3 = this._isGlobal ? window : this).keyTyped == "function" && t3.keyTyped(e3) === false && e3.preventDefault());
      }, o.default.prototype._onblur = function(e3) {
        this._downKeys = {};
      }, o.default.prototype.keyIsDown = function(e3) {
        return o.default._validateParameters("keyIsDown", arguments), this._downKeys[e3] || false;
      }, o.default.prototype._areDownKeys = function() {
        for (var e3 in this._downKeys)
          if (this._downKeys.hasOwnProperty(e3) && this._downKeys[e3] === true)
            return true;
        return false;
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../core/main": 275 }], 294: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.string.includes"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      n.default.prototype.movedX = 0, n.default.prototype.movedY = 0, n.default.prototype._hasMouseInteracted = false, n.default.prototype.mouseX = 0, n.default.prototype.mouseY = 0, n.default.prototype.pmouseX = 0, n.default.prototype.pmouseY = 0, n.default.prototype.winMouseX = 0, n.default.prototype.winMouseY = 0, n.default.prototype.pwinMouseX = 0, n.default.prototype.pwinMouseY = 0, n.default.prototype.mouseButton = 0, n.default.prototype.mouseIsPressed = false, n.default.prototype._updateNextMouseCoords = function(e3) {
        var t3, r3, o2, n2, s3;
        this._curElement !== null && (!e3.touches || 0 < e3.touches.length) && (t3 = this._curElement.elt, r3 = this.width, o2 = this.height, (n2 = e3) && !n2.clientX && (n2.touches ? n2 = n2.touches[0] : n2.changedTouches && (n2 = n2.changedTouches[0])), s3 = t3.getBoundingClientRect(), r3 = t3.scrollWidth / r3 || 1, t3 = t3.scrollHeight / o2 || 1, o2 = { x: (n2.clientX - s3.left) / r3, y: (n2.clientY - s3.top) / t3, winX: n2.clientX, winY: n2.clientY, id: n2.identifier }, this._setProperty("movedX", e3.movementX), this._setProperty("movedY", e3.movementY), this._setProperty("mouseX", o2.x), this._setProperty("mouseY", o2.y), this._setProperty("winMouseX", o2.winX), this._setProperty("winMouseY", o2.winY)), this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", true));
      }, n.default.prototype._updateMouseCoords = function() {
        this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
      }, n.default.prototype._setMouseButton = function(e3) {
        e3.button === 1 ? this._setProperty("mouseButton", s2.CENTER) : e3.button === 2 ? this._setProperty("mouseButton", s2.RIGHT) : this._setProperty("mouseButton", s2.LEFT);
      }, n.default.prototype._onmousemove = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._updateNextMouseCoords(e3), this.mouseIsPressed ? typeof t3.mouseDragged == "function" ? t3.mouseDragged(e3) === false && e3.preventDefault() : typeof t3.touchMoved == "function" && t3.touchMoved(e3) === false && e3.preventDefault() : typeof t3.mouseMoved == "function" && t3.mouseMoved(e3) === false && e3.preventDefault();
      }, n.default.prototype._onmousedown = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._setMouseButton(e3), this._updateNextMouseCoords(e3), typeof t3.mousePressed == "function" ? t3.mousePressed(e3) === false && e3.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && typeof t3.touchStarted == "function" && t3.touchStarted(e3) === false && e3.preventDefault();
      }, n.default.prototype._onmouseup = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", false), typeof t3.mouseReleased == "function" ? t3.mouseReleased(e3) === false && e3.preventDefault() : typeof t3.touchEnded == "function" && t3.touchEnded(e3) === false && e3.preventDefault();
      }, n.default.prototype._ondragend = n.default.prototype._onmouseup, n.default.prototype._ondragover = n.default.prototype._onmousemove, n.default.prototype._onclick = function(e3) {
        var t3 = this._isGlobal ? window : this;
        typeof t3.mouseClicked == "function" && t3.mouseClicked(e3) === false && e3.preventDefault();
      }, n.default.prototype._ondblclick = function(e3) {
        var t3 = this._isGlobal ? window : this;
        typeof t3.doubleClicked == "function" && t3.doubleClicked(e3) === false && e3.preventDefault();
      }, n.default.prototype._mouseWheelDeltaY = 0, n.default.prototype._pmouseWheelDeltaY = 0, n.default.prototype._onwheel = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._setProperty("_mouseWheelDeltaY", e3.deltaY), typeof t3.mouseWheel == "function" && (e3.delta = e3.deltaY, t3.mouseWheel(e3) === false && e3.preventDefault());
      }, n.default.prototype.requestPointerLock = function() {
        var e3 = this._curElement.elt;
        return e3.requestPointerLock = e3.requestPointerLock || e3.mozRequestPointerLock, e3.requestPointerLock ? (e3.requestPointerLock(), true) : (console.log("requestPointerLock is not implemented in this browser"), false);
      }, n.default.prototype.exitPointerLock = function() {
        document.exitPointerLock();
      };
      e2 = n.default;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 295: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.string.includes"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.touches = [], e2.default.prototype._updateTouchCoords = function(e3) {
        if (this._curElement !== null) {
          for (var t3 = [], r3 = 0;r3 < e3.touches.length; r3++)
            t3[r3] = function(e4, t4, r4, o) {
              var n = 4 < arguments.length && arguments[4] !== undefined ? arguments[4] : 0, s2 = e4.getBoundingClientRect(), t4 = e4.scrollWidth / t4 || 1, e4 = e4.scrollHeight / r4 || 1, r4 = o.touches[n] || o.changedTouches[n];
              return { x: (r4.clientX - s2.left) / t4, y: (r4.clientY - s2.top) / e4, winX: r4.clientX, winY: r4.clientY, id: r4.identifier };
            }(this._curElement.elt, this.width, this.height, e3, r3);
          this._setProperty("touches", t3);
        }
      }, e2.default.prototype._ontouchstart = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._updateTouchCoords(e3), this._updateNextMouseCoords(e3), this._updateMouseCoords(), typeof t3.touchStarted == "function" ? t3.touchStarted(e3) === false && e3.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && typeof t3.mousePressed == "function" && t3.mousePressed(e3) === false && e3.preventDefault();
      }, e2.default.prototype._ontouchmove = function(e3) {
        var t3 = this._isGlobal ? window : this;
        this._updateTouchCoords(e3), this._updateNextMouseCoords(e3), typeof t3.touchMoved == "function" ? t3.touchMoved(e3) === false && e3.preventDefault() : typeof t3.mouseDragged == "function" && t3.mouseDragged(e3) === false && e3.preventDefault();
      }, e2.default.prototype._ontouchend = function(e3) {
        this._setProperty("mouseIsPressed", false), this._updateTouchCoords(e3), this._updateNextMouseCoords(e3);
        var t3 = this._isGlobal ? window : this;
        typeof t3.touchEnded == "function" ? t3.touchEnded(e3) === false && e3.preventDefault() : typeof t3.mouseReleased == "function" && t3.mouseReleased(e3) === false && e3.preventDefault();
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.includes": 159, "core-js/modules/es.string.includes": 191 }], 296: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.int32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.int32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var U, N, B, G, V = { _toPixels: function(e3) {
        var t3, r3;
        return e3 instanceof ImageData ? e3.data : e3.getContext("2d") ? e3.getContext("2d").getImageData(0, 0, e3.width, e3.height).data : e3.getContext("webgl") ? (r3 = (t3 = e3.getContext("webgl")).drawingBufferWidth * t3.drawingBufferHeight * 4, r3 = new Uint8Array(r3), t3.readPixels(0, 0, e3.width, e3.height, t3.RGBA, t3.UNSIGNED_BYTE, r3), r3) : undefined;
      }, _getARGB: function(e3, t3) {
        t3 *= 4;
        return e3[3 + t3] << 24 & 4278190080 | e3[t3] << 16 & 16711680 | e3[1 + t3] << 8 & 65280 | 255 & e3[2 + t3];
      }, _setPixels: function(e3, t3) {
        for (var r3, o = 0, n = e3.length;o < n; o++)
          e3[0 + (r3 = 4 * o)] = (16711680 & t3[o]) >>> 16, e3[1 + r3] = (65280 & t3[o]) >>> 8, e3[2 + r3] = 255 & t3[o], e3[3 + r3] = (4278190080 & t3[o]) >>> 24;
      }, _toImageData: function(e3) {
        return e3 instanceof ImageData ? e3 : e3.getContext("2d").getImageData(0, 0, e3.width, e3.height);
      }, _createImageData: function(e3, t3) {
        return V._tmpCanvas = document.createElement("canvas"), V._tmpCtx = V._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e3, t3);
      }, apply: function(e3, t3, r3) {
        var o = e3.getContext("2d"), n = o.getImageData(0, 0, e3.width, e3.height), t3 = t3(n, r3);
        t3 instanceof ImageData ? o.putImageData(t3, 0, 0, 0, 0, e3.width, e3.height) : o.putImageData(n, 0, 0, 0, 0, e3.width, e3.height);
      }, threshold: function(e3, t3) {
        for (var r3 = V._toPixels(e3), o = (t3 === undefined && (t3 = 0.5), Math.floor(255 * t3)), n = 0;n < r3.length; n += 4) {
          var s2 = undefined, s2 = o <= 0.2126 * r3[n] + 0.7152 * r3[n + 1] + 0.0722 * r3[n + 2] ? 255 : 0;
          r3[n] = r3[n + 1] = r3[n + 2] = s2;
        }
      }, gray: function(e3) {
        for (var t3 = V._toPixels(e3), r3 = 0;r3 < t3.length; r3 += 4) {
          var o = t3[r3], n = t3[r3 + 1], s2 = t3[r3 + 2];
          t3[r3] = t3[r3 + 1] = t3[r3 + 2] = 0.2126 * o + 0.7152 * n + 0.0722 * s2;
        }
      }, opaque: function(e3) {
        for (var t3 = V._toPixels(e3), r3 = 0;r3 < t3.length; r3 += 4)
          t3[r3 + 3] = 255;
        return t3;
      }, invert: function(e3) {
        for (var t3 = V._toPixels(e3), r3 = 0;r3 < t3.length; r3 += 4)
          t3[r3] = 255 - t3[r3], t3[r3 + 1] = 255 - t3[r3 + 1], t3[r3 + 2] = 255 - t3[r3 + 2];
      }, posterize: function(e3, t3) {
        var r3 = V._toPixels(e3);
        if ((t3 = t3 === undefined ? 4 : t3) < 2 || 255 < t3)
          throw new Error("Level must be greater than 2 and less than 255 for posterize");
        for (var o = t3 - 1, n = 0;n < r3.length; n += 4) {
          var s2 = r3[n], i = r3[n + 1], a = r3[n + 2];
          r3[n] = 255 * (s2 * t3 >> 8) / o, r3[n + 1] = 255 * (i * t3 >> 8) / o, r3[n + 2] = 255 * (a * t3 >> 8) / o;
        }
      }, dilate: function(e3) {
        for (var t3, r3, o, n, s2, i, a, l, u, c = V._toPixels(e3), d = 0, h = c.length ? c.length / 4 : 0, f = new Int32Array(h);d < h; )
          for (r3 = (t3 = d) + e3.width;d < r3; )
            n = o = V._getARGB(c, d), (u = d - 1) < t3 && (u = d), r3 <= (l = d + 1) && (l = d), (s2 = d - e3.width) < 0 && (s2 = 0), h <= (i = d + e3.width) && (i = d), s2 = V._getARGB(c, s2), u = V._getARGB(c, u), i = V._getARGB(c, i), (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) < (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (l = 77 * (s2 >> 16 & 255) + 151 * (s2 >> 8 & 255) + 28 * (255 & s2)) && (o = s2, n = l), n < (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) && (o = i, n = u), f[d++] = o;
        V._setPixels(c, f);
      }, erode: function(e3) {
        for (var t3, r3, o, n, s2, i, a, l, u, c = V._toPixels(e3), d = 0, h = c.length ? c.length / 4 : 0, f = new Int32Array(h);d < h; )
          for (r3 = (t3 = d) + e3.width;d < r3; )
            n = o = V._getARGB(c, d), (u = d - 1) < t3 && (u = d), r3 <= (l = d + 1) && (l = d), (s2 = d - e3.width) < 0 && (s2 = 0), h <= (i = d + e3.width) && (i = d), s2 = V._getARGB(c, s2), u = V._getARGB(c, u), i = V._getARGB(c, i), (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) && (o = u, n = a), (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < n && (o = u, n = a), (l = 77 * (s2 >> 16 & 255) + 151 * (s2 >> 8 & 255) + 28 * (255 & s2)) < n && (o = s2, n = l), (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) < n && (o = i, n = u), f[d++] = o;
        V._setPixels(c, f);
      }, blur: function(e3, D) {
        for (var t3, r3, o, n, s2, i, a, l, u, c, d = V._toPixels(e3), h = e3.width, f = e3.height, p = h * f, m = new Int32Array(p), y = 0;y < p; y++)
          m[y] = V._getARGB(d, y);
        var g, v, b, j, _, x, w, S, T = new Int32Array(p), M = new Int32Array(p), E = new Int32Array(p), F = new Int32Array(p), k = 0, C = 3.5 * D | 0;
        if (U !== (C = C < 1 ? 1 : C < 248 ? C : 248)) {
          N = 1 + (U = C) << 1, B = new Int32Array(N), G = new Array(N);
          for (var O = 0;O < N; O++)
            G[O] = new Int32Array(256);
          for (var P = 1, A = C - 1;P < C; P++) {
            B[C + P] = B[A] = x = A * A, w = G[C + P], S = G[A--];
            for (var L = 0;L < 256; L++)
              w[L] = S[L] = x * L;
          }
          _ = B[C] = C * C, w = G[C];
          for (var R = 0;R < 256; R++)
            w[R] = _ * R;
        }
        for (v = 0;v < f; v++) {
          for (g = 0;g < h; g++) {
            if (n = o = r3 = s2 = t3 = 0, (i = g - U) < 0)
              c = -i, i = 0;
            else {
              if (h <= i)
                break;
              c = 0;
            }
            for (b = c;b < N && !(h <= i); b++) {
              var I = m[i + k];
              j = G[b], s2 += j[(-16777216 & I) >>> 24], r3 += j[(16711680 & I) >> 16], o += j[(65280 & I) >> 8], n += j[255 & I], t3 += B[b], i++;
            }
            T[a = k + g] = s2 / t3, M[a] = r3 / t3, E[a] = o / t3, F[a] = n / t3;
          }
          k += h;
        }
        for (u = (l = -U) * h, v = k = 0;v < f; v++) {
          for (g = 0;g < h; g++) {
            if (n = o = r3 = s2 = t3 = 0, l < 0)
              c = a = -l, i = g;
            else {
              if (f <= l)
                break;
              c = 0, a = l, i = g + u;
            }
            for (b = c;b < N && !(f <= a); b++)
              j = G[b], s2 += j[T[i]], r3 += j[M[i]], o += j[E[i]], n += j[F[i]], t3 += B[b], a++, i += h;
            m[g + k] = s2 / t3 << 24 | r3 / t3 << 16 | o / t3 << 8 | n / t3;
          }
          k += h, u += h, l++;
        }
        V._setPixels(d, m);
      } };
      r2.default = V;
    }, { "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.int32-array": 217, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234 }], 297: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var C = o(e2("../core/main")), O = o(e2("omggif"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function P(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      C.default.prototype.createImage = function(e3, t3) {
        return C.default._validateParameters("createImage", arguments), new C.default.Image(e3, t3);
      }, C.default.prototype.saveCanvas = function() {
        C.default._validateParameters("saveCanvas", arguments);
        var e3, t3, r3, o2, n, s2, i = [].slice.call(arguments);
        switch (arguments[0] instanceof HTMLCanvasElement ? (e3 = arguments[0], i.shift()) : arguments[0] instanceof C.default.Element ? (e3 = arguments[0].elt, i.shift()) : arguments[0] instanceof C.default.Framebuffer ? ((n = this.createGraphics((o2 = arguments[0]).width, o2.height)).pixelDensity(pixelDensity()), o2.loadPixels(), n.loadPixels(), n.pixels.set(o2.pixels), n.updatePixels(), e3 = n.elt, i.shift()) : e3 = this._curElement && this._curElement.elt, 1 <= i.length && (t3 = i[0]), r3 = (r3 = 2 <= i.length ? i[1] : r3) || C.default.prototype._checkFileExtension(t3, r3)[1] || "png") {
          default:
            s2 = "image/png";
            break;
          case "jpeg":
          case "jpg":
            s2 = "image/jpeg";
        }
        e3.toBlob(function(e4) {
          C.default.prototype.downloadFile(e4, t3, r3), n && n.remove();
        }, s2);
      }, C.default.prototype.encodeAndDownloadGif = function(d, e3) {
        for (var h = d.gifProperties, t3 = h.loopLimit, r3 = (t3 === 1 ? t3 = null : t3 === null && (t3 = 0), new Uint8Array(d.width * d.height * h.numFrames)), f = [], o2 = {}, n = 0;n < h.numFrames; n++) {
          for (var s2 = new Set, i = h.frames[n].image.data, a = i.length, l = new Uint32Array(d.width * d.height), u = 0, c = 0;u < a; u += 4, c++) {
            var p = i[u + 0] << 16 | i[u + 1] << 8 | i[u + 2] << 0;
            s2.add(p), l[c] = p;
          }
          var m = P(s2).sort().toString();
          o2[m] === undefined ? o2[m] = { freq: 1, frames: [n] } : (o2[m].freq += 1, o2[m].frames.push(n)), f.push(l);
        }
        for (var y = [], g = Object.keys(o2).sort(function(e4, t4) {
          return o2[t4].freq - o2[e4].freq;
        }), v = g[0].split(",").map(function(e4) {
          return parseInt(e4);
        }), y = y.concat(o2[v].frames), b = new Set(v), j = 1;j < g.length; j++) {
          var _ = g[j].split(",").map(function(e4) {
            return parseInt(e4);
          }).filter(function(e4) {
            return !b.has(e4);
          });
          if (v.length + _.length <= 256) {
            for (var x = 0;x < _.length; x++)
              v.push(_[x]), b.add(_[x]);
            y = y.concat(o2[g[j]].frames);
          }
        }
        y = new Set(y);
        for (var w = {}, S = 0;S < v.length; S++)
          w[v[S]] || (w[v[S]] = S);
        for (var T = 1;T < v.length; )
          T <<= 1;
        v.length = T;
        for (var t3 = { loop: t3, palette: new Uint32Array(v) }, M = new O.default.GifWriter(r3, d.width, d.height, t3), E = {}, k = 0;k < h.numFrames; k++)
          (function(r4) {
            var o3 = !y.has(r4), n2 = o3 ? [] : v, s3 = new Uint8Array(d.width * d.height), i2 = {}, a2 = new Set, e4 = (f[r4].forEach(function(e5, t5) {
              o3 ? (i2[e5] === undefined && (i2[e5] = n2.length, n2.push(e5)), s3[t5] = i2[e5]) : s3[t5] = w[e5], 0 < r4 && f[r4 - 1][t5] !== e5 && a2.add(e5);
            }), {}), t4 = n2.filter(function(e5) {
              return !a2.has(e5);
            });
            if (0 < t4.length) {
              var t4 = t4[0], l2 = (o3 ? i2 : w)[t4];
              if (0 < r4) {
                for (var u2 = 0;u2 < f[r4].length; u2++)
                  f[r4 - 1][u2] === f[r4][u2] && (s3[u2] = l2);
                e4.transparent = l2, E.frameOpts.disposal = 1;
              }
            }
            if (e4.delay = h.frames[r4].delay / 10, o3) {
              for (var c2 = 1;c2 < n2.length; )
                c2 <<= 1;
              n2.length = c2, e4.palette = new Uint32Array(n2);
            }
            0 < r4 && M.addFrame(0, 0, d.width, d.height, E.pixelPaletteIndex, E.frameOpts), E = { pixelPaletteIndex: s3, frameOpts: e4 };
          })(k);
        E.frameOpts.disposal = 1, M.addFrame(0, 0, d.width, d.height, E.pixelPaletteIndex, E.frameOpts);
        t3 = new Blob([r3.slice(0, M.end())], { type: "image/gif" });
        C.default.prototype.downloadFile(t3, e3, "gif");
      }, C.default.prototype.saveFrames = function(e3, t3, r3, o2, n) {
        C.default._validateParameters("saveFrames", arguments);
        r3 = C.default.prototype.constrain(r3 = r3 || 3, 0, 15);
        r3 *= 1000;
        var o2 = C.default.prototype.constrain(o2 || 15, 0, 22), s2 = 0, i = C.default.prototype._makeFrame, a = this._curElement.elt, l = [], u = setInterval(function() {
          l.push(i(e3 + s2, t3, a)), s2++;
        }, 1000 / o2);
        setTimeout(function() {
          if (clearInterval(u), n)
            n(l);
          else
            for (var e4 = 0, t4 = l;e4 < t4.length; e4++) {
              var r4 = t4[e4];
              C.default.prototype.downloadFile(r4.imageData, r4.filename, r4.ext);
            }
          l = [];
        }, 0.01 + r3);
      }, C.default.prototype._makeFrame = function(e3, t3, r3) {
        var o2, r3 = this ? this._curElement.elt : r3;
        if (t3)
          switch (t3.toLowerCase()) {
            case "png":
              o2 = "image/png";
              break;
            case "jpeg":
            case "jpg":
              o2 = "image/jpeg";
              break;
            default:
              o2 = "image/png";
          }
        else
          t3 = "png", o2 = "image/png";
        var r3 = (r3 = r3.toDataURL(o2)).replace(o2, "image/octet-stream"), n = {};
        return n.imageData = r3, n.filename = e3, n.ext = t3, n;
      };
      e2 = C.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.set": 189, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint32-array": 233, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238, omggif: 248 }], 298: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined, e2("regenerator-runtime/runtime");
      var O = n(e2("../core/main")), m = n(e2("../core/helpers")), j = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")), g = n(e2("omggif")), P = e2("gifenc");
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t3, r3, o2, n2, s2, i2) {
        try {
          var a2 = e3[s2](i2), l2 = a2.value;
        } catch (e4) {
          return void r3(e4);
        }
        a2.done ? t3(l2) : Promise.resolve(l2).then(o2, n2);
      }
      function y(e3, t3, r3, o2, n2, s2, i2, a2, l2, u, c) {
        var d, h, f, p, m2, y2, g2, v2, b;
        return e3 === j.COVER && (d = t3, f = r3, g2 = s2, v2 = i2, y2 = a2, b = l2, h = u, p = c, m2 = Math.max(g2 / h, v2 / p), g2 /= m2, v2 /= m2, m2 = y2, y2 = b, d === j.CENTER ? m2 += (h - g2) / 2 : d === j.RIGHT && (m2 += h - g2), f === j.CENTER ? y2 += (p - v2) / 2 : f === j.BOTTOM && (y2 += p - v2), a2 = (b = { x: m2, y: y2, w: g2, h: v2 }).x, l2 = b.y, u = b.w, c = b.h), e3 === j.CONTAIN && (d = t3, h = r3, f = o2, p = n2, m2 = s2, y2 = i2, g2 = u, v2 = c, b = Math.max(g2 / m2, v2 / y2), g2 /= b, v2 /= b, b = f, f = p, d === j.CENTER ? b += (m2 - g2) / 2 : d === j.RIGHT && (b += m2 - g2), h === j.CENTER ? f += (y2 - v2) / 2 : h === j.BOTTOM && (f += y2 - v2), o2 = (e3 = { x: b, y: f, w: g2, h: v2 }).x, n2 = e3.y, s2 = e3.w, i2 = e3.h), { sx: a2, sy: l2, sw: u, sh: c, dx: o2, dy: n2, dw: s2, dh: i2 };
      }
      function v(e3, t3) {
        return 0 < e3 && e3 < t3 ? e3 : t3;
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), O.default.prototype.loadImage = function(o2, f, p) {
        O.default._validateParameters("loadImage", arguments);
        var m2 = new O.default.Image(1, 1, this), y2 = this, e3 = new Request(o2, { method: "GET", mode: "cors" });
        return fetch(o2, e3).then(function(e4) {
          var t3, r3 = e4.headers.get("content-type");
          r3 === null && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), r3 && r3.includes("image/gif") ? e4.arrayBuffer().then(function(e5) {
            if (e5) {
              for (var e5 = new Uint8Array(e5), r4 = m2, t4 = f, o3 = p, n2 = function(e6) {
                y2._decrementPreload();
              }.bind(y2), s2 = new g.default.GifReader(e5), i2 = (r4.width = r4.canvas.width = s2.width, r4.height = r4.canvas.height = s2.height, []), a2 = s2.numFrames(), l2 = new Uint8ClampedArray(r4.width * r4.height * 4), u = 0;u < a2; u++) {
                var c = s2.frameInfo(u), d = r4.drawingContext.getImageData(0, 0, r4.width, r4.height), h = (l2 = d.data.slice(), !function(e6, t5) {
                  try {
                    t5.decodeAndBlitFrameRGBA(e6, l2);
                  } catch (e7) {
                    O.default._friendlyFileLoadError(8, r4.src), typeof o3 == "function" ? o3(e7) : console.error(e7);
                  }
                }(u, s2), new ImageData(l2, r4.width, r4.height)), h = (r4.drawingContext.putImageData(h, 0, 0), c.delay);
                h === 0 && (h = 10), i2.push({ image: r4.drawingContext.getImageData(0, 0, r4.width, r4.height), delay: 10 * h }), c.disposal === 2 ? r4.drawingContext.clearRect(c.x, c.y, c.width, c.height) : c.disposal === 3 && r4.drawingContext.putImageData(d, 0, 0, c.x, c.y, c.width, c.height);
              }
              (e5 = s2.loopCount()) === null ? e5 = 1 : e5 === 0 && (e5 = null), r4.drawingContext.putImageData(i2[0].image, 0, 0), 1 < i2.length && (r4.gifProperties = { displayIndex: 0, loopLimit: e5, loopCount: 0, frames: i2, numFrames: a2, playing: true, timeDisplayed: 0, lastChangeTime: 0 }), typeof t4 == "function" && t4(r4), n2();
            }
          }, function(e5) {
            typeof p == "function" ? (p(e5), y2._decrementPreload()) : console.error(e5);
          }) : ((t3 = new Image).onload = function() {
            m2.width = m2.canvas.width = t3.width, m2.height = m2.canvas.height = t3.height, m2.drawingContext.drawImage(t3, 0, 0), m2.modified = true, typeof f == "function" && f(m2), y2._decrementPreload();
          }, t3.onerror = function(e5) {
            O.default._friendlyFileLoadError(0, t3.src), typeof p == "function" ? (p(e5), y2._decrementPreload()) : console.error(e5);
          }, o2.indexOf("data:image/") !== 0 && (t3.crossOrigin = "Anonymous"), t3.src = o2), m2.modified = true;
        }).catch(function(e4) {
          O.default._friendlyFileLoadError(0, o2), typeof p == "function" ? (p(e4), y2._decrementPreload()) : console.error(e4);
        }), m2;
      }, O.default.prototype.saveGif = function() {
        a2 = regeneratorRuntime.mark(function e(t3, r4) {
          var o2, n2, s2, i2, a3, l2, u, c, d, h, f, p, m2, y2, g2, v2, b, j2, _, x, w, S, T, M, E, k, C = arguments;
          return regeneratorRuntime.wrap(function(e3) {
            for (;; )
              switch (e3.prev = e3.next) {
                case 0:
                  if (o2 = 2 < C.length && C[2] !== undefined ? C[2] : { delay: 0, units: "seconds", silent: false, notificationDuration: 0, notificationID: "progressBar" }, typeof t3 != "string")
                    throw TypeError("fileName parameter must be a string");
                  e3.next = 3;
                  break;
                case 3:
                  if (typeof r4 != "number")
                    throw TypeError("Duration parameter must be a number");
                  e3.next = 5;
                  break;
                case 5:
                  if (n2 = o2 && o2.delay || 0, s2 = o2 && o2.units || "seconds", i2 = o2 && o2.silent || false, a3 = o2 && o2.notificationDuration || 0, l2 = o2 && o2.notificationID || "progressBar", typeof n2 != "number")
                    throw TypeError("Delay parameter must be a number");
                  e3.next = 12;
                  break;
                case 12:
                  if (s2 !== "seconds" && s2 !== "frames")
                    throw TypeError('Units parameter must be either "frames" or "seconds"');
                  e3.next = 14;
                  break;
                case 14:
                  if (typeof i2 != "boolean")
                    throw TypeError("Silent parameter must be a boolean");
                  e3.next = 16;
                  break;
                case 16:
                  if (typeof a3 != "number")
                    throw TypeError("Notification duration parameter must be a number");
                  e3.next = 18;
                  break;
                case 18:
                  if (typeof l2 != "string")
                    throw TypeError("Notification ID parameter must be a string");
                  e3.next = 20;
                  break;
                case 20:
                  return this._recording = true, h = this._targetFrameRate, u = (u = 1 / (h = h !== 1 / 0 && h !== undefined && h !== 0 ? h : 60) * 1000) < 20 ? 20 : u, d = (c = s2 === "seconds" ? r4 * h : r4) + (h = s2 === "seconds" ? n2 * h : n2), h = h, this.frameCount = h, f = this._pixelDensity, this.pixelDensity(1), p = [], document.getElementById(l2) !== null && document.getElementById(l2).remove(), i2 || ((m2 = this.createP("")).id(l2), m2.style("font-size", "16px"), m2.style("font-family", "Montserrat"), m2.style("background-color", "#ffffffa0"), m2.style("padding", "8px"), m2.style("border-radius", "10px"), m2.position(0, 0)), this._renderer instanceof O.default.RendererGL && (g2 = this.drawingContext, y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4)), this.noLoop(), e3.next = 39, Promise.resolve();
                case 39:
                  if (h < d)
                    return this.redraw(), M = undefined, M = this._renderer instanceof O.default.RendererGL ? (y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4), g2.readPixels(0, 0, g2.drawingBufferWidth, g2.drawingBufferHeight, g2.RGBA, g2.UNSIGNED_BYTE, y2), function(e4) {
                      for (var t4 = parseInt(height / 2), r5 = 4 * width, o3 = new Uint8Array(4 * width), n3 = 0;n3 < t4; ++n3) {
                        var s3 = n3 * r5, i3 = (height - n3 - 1) * r5;
                        o3.set(e4.subarray(s3, s3 + r5)), e4.copyWithin(s3, i3, i3 + r5), e4.set(o3, i3);
                      }
                      return e4;
                    }(y2)) : this.drawingContext.getImageData(0, 0, this.width, this.height).data, p.push(M), h++, i2 || m2.html("Saved frame <b>" + p.length.toString() + "</b> out of " + c.toString()), e3.next = 48, new Promise(function(e4) {
                      return setTimeout(e4, 0);
                    });
                  e3.next = 50;
                  break;
                case 48:
                  e3.next = 39;
                  break;
                case 50:
                  i2 || m2.html("Frames processed, generating color palette..."), this.loop(), this.pixelDensity(f), v2 = (0, P.GIFEncoder)(), b = function(e4) {
                    for (var t4 = new Uint8Array(e4.length * e4[0].length), r5 = 0;r5 < e4.length; r5++)
                      t4.set(e4[r5], r5 * e4[0].length);
                    var o3 = (0, P.quantize)(t4, 256, { format: "rgba4444", oneBitAlpha: true });
                    o3.length === 256 ? o3[o3.length - 1] = [255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0] : o3.push([255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0]);
                    return o3;
                  }(p), j2 = {}, _ = function(e4) {
                    for (var t4 = e4.length / 4, r5 = new Uint8Array(t4), o3 = 0;o3 < t4; o3++) {
                      var n3 = e4[4 * o3] << 24 | e4[4 * o3 + 1] << 16 | e4[4 * o3 + 2] << 8 | e4[4 * o3 + 3];
                      j2[n3] === undefined && (j2[n3] = (0, P.nearestColorIndex)(b, e4.slice(4 * o3, 4 * (o3 + 1)))), r5[o3] = j2[n3];
                    }
                    return r5;
                  }, x = b.length - 1, w = [], S = 0;
                case 60:
                  if (!(S < p.length)) {
                    e3.next = 71;
                    break;
                  }
                  if (T = _(p[S]), M = T.slice(), S === 0)
                    v2.writeFrame(T, this.width, this.height, { palette: b, delay: u, dispose: 1 });
                  else {
                    for (E = 0;E < T.length; E++)
                      T[E] === w[E] && (T[E] = x);
                    v2.writeFrame(T, this.width, this.height, { delay: u, transparent: true, transparentIndex: x, dispose: 1 });
                  }
                  return w = M, i2 || m2.html("Rendered frame <b>" + S.toString() + "</b> out of " + c.toString()), e3.next = 68, new Promise(function(e4) {
                    return setTimeout(e4, 0);
                  });
                case 68:
                  S++, e3.next = 60;
                  break;
                case 71:
                  v2.finish(), k = v2.bytesView(), k = new Blob([k], { type: "image/gif" }), p = [], this._recording = false, this.loop(), i2 || (m2.html("Done. Downloading your gif!\uD83C\uDF38"), 0 < a3 && setTimeout(function() {
                    return m2.remove();
                  }, 1000 * a3)), O.default.prototype.downloadFile(k, t3, "gif");
                case 80:
                case "end":
                  return e3.stop();
              }
          }, e, this);
        });
        var a2, r3 = function() {
          var e3 = this, i2 = arguments;
          return new Promise(function(t3, r4) {
            var o2 = a2.apply(e3, i2);
            function n2(e4) {
              l(o2, t3, r4, n2, s2, "next", e4);
            }
            function s2(e4) {
              l(o2, t3, r4, n2, s2, "throw", e4);
            }
            n2(undefined);
          });
        };
        return function(e3, t3) {
          return r3.apply(this, arguments);
        };
      }(), O.default.prototype.image = function(e3, t3, r3, o2, n2, s2, i2, a2, l2, u, c, d) {
        O.default._validateParameters("image", arguments);
        var { width: h, height: f } = e3, p = (d = d || j.CENTER, c = c || j.CENTER, e3.elt && (h = h !== undefined ? h : e3.elt.width, f = f !== undefined ? f : e3.elt.height), e3.elt && e3.elt.videoWidth && !e3.canvas && (h = h !== undefined ? h : e3.elt.videoWidth, f = f !== undefined ? f : e3.elt.videoHeight), o2 || h), n2 = n2 || f, s2 = s2 || 0, i2 = i2 || 0, a2 = v(a2 !== undefined ? a2 : h, h), h = v(l2 !== undefined ? l2 : f, f), l2 = 1;
        e3.elt && !e3.canvas && e3.elt.style.width && (l2 = e3.elt.videoWidth && !o2 ? e3.elt.videoWidth : e3.elt.width, l2 /= parseInt(e3.elt.style.width, 10)), s2 *= l2, i2 *= l2, h *= l2, a2 *= l2;
        f = y(u, c, d, (f = m.default.modeAdjust(t3, r3, p, n2, this._renderer._imageMode)).x, f.y, f.w, f.h, s2, i2, a2, h);
        this._renderer.image(e3, f.sx, f.sy, f.sw, f.sh, f.dx, f.dy, f.dw, f.dh);
      }, O.default.prototype.tint = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        O.default._validateParameters("tint", t3);
        var o2 = this.color.apply(this, t3);
        this._renderer._tint = o2.levels;
      }, O.default.prototype.noTint = function() {
        this._renderer._tint = null;
      }, O.default.prototype._getTintedImageCanvas = O.default.Renderer2D.prototype._getTintedImageCanvas, O.default.prototype.imageMode = function(e3) {
        O.default._validateParameters("imageMode", arguments), e3 !== j.CORNER && e3 !== j.CORNERS && e3 !== j.CENTER || (this._renderer._imageMode = e3);
      };
      e2 = O.default;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/friendly_errors/fes_core": 266, "../core/friendly_errors/file_errors": 267, "../core/friendly_errors/validate_params": 270, "../core/helpers": 271, "../core/main": 275, "core-js/modules/es.array.copy-within": 152, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/es.typed-array.uint8-clamped-array": 235, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238, gifenc: 245, omggif: 248, "regenerator-runtime/runtime": 252 }], 299: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = o(e2("../core/main")), n = o(e2("./filters"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function i(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      s2.default.Image = function() {
        function r3(e4, t4) {
          if (!(this instanceof r3))
            throw new TypeError("Cannot call a class as a function");
          this.width = e4, this.height = t4, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = false, this.pixels = [];
        }
        var e3, t3, o2;
        return e3 = r3, (t3 = [{ key: "pixelDensity", value: function(e4) {
          return e4 !== undefined ? (e4 <= 0 && (s2.default._friendlyParamError({ type: "INVALID_VALUE", format: { types: ["Number"] }, position: 1 }, "pixelDensity"), e4 = 1), this._pixelDensity = e4, this.width /= e4, this.height /= e4, this) : this._pixelDensity;
        } }, { key: "_animateGif", value: function(e4) {
          var t4, r4 = this.gifProperties, e4 = e4._lastRealFrameTime;
          r4.lastChangeTime === 0 && (r4.lastChangeTime = e4), r4.playing && (r4.timeDisplayed = e4 - r4.lastChangeTime, t4 = r4.frames[r4.displayIndex].delay, r4.timeDisplayed >= t4 && (t4 = Math.floor(r4.timeDisplayed / t4), r4.timeDisplayed = 0, r4.lastChangeTime = e4, r4.displayIndex += t4, r4.loopCount = Math.floor(r4.displayIndex / r4.numFrames), r4.loopLimit !== null && r4.loopCount >= r4.loopLimit ? r4.playing = false : (e4 = r4.displayIndex % r4.numFrames, this.drawingContext.putImageData(r4.frames[e4].image, 0, 0), r4.displayIndex = e4, this.setModified(true))));
        } }, { key: "_setProperty", value: function(e4, t4) {
          this[e4] = t4, this.setModified(true);
        } }, { key: "loadPixels", value: function() {
          s2.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(true);
        } }, { key: "updatePixels", value: function(e4, t4, r4, o3) {
          s2.default.Renderer2D.prototype.updatePixels.call(this, e4, t4, r4, o3), this.setModified(true);
        } }, { key: "get", value: function(e4, t4, r4, o3) {
          return s2.default._validateParameters("p5.Image.get", arguments), s2.default.Renderer2D.prototype.get.apply(this, arguments);
        } }, { key: "_getPixel", value: function() {
          for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0;r4 < e4; r4++)
            t4[r4] = arguments[r4];
          return s2.default.Renderer2D.prototype._getPixel.apply(this, t4);
        } }, { key: "set", value: function(e4, t4, r4) {
          s2.default.Renderer2D.prototype.set.call(this, e4, t4, r4), this.setModified(true);
        } }, { key: "resize", value: function(e4, t4) {
          e4 === 0 && t4 === 0 ? (e4 = this.canvas.width, t4 = this.canvas.height) : e4 === 0 ? e4 = this.canvas.width * t4 / this.canvas.height : t4 === 0 && (t4 = this.canvas.height * e4 / this.canvas.width), e4 = Math.floor(e4), t4 = Math.floor(t4);
          var r4 = document.createElement("canvas");
          if (r4.width = e4, r4.height = t4, this.gifProperties)
            for (var o3 = this.gifProperties, n2 = 0;n2 < o3.numFrames; n2++) {
              for (var s3 = this.drawingContext.createImageData(e4, t4), i2 = (d = d = c = u = l = undefined, o3.frames[n2].image), a = s3, l = 0, u = 0;u < a.height; u++)
                for (var c = 0;c < a.width; c++) {
                  var d = Math.floor(c * i2.width / a.width), d = 4 * (Math.floor(u * i2.height / a.height) * i2.width + d);
                  a.data[l++] = i2.data[d++], a.data[l++] = i2.data[d++], a.data[l++] = i2.data[d++], a.data[l++] = i2.data[+d];
                }
              o3.frames[n2].image = s3;
            }
          r4.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r4.width, r4.height), this.canvas.width = this.width = e4, this.canvas.height = this.height = t4, this.drawingContext.drawImage(r4, 0, 0, e4, t4, 0, 0, e4, t4), 0 < this.pixels.length && this.loadPixels(), this.setModified(true);
        } }, { key: "copy", value: function() {
          for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0;r4 < e4; r4++)
            t4[r4] = arguments[r4];
          s2.default.prototype.copy.apply(this, t4);
        } }, { key: "mask", value: function(e4) {
          var t4 = this.drawingContext.globalCompositeOperation, r4 = 1, o3 = [e4 = e4 === undefined ? this : e4, 0, 0, (r4 = e4 instanceof s2.default.Renderer ? e4._pInst._pixelDensity : r4) * e4.width, r4 * e4.height, 0, 0, this.width, this.height];
          if (this.drawingContext.globalCompositeOperation = "destination-in", this.gifProperties) {
            for (var n2 = 0;n2 < this.gifProperties.frames.length; n2++)
              this.drawingContext.putImageData(this.gifProperties.frames[n2].image, 0, 0), this.copy.apply(this, o3), this.gifProperties.frames[n2].image = this.drawingContext.getImageData(0, 0, this.width, this.height);
            this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image, 0, 0);
          } else
            this.copy.apply(this, o3);
          this.drawingContext.globalCompositeOperation = t4, this.setModified(true);
        } }, { key: "filter", value: function(e4, t4) {
          n.default.apply(this.canvas, n.default[e4], t4), this.setModified(true);
        } }, { key: "blend", value: function() {
          for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0;r4 < e4; r4++)
            t4[r4] = arguments[r4];
          s2.default._validateParameters("p5.Image.blend", arguments), s2.default.prototype.blend.apply(this, t4), this.setModified(true);
        } }, { key: "setModified", value: function(e4) {
          this._modified = e4;
        } }, { key: "isModified", value: function() {
          return this._modified;
        } }, { key: "save", value: function(e4, t4) {
          this.gifProperties ? s2.default.prototype.encodeAndDownloadGif(this, e4) : s2.default.prototype.saveCanvas(this.canvas, e4, t4);
        } }, { key: "reset", value: function() {
          var e4;
          this.gifProperties && ((e4 = this.gifProperties).playing = true, e4.timeSinceStart = 0, e4.timeDisplayed = 0, e4.lastChangeTime = 0, e4.loopCount = 0, e4.displayIndex = 0, this.drawingContext.putImageData(e4.frames[0].image, 0, 0));
        } }, { key: "getCurrentFrame", value: function() {
          var e4;
          if (this.gifProperties)
            return (e4 = this.gifProperties).displayIndex % e4.numFrames;
        } }, { key: "setFrame", value: function(e4) {
          var t4;
          this.gifProperties && (e4 < (t4 = this.gifProperties).numFrames && 0 <= e4 ? (t4.timeDisplayed = 0, t4.lastChangeTime = 0, t4.displayIndex = e4, this.drawingContext.putImageData(t4.frames[e4].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero."));
        } }, { key: "numFrames", value: function() {
          if (this.gifProperties)
            return this.gifProperties.numFrames;
        } }, { key: "play", value: function() {
          this.gifProperties && (this.gifProperties.playing = true);
        } }, { key: "pause", value: function() {
          this.gifProperties && (this.gifProperties.playing = false);
        } }, { key: "delay", value: function(e4, t4) {
          if (this.gifProperties) {
            var r4 = this.gifProperties;
            if (t4 < r4.numFrames && 0 <= t4)
              r4.frames[t4].delay = e4;
            else {
              var o3 = true, t4 = false, n2 = undefined;
              try {
                for (var s3, i2 = r4.frames[Symbol.iterator]();!(o3 = (s3 = i2.next()).done); o3 = true)
                  s3.value.delay = e4;
              } catch (e5) {
                t4 = true, n2 = e5;
              } finally {
                try {
                  o3 || i2.return == null || i2.return();
                } finally {
                  if (t4)
                    throw n2;
                }
              }
            }
          }
        } }]) && i(e3.prototype, t3), o2 && i(e3, o2), r3;
      }();
      e2 = s2.default.Image;
      r2.default = e2;
    }, { "../core/main": 275, "./filters": 296, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 300: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.filter"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var f = o(e2("../core/main")), a = o(e2("./filters"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      e2("../color/p5.Color"), f.default.prototype.pixels = [], f.default.prototype.blend = function() {
        for (var e3, t3 = arguments.length, r3 = new Array(t3), o2 = 0;o2 < t3; o2++)
          r3[o2] = arguments[o2];
        f.default._validateParameters("blend", r3), this._renderer ? (e3 = this._renderer).blend.apply(e3, r3) : f.default.Renderer2D.prototype.blend.apply(this, r3);
      }, f.default.prototype.copy = function() {
        for (var e3, t3, r3, o2, n, s2, i, a2, l, u = arguments.length, c = new Array(u), d = 0;d < u; d++)
          c[d] = arguments[d];
        if (f.default._validateParameters("copy", c), c.length === 9)
          e3 = c[0], t3 = c[1], r3 = c[2], o2 = c[3], n = c[4], s2 = c[5], i = c[6], a2 = c[7], l = c[8];
        else {
          if (c.length !== 8)
            throw new Error("Signature not supported");
          e3 = this, t3 = c[0], r3 = c[1], o2 = c[2], n = c[3], s2 = c[4], i = c[5], a2 = c[6], l = c[7];
        }
        f.default.prototype._copyHelper(this, e3, t3, r3, o2, n, s2, i, a2, l);
      }, f.default.prototype._copyHelper = function(e3, t3, r3, o2, n, s2, i, a2, l, u) {
        var c = t3.canvas.width / t3.width, d = 0, h = 0;
        t3._renderer && t3._renderer.isP3D && (d = t3.width / 2, h = t3.height / 2), e3._renderer && e3._renderer.isP3D ? f.default.RendererGL.prototype.image.call(e3._renderer, t3, r3 + d, o2 + h, n, s2, i, a2, l, u) : e3.drawingContext.drawImage(t3.canvas, c * (r3 + d), c * (o2 + h), c * n, c * s2, i, a2, l, u);
      }, f.default.prototype.getFilterGraphicsLayer = function() {
        return this._renderer.getFilterGraphicsLayer();
      }, f.default.prototype.filter = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        f.default._validateParameters("filter", arguments);
        var o2 = function() {
          var e4, t4 = { shader: undefined, operation: undefined, value: undefined, useWebGL: true };
          return (arguments.length <= 0 ? undefined : arguments[0]) instanceof f.default.Shader ? t4.shader = arguments.length <= 0 ? undefined : arguments[0] : (t4.operation = arguments.length <= 0 ? undefined : arguments[0], 1 < arguments.length && typeof (arguments.length <= 1 ? undefined : arguments[1]) == "number" && (t4.value = arguments.length <= 1 ? undefined : arguments[1]), ((e4 = arguments.length - 1) < 0 || arguments.length <= e4 ? undefined : arguments[e4]) === false && (t4.useWebGL = false)), t4;
        }.apply(undefined, t3), n = o2.shader, s2 = o2.operation, i = o2.value, o2 = o2.useWebGL;
        this._renderer.isP3D && n ? f.default.RendererGL.prototype.filter.call(this._renderer, n) : o2 || this._renderer.isP3D ? (!o2 && this._renderer.isP3D && console.warn("filter() with useWebGL=false is not supported in WEBGL"), this._renderer.isP3D ? f.default.RendererGL.prototype.filter.call(this._renderer, s2, i) : ((n = this.getFilterGraphicsLayer()).copy(this._renderer, 0, 0, this.width, this.height, -this.width / 2, -this.height / 2, this.width, this.height), this._renderer.clear(), this._renderer.resetMatrix(), n.filter.apply(n, t3), this._renderer._pInst.image(n, 0, 0), n.clear())) : this.canvas !== undefined ? a.default.apply(this.canvas, a.default[s2], i) : a.default.apply(this.elt, a.default[s2], i);
      }, f.default.prototype.get = function(e3, t3, r3, o2) {
        var n;
        return f.default._validateParameters("get", arguments), (n = this._renderer).get.apply(n, arguments);
      }, f.default.prototype.loadPixels = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        f.default._validateParameters("loadPixels", t3), this._renderer.loadPixels();
      }, f.default.prototype.set = function(e3, t3, r3) {
        this._renderer.set(e3, t3, r3);
      }, f.default.prototype.updatePixels = function(e3, t3, r3, o2) {
        f.default._validateParameters("updatePixels", arguments), this.pixels.length !== 0 && this._renderer.updatePixels(e3, t3, r3, o2);
      };
      e2 = f.default;
      r2.default = e2;
    }, { "../color/p5.Color": 262, "../core/main": 275, "./filters": 296, "core-js/modules/es.array.filter": 155 }], 301: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/web.url"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/web.url"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var v = s2(e2("../core/main")), m = (e2("whatwg-fetch"), e2("es6-promise/auto"), s2(e2("fetch-jsonp"))), n = s2(e2("file-saver"));
      function s2(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function y(e3) {
        return (y = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function g(e3) {
        return e3.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
      }
      function i(e3, t3) {
        t3 && t3 !== true && t3 !== "true" || (t3 = "");
        var r3 = "";
        return (e3 = e3 || "untitled") && e3.includes(".") && (r3 = e3.split(".").pop()), t3 && r3 !== t3 && (r3 = t3, e3 = "".concat(e3, ".").concat(r3)), [e3, r3];
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), v.default.prototype.loadJSON = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        v.default._validateParameters("loadJSON", t3);
        for (var o2, n2, s3, i2 = t3[0], a = {}, l = "json", u = 1;u < t3.length; u++) {
          var c = t3[u];
          typeof c == "string" ? c !== "jsonp" && c !== "json" || (l = c) : typeof c == "function" ? o2 ? n2 = c : o2 = c : y(c) === "object" && (c.hasOwnProperty("jsonpCallback") || c.hasOwnProperty("jsonpCallbackFunction")) && (l = "jsonp", s3 = c);
        }
        var d = this;
        return this.httpDo(i2, "GET", s3, l, function(e4) {
          for (var t4 in e4)
            a[t4] = e4[t4];
          o2 !== undefined && o2(e4), d._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(5, i2), !n2)
            throw e4;
          n2(e4);
        }), a;
      }, v.default.prototype.loadStrings = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        v.default._validateParameters("loadStrings", t3);
        for (var n2, o2, s3 = [], i2 = 1;i2 < t3.length; i2++) {
          var a = t3[i2];
          typeof a == "function" && (n2 === undefined ? n2 = a : o2 === undefined && (o2 = a));
        }
        var l = this;
        return v.default.prototype.httpDo.call(this, t3[0], "GET", "text", function(e4) {
          for (var t4 = e4.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r4 = 0, o3 = t4.length;r4 < o3; r4 += 32768)
            Array.prototype.push.apply(s3, t4.slice(r4, Math.min(r4 + 32768, o3)));
          n2 !== undefined && n2(s3), l._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(3, e4), !o2)
            throw e4;
          o2(e4);
        }), s3;
      }, v.default.prototype.loadTable = function(t3) {
        var f, r3, p, e3 = [], m2 = false, o2 = t3.substring(t3.lastIndexOf(".") + 1, t3.length);
        o2 === "csv" ? p = "," : o2 === "ssv" ? p = ";" : o2 === "tsv" && (p = "\t");
        for (var n2 = 1;n2 < arguments.length; n2++)
          typeof arguments[n2] == "function" ? f === undefined ? f = arguments[n2] : r3 === undefined && (r3 = arguments[n2]) : typeof arguments[n2] == "string" && (e3.push(arguments[n2]), arguments[n2] === "header" && (m2 = true), arguments[n2] === "csv" ? p = "," : arguments[n2] === "ssv" ? p = ";" : arguments[n2] === "tsv" && (p = "\t"));
        var y2 = new v.default.Table, g2 = this;
        return this.httpDo(t3, "GET", "table", function(e4) {
          for (var t4, r4, o3 = {}, n3 = 0, s3 = [], i2 = 0, a = null, l = function() {
            o3.currentState = n3, o3.token = "";
          }, u = function() {
            a.push(o3.token), l();
          }, c = function() {
            o3.currentState = 4, s3.push(a), a = null;
          };; ) {
            if ((t4 = e4[i2++]) == null) {
              if (o3.escaped)
                throw new Error("Unclosed quote in file.");
              if (a) {
                u(), c();
                break;
              }
            }
            if (a === null && (o3.escaped = false, a = [], l()), o3.currentState === n3) {
              if (t4 === '"') {
                o3.escaped = true, o3.currentState = 1;
                continue;
              }
              o3.currentState = 1;
            }
            if (o3.currentState === 1 && o3.escaped)
              if (t4 === '"')
                e4[i2] === '"' ? (o3.token += '"', i2++) : (o3.escaped = false, o3.currentState = 2);
              else {
                if (t4 === "\r")
                  continue;
                o3.token += t4;
              }
            else
              t4 === "\r" ? (e4[i2] === "\n" && i2++, u(), c()) : t4 === "\n" ? (u(), c()) : t4 === p ? u() : o3.currentState === 1 && (o3.token += t4);
          }
          if (m2)
            y2.columns = s3.shift();
          else
            for (var d = 0;d < s3[0].length; d++)
              y2.columns[d] = "null";
          for (var h = 0;h < s3.length; h++)
            (s3[h].length !== 1 || s3[h][0] !== "undefined" && s3[h][0] !== "") && ((r4 = new v.default.TableRow).arr = s3[h], r4.obj = function(r5, e5) {
              if ((e5 = e5 || []) === undefined)
                for (var t5 = 0;t5 < r5.length; t5++)
                  e5[t5.toString()] = t5;
              return Object.fromEntries(e5.map(function(e6, t6) {
                return [e6, r5[t6]];
              }));
            }(s3[h], y2.columns), y2.addRow(r4));
          typeof f == "function" && f(y2), g2._decrementPreload();
        }, function(e4) {
          v.default._friendlyFileLoadError(2, t3), r3 ? r3(e4) : console.error(e4);
        }), y2;
      }, v.default.prototype.loadXML = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        for (var o2, n2, s3 = new v.default.XML, i2 = 1;i2 < t3.length; i2++) {
          var a = t3[i2];
          typeof a == "function" && (o2 === undefined ? o2 = a : n2 === undefined && (n2 = a));
        }
        var l = this;
        return this.httpDo(t3[0], "GET", "xml", function(e4) {
          for (var t4 in e4)
            s3[t4] = e4[t4];
          o2 !== undefined && o2(s3), l._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(1, e4), !n2)
            throw e4;
          n2(e4);
        }), s3;
      }, v.default.prototype.loadBytes = function(t3, r3, o2) {
        var n2 = {}, s3 = this;
        return this.httpDo(t3, "GET", "arrayBuffer", function(e3) {
          n2.bytes = new Uint8Array(e3), typeof r3 == "function" && r3(n2), s3._decrementPreload();
        }, function(e3) {
          if (v.default._friendlyFileLoadError(6, t3), !o2)
            throw e3;
          o2(e3);
        }), n2;
      }, v.default.prototype.httpGet = function() {
        v.default._validateParameters("httpGet", arguments);
        var e3 = Array.prototype.slice.call(arguments);
        return e3.splice(1, 0, "GET"), v.default.prototype.httpDo.apply(this, e3);
      }, v.default.prototype.httpPost = function() {
        v.default._validateParameters("httpPost", arguments);
        var e3 = Array.prototype.slice.call(arguments);
        return e3.splice(1, 0, "POST"), v.default.prototype.httpDo.apply(this, e3);
      }, v.default.prototype.httpDo = function() {
        for (var r3, e3, t3, o2 = {}, n2 = 0, s3 = "text/plain", i2 = arguments.length - 1;0 < i2 && typeof (i2 < 0 || arguments.length <= i2 ? undefined : arguments[i2]) == "function"; i2--)
          n2++;
        var a = arguments.length - n2, l = arguments.length <= 0 ? undefined : arguments[0];
        if (a == 2 && typeof l == "string" && y(arguments.length <= 1 ? undefined : arguments[1]) === "object")
          p = new Request(l, arguments.length <= 1 ? undefined : arguments[1]), e3 = arguments.length <= 2 ? undefined : arguments[2], t3 = arguments.length <= 3 ? undefined : arguments[3];
        else {
          for (var u, c = "GET", d = 1;d < arguments.length; d++) {
            var h = d < 0 || arguments.length <= d ? undefined : arguments[d];
            if (typeof h == "string")
              h === "GET" || h === "POST" || h === "PUT" || h === "DELETE" ? c = h : h === "json" || h === "jsonp" || h === "binary" || h === "arrayBuffer" || h === "xml" || h === "text" || h === "table" ? r3 = h : u = h;
            else if (typeof h == "number")
              u = h.toString();
            else if (y(h) === "object")
              if (h.hasOwnProperty("jsonpCallback") || h.hasOwnProperty("jsonpCallbackFunction"))
                for (var f in h)
                  o2[f] = h[f];
              else
                s3 = h instanceof v.default.XML ? (u = h.serialize(), "application/xml") : (u = JSON.stringify(h), "application/json");
            else
              typeof h == "function" && (e3 ? t3 = h : e3 = h);
          }
          var a = c === "GET" ? new Headers : new Headers({ "Content-Type": s3 }), p = new Request(l, { method: c, mode: "cors", body: u, headers: a });
        }
        return (a = (a = (r3 = r3 || (l.includes("json") ? "json" : l.includes("xml") ? "xml" : "text")) === "jsonp" ? (0, m.default)(l, o2) : fetch(p)).then(function(e4) {
          if (!e4.ok)
            throw (t4 = new Error(e4.body)).status = e4.status, t4.ok = false, t4;
          var t4 = 0;
          switch ((t4 = r3 !== "jsonp" ? e4.headers.get("content-length") : t4) && 64000000 < t4 && v.default._friendlyFileLoadError(7, l), r3) {
            case "json":
            case "jsonp":
              return e4.json();
            case "binary":
              return e4.blob();
            case "arrayBuffer":
              return e4.arrayBuffer();
            case "xml":
              return e4.text().then(function(e5) {
                e5 = new DOMParser().parseFromString(e5, "text/xml");
                return new v.default.XML(e5.documentElement);
              });
            default:
              return e4.text();
          }
        })).then(e3 || function() {
        }), a.catch(t3 || console.error), a;
      }, window.URL = window.URL || window.webkitURL, v.default.prototype._pWriters = [], v.default.prototype.createWriter = function(e3, t3) {
        var r3, o2;
        for (o2 in v.default.prototype._pWriters)
          if (v.default.prototype._pWriters[o2].name === e3)
            return r3 = new v.default.PrintWriter(e3 + this.millis(), t3), v.default.prototype._pWriters.push(r3), r3;
        return r3 = new v.default.PrintWriter(e3, t3), v.default.prototype._pWriters.push(r3), r3;
      }, v.default.PrintWriter = function(r3, o2) {
        var n2 = this;
        this.name = r3, this.content = "", this.write = function(e3) {
          this.content += e3;
        }, this.print = function(e3) {
          this.content += "".concat(e3, "\n");
        }, this.clear = function() {
          this.content = "";
        }, this.close = function() {
          var e3, t3 = [];
          for (e3 in t3.push(this.content), v.default.prototype.writeFile(t3, r3, o2), v.default.prototype._pWriters)
            v.default.prototype._pWriters[e3].name === this.name && v.default.prototype._pWriters.splice(e3, 1);
          n2.clear(), n2 = {};
        };
      }, v.default.prototype.save = function(e3, t3, r3) {
        var o2 = arguments, n2 = (this._curElement || this).elt;
        if (o2.length === 0)
          v.default.prototype.saveCanvas(n2);
        else if (o2[0] instanceof v.default.Renderer || o2[0] instanceof v.default.Graphics)
          v.default.prototype.saveCanvas(o2[0].elt, o2[1], o2[2]);
        else if (o2.length === 1 && typeof o2[0] == "string")
          v.default.prototype.saveCanvas(n2, o2[0]);
        else
          switch (i(o2[1], o2[2])[1]) {
            case "json":
              return void v.default.prototype.saveJSON(o2[0], o2[1], o2[2]);
            case "txt":
              return void v.default.prototype.saveStrings(o2[0], o2[1], o2[2]);
            default:
              o2[0] instanceof Array ? v.default.prototype.saveStrings(o2[0], o2[1], o2[2]) : o2[0] instanceof v.default.Table ? v.default.prototype.saveTable(o2[0], o2[1], o2[2]) : o2[0] instanceof v.default.Image ? v.default.prototype.saveCanvas(o2[0].canvas, o2[1]) : o2[0] instanceof v.default.SoundFile && v.default.prototype.saveSound(o2[0], o2[1], o2[2], o2[3]);
          }
      }, v.default.prototype.saveJSON = function(e3, t3, r3) {
        v.default._validateParameters("saveJSON", arguments), r3 = r3 ? JSON.stringify(e3) : JSON.stringify(e3, undefined, 2), this.saveStrings(r3.split("\n"), t3, "json");
      }, v.default.prototype.saveJSONObject = v.default.prototype.saveJSON, v.default.prototype.saveJSONArray = v.default.prototype.saveJSON, v.default.prototype.saveStrings = function(e3, t3, r3, o2) {
        v.default._validateParameters("saveStrings", arguments);
        for (var n2 = this.createWriter(t3, r3 || "txt"), s3 = 0;s3 < e3.length; s3++)
          o2 ? n2.write(e3[s3] + "\r\n") : n2.write(e3[s3] + "\n");
        n2.close(), n2.clear();
      }, v.default.prototype.saveTable = function(e3, t3, r3) {
        v.default._validateParameters("saveTable", arguments), o2 = r3 === undefined ? t3.substring(t3.lastIndexOf(".") + 1, t3.length) : r3;
        var o2, n2 = this.createWriter(t3, o2), s3 = e3.columns, i2 = o2 === "tsv" ? "\t" : ",";
        if (o2 !== "html") {
          if (s3[0] !== "0") {
            for (var a = 0;a < s3.length; a++)
              a < s3.length - 1 ? n2.write(s3[a] + i2) : n2.write(s3[a]);
            n2.write("\n");
          }
          for (var l = 0;l < e3.rows.length; l++) {
            for (var u = undefined, u = 0;u < e3.rows[l].arr.length; u++)
              u < e3.rows[l].arr.length - 1 ? o2 === "csv" && String(e3.rows[l].arr[u]).includes(",") ? n2.write('"' + e3.rows[l].arr[u] + '"' + i2) : n2.write(e3.rows[l].arr[u] + i2) : o2 === "csv" && String(e3.rows[l].arr[u]).includes(",") ? n2.write('"' + e3.rows[l].arr[u] + '"') : n2.write(e3.rows[l].arr[u]);
            n2.write("\n");
          }
        } else {
          n2.print("<html>"), n2.print("<head>");
          if (n2.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n2.print("</head>"), n2.print("<body>"), n2.print("  <table>"), s3[0] !== "0") {
            n2.print("    <tr>");
            for (var c = 0;c < s3.length; c++) {
              var d = g(s3[c]);
              n2.print("      <td>".concat(d)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          for (var h = 0;h < e3.rows.length; h++) {
            n2.print("    <tr>");
            for (var f = 0;f < e3.columns.length; f++) {
              var p = g(e3.rows[h].getString(f));
              n2.print("      <td>".concat(p)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          n2.print("  </table>"), n2.print("</body>"), n2.print("</html>");
        }
        n2.close(), n2.clear();
      }, v.default.prototype.writeFile = function(e3, t3, r3) {
        var o2 = "application/octet-stream", e3 = (v.default.prototype._isSafari() && (o2 = "text/plain"), new Blob(e3, { type: o2 }));
        v.default.prototype.downloadFile(e3, t3, r3);
      }, v.default.prototype.downloadFile = function(e3, t3, r3) {
        var o2, t3 = i(t3, r3), r3 = t3[0];
        e3 instanceof Blob ? n.default.saveAs(e3, r3) : ((o2 = document.createElement("a")).href = e3, o2.download = r3, o2.onclick = function(e4) {
          document.body.removeChild(e4.target), e4.stopPropagation();
        }, o2.style.display = "none", document.body.appendChild(o2), v.default.prototype._isSafari() && (e3 = (e3 = `Hello, Safari user! To download this file...
1. Go to File --> Save As.
2. Choose "Page Source" as the Format.
`) + '3. Name it with this extension: ."'.concat(t3[1], '"'), alert(e3)), o2.click());
      }, v.default.prototype._checkFileExtension = i, v.default.prototype._isSafari = function() {
        return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
      };
      e2 = v.default;
      r2.default = e2;
    }, { "../core/friendly_errors/fes_core": 266, "../core/friendly_errors/file_errors": 267, "../core/friendly_errors/validate_params": 270, "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.last-index-of": 163, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.function.name": 168, "core-js/modules/es.object.from-entries": 177, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.promise": 183, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/web.dom-collections.iterator": 238, "core-js/modules/web.url": 240, "es6-promise/auto": 241, "fetch-jsonp": 243, "file-saver": 244, "whatwg-fetch": 253 }], 302: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      n.default.Table = function() {
        function t3(e4) {
          if (!(this instanceof t3))
            throw new TypeError("Cannot call a class as a function");
          this.columns = [], this.rows = [];
        }
        var e3, r3, o;
        return e3 = t3, (r3 = [{ key: "addRow", value: function(e4) {
          e4 = e4 || new n.default.TableRow;
          if (e4.arr === undefined || e4.obj === undefined)
            throw new Error("invalid TableRow: ".concat(e4));
          return (e4.table = this).rows.push(e4), e4;
        } }, { key: "removeRow", value: function(e4) {
          this.rows[e4].table = null;
          e4 = this.rows.splice(e4 + 1, this.rows.length);
          this.rows.pop(), this.rows = this.rows.concat(e4);
        } }, { key: "getRow", value: function(e4) {
          return this.rows[e4];
        } }, { key: "getRows", value: function() {
          return this.rows;
        } }, { key: "findRow", value: function(e4, t4) {
          if (typeof t4 == "string") {
            for (var r4 = 0;r4 < this.rows.length; r4++)
              if (this.rows[r4].obj[t4] === e4)
                return this.rows[r4];
          } else
            for (var o2 = 0;o2 < this.rows.length; o2++)
              if (this.rows[o2].arr[t4] === e4)
                return this.rows[o2];
          return null;
        } }, { key: "findRows", value: function(e4, t4) {
          var r4 = [];
          if (typeof t4 == "string")
            for (var o2 = 0;o2 < this.rows.length; o2++)
              this.rows[o2].obj[t4] === e4 && r4.push(this.rows[o2]);
          else
            for (var n2 = 0;n2 < this.rows.length; n2++)
              this.rows[n2].arr[t4] === e4 && r4.push(this.rows[n2]);
          return r4;
        } }, { key: "matchRow", value: function(e4, t4) {
          if (typeof t4 == "number") {
            for (var r4 = 0;r4 < this.rows.length; r4++)
              if (this.rows[r4].arr[t4].match(e4))
                return this.rows[r4];
          } else
            for (var o2 = 0;o2 < this.rows.length; o2++)
              if (this.rows[o2].obj[t4].match(e4))
                return this.rows[o2];
          return null;
        } }, { key: "matchRows", value: function(e4, t4) {
          var r4 = [];
          if (typeof t4 == "number")
            for (var o2 = 0;o2 < this.rows.length; o2++)
              this.rows[o2].arr[t4].match(e4) && r4.push(this.rows[o2]);
          else
            for (var n2 = 0;n2 < this.rows.length; n2++)
              this.rows[n2].obj[t4].match(e4) && r4.push(this.rows[n2]);
          return r4;
        } }, { key: "getColumn", value: function(e4) {
          var t4 = [];
          if (typeof e4 == "string")
            for (var r4 = 0;r4 < this.rows.length; r4++)
              t4.push(this.rows[r4].obj[e4]);
          else
            for (var o2 = 0;o2 < this.rows.length; o2++)
              t4.push(this.rows[o2].arr[e4]);
          return t4;
        } }, { key: "clearRows", value: function() {
          delete this.rows, this.rows = [];
        } }, { key: "addColumn", value: function(e4) {
          this.columns.push(e4 || null);
        } }, { key: "getColumnCount", value: function() {
          return this.columns.length;
        } }, { key: "getRowCount", value: function() {
          return this.rows.length;
        } }, { key: "removeTokens", value: function(e4, t4) {
          for (var r4 = [], o2 = 0;o2 < e4.length; o2++)
            r4.push(e4.charAt(o2).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
          var n2 = new RegExp(r4.join("|"), "g");
          if (t4 === undefined)
            for (var s3 = 0;s3 < this.columns.length; s3++)
              for (var i = 0;i < this.rows.length; i++) {
                var a = (a = this.rows[i].arr[s3]).replace(n2, "");
                this.rows[i].arr[s3] = a, this.rows[i].obj[this.columns[s3]] = a;
              }
          else if (typeof t4 == "string")
            for (var l = 0;l < this.rows.length; l++) {
              var u = (u = this.rows[l].obj[t4]).replace(n2, ""), c = (this.rows[l].obj[t4] = u, this.columns.indexOf(t4));
              this.rows[l].arr[c] = u;
            }
          else
            for (var d = 0;d < this.rows.length; d++) {
              var h = (h = this.rows[d].arr[t4]).replace(n2, "");
              this.rows[d].arr[t4] = h, this.rows[d].obj[this.columns[t4]] = h;
            }
        } }, { key: "trim", value: function(e4) {
          var t4 = new RegExp(" ", "g");
          if (e4 === undefined)
            for (var r4 = 0;r4 < this.columns.length; r4++)
              for (var o2 = 0;o2 < this.rows.length; o2++) {
                var n2 = (n2 = this.rows[o2].arr[r4]).replace(t4, "");
                this.rows[o2].arr[r4] = n2, this.rows[o2].obj[this.columns[r4]] = n2;
              }
          else if (typeof e4 == "string")
            for (var s3 = 0;s3 < this.rows.length; s3++) {
              var i = (i = this.rows[s3].obj[e4]).replace(t4, ""), a = (this.rows[s3].obj[e4] = i, this.columns.indexOf(e4));
              this.rows[s3].arr[a] = i;
            }
          else
            for (var l = 0;l < this.rows.length; l++) {
              var u = (u = this.rows[l].arr[e4]).replace(t4, "");
              this.rows[l].arr[e4] = u, this.rows[l].obj[this.columns[e4]] = u;
            }
        } }, { key: "removeColumn", value: function(e4) {
          typeof e4 == "string" ? r4 = this.columns.indexOf(t4 = e4) : t4 = this.columns[r4 = e4];
          var t4, r4, e4 = this.columns.splice(r4 + 1, this.columns.length);
          this.columns.pop(), this.columns = this.columns.concat(e4);
          for (var o2 = 0;o2 < this.rows.length; o2++) {
            var n2 = this.rows[o2].arr, s3 = n2.splice(r4 + 1, n2.length);
            n2.pop(), this.rows[o2].arr = n2.concat(s3), delete this.rows[o2].obj[t4];
          }
        } }, { key: "set", value: function(e4, t4, r4) {
          this.rows[e4].set(t4, r4);
        } }, { key: "setNum", value: function(e4, t4, r4) {
          this.rows[e4].setNum(t4, r4);
        } }, { key: "setString", value: function(e4, t4, r4) {
          this.rows[e4].setString(t4, r4);
        } }, { key: "get", value: function(e4, t4) {
          return this.rows[e4].get(t4);
        } }, { key: "getNum", value: function(e4, t4) {
          return this.rows[e4].getNum(t4);
        } }, { key: "getString", value: function(e4, t4) {
          return this.rows[e4].getString(t4);
        } }, { key: "getObject", value: function(e4) {
          for (var t4, r4 = {}, o2 = 0;o2 < this.rows.length; o2++)
            if (t4 = this.rows[o2].obj, typeof e4 == "string") {
              if (!(0 <= this.columns.indexOf(e4)))
                throw new Error('This table has no column named "'.concat(e4, '"'));
              r4[t4[e4]] = t4;
            } else
              r4[o2] = this.rows[o2].obj;
          return r4;
        } }, { key: "getArray", value: function() {
          for (var e4 = [], t4 = 0;t4 < this.rows.length; t4++)
            e4.push(this.rows[t4].arr);
          return e4;
        } }]) && s2(e3.prototype, r3), o && s2(e3, o), t3;
      }();
      e2 = n.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.splice": 167, "core-js/modules/es.regexp.constructor": 186, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.replace": 196 }], 303: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      e2.default.TableRow = function() {
        function o(e4, t4) {
          if (!(this instanceof o))
            throw new TypeError("Cannot call a class as a function");
          var r4 = [];
          e4 && (r4 = e4.split(t4 = t4 || ",")), this.arr = r4, this.obj = Object.fromEntries(r4.entries()), this.table = null;
        }
        var e3, t3, r3;
        return e3 = o, (t3 = [{ key: "set", value: function(e4, t4) {
          if (typeof e4 == "string") {
            var r4 = this.table.columns.indexOf(e4);
            if (!(0 <= r4))
              throw new Error('This table has no column named "'.concat(e4, '"'));
            this.obj[e4] = t4, this.arr[r4] = t4;
          } else {
            if (!(e4 < this.table.columns.length))
              throw new Error("Column #".concat(e4, " is out of the range of this table"));
            this.arr[e4] = t4;
            r4 = this.table.columns[e4];
            this.obj[r4] = t4;
          }
        } }, { key: "setNum", value: function(e4, t4) {
          t4 = parseFloat(t4);
          this.set(e4, t4);
        } }, { key: "setString", value: function(e4, t4) {
          t4 = t4.toString();
          this.set(e4, t4);
        } }, { key: "get", value: function(e4) {
          return (typeof e4 == "string" ? this.obj : this.arr)[e4];
        } }, { key: "getNum", value: function(e4) {
          var t4 = typeof e4 == "string" ? parseFloat(this.obj[e4]) : parseFloat(this.arr[e4]);
          if (t4.toString() === "NaN")
            throw "Error: ".concat(this.obj[e4], " is NaN (Not a Number)");
          return t4;
        } }, { key: "getString", value: function(e4) {
          return (typeof e4 == "string" ? this.obj : this.arr)[e4].toString();
        } }]) && n(e3.prototype, t3), r3 && n(e3, r3), o;
      }();
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.from-entries": 177, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.split": 198, "core-js/modules/web.dom-collections.iterator": 238 }], 304: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var a = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      function s2(e3) {
        for (var t3 = [], r3 = 0;r3 < e3.length; r3++)
          t3.push(new a.default.XML(e3[r3]));
        return t3;
      }
      a.default.XML = function() {
        function t3(e4) {
          if (!(this instanceof t3))
            throw new TypeError("Cannot call a class as a function");
          e4 ? this.DOM = e4 : (e4 = document.implementation.createDocument(null, "doc"), this.DOM = e4.createElement("root"));
        }
        var e3, r3, o;
        return e3 = t3, (r3 = [{ key: "getParent", value: function() {
          return new a.default.XML(this.DOM.parentElement);
        } }, { key: "getName", value: function() {
          return this.DOM.tagName;
        } }, { key: "setName", value: function(e4) {
          var t4 = this.DOM.innerHTML, r4 = this.DOM.attributes, o2 = document.implementation.createDocument(null, "default").createElement(e4);
          o2.innerHTML = t4;
          for (var n2 = 0;n2 < r4.length; n2++)
            o2.setAttribute(r4[n2].nodeName, r4.nodeValue);
          this.DOM = o2;
        } }, { key: "hasChildren", value: function() {
          return 0 < this.DOM.children.length;
        } }, { key: "listChildren", value: function() {
          for (var e4 = [], t4 = 0;t4 < this.DOM.childNodes.length; t4++)
            e4.push(this.DOM.childNodes[t4].nodeName);
          return e4;
        } }, { key: "getChildren", value: function(e4) {
          return s2(e4 ? this.DOM.getElementsByTagName(e4) : this.DOM.children);
        } }, { key: "getChild", value: function(e4) {
          if (typeof e4 != "string")
            return new a.default.XML(this.DOM.children[e4]);
          var t4 = true, r4 = false, o2 = undefined;
          try {
            for (var n2, s3 = this.DOM.children[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i = n2.value;
              if (i.tagName === e4)
                return new a.default.XML(i);
            }
          } catch (e5) {
            r4 = true, o2 = e5;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o2;
            }
          }
        } }, { key: "addChild", value: function(e4) {
          e4 instanceof a.default.XML && this.DOM.appendChild(e4.DOM);
        } }, { key: "removeChild", value: function(e4) {
          var t4 = -1;
          if (typeof e4 == "string") {
            for (var r4 = 0;r4 < this.DOM.children.length; r4++)
              if (this.DOM.children[r4].tagName === e4) {
                t4 = r4;
                break;
              }
          } else
            t4 = e4;
          t4 !== -1 && this.DOM.removeChild(this.DOM.children[t4]);
        } }, { key: "getAttributeCount", value: function() {
          return this.DOM.attributes.length;
        } }, { key: "listAttributes", value: function() {
          var e4 = [], t4 = true, r4 = false, o2 = undefined;
          try {
            for (var n2, s3 = this.DOM.attributes[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i = n2.value;
              e4.push(i.nodeName);
            }
          } catch (e5) {
            r4 = true, o2 = e5;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o2;
            }
          }
          return e4;
        } }, { key: "hasAttribute", value: function(e4) {
          var t4 = {}, r4 = true, o2 = false, n2 = undefined;
          try {
            for (var s3, i = this.DOM.attributes[Symbol.iterator]();!(r4 = (s3 = i.next()).done); r4 = true) {
              var a2 = s3.value;
              t4[a2.nodeName] = a2.nodeValue;
            }
          } catch (e5) {
            o2 = true, n2 = e5;
          } finally {
            try {
              r4 || i.return == null || i.return();
            } finally {
              if (o2)
                throw n2;
            }
          }
          return !!t4[e4];
        } }, { key: "getNum", value: function(e4, t4) {
          var r4 = {}, o2 = true, n2 = false, s3 = undefined;
          try {
            for (var i, a2 = this.DOM.attributes[Symbol.iterator]();!(o2 = (i = a2.next()).done); o2 = true) {
              var l = i.value;
              r4[l.nodeName] = l.nodeValue;
            }
          } catch (e5) {
            n2 = true, s3 = e5;
          } finally {
            try {
              o2 || a2.return == null || a2.return();
            } finally {
              if (n2)
                throw s3;
            }
          }
          return Number(r4[e4]) || t4 || 0;
        } }, { key: "getString", value: function(e4, t4) {
          var r4 = {}, o2 = true, n2 = false, s3 = undefined;
          try {
            for (var i, a2 = this.DOM.attributes[Symbol.iterator]();!(o2 = (i = a2.next()).done); o2 = true) {
              var l = i.value;
              r4[l.nodeName] = l.nodeValue;
            }
          } catch (e5) {
            n2 = true, s3 = e5;
          } finally {
            try {
              o2 || a2.return == null || a2.return();
            } finally {
              if (n2)
                throw s3;
            }
          }
          return r4[e4] ? String(r4[e4]) : t4 || null;
        } }, { key: "setAttribute", value: function(e4, t4) {
          this.DOM.setAttribute(e4, t4);
        } }, { key: "getContent", value: function(e4) {
          var t4 = this.DOM.textContent;
          return (t4 = t4.replace(/\s\s+/g, ",")) || e4 || null;
        } }, { key: "setContent", value: function(e4) {
          this.DOM.children.length || (this.DOM.textContent = e4);
        } }, { key: "serialize", value: function() {
          return new XMLSerializer().serializeToString(this.DOM);
        } }]) && n(e3.prototype, r3), o && n(e3, o), t3;
      }();
      e2 = a.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 305: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var i = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      i.default.prototype.abs = Math.abs, i.default.prototype.ceil = Math.ceil, i.default.prototype.constrain = function(e3, t3, r3) {
        return i.default._validateParameters("constrain", arguments), Math.max(Math.min(e3, r3), t3);
      }, i.default.prototype.dist = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return i.default._validateParameters("dist", t3), t3.length === 4 ? Math.hypot(t3[2] - t3[0], t3[3] - t3[1]) : t3.length === 6 ? Math.hypot(t3[3] - t3[0], t3[4] - t3[1], t3[5] - t3[2]) : undefined;
      }, i.default.prototype.exp = Math.exp, i.default.prototype.floor = Math.floor, i.default.prototype.lerp = function(e3, t3, r3) {
        return i.default._validateParameters("lerp", arguments), r3 * (t3 - e3) + e3;
      }, i.default.prototype.log = Math.log, i.default.prototype.mag = function(e3, t3) {
        return i.default._validateParameters("mag", arguments), Math.hypot(e3, t3);
      }, i.default.prototype.map = function(e3, t3, r3, o, n, s2) {
        i.default._validateParameters("map", arguments);
        e3 = (e3 - t3) / (r3 - t3) * (n - o) + o;
        return s2 ? o < n ? this.constrain(e3, o, n) : this.constrain(e3, n, o) : e3;
      }, i.default.prototype.max = function() {
        for (var e3 = function(e4) {
          var t4 = -1 / 0, r4 = true, o2 = false, n = undefined;
          try {
            for (var s2, i2 = e4[Symbol.iterator]();!(r4 = (s2 = i2.next()).done); r4 = true)
              var a = s2.value, t4 = t4 < a ? a : t4;
          } catch (e5) {
            o2 = true, n = e5;
          } finally {
            try {
              r4 || i2.return == null || i2.return();
            } finally {
              if (o2)
                throw n;
            }
          }
          return t4;
        }, t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return r3[0] instanceof Array ? e3(r3[0]) : e3(r3);
      }, i.default.prototype.min = function() {
        for (var e3 = function(e4) {
          var t4 = 1 / 0, r4 = true, o2 = false, n = undefined;
          try {
            for (var s2, i2 = e4[Symbol.iterator]();!(r4 = (s2 = i2.next()).done); r4 = true)
              var a = s2.value, t4 = a < t4 ? a : t4;
          } catch (e5) {
            o2 = true, n = e5;
          } finally {
            try {
              r4 || i2.return == null || i2.return();
            } finally {
              if (o2)
                throw n;
            }
          }
          return t4;
        }, t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return r3[0] instanceof Array ? e3(r3[0]) : e3(r3);
      }, i.default.prototype.norm = function(e3, t3, r3) {
        return i.default._validateParameters("norm", arguments), this.map(e3, t3, r3, 0, 1);
      }, i.default.prototype.pow = Math.pow, i.default.prototype.round = function(e3, t3) {
        return t3 ? (t3 = Math.pow(10, t3), Math.round(e3 * t3) / t3) : Math.round(e3);
      }, i.default.prototype.sq = function(e3) {
        return e3 * e3;
      }, i.default.prototype.sqrt = Math.sqrt, i.default.prototype.fract = function(e3) {
        i.default._validateParameters("fract", arguments);
        var t3, r3 = 0, e3 = Number(e3);
        return isNaN(e3) || Math.abs(e3) === 1 / 0 ? e3 : (e3 < 0 && (e3 = -e3, r3 = 1), String(e3).includes(".") && !String(e3).includes("e") ? (t3 = String(e3), t3 = Number("0" + t3.slice(t3.indexOf("."))), Math.abs(r3 - t3)) : e3 < 1 ? Math.abs(r3 - e3) : 0);
      };
      e2 = i.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.math.hypot": 170, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 306: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3, r3) {
        return (n = function() {
          if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
            if (typeof Proxy == "function")
              return 1;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), 1;
            } catch (e4) {
            }
          }
        }() ? Reflect.construct : function(e4, t4, r4) {
          var o2 = [null];
          o2.push.apply(o2, t4);
          t4 = new (Function.bind.apply(e4, o2));
          return r4 && s2(t4, r4.prototype), t4;
        }).apply(null, arguments);
      }
      function s2(e3, t3) {
        return (s2 = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      o.default.prototype.createVector = function(e3, t3, r3) {
        return this instanceof o.default ? n(o.default.Vector, [this._fromRadians.bind(this), this._toRadians.bind(this)].concat(Array.prototype.slice.call(arguments))) : new o.default.Vector(e3, t3, r3);
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.to-string": 188 }], 307: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function b(e3) {
        return 0.5 * (1 - Math.cos(e3 * Math.PI));
      }
      var j, _ = 4095, x = 4, w = 0.5, e2 = (e2.default.prototype.noise = function(e3) {
        var t3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 0, r3 = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : 0;
        if (j == null) {
          j = new Array(4096);
          for (var o = 0;o < 4096; o++)
            j[o] = Math.random();
        }
        e3 < 0 && (e3 = -e3), t3 < 0 && (t3 = -t3), r3 < 0 && (r3 = -r3);
        for (var n, s2, i = Math.floor(e3), a = Math.floor(t3), l = Math.floor(r3), u = e3 - i, c = t3 - a, d = r3 - l, h = 0, f = 0.5, p = 0;p < x; p++) {
          var m = i + (a << 4) + (l << 8), y = b(u), g = b(c), v = j[m & _];
          v += y * (j[m + 1 & _] - v), n = j[m + 16 & _], v += g * ((n += y * (j[m + 16 + 1 & _] - n)) - v), n = j[(m += 256) & _], n += y * (j[m + 1 & _] - n), s2 = j[m + 16 & _], n += g * ((s2 += y * (j[m + 16 + 1 & _] - s2)) - n), h += (v += b(d) * (n - v)) * f, f *= w, i <<= 1, a <<= 1, l <<= 1, 1 <= (u *= 2) && (i++, u--), 1 <= (c *= 2) && (a++, c--), 1 <= (d *= 2) && (l++, d--);
        }
        return h;
      }, e2.default.prototype.noiseDetail = function(e3, t3) {
        0 < e3 && (x = e3), 0 < t3 && (w = t3);
      }, e2.default.prototype.noiseSeed = function(e3) {
        o = 4294967296;
        var t3, r3, o, n = { setSeed: function(e4) {
          r3 = t3 = (e4 == null ? Math.random() * o : e4) >>> 0;
        }, getSeed: function() {
          return t3;
        }, rand: function() {
          return (r3 = (1664525 * r3 + 1013904223) % o) / o;
        } };
        n.setSeed(e3), j = new Array(4096);
        for (var s2 = 0;s2 < 4096; s2++)
          j[s2] = n.rand();
      }, e2.default);
      r2.default = e2;
    }, { "../core/main": 275 }], 308: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.number.is-finite"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.number.is-finite"), e2("core-js/modules/es.string.sub"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var a = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      function u(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function c(e3, t3) {
        return e3 !== 0 && (this.x = this.x % e3), t3 !== 0 && (this.y = this.y % t3), this;
      }
      function d(e3, t3, r3) {
        return e3 !== 0 && (this.x = this.x % e3), t3 !== 0 && (this.y = this.y % t3), r3 !== 0 && (this.z = this.z % r3), this;
      }
      a.default.Vector = function() {
        function n2() {
          var e4 = this, t4 = n2;
          if (!(e4 instanceof t4))
            throw new TypeError("Cannot call a class as a function");
          var r4, o2, e4 = typeof (arguments.length <= 0 ? undefined : arguments[0]) == "function" ? (this.isPInst = true, this._fromRadians = arguments.length <= 0 ? undefined : arguments[0], this._toRadians = arguments.length <= 1 ? undefined : arguments[1], r4 = (arguments.length <= 2 ? undefined : arguments[2]) || 0, o2 = (arguments.length <= 3 ? undefined : arguments[3]) || 0, (arguments.length <= 4 ? undefined : arguments[4]) || 0) : (r4 = (arguments.length <= 0 ? undefined : arguments[0]) || 0, o2 = (arguments.length <= 1 ? undefined : arguments[1]) || 0, (arguments.length <= 2 ? undefined : arguments[2]) || 0);
          this.x = r4, this.y = o2, this.z = e4;
        }
        var e3, t3, r3;
        return e3 = n2, r3 = [{ key: "fromAngle", value: function(e4, t4) {
          return new a.default.Vector((t4 = t4 === undefined ? 1 : t4) * Math.cos(e4), t4 * Math.sin(e4), 0);
        } }, { key: "fromAngles", value: function(e4, t4, r4) {
          r4 === undefined && (r4 = 1);
          var o2 = Math.cos(t4), t4 = Math.sin(t4), n3 = Math.cos(e4), e4 = Math.sin(e4);
          return new a.default.Vector(r4 * e4 * t4, -r4 * n3, r4 * e4 * o2);
        } }, { key: "random2D", value: function() {
          return this.fromAngle(Math.random() * s2.TWO_PI);
        } }, { key: "random3D", value: function() {
          var e4 = Math.random() * s2.TWO_PI, t4 = 2 * Math.random() - 1, r4 = Math.sqrt(1 - t4 * t4), o2 = r4 * Math.cos(e4), r4 = r4 * Math.sin(e4);
          return new a.default.Vector(o2, r4, t4);
        } }, { key: "copy", value: function(e4) {
          return e4.copy(e4);
        } }, { key: "add", value: function(e4, t4, r4) {
          return r4 ? r4.set(e4) : (r4 = e4.copy(), arguments.length === 3 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), r4.add(t4), r4;
        } }, { key: "rem", value: function(e4, t4) {
          if (e4 instanceof a.default.Vector && t4 instanceof a.default.Vector)
            return (e4 = e4.copy()).rem(t4), e4;
        } }, { key: "sub", value: function(e4, t4, r4) {
          return r4 ? r4.set(e4) : (r4 = e4.copy(), arguments.length === 3 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), r4.sub(t4), r4;
        } }, { key: "mult", value: function(e4, t4, r4) {
          return r4 ? r4.set(e4) : (r4 = e4.copy(), arguments.length === 3 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), r4.mult(t4), r4;
        } }, { key: "rotate", value: function(e4, t4, r4) {
          return arguments.length === 2 ? r4 = e4.copy() : (r4 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.rotate"), r4.set(e4)), r4.rotate(t4), r4;
        } }, { key: "div", value: function(e4, t4, r4) {
          return r4 ? r4.set(e4) : (r4 = e4.copy(), arguments.length === 3 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), r4.div(t4), r4;
        } }, { key: "dot", value: function(e4, t4) {
          return e4.dot(t4);
        } }, { key: "cross", value: function(e4, t4) {
          return e4.cross(t4);
        } }, { key: "dist", value: function(e4, t4) {
          return e4.dist(t4);
        } }, { key: "lerp", value: function(e4, t4, r4, o2) {
          return o2 ? o2.set(e4) : (o2 = e4.copy(), arguments.length === 4 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), o2.lerp(t4, r4), o2;
        } }, { key: "slerp", value: function(e4, t4, r4, o2) {
          return o2 ? o2.set(e4) : (o2 = e4.copy(), arguments.length === 4 && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.slerp")), o2.slerp(t4, r4), o2;
        } }, { key: "mag", value: function(e4) {
          return e4.mag();
        } }, { key: "magSq", value: function(e4) {
          return e4.magSq();
        } }, { key: "normalize", value: function(e4, t4) {
          return arguments.length < 2 ? t4 = e4.copy() : (t4 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.normalize"), t4.set(e4)), t4.normalize();
        } }, { key: "limit", value: function(e4, t4, r4) {
          return arguments.length < 3 ? r4 = e4.copy() : (r4 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.limit"), r4.set(e4)), r4.limit(t4);
        } }, { key: "setMag", value: function(e4, t4, r4) {
          return arguments.length < 3 ? r4 = e4.copy() : (r4 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.setMag"), r4.set(e4)), r4.setMag(t4);
        } }, { key: "heading", value: function(e4) {
          return e4.heading();
        } }, { key: "angleBetween", value: function(e4, t4) {
          return e4.angleBetween(t4);
        } }, { key: "reflect", value: function(e4, t4, r4) {
          return arguments.length < 3 ? r4 = e4.copy() : (r4 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.reflect"), r4.set(e4)), r4.reflect(t4);
        } }, { key: "array", value: function(e4) {
          return e4.array();
        } }, { key: "equals", value: function(e4, t4) {
          var r4;
          return e4 instanceof a.default.Vector ? r4 = e4 : e4 instanceof Array ? r4 = new a.default.Vector().set(e4) : a.default._friendlyError("The v1 parameter should be of type Array or p5.Vector", "p5.Vector.equals"), r4.equals(t4);
        } }], (t3 = [{ key: "toString", value: function() {
          return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
        } }, { key: "set", value: function(e4, t4, r4) {
          return e4 instanceof a.default.Vector ? (this.x = e4.x || 0, this.y = e4.y || 0, this.z = e4.z || 0) : Array.isArray(e4) ? (this.x = e4[0] || 0, this.y = e4[1] || 0, this.z = e4[2] || 0) : (this.x = e4 || 0, this.y = t4 || 0, this.z = r4 || 0), this;
        } }, { key: "copy", value: function() {
          return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, this.x, this.y, this.z) : new a.default.Vector(this.x, this.y, this.z);
        } }, { key: "add", value: function(e4, t4, r4) {
          return e4 instanceof a.default.Vector ? (this.x += e4.x || 0, this.y += e4.y || 0, this.z += e4.z || 0) : Array.isArray(e4) ? (this.x += e4[0] || 0, this.y += e4[1] || 0, this.z += e4[2] || 0) : (this.x += e4 || 0, this.y += t4 || 0, this.z += r4 || 0), this;
        } }, { key: "rem", value: function(e4, t4, r4) {
          var o2;
          if (e4 instanceof a.default.Vector) {
            if ([e4.x, e4.y, e4.z].every(Number.isFinite))
              return n3 = parseFloat(e4.x), s3 = parseFloat(e4.y), o2 = parseFloat(e4.z), d.call(this, n3, s3, o2);
          } else if (Array.isArray(e4)) {
            if (e4.every(function(e5) {
              return Number.isFinite(e5);
            }))
              return e4.length === 2 ? c.call(this, e4[0], e4[1]) : e4.length === 3 ? d.call(this, e4[0], e4[1], e4[2]) : undefined;
          } else if (arguments.length === 1) {
            if (Number.isFinite(e4) && e4 !== 0)
              return this.x = this.x % e4, this.y = this.y % e4, this.z = this.z % e4, this;
          } else if (arguments.length === 2) {
            var n3 = Array.prototype.slice.call(arguments);
            if (n3.every(function(e5) {
              return Number.isFinite(e5);
            }) && n3.length === 2)
              return c.call(this, n3[0], n3[1]);
          } else if (arguments.length === 3) {
            var s3 = Array.prototype.slice.call(arguments);
            if (s3.every(function(e5) {
              return Number.isFinite(e5);
            }) && s3.length === 3)
              return d.call(this, s3[0], s3[1], s3[2]);
          }
        } }, { key: "sub", value: function(e4, t4, r4) {
          return e4 instanceof a.default.Vector ? (this.x -= e4.x || 0, this.y -= e4.y || 0, this.z -= e4.z || 0) : Array.isArray(e4) ? (this.x -= e4[0] || 0, this.y -= e4[1] || 0, this.z -= e4[2] || 0) : (this.x -= e4 || 0, this.y -= t4 || 0, this.z -= r4 || 0), this;
        } }, { key: "mult", value: function(e4, t4, r4) {
          var o2;
          return e4 instanceof a.default.Vector ? Number.isFinite(e4.x) && Number.isFinite(e4.y) && Number.isFinite(e4.z) && typeof e4.x == "number" && typeof e4.y == "number" && typeof e4.z == "number" ? (this.x *= e4.x, this.y *= e4.y, this.z *= e4.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers") : Array.isArray(e4) ? e4.every(function(e5) {
            return Number.isFinite(e5);
          }) && e4.every(function(e5) {
            return typeof e5 == "number";
          }) ? e4.length === 1 ? (this.x *= e4[0], this.y *= e4[0], this.z *= e4[0]) : e4.length === 2 ? (this.x *= e4[0], this.y *= e4[1]) : e4.length === 3 && (this.x *= e4[0], this.y *= e4[1], this.z *= e4[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers") : (o2 = Array.prototype.slice.call(arguments)).every(function(e5) {
            return Number.isFinite(e5);
          }) && o2.every(function(e5) {
            return typeof e5 == "number";
          }) ? (arguments.length === 1 && (this.x *= e4, this.y *= e4, this.z *= e4), arguments.length === 2 && (this.x *= e4, this.y *= t4), arguments.length === 3 && (this.x *= e4, this.y *= t4, this.z *= r4)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
        } }, { key: "div", value: function(e4, t4, r4) {
          if (e4 instanceof a.default.Vector)
            if (Number.isFinite(e4.x) && Number.isFinite(e4.y) && Number.isFinite(e4.z) && typeof e4.x == "number" && typeof e4.y == "number" && typeof e4.z == "number") {
              var o2 = e4.z === 0 && this.z === 0;
              if (e4.x === 0 || e4.y === 0 || !o2 && e4.z === 0)
                return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
              this.x /= e4.x, this.y /= e4.y, o2 || (this.z /= e4.z);
            } else
              console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          else if (Array.isArray(e4))
            if (e4.every(function(e5) {
              return Number.isFinite(e5);
            }) && e4.every(function(e5) {
              return typeof e5 == "number";
            })) {
              if (e4.some(function(e5) {
                return e5 === 0;
              }))
                return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
              e4.length === 1 ? (this.x /= e4[0], this.y /= e4[0], this.z /= e4[0]) : e4.length === 2 ? (this.x /= e4[0], this.y /= e4[1]) : e4.length === 3 && (this.x /= e4[0], this.y /= e4[1], this.z /= e4[2]);
            } else
              console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          else {
            o2 = Array.prototype.slice.call(arguments);
            if (o2.every(function(e5) {
              return Number.isFinite(e5);
            }) && o2.every(function(e5) {
              return typeof e5 == "number";
            })) {
              if (o2.some(function(e5) {
                return e5 === 0;
              }))
                return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
              arguments.length === 1 && (this.x /= e4, this.y /= e4, this.z /= e4), arguments.length === 2 && (this.x /= e4, this.y /= t4), arguments.length === 3 && (this.x /= e4, this.y /= t4, this.z /= r4);
            } else
              console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
          }
          return this;
        } }, { key: "mag", value: function() {
          return Math.sqrt(this.magSq());
        } }, { key: "magSq", value: function() {
          var e4 = this.x, t4 = this.y, r4 = this.z;
          return e4 * e4 + t4 * t4 + r4 * r4;
        } }, { key: "dot", value: function(e4, t4, r4) {
          return e4 instanceof a.default.Vector ? this.dot(e4.x, e4.y, e4.z) : this.x * (e4 || 0) + this.y * (t4 || 0) + this.z * (r4 || 0);
        } }, { key: "cross", value: function(e4) {
          var t4 = this.y * e4.z - this.z * e4.y, r4 = this.z * e4.x - this.x * e4.z, e4 = this.x * e4.y - this.y * e4.x;
          return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, t4, r4, e4) : new a.default.Vector(t4, r4, e4);
        } }, { key: "dist", value: function(e4) {
          return e4.copy().sub(this).mag();
        } }, { key: "normalize", value: function() {
          var e4 = this.mag();
          return e4 !== 0 && this.mult(1 / e4), this;
        } }, { key: "limit", value: function(e4) {
          var t4 = this.magSq();
          return e4 * e4 < t4 && this.div(Math.sqrt(t4)).mult(e4), this;
        } }, { key: "setMag", value: function(e4) {
          return this.normalize().mult(e4);
        } }, { key: "heading", value: function() {
          var e4 = Math.atan2(this.y, this.x);
          return this.isPInst ? this._fromRadians(e4) : e4;
        } }, { key: "setHeading", value: function(e4) {
          this.isPInst && (e4 = this._toRadians(e4));
          var t4 = this.mag();
          return this.x = t4 * Math.cos(e4), this.y = t4 * Math.sin(e4), this;
        } }, { key: "rotate", value: function(e4) {
          var e4 = this.heading() + e4, t4 = (this.isPInst && (e4 = this._toRadians(e4)), this.mag());
          return this.x = Math.cos(e4) * t4, this.y = Math.sin(e4) * t4, this;
        } }, { key: "angleBetween", value: function(e4) {
          var t4;
          return this.magSq() * e4.magSq() == 0 ? NaN : (t4 = this.cross(e4), e4 = Math.atan2(t4.mag(), this.dot(e4)) * Math.sign(t4.z || 1), this.isPInst ? this._fromRadians(e4) : e4);
        } }, { key: "lerp", value: function(e4, t4, r4, o2) {
          return e4 instanceof a.default.Vector ? this.lerp(e4.x, e4.y, e4.z, t4) : (this.x += (e4 - this.x) * o2 || 0, this.y += (t4 - this.y) * o2 || 0, this.z += (r4 - this.z) * o2 || 0, this);
        } }, { key: "slerp", value: function(e4, t4) {
          if (t4 !== 0) {
            if (t4 === 1)
              return this.set(e4);
            var r4 = this.mag(), o2 = e4.mag();
            if (r4 * o2 == 0)
              this.mult(1 - t4).add(e4.x * t4, e4.y * t4, e4.z * t4);
            else {
              var n3 = this.cross(e4), s3 = n3.mag(), i2 = Math.atan2(s3, this.dot(e4));
              if (0 < s3)
                n3.x /= s3, n3.y /= s3, n3.z /= s3;
              else {
                if (i2 < 0.5 * Math.PI)
                  return this.mult(1 - t4).add(e4.x * t4, e4.y * t4, e4.z * t4), this;
                this.z === 0 && e4.z === 0 ? n3.set(0, 0, 1) : this.x !== 0 ? n3.set(this.y, -this.x, 0).normalize() : n3.set(1, 0, 0);
              }
              s3 = n3.cross(this), e4 = 1 - t4 + t4 * o2 / r4, n3 = e4 * Math.cos(t4 * i2), o2 = e4 * Math.sin(t4 * i2);
              this.x = this.x * n3 + s3.x * o2, this.y = this.y * n3 + s3.y * o2, this.z = this.z * n3 + s3.z * o2;
            }
          }
          return this;
        } }, { key: "reflect", value: function(e4) {
          return e4.normalize(), this.sub(e4.mult(2 * this.dot(e4)));
        } }, { key: "array", value: function() {
          return [this.x || 0, this.y || 0, this.z || 0];
        } }, { key: "equals", value: function(e4, t4, r4) {
          var o2, n3, e4 = e4 instanceof a.default.Vector ? (o2 = e4.x || 0, n3 = e4.y || 0, e4.z || 0) : Array.isArray(e4) ? (o2 = e4[0] || 0, n3 = e4[1] || 0, e4[2] || 0) : (o2 = e4 || 0, n3 = t4 || 0, r4 || 0);
          return this.x === o2 && this.y === n3 && this.z === e4;
        } }]) && u(e3.prototype, t3), r3 && u(e3, r3), n2;
      }();
      var n = a.default.Vector;
      r2.default = n;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.some": 166, "core-js/modules/es.math.sign": 172, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.number.is-finite": 174, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.sub": 200, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 309: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      var s2 = "_lcg_random_state", o = 4294967296, i = 0, e2 = (n.default.prototype._lcg = function(e3) {
        return this[e3] = (1664525 * this[e3] + 1013904223) % o, this[e3] / o;
      }, n.default.prototype._lcgSetSeed = function(e3, t3) {
        this[e3] = (t3 == null ? Math.random() * o : t3) >>> 0;
      }, n.default.prototype.randomSeed = function(e3) {
        this._lcgSetSeed(s2, e3), this._gaussian_previous = false;
      }, n.default.prototype.random = function(e3, t3) {
        var r3, o2;
        return n.default._validateParameters("random", arguments), r3 = this[s2] != null ? this._lcg(s2) : Math.random(), e3 === undefined ? r3 : t3 === undefined ? e3 instanceof Array ? e3[Math.floor(r3 * e3.length)] : r3 * e3 : (t3 < e3 && (o2 = e3, e3 = t3, t3 = o2), r3 * (t3 - e3) + e3);
      }, n.default.prototype.randomGaussian = function(e3) {
        var t3, r3, o2, n2, s3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 1;
        if (this._gaussian_previous)
          t3 = i, this._gaussian_previous = false;
        else {
          for (;1 <= (n2 = (r3 = this.random(2) - 1) * r3 + (o2 = this.random(2) - 1) * o2); )
            ;
          t3 = r3 * (n2 = Math.sqrt(-2 * Math.log(n2) / n2)), i = o2 * n2, this._gaussian_previous = true;
        }
        return t3 * s3 + (e3 || 0);
      }, n.default);
      r2.default = e2;
    }, { "../core/main": 275 }], 310: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (l = e2("../core/main")) && l.__esModule ? l : { default: l }, s2 = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      n.default.prototype._angleMode = s2.RADIANS, n.default.prototype.acos = function(e3) {
        return this._fromRadians(Math.acos(e3));
      }, n.default.prototype.asin = function(e3) {
        return this._fromRadians(Math.asin(e3));
      }, n.default.prototype.atan = function(e3) {
        return this._fromRadians(Math.atan(e3));
      }, n.default.prototype.atan2 = function(e3, t3) {
        return this._fromRadians(Math.atan2(e3, t3));
      }, n.default.prototype.cos = function(e3) {
        return Math.cos(this._toRadians(e3));
      }, n.default.prototype.sin = function(e3) {
        return Math.sin(this._toRadians(e3));
      }, n.default.prototype.tan = function(e3) {
        return Math.tan(this._toRadians(e3));
      }, n.default.prototype.degrees = function(e3) {
        return e3 * s2.RAD_TO_DEG;
      }, n.default.prototype.radians = function(e3) {
        return e3 * s2.DEG_TO_RAD;
      }, n.default.prototype.angleMode = function(e3) {
        if (n.default._validateParameters("angleMode", arguments), e3 === undefined)
          return this._angleMode;
        e3 !== s2.DEGREES && e3 !== s2.RADIANS || (this._angleMode = e3);
      }, n.default.prototype._toRadians = function(e3) {
        return this._angleMode === s2.DEGREES ? e3 * s2.DEG_TO_RAD : e3;
      }, n.default.prototype._toDegrees = function(e3) {
        return this._angleMode === s2.RADIANS ? e3 * s2.RAD_TO_DEG : e3;
      }, n.default.prototype._fromRadians = function(e3) {
        return this._angleMode === s2.DEGREES ? e3 * s2.RAD_TO_DEG : e3;
      };
      var l = n.default;
      r2.default = l;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 311: [function(e2, t2, r2) {
      e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var i = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      i.default.prototype.textAlign = function(e3, t3) {
        var r3;
        return i.default._validateParameters("textAlign", arguments), (r3 = this._renderer).textAlign.apply(r3, arguments);
      }, i.default.prototype.textLeading = function(e3) {
        var t3;
        return i.default._validateParameters("textLeading", arguments), (t3 = this._renderer).textLeading.apply(t3, arguments);
      }, i.default.prototype.textSize = function(e3) {
        var t3;
        return i.default._validateParameters("textSize", arguments), (t3 = this._renderer).textSize.apply(t3, arguments);
      }, i.default.prototype.textStyle = function(e3) {
        var t3;
        return i.default._validateParameters("textStyle", arguments), (t3 = this._renderer).textStyle.apply(t3, arguments);
      }, i.default.prototype.textWidth = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        if (t3[0] += "", i.default._validateParameters("textWidth", t3), t3[0].length === 0)
          return 0;
        for (var o = t3[0].replace(/\t/g, "  ").split(/\r?\n|\r|\n/g), n = [], s2 = 0;s2 < o.length; s2++)
          n.push(this._renderer.textWidth(o[s2]));
        return Math.max.apply(Math, n);
      }, i.default.prototype.textAscent = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return i.default._validateParameters("textAscent", t3), this._renderer.textAscent();
      }, i.default.prototype.textDescent = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return i.default._validateParameters("textDescent", t3), this._renderer.textDescent();
      }, i.default.prototype._updateTextMetrics = function() {
        return this._renderer._updateTextMetrics();
      }, i.default.prototype.textWrap = function(e3) {
        if (e3 !== "WORD" && e3 !== "CHAR")
          throw "Error: textWrap accepts only WORD or CHAR";
        return this._renderer.textWrap(e3);
      };
      e2 = i.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198 }], 312: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.split"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = (c = e2("../core/main")) && c.__esModule ? c : { default: c }, n = s2(e2("../core/constants")), u = s2(e2("opentype.js"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2, n2 = {}, s3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3)
          Object.prototype.hasOwnProperty.call(e3, r3) && ((o2 = s3 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (o2.get || o2.set) ? Object.defineProperty(n2, r3, o2) : n2[r3] = e3[r3]);
        return n2.default = e3, t3 && t3.set(e3, n2), n2;
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), l.default.prototype.loadFont = function(o2, n2, s3) {
        l.default._validateParameters("loadFont", arguments);
        var i2 = new l.default.Font(this), a2 = this;
        return u.load(o2, function(e3, t3) {
          if (e3)
            return l.default._friendlyFileLoadError(4, o2), s3 !== undefined ? s3(e3) : void console.error(e3, o2);
          i2.font = t3, n2 !== undefined && n2(i2), a2._decrementPreload();
          var e3 = o2.split("\\").pop().split("/").pop(), t3 = e3.lastIndexOf("."), r3 = t3 < 1 ? null : e3.slice(t3 + 1);
          ["ttf", "otf", "woff", "woff2"].includes(r3) && (r3 = e3.slice(0, t3 !== -1 ? t3 : 0), (e3 = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r3, ";\nsrc: url(").concat(o2, ");\n}\n"))), document.head.appendChild(e3));
        }), i2;
      }, l.default.prototype.text = function(e3, t3, r3, o2, n2) {
        var s3;
        return l.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (s3 = this._renderer).text.apply(s3, arguments) : this;
      }, l.default.prototype.textFont = function(e3, t3) {
        if (l.default._validateParameters("textFont", arguments), arguments.length) {
          if (e3)
            return this._renderer._setProperty("_textFont", e3), t3 && (this._renderer._setProperty("_textSize", t3), this._renderer._leadingSet || this._renderer._setProperty("_textLeading", t3 * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
          throw new Error("null font passed to textFont");
        }
        return this._renderer._textFont;
      };
      var c = l.default;
      r2.default = c;
    }, { "../core/constants": 264, "../core/friendly_errors/fes_core": 266, "../core/friendly_errors/file_errors": 267, "../core/friendly_errors/validate_params": 270, "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.last-index-of": 163, "core-js/modules/es.array.slice": 165, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238, "opentype.js": 249 }], 313: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, v = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || j(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = i();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, i = function() {
          return e3;
        }, e3);
      }
      function j(e3) {
        return (j = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function _(e3, t3) {
        var r3 = e3.length;
        return e3[t3 < 0 ? t3 % r3 + r3 : t3 % r3];
      }
      function x(e3, t3, r3, o2) {
        var n2, s3, i2;
        return o2 ? (x.tmpPoint1 === undefined && (x.tmpPoint1 = [], x.tmpPoint2 = []), s3 = x.tmpPoint1, i2 = x.tmpPoint2, s3.x = t3.x - e3.x, s3.y = t3.y - e3.y, i2.x = r3.x - t3.x, i2.y = r3.y - t3.y, n2 = s3.x * i2.x + s3.y * i2.y, s3 = Math.sqrt(s3.x * s3.x + s3.y * s3.y), i2 = Math.sqrt(i2.x * i2.x + i2.y * i2.y), Math.acos(n2 / (s3 * i2)) < o2) : (t3[0] - e3[0]) * (r3[1] - e3[1]) - (r3[0] - e3[0]) * (t3[1] - e3[1]) == 0;
      }
      function d(e3, t3, r3, o2, n2, s3, i2, a, l) {
        var u = 1 - l, c = Math.pow(u, 3), d2 = Math.pow(u, 2), h2 = l * l, f2 = h2 * l, p = c * e3 + 3 * d2 * l * r3 + 3 * u * l * l * n2 + f2 * i2, c = c * t3 + 3 * d2 * l * o2 + 3 * u * l * l * s3 + f2 * a, d2 = e3 + 2 * l * (r3 - e3) + h2 * (n2 - 2 * r3 + e3), f2 = t3 + 2 * l * (o2 - t3) + h2 * (s3 - 2 * o2 + t3), m = r3 + 2 * l * (n2 - r3) + h2 * (i2 - 2 * n2 + r3), h2 = o2 + 2 * l * (s3 - o2) + h2 * (a - 2 * s3 + o2), e3 = u * e3 + l * r3, r3 = u * t3 + l * o2, t3 = u * n2 + l * i2, o2 = u * s3 + l * a, n2 = 90 - 180 * Math.atan2(d2 - m, f2 - h2) / Math.PI;
        return (m < d2 || f2 < h2) && (n2 += 180), { x: p, y: c, m: { x: d2, y: f2 }, n: { x: m, y: h2 }, start: { x: e3, y: r3 }, end: { x: t3, y: o2 }, alpha: n2 };
      }
      function h(e3, t3, r3, o2, n2, s3, i2, a, l) {
        return l == null ? f(e3, t3, r3, o2, n2, s3, i2, a) : d(e3, t3, r3, o2, n2, s3, i2, a, function(e4, t4, r4, o3, n3, s4, i3, a2, l2) {
          if (!(l2 < 0 || f(e4, t4, r4, o3, n3, s4, i3, a2) < l2)) {
            var u, c = 0.5, d2 = 1 - c;
            for (u = f(e4, t4, r4, o3, n3, s4, i3, a2, d2);0.01 < Math.abs(u - l2); )
              u = f(e4, t4, r4, o3, n3, s4, i3, a2, d2 += (u < l2 ? 1 : -1) * (c /= 2));
            return d2;
          }
        }(e3, t3, r3, o2, n2, s3, i2, a, l));
      }
      function w(e3, t3, r3) {
        for (var o2, n2, s3, i2, a, l = 0, u = 0, c = (e3 = function(e4, t4) {
          function r4(e5, t5, r5) {
            var o4, n4;
            if (!e5)
              return ["C", t5.x, t5.y, t5.x, t5.y, t5.x, t5.y];
            switch (e5[0] in { T: 1, Q: 1 } || (t5.qx = t5.qy = null), e5[0]) {
              case "M":
                t5.X = e5[1], t5.Y = e5[2];
                break;
              case "A":
                e5 = ["C"].concat(M.apply(0, [t5.x, t5.y].concat(e5.slice(1))));
                break;
              case "S":
                n4 = r5 === "C" || r5 === "S" ? (o4 = 2 * t5.x - t5.bx, 2 * t5.y - t5.by) : (o4 = t5.x, t5.y), e5 = ["C", o4, n4].concat(e5.slice(1));
                break;
              case "T":
                r5 === "Q" || r5 === "T" ? (t5.qx = 2 * t5.x - t5.qx, t5.qy = 2 * t5.y - t5.qy) : (t5.qx = t5.x, t5.qy = t5.y), e5 = ["C"].concat(E(t5.x, t5.y, t5.qx, t5.qy, e5[1], e5[2]));
                break;
              case "Q":
                t5.qx = e5[1], t5.qy = e5[2], e5 = ["C"].concat(E(t5.x, t5.y, e5[1], e5[2], e5[3], e5[4]));
                break;
              case "L":
                e5 = ["C"].concat(T(t5.x, t5.y, e5[1], e5[2]));
                break;
              case "H":
                e5 = ["C"].concat(T(t5.x, t5.y, e5[1], t5.y));
                break;
              case "V":
                e5 = ["C"].concat(T(t5.x, t5.y, t5.x, e5[1]));
                break;
              case "Z":
                e5 = ["C"].concat(T(t5.x, t5.y, t5.X, t5.Y));
            }
            return e5;
          }
          function o3(e5, t5) {
            if (7 < e5[t5].length) {
              e5[t5].shift();
              for (var r5 = e5[t5];r5.length; )
                c2[t5] = "A", a2 && (d2[t5] = "A"), e5.splice(t5++, 0, ["C"].concat(r5.splice(0, 6)));
              e5.splice(t5, 1), s4 = Math.max(i3.length, a2 && a2.length || 0);
            }
          }
          function n3(e5, t5, r5, o4, n4) {
            e5 && t5 && e5[n4][0] === "M" && t5[n4][0] !== "M" && (t5.splice(n4, 0, ["M", o4.x, o4.y]), r5.bx = 0, r5.by = 0, r5.x = e5[n4][1], r5.y = e5[n4][2], s4 = Math.max(i3.length, a2 && a2.length || 0));
          }
          var s4, i3 = b(e4), a2 = t4 && b(t4), l2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, u2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, c2 = [], d2 = [], h2 = "", f2 = "";
          s4 = Math.max(i3.length, a2 && a2.length || 0);
          for (var p = 0;p < s4; p++) {
            (h2 = i3[p] ? i3[p][0] : h2) !== "C" && (c2[p] = h2, p && (f2 = c2[p - 1])), i3[p] = r4(i3[p], l2, f2), c2[p] !== "A" && h2 === "C" && (c2[p] = "C"), o3(i3, p), a2 && ((h2 = a2[p] ? a2[p][0] : h2) !== "C" && (d2[p] = h2, p && (f2 = d2[p - 1])), a2[p] = r4(a2[p], u2, f2), d2[p] !== "A" && h2 === "C" && (d2[p] = "C"), o3(a2, p)), n3(i3, a2, l2, u2, p), n3(a2, i3, u2, l2, p);
            var m = i3[p], y2 = a2 && a2[p], g = m.length, v2 = a2 && y2.length;
            l2.x = m[g - 2], l2.y = m[g - 1], l2.bx = parseFloat(m[g - 4]) || l2.x, l2.by = parseFloat(m[g - 3]) || l2.y, u2.bx = a2 && (parseFloat(y2[v2 - 4]) || u2.x), u2.by = a2 && (parseFloat(y2[v2 - 3]) || u2.y), u2.x = a2 && y2[v2 - 2], u2.y = a2 && y2[v2 - 1];
          }
          return a2 ? [i3, a2] : i3;
        }(e3)).length;u < c; u++) {
          if ((s3 = e3[u])[0] === "M")
            o2 = +s3[1], n2 = +s3[2];
          else {
            if (t3 < l + (i2 = h(o2, n2, s3[1], s3[2], s3[3], s3[4], s3[5], s3[6])) && !r3)
              return { x: (a = h(o2, n2, s3[1], s3[2], s3[3], s3[4], s3[5], s3[6], t3 - l)).x, y: a.y, alpha: a.alpha };
            l += i2, o2 = +s3[5], n2 = +s3[6];
          }
          s3.shift();
        }
        return a = (a = r3 ? l : d(o2, n2, s3[0], s3[1], s3[2], s3[3], s3[4], s3[5], 1)).alpha ? { x: a.x, y: a.y, alpha: a.alpha } : a;
      }
      function b(e3) {
        var t3 = [], r3 = 0, o2 = 0, n2 = 0, s3 = 0, i2 = 0;
        if (e3) {
          e3[0][0] === "M" && (n2 = r3 = +e3[0][1], s3 = o2 = +e3[0][2], i2++, t3[0] = ["M", r3, o2]);
          for (var a, l, u = e3.length === 3 && e3[0][0] === "M" && e3[1][0].toUpperCase() === "R" && e3[2][0].toUpperCase() === "Z", c = i2, d2 = e3.length;c < d2; c++) {
            if (t3.push(a = []), (l = e3[c])[0] !== String.prototype.toUpperCase.call(l[0]))
              switch (a[0] = String.prototype.toUpperCase.call(l[0]), a[0]) {
                case "A":
                  a[1] = l[1], a[2] = l[2], a[3] = l[3], a[4] = l[4], a[5] = l[5], a[6] = +(l[6] + r3), a[7] = +(l[7] + o2);
                  break;
                case "V":
                  a[1] = +l[1] + o2;
                  break;
                case "H":
                  a[1] = +l[1] + r3;
                  break;
                case "R":
                  for (var h2, f2 = 2, p = (h2 = [r3, o2].concat(l.slice(1))).length;f2 < p; f2++)
                    h2[f2] = +h2[f2] + r3, h2[++f2] = +h2[f2] + o2;
                  t3.pop(), t3 = t3.concat(S(h2, u));
                  break;
                case "M":
                  n2 = +l[1] + r3, s3 = +l[2] + o2;
                  break;
                default:
                  for (var m = 1, y2 = l.length;m < y2; m++)
                    a[m] = +l[m] + (m % 2 ? r3 : o2);
              }
            else if (l[0] === "R")
              h2 = [r3, o2].concat(l.slice(1)), t3.pop(), t3 = t3.concat(S(h2, u)), a = ["R"].concat(l.slice(-2));
            else
              for (var g = 0, v2 = l.length;g < v2; g++)
                a[g] = l[g];
            switch (a[0]) {
              case "Z":
                r3 = n2, o2 = s3;
                break;
              case "H":
                r3 = a[1];
                break;
              case "V":
                o2 = a[1];
                break;
              case "M":
                n2 = a[a.length - 2], s3 = a[a.length - 1];
                break;
              default:
                r3 = a[a.length - 2], o2 = a[a.length - 1];
            }
          }
        }
        return t3;
      }
      function M(e3, t3, r3, o2, n2, s3, i2, a, l, u) {
        function c(e4, t4, r4) {
          return { x: e4 * Math.cos(r4) - t4 * Math.sin(r4), y: e4 * Math.sin(r4) + t4 * Math.cos(r4) };
        }
        var d2, h2 = Math.PI, f2 = 120 * h2 / 180, p = h2 / 180 * (+n2 || 0), m = [], y2 = (u ? (x2 = u[0], d2 = u[1], j2 = u[2], _2 = u[3]) : (e3 = (v2 = c(e3, t3, -p)).x, t3 = v2.y, 1 < (y2 = (g = (e3 - (a = (v2 = c(a, l, -p)).x)) / 2) * g / (r3 * r3) + (v2 = (t3 - (l = v2.y)) / 2) * v2 / (o2 * o2)) && (r3 *= y2 = Math.sqrt(y2), o2 *= y2), y2 = r3 * r3, b2 = o2 * o2, j2 = (s3 = (s3 === i2 ? -1 : 1) * Math.sqrt(Math.abs((y2 * b2 - y2 * v2 * v2 - b2 * g * g) / (y2 * v2 * v2 + b2 * g * g)))) * r3 * v2 / o2 + (e3 + a) / 2, _2 = s3 * -o2 * g / r3 + (t3 + l) / 2, x2 = Math.asin(((t3 - _2) / o2).toFixed(9)), d2 = Math.asin(((l - _2) / o2).toFixed(9)), (x2 = e3 < j2 ? h2 - x2 : x2) < 0 && (x2 = 2 * h2 + x2), (d2 = a < j2 ? h2 - d2 : d2) < 0 && (d2 = 2 * h2 + d2), i2 && d2 < x2 && (x2 -= 2 * h2), !i2 && x2 < d2 && (d2 -= 2 * h2)), d2 - x2), g = (Math.abs(y2) > f2 && (b2 = d2, v2 = a, s3 = l, d2 = x2 + f2 * (i2 && x2 < d2 ? 1 : -1), m = M(a = j2 + r3 * Math.cos(d2), l = _2 + o2 * Math.sin(d2), r3, o2, n2, 0, i2, v2, s3, [d2, b2, j2, _2])), y2 = d2 - x2, Math.cos(x2)), h2 = Math.sin(x2), f2 = Math.cos(d2), n2 = Math.sin(d2), i2 = Math.tan(y2 / 4), v2 = 4 / 3 * r3 * i2, s3 = 4 / 3 * o2 * i2, b2 = [e3, t3], j2 = [e3 + v2 * h2, t3 - s3 * g], _2 = [a + v2 * n2, l - s3 * f2], x2 = [a, l];
        if (j2[0] = 2 * b2[0] - j2[0], j2[1] = 2 * b2[1] - j2[1], u)
          return [j2, _2, x2].concat(m);
        for (var w2 = [], S2 = 0, T2 = (m = [j2, _2, x2].concat(m).join().split(",")).length;S2 < T2; S2++)
          w2[S2] = S2 % 2 ? c(m[S2 - 1], m[S2], p).y : c(m[S2], m[S2 + 1], p).x;
        return w2;
      }
      function S(e3, t3) {
        for (var r3 = [], o2 = 0, n2 = e3.length;o2 < n2 - 2 * !t3; o2 += 2) {
          var s3 = [{ x: +e3[o2 - 2], y: +e3[o2 - 1] }, { x: +e3[o2], y: +e3[o2 + 1] }, { x: +e3[o2 + 2], y: +e3[o2 + 3] }, { x: +e3[o2 + 4], y: +e3[o2 + 5] }];
          t3 ? o2 ? n2 - 4 === o2 ? s3[3] = { x: +e3[0], y: +e3[1] } : n2 - 2 === o2 && (s3[2] = { x: +e3[0], y: +e3[1] }, s3[3] = { x: +e3[2], y: +e3[3] }) : s3[0] = { x: +e3[n2 - 2], y: +e3[n2 - 1] } : n2 - 4 === o2 ? s3[3] = s3[2] : o2 || (s3[0] = { x: +e3[o2], y: +e3[o2 + 1] }), r3.push(["C", (-s3[0].x + 6 * s3[1].x + s3[2].x) / 6, (-s3[0].y + 6 * s3[1].y + s3[2].y) / 6, (s3[1].x + 6 * s3[2].x - s3[3].x) / 6, (s3[1].y + 6 * s3[2].y - s3[3].y) / 6, s3[2].x, s3[2].y]);
        }
        return r3;
      }
      function T(e3, t3, r3, o2) {
        return [e3, t3, r3, o2, r3, o2];
      }
      function E(e3, t3, r3, o2, n2, s3) {
        return [1 / 3 * e3 + 2 / 3 * r3, 1 / 3 * t3 + 2 / 3 * o2, 1 / 3 * n2 + 2 / 3 * r3, 1 / 3 * s3 + 2 / 3 * o2, n2, s3];
      }
      function f(e3, t3, r3, o2, n2, s3, i2, a, l) {
        for (var u = (l = 1 < (l = l == null ? 1 : l) ? 1 : l < 0 ? 0 : l) / 2, c = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], d2 = 0, h2 = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], f2 = 0;f2 < 12; f2++) {
          var p = u * c[f2] + u, m = y(p, e3, r3, n2, i2), p = y(p, t3, o2, s3, a);
          d2 += h2[f2] * Math.sqrt(m * m + p * p);
        }
        return u * d2;
      }
      function y(e3, t3, r3, o2, n2) {
        return e3 * (e3 * (-3 * t3 + 9 * r3 - 9 * o2 + 3 * n2) + 6 * t3 - 12 * r3 + 6 * o2) - 3 * t3 + 3 * r3;
      }
      n.default.Font = function() {
        function t3(e4) {
          if (!(this instanceof t3))
            throw new TypeError("Cannot call a class as a function");
          this.parent = e4, this.cache = {}, this.font = undefined;
        }
        var e3, r3, o2;
        return e3 = t3, (r3 = [{ key: "textBounds", value: function(e4) {
          var t4 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 0, r4 = 2 < arguments.length && arguments[2] !== undefined ? arguments[2] : 0, o3 = 3 < arguments.length ? arguments[3] : undefined, n2 = 4 < arguments.length ? arguments[4] : undefined, s3 = n2 && n2.renderer && n2.renderer._pInst || this.parent, i2 = s3._renderer.drawingContext, o3 = (i2.textAlign || v.LEFT, i2.textBaseline || v.BASELINE, o3 || s3._renderer._textSize);
          if (!g) {
            for (var a = [], l = [], u = [], c = (u[0] = [], []), d2 = this._scale(o3), h2 = s3._renderer.textLeading(), f2 = 0, p = (this.font.forEachGlyph(e4, t4, r4, o3, n2, function(e5, t5, r5, o4) {
              var n3 = e5.getMetrics();
              e5.index === 0 || e5.index === 10 ? u[f2 += 1] = [] : (u[f2].push(t5 + n3.xMin * d2), u[f2].push(t5 + n3.xMax * d2), c.push(r5 + f2 * h2 + -n3.yMin * d2), c.push(r5 + f2 * h2 + -n3.yMax * d2));
            }), 0 < u[f2].length && (a[f2] = Math.min.apply(null, u[f2]), l[f2] = Math.max.apply(null, u[f2])), 0), m = 0;m <= f2; m++) {
              a[m] = Math.min.apply(null, u[m]), l[m] = Math.max.apply(null, u[m]);
              var y2 = l[m] - a[m];
              p < y2 && (p = y2);
            }
            var i2 = Math.min.apply(null, a), g = { x: i2, y: r4 = Math.min.apply(null, c), h: Math.max.apply(null, c) - r4, w: p, advance: i2 - t4 }, o3 = this._handleAlignment(s3._renderer, e4, g.x, g.y, g.w + g.advance);
            g.x = o3.x, g.y = o3.y;
          }
          return g;
        } }, { key: "textToPoints", value: function(e4, t4, r4, o3, n2) {
          var s3 = t4, i2 = [], a = e4.split(/\r?\n|\r|\n/g);
          o3 = o3 || this.parent._renderer._textSize;
          for (var l, u, c, d2 = 0;d2 < a.length; d2++) {
            var h2 = 0;
            t4 = s3;
            for (var f2 = (f2 = a[d2]).replace("\t", "  "), p = this._getGlyphs(f2), m = 0;m < p.length; m++) {
              if (u = f2, !((c = p)[l = m].name && c[l].name === "space" || u.length === c.length && u[l] === " "))
                for (var y2 = function(e5) {
                  for (var t5, r5 = [], o4 = 0;o4 < e5.length; o4++)
                    e5[o4].type === "M" && (t5 && r5.push(t5), t5 = []), t5.push(function(e6) {
                      var t6 = [e6.type];
                      e6.type === "M" || e6.type === "L" ? t6.push(e6.x, e6.y) : e6.type === "C" ? t6.push(e6.x1, e6.y1, e6.x2, e6.y2, e6.x, e6.y) : e6.type === "Q" && t6.push(e6.x1, e6.y1, e6.x, e6.y);
                      return t6;
                    }(e5[o4]));
                  return r5.push(t5), r5;
                }(p[m].getPath(t4, r4, o3).commands), g = 0;g < y2.length; g++)
                  for (var v2 = function(e5, t5) {
                    for (var t5 = function(e6, t6) {
                      if (j(e6) !== "object")
                        e6 = t6;
                      else
                        for (var r6 in t6)
                          e6[r6] === undefined && (e6[r6] = t6[r6]);
                      return e6;
                    }(t5, { sampleFactor: 0.1, simplifyThreshold: 0 }), r5 = w(e5, 0, 1), o4 = r5 / (r5 * t5.sampleFactor), n3 = [], s4 = 0;s4 < r5; s4 += o4)
                      n3.push(w(e5, s4));
                    t5.simplifyThreshold && function(e6) {
                      for (var t6 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 0, r6 = 0, o5 = e6.length - 1;3 < e6.length && 0 <= o5; --o5)
                        x(_(e6, o5 - 1), _(e6, o5), _(e6, o5 + 1), t6) && (e6.splice(o5 % e6.length, 1), r6++);
                    }(n3, t5.simplifyThreshold);
                    return n3;
                  }(y2[g], n2), b2 = 0;b2 < v2.length; b2++)
                    v2[b2].x += h2, i2.push(v2[b2]);
              h2 += p[m].advanceWidth * this._scale(o3);
            }
            r4 += this.parent._renderer._textLeading;
          }
          return i2;
        } }, { key: "_getGlyphs", value: function(e4) {
          return this.font.stringToGlyphs(e4);
        } }, { key: "_getPath", value: function(e4, t4, r4, o3) {
          var n2 = (o3 && o3.renderer && o3.renderer._pInst || this.parent)._renderer, t4 = this._handleAlignment(n2, e4, t4, r4);
          return this.font.getPath(e4, t4.x, t4.y, n2._textSize, o3);
        } }, { key: "_getPathData", value: function(e4, t4, r4, o3) {
          var n2 = 3;
          return typeof e4 == "string" && 2 < arguments.length ? e4 = this._getPath(e4, t4, r4, o3) : j(t4) === "object" && (o3 = t4), o3 && typeof o3.decimals == "number" && (n2 = o3.decimals), e4.toPathData(n2);
        } }, { key: "_getSVG", value: function(e4, t4, r4, o3) {
          var n2 = 3;
          return typeof e4 == "string" && 2 < arguments.length ? e4 = this._getPath(e4, t4, r4, o3) : j(t4) === "object" && (o3 = t4), o3 && (typeof o3.decimals == "number" && (n2 = o3.decimals), typeof o3.strokeWidth == "number" && (e4.strokeWidth = o3.strokeWidth), o3.fill !== undefined && (e4.fill = o3.fill), o3.stroke !== undefined && (e4.stroke = o3.stroke)), e4.toSVG(n2);
        } }, { key: "_renderPath", value: function(e4, t4, r4, o3) {
          var n2 = o3 && o3.renderer || this.parent._renderer, s3 = n2.drawingContext, e4 = (j(e4) === "object" && e4.commands ? e4 : this._getPath(e4, t4, r4, o3)).commands, i2 = (s3.beginPath(), true), t4 = false, r4 = undefined;
          try {
            for (var a, l = e4[Symbol.iterator]();!(i2 = (a = l.next()).done); i2 = true) {
              var u = a.value;
              u.type === "M" ? s3.moveTo(u.x, u.y) : u.type === "L" ? s3.lineTo(u.x, u.y) : u.type === "C" ? s3.bezierCurveTo(u.x1, u.y1, u.x2, u.y2, u.x, u.y) : u.type === "Q" ? s3.quadraticCurveTo(u.x1, u.y1, u.x, u.y) : u.type === "Z" && s3.closePath();
            }
          } catch (e5) {
            t4 = true, r4 = e5;
          } finally {
            try {
              i2 || l.return == null || l.return();
            } finally {
              if (t4)
                throw r4;
            }
          }
          return n2._doStroke && n2._strokeSet && !n2._clipping && s3.stroke(), n2._doFill && !n2._clipping && (n2._fillSet || n2._setFill(v._DEFAULT_TEXT_FILL), s3.fill()), this;
        } }, { key: "_textWidth", value: function(e4, t4) {
          return this.font.getAdvanceWidth(e4, t4);
        } }, { key: "_textAscent", value: function(e4) {
          return this.font.ascender * this._scale(e4);
        } }, { key: "_textDescent", value: function(e4) {
          return -this.font.descender * this._scale(e4);
        } }, { key: "_scale", value: function(e4) {
          return 1 / this.font.unitsPerEm * (e4 || this.parent._renderer._textSize);
        } }, { key: "_handleAlignment", value: function(e4, t4, r4, o3, n2) {
          var s3 = e4._textSize;
          switch (n2 === undefined && (n2 = this._textWidth(t4, s3)), e4._textAlign) {
            case v.CENTER:
              r4 -= n2 / 2;
              break;
            case v.RIGHT:
              r4 -= n2;
          }
          switch (e4._textBaseline) {
            case v.TOP:
              o3 += this._textAscent(s3);
              break;
            case v.CENTER:
              o3 += this._textAscent(s3) / 2;
              break;
            case v.BOTTOM:
              o3 -= this._textDescent(s3);
          }
          return { x: r4, y: o3 };
        } }]) && s2(e3.prototype, r3), o2 && s2(e3, o2), t3;
      }();
      e2 = n.default;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.function.name": 168, "core-js/modules/es.number.to-fixed": 175, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 314: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.object.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.append = function(e3, t3) {
        return e3.push(t3), e3;
      }, e2.default.prototype.arrayCopy = function(e3, t3, r3, o, n) {
        var s2, i;
        e3 = n !== undefined ? (i = Math.min(n, e3.length), s2 = o, e3.slice(t3, i + t3)) : (i = r3 !== undefined ? (i = r3, Math.min(i, e3.length)) : e3.length, r3 = t3, e3.slice(s2 = 0, i)), Array.prototype.splice.apply(r3, [s2, i].concat(e3));
      }, e2.default.prototype.concat = function(e3, t3) {
        return e3.concat(t3);
      }, e2.default.prototype.reverse = function(e3) {
        return e3.reverse();
      }, e2.default.prototype.shorten = function(e3) {
        return e3.pop(), e3;
      }, e2.default.prototype.shuffle = function(e3, t3) {
        for (var r3, o, n = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e3), s2 = (e3 = t3 || n ? e3 : e3.slice()).length;1 < s2; )
          r3 = this.random(0, 1) * s2 | 0, o = e3[--s2], e3[s2] = e3[r3], e3[r3] = o;
        return e3;
      }, e2.default.prototype.sort = function(e3, t3) {
        var r3 = t3 ? e3.slice(0, Math.min(t3, e3.length)) : e3, t3 = t3 ? e3.slice(Math.min(t3, e3.length)) : [];
        return (r3 = typeof r3[0] == "string" ? r3.sort() : r3.sort(function(e4, t4) {
          return e4 - t4;
        })).concat(t3);
      }, e2.default.prototype.splice = function(e3, t3, r3) {
        return Array.prototype.splice.apply(e3, [r3, 0].concat(t3)), e3;
      }, e2.default.prototype.subset = function(e3, t3, r3) {
        return r3 !== undefined ? e3.slice(t3, t3 + r3) : e3.slice(t3, e3.length);
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array-buffer.constructor": 150, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.object.to-string": 182 }], 315: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.repeat"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.repeat"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      o.default.prototype.float = function(e3) {
        return e3 instanceof Array ? e3.map(parseFloat) : parseFloat(e3);
      }, o.default.prototype.int = function(e3) {
        var t3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : 10;
        return e3 === 1 / 0 || e3 === "Infinity" ? 1 / 0 : e3 === -1 / 0 || e3 === "-Infinity" ? -1 / 0 : typeof e3 == "string" ? parseInt(e3, t3) : typeof e3 == "number" ? 0 | e3 : typeof e3 == "boolean" ? e3 ? 1 : 0 : e3 instanceof Array ? e3.map(function(e4) {
          return o.default.prototype.int(e4, t3);
        }) : undefined;
      }, o.default.prototype.str = function(e3) {
        return e3 instanceof Array ? e3.map(o.default.prototype.str) : String(e3);
      }, o.default.prototype.boolean = function(e3) {
        return typeof e3 == "number" ? e3 !== 0 : typeof e3 == "string" ? e3.toLowerCase() === "true" : typeof e3 == "boolean" ? e3 : e3 instanceof Array ? e3.map(o.default.prototype.boolean) : undefined;
      }, o.default.prototype.byte = function(e3) {
        e3 = o.default.prototype.int(e3, 10);
        return typeof e3 == "number" ? (e3 + 128) % 256 - 128 : e3 instanceof Array ? e3.map(o.default.prototype.byte) : undefined;
      }, o.default.prototype.char = function(e3) {
        return typeof e3 != "number" || isNaN(e3) ? e3 instanceof Array ? e3.map(o.default.prototype.char) : typeof e3 == "string" ? o.default.prototype.char(parseInt(e3, 10)) : undefined : String.fromCharCode(e3);
      }, o.default.prototype.unchar = function(e3) {
        return typeof e3 == "string" && e3.length === 1 ? e3.charCodeAt(0) : e3 instanceof Array ? e3.map(o.default.prototype.unchar) : undefined;
      }, o.default.prototype.hex = function(e3, t3) {
        if (t3 = t3 == null ? 8 : t3, e3 instanceof Array)
          return e3.map(function(e4) {
            return o.default.prototype.hex(e4, t3);
          });
        if (e3 === 1 / 0 || e3 === -1 / 0)
          return (e3 === 1 / 0 ? "F" : "0").repeat(t3);
        if (typeof e3 == "number") {
          e3 < 0 && (e3 = 4294967295 + e3 + 1);
          for (var r3 = Number(e3).toString(16).toUpperCase();r3.length < t3; )
            r3 = "0".concat(r3);
          return r3 = r3.length >= t3 ? r3.substring(r3.length - t3, r3.length) : r3;
        }
      }, o.default.prototype.unhex = function(e3) {
        return e3 instanceof Array ? e3.map(o.default.prototype.unhex) : parseInt("0x".concat(e3), 16);
      };
      e2 = o.default;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.map": 164, "core-js/modules/es.number.constructor": 173, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.repeat": 195 }], 316: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.pad-start"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.pad-start"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = (u = e2("../core/main")) && u.__esModule ? u : { default: u };
      function i(e3, t3) {
        return function(e4) {
          if (Array.isArray(e4))
            return e4;
        }(e3) || function(e4, t4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]") {
            var r3 = [], o2 = true, n2 = false, s3 = undefined;
            try {
              for (var i2, a2 = e4[Symbol.iterator]();!(o2 = (i2 = a2.next()).done) && (r3.push(i2.value), !t4 || r3.length !== t4); o2 = true)
                ;
            } catch (e5) {
              n2 = true, s3 = e5;
            } finally {
              try {
                o2 || a2.return == null || a2.return();
              } finally {
                if (n2)
                  throw s3;
              }
            }
            return r3;
          }
        }(e3, t3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function o(e3, t3, r3) {
        var o2 = i(e3.toString().split("."), 2), n2 = o2[0], o2 = o2[1];
        return r3 === undefined ? (n2 = n2.padStart(t3, "0"), o2 ? n2 + "." + o2 : n2) : (n2 = (e3 = i(e3.toFixed(r3).toString().split("."), 2))[0], o2 = e3[1], n2 = n2.padStart(t3, "0"), o2 === undefined ? n2 : n2 + "." + o2);
      }
      function n(e3, t3) {
        var r3 = (e3 = e3.toString()).indexOf("."), o2 = r3 !== -1 ? e3.substring(r3) : "", e3 = (e3 = r3 !== -1 ? e3.substring(0, r3) : e3).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        if (t3 === 0)
          o2 = "";
        else if (t3 !== undefined)
          if (t3 > o2.length)
            for (var n2 = t3 - (o2 += r3 === -1 ? "." : "").length + 1, s3 = 0;s3 < n2; s3++)
              o2 += "0";
          else
            o2 = o2.substring(0, t3 + 1);
        return e3 + o2;
      }
      function a(e3) {
        return 0 < parseFloat(e3) ? "+".concat(e3.toString()) : e3.toString();
      }
      function l(e3) {
        return 0 <= parseFloat(e3) ? " ".concat(e3.toString()) : e3.toString();
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), s2.default.prototype.join = function(e3, t3) {
        return s2.default._validateParameters("join", arguments), e3.join(t3);
      }, s2.default.prototype.match = function(e3, t3) {
        return s2.default._validateParameters("match", arguments), e3.match(t3);
      }, s2.default.prototype.matchAll = function(e3, t3) {
        s2.default._validateParameters("matchAll", arguments);
        for (var r3 = new RegExp(t3, "g"), o2 = r3.exec(e3), n2 = [];o2 !== null; )
          n2.push(o2), o2 = r3.exec(e3);
        return n2;
      }, s2.default.prototype.nf = function(e3, t3, r3) {
        return s2.default._validateParameters("nf", arguments), e3 instanceof Array ? e3.map(function(e4) {
          return o(e4, t3, r3);
        }) : Object.prototype.toString.call(e3) === "[object Arguments]" ? e3.length === 3 ? this.nf(e3[0], e3[1], e3[2]) : e3.length === 2 ? this.nf(e3[0], e3[1]) : this.nf(e3[0]) : o(e3, t3, r3);
      }, s2.default.prototype.nfc = function(e3, t3) {
        return s2.default._validateParameters("nfc", arguments), e3 instanceof Array ? e3.map(function(e4) {
          return n(e4, t3);
        }) : n(e3, t3);
      }, s2.default.prototype.nfp = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        s2.default._validateParameters("nfp", t3);
        var o2 = s2.default.prototype.nf.apply(this, t3);
        return o2 instanceof Array ? o2.map(a) : a(o2);
      }, s2.default.prototype.nfs = function() {
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        s2.default._validateParameters("nfs", t3);
        var o2 = s2.default.prototype.nf.apply(this, t3);
        return o2 instanceof Array ? o2.map(l) : l(o2);
      }, s2.default.prototype.split = function(e3, t3) {
        return s2.default._validateParameters("split", arguments), e3.split(t3);
      }, s2.default.prototype.splitTokens = function(e3, t3) {
        var r3, o2;
        return s2.default._validateParameters("splitTokens", arguments), o2 = t3 !== undefined ? (o2 = /\]/g.exec(t3 = t3), (r3 = /\[/g.exec(t3)) && o2 ? (t3 = t3.slice(0, o2.index) + t3.slice(o2.index + 1), r3 = /\[/g.exec(t3), t3 = t3.slice(0, r3.index) + t3.slice(r3.index + 1), new RegExp("[\\[".concat(t3, "\\]]"), "g")) : o2 ? (t3 = t3.slice(0, o2.index) + t3.slice(o2.index + 1), new RegExp("[".concat(t3, "\\]]"), "g")) : r3 ? (t3 = t3.slice(0, r3.index) + t3.slice(r3.index + 1), new RegExp("[".concat(t3, "\\[]"), "g")) : new RegExp("[".concat(t3, "]"), "g")) : /\s/g, e3.split(o2).filter(function(e4) {
          return e4;
        });
      }, s2.default.prototype.trim = function(e3) {
        return s2.default._validateParameters("trim", arguments), e3 instanceof Array ? e3.map(this.trim) : e3.trim();
      };
      var u = s2.default;
      r2.default = u;
    }, { "../core/friendly_errors/fes_core": 266, "../core/friendly_errors/file_errors": 267, "../core/friendly_errors/validate_params": 270, "../core/main": 275, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.number.to-fixed": 175, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.constructor": 186, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.pad-start": 194, "core-js/modules/es.string.replace": 196, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.trim": 201, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 317: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.day = function() {
        return new Date().getDate();
      }, e2.default.prototype.hour = function() {
        return new Date().getHours();
      }, e2.default.prototype.minute = function() {
        return new Date().getMinutes();
      }, e2.default.prototype.millis = function() {
        return this._millisStart === -1 ? 0 : window.performance.now() - this._millisStart;
      }, e2.default.prototype.month = function() {
        return new Date().getMonth() + 1;
      }, e2.default.prototype.second = function() {
        return new Date().getSeconds();
      }, e2.default.prototype.year = function() {
        return new Date().getFullYear();
      };
      e2 = e2.default;
      r2.default = e2;
    }, { "../core/main": 275 }], 318: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var S = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, _ = (e2("./p5.Geometry"), function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      S.default.prototype.beginGeometry = function() {
        return this._renderer.beginGeometry();
      }, S.default.prototype.endGeometry = function() {
        return this._renderer.endGeometry();
      }, S.default.prototype.buildGeometry = function(e3) {
        return this._renderer.buildGeometry(e3);
      }, S.default.prototype.freeGeometry = function(e3) {
        this._renderer._freeBuffers(e3.gid);
      }, S.default.prototype.plane = function(e3, t3, r3, o2) {
        this._assert3d("plane"), S.default._validateParameters("plane", arguments), e3 === undefined && (e3 = 50), t3 === undefined && (t3 = e3), o2 === undefined && (o2 = 1);
        var n2, s2 = "plane|".concat(r3 = r3 === undefined ? 1 : r3, "|").concat(o2);
        return this._renderer.geometryInHash(s2) || ((n2 = new S.default.Geometry(r3, o2, function() {
          for (var e4, t4, r4 = 0;r4 <= this.detailY; r4++)
            for (var o3 = r4 / this.detailY, n3 = 0;n3 <= this.detailX; n3++)
              e4 = n3 / this.detailX, t4 = new S.default.Vector(e4 - 0.5, o3 - 0.5, 0), this.vertices.push(t4), this.uvs.push(e4, o3);
        })).computeFaces().computeNormals(), r3 <= 1 && o2 <= 1 ? n2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(s2, n2)), this._renderer.drawBuffersScaled(s2, e3, t3, 1), this;
      }, S.default.prototype.box = function(e3, t3, r3, o2, n2) {
        this._assert3d("box"), S.default._validateParameters("box", arguments), e3 === undefined && (e3 = 50), t3 === undefined && (t3 = e3), r3 === undefined && (r3 = t3);
        var s2, i2 = this._renderer.attributes && this._renderer.attributes.perPixelLighting, i2 = (n2 === undefined && (n2 = i2 ? 1 : 4), "box|".concat(o2 = o2 === undefined ? i2 ? 1 : 4 : o2, "|").concat(n2));
        return this._renderer.geometryInHash(i2) || ((s2 = new S.default.Geometry(o2, n2, function() {
          var n3 = this;
          this.edges = [[0, 1], [1, 3], [3, 2], [6, 7], [8, 9], [9, 11], [14, 15], [16, 17], [17, 19], [18, 19], [20, 21], [22, 23]], [[0, 4, 2, 6], [1, 3, 5, 7], [0, 1, 4, 5], [2, 6, 3, 7], [0, 2, 1, 3], [4, 5, 6, 7]].forEach(function(e4, t4) {
            for (var t4 = 4 * t4, r4 = 0;r4 < 4; r4++) {
              var o3 = e4[r4], o3 = new S.default.Vector((2 * (1 & o3) - 1) / 2, ((2 & o3) - 1) / 2, ((4 & o3) / 2 - 1) / 2);
              n3.vertices.push(o3), n3.uvs.push(1 & r4, (2 & r4) / 2);
            }
            n3.faces.push([t4, 1 + t4, 2 + t4]), n3.faces.push([2 + t4, 1 + t4, 3 + t4]);
          });
        })).computeNormals(), o2 <= 4 && n2 <= 4 ? s2._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(i2, s2)), this._renderer.drawBuffersScaled(i2, e3, t3, r3), this;
      }, S.default.prototype.sphere = function(e3, t3, r3) {
        return this._assert3d("sphere"), S.default._validateParameters("sphere", arguments), this.ellipsoid(e3 = e3 === undefined ? 50 : e3, e3, e3, t3 = t3 === undefined ? 24 : t3, r3 = r3 === undefined ? 16 : r3), this;
      };
      function l(e3, t3, r3, o2, n2, s2, i2) {
        e3 = e3 <= 0 ? 1 : e3, t3 = t3 < 0 ? 0 : t3, r3 = r3 <= 0 ? e3 : r3, o2 = o2 < 3 ? 3 : o2;
        for (var a2, l2, u = (s2 = s2 === undefined || s2) ? -2 : 0, c = (n2 = n2 < 1 ? 1 : n2) + ((i2 = i2 === undefined ? t3 !== 0 : i2) ? 2 : 0), d = Math.atan2(e3 - t3, r3), h = Math.sin(d), f = Math.cos(d), p = u;p <= c; ++p) {
          var m = p / n2, y = r3 * m, g = undefined, g = p < 0 ? (m = y = 0, e3) : n2 < p ? (y = r3, m = 1, t3) : e3 + (t3 - e3) * m;
          for (p !== -2 && p !== n2 + 2 || (g = 0), y -= r3 / 2, a2 = 0;a2 < o2; ++a2) {
            var v = a2 / (o2 - 1), b = 2 * Math.PI * v, j = Math.sin(b), b = Math.cos(b), _2 = (this.vertices.push(new S.default.Vector(j * g, y, b * g)), undefined), _2 = p < 0 ? new S.default.Vector(0, -1, 0) : n2 < p && t3 ? new S.default.Vector(0, 1, 0) : new S.default.Vector(j * f, h, b * f);
            this.vertexNormals.push(_2), this.uvs.push(v, m);
          }
        }
        var x = 0;
        if (s2) {
          for (l2 = 0;l2 < o2; ++l2)
            this.faces.push([x + l2, x + o2 + (l2 + 1) % o2, x + o2 + l2]);
          x += 2 * o2;
        }
        for (p = 0;p < n2; ++p) {
          for (a2 = 0;a2 < o2; ++a2) {
            var w = (a2 + 1) % o2;
            this.faces.push([x + a2, x + w, x + o2 + w]), this.faces.push([x + a2, x + o2 + w, x + o2 + a2]);
          }
          x += o2;
        }
        if (i2)
          for (x += o2, a2 = 0;a2 < o2; ++a2)
            this.faces.push([x + a2, x + (a2 + 1) % o2, x + o2]);
      }
      S.default.prototype.cylinder = function(e3, t3, r3, o2, n2, s2) {
        this._assert3d("cylinder"), S.default._validateParameters("cylinder", arguments), e3 === undefined && (e3 = 50), t3 === undefined && (t3 = e3), o2 === undefined && (o2 = 1), s2 === undefined && (s2 = true), n2 === undefined && (n2 = true);
        var i2, a2 = "cylinder|".concat(r3 = r3 === undefined ? 24 : r3, "|").concat(o2, "|").concat(n2, "|").concat(s2);
        return this._renderer.geometryInHash(a2) || (i2 = new S.default.Geometry(r3, o2), l.call(i2, 1, 1, 1, r3, o2, n2, s2), r3 <= 24 && o2 <= 16 ? i2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a2, i2)), this._renderer.drawBuffersScaled(a2, e3, t3, e3), this;
      }, S.default.prototype.cone = function(e3, t3, r3, o2, n2) {
        this._assert3d("cone"), S.default._validateParameters("cone", arguments), e3 === undefined && (e3 = 50), t3 === undefined && (t3 = e3), o2 === undefined && (o2 = 1), n2 === undefined && (n2 = true);
        var s2, i2 = "cone|".concat(r3 = r3 === undefined ? 24 : r3, "|").concat(o2, "|").concat(n2);
        return this._renderer.geometryInHash(i2) || (s2 = new S.default.Geometry(r3, o2), l.call(s2, 1, 0, 1, r3, o2, n2, false), r3 <= 24 && o2 <= 16 ? s2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(i2, s2)), this._renderer.drawBuffersScaled(i2, e3, t3, e3), this;
      }, S.default.prototype.ellipsoid = function(e3, t3, r3, o2, n2) {
        this._assert3d("ellipsoid"), S.default._validateParameters("ellipsoid", arguments), e3 === undefined && (e3 = 50), t3 === undefined && (t3 = e3), r3 === undefined && (r3 = e3), n2 === undefined && (n2 = 16);
        var s2, i2 = "ellipsoid|".concat(o2 = o2 === undefined ? 24 : o2, "|").concat(n2);
        return this._renderer.geometryInHash(i2) || ((s2 = new S.default.Geometry(o2, n2, function() {
          for (var e4 = 0;e4 <= this.detailY; e4++)
            for (var t4 = e4 / this.detailY, r4 = Math.PI * t4 - Math.PI / 2, o3 = Math.cos(r4), n3 = Math.sin(r4), s3 = 0;s3 <= this.detailX; s3++) {
              var i3 = s3 / this.detailX, a2 = 2 * Math.PI * i3, l2 = Math.cos(a2), a2 = Math.sin(a2), a2 = new S.default.Vector(o3 * a2, n3, o3 * l2);
              this.vertices.push(a2), this.vertexNormals.push(a2), this.uvs.push(i3, t4);
            }
        })).computeFaces(), o2 <= 24 && n2 <= 24 ? s2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(i2, s2)), this._renderer.drawBuffersScaled(i2, e3, t3, r3), this;
      }, S.default.prototype.torus = function(e3, t3, r3, o2) {
        if (this._assert3d("torus"), S.default._validateParameters("torus", arguments), e3 === undefined)
          e3 = 50;
        else if (!e3)
          return;
        if (t3 === undefined)
          t3 = 10;
        else if (!t3)
          return;
        r3 === undefined && (r3 = 24), o2 === undefined && (o2 = 16);
        var n2, d = (t3 / e3).toPrecision(4), t3 = "torus|".concat(d, "|").concat(r3, "|").concat(o2);
        return this._renderer.geometryInHash(t3) || ((n2 = new S.default.Geometry(r3, o2, function() {
          for (var e4 = 0;e4 <= this.detailY; e4++)
            for (var t4 = e4 / this.detailY, r4 = 2 * Math.PI * t4, o3 = Math.cos(r4), n3 = Math.sin(r4), s2 = 1 + d * o3, i2 = 0;i2 <= this.detailX; i2++) {
              var a2 = i2 / this.detailX, l2 = 2 * Math.PI * a2, u = Math.cos(l2), l2 = Math.sin(l2), c = new S.default.Vector(s2 * u, s2 * l2, d * n3), u = new S.default.Vector(o3 * u, o3 * l2, n3);
              this.vertices.push(c), this.vertexNormals.push(u), this.uvs.push(a2, t4);
            }
        })).computeFaces(), r3 <= 24 && o2 <= 16 ? n2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(t3, n2)), this._renderer.drawBuffersScaled(t3, e3, e3, e3), this;
      }, S.default.RendererGL.prototype.point = function(e3, t3, r3) {
        var o2 = [];
        return o2.push(new S.default.Vector(e3, t3, r3 = r3 === undefined ? 0 : r3)), this._drawPoints(o2, this.immediateMode.buffers.point), this;
      }, S.default.RendererGL.prototype.triangle = function(e3) {
        var t3 = e3[0], r3 = e3[1], o2 = e3[2], n2 = e3[3], s2 = e3[4], e3 = e3[5], i2 = (this.geometryInHash("tri") || ((i2 = new S.default.Geometry(1, 1, function() {
          var e4 = [];
          e4.push(new S.default.Vector(0, 0, 0)), e4.push(new S.default.Vector(1, 0, 0)), e4.push(new S.default.Vector(0, 1, 0)), this.edges = [[0, 1], [1, 2], [2, 0]], this.vertices = e4, this.faces = [[0, 1, 2]], this.uvs = [0, 0, 1, 0, 1, 1];
        }))._edgesToVertices(), i2.computeNormals(), this.createBuffers("tri", i2)), this.uMVMatrix.copy());
        try {
          var a2 = Math.sign(t3 * n2 - o2 * r3 + o2 * e3 - s2 * n2 + s2 * r3 - t3 * e3), l2 = new S.default.Matrix([o2 - t3, n2 - r3, 0, 0, s2 - t3, e3 - r3, 0, 0, 0, 0, a2, 0, t3, r3, 0, 1]).mult(this.uMVMatrix);
          this.uMVMatrix = l2, this.drawBuffers("tri");
        } finally {
          this.uMVMatrix = i2;
        }
        return this;
      }, S.default.RendererGL.prototype.ellipse = function(e3) {
        this.arc(e3[0], e3[1], e3[2], e3[3], 0, _.TWO_PI, _.OPEN, e3[4]);
      }, S.default.RendererGL.prototype.arc = function(e3) {
        var t3, r3 = arguments[1], o2 = arguments[2], n2 = arguments[3], s2 = arguments[4], i2 = arguments[5], a2 = arguments[6], l2 = arguments[7] || 25, u = (Math.abs(i2 - s2) >= _.TWO_PI ? "".concat(c = "ellipse", "|") : "".concat(c = "arc", "|").concat(s2, "|").concat(i2, "|").concat(a2, "|")).concat(l2, "|"), c = (this.geometryInHash(u) || ((t3 = new S.default.Geometry(l2, 1, function() {
          if (s2.toFixed(10) !== i2.toFixed(10)) {
            a2 !== _.PIE && a2 !== undefined || (this.vertices.push(new S.default.Vector(0.5, 0.5, 0)), this.uvs.push([0.5, 0.5]));
            for (var e4 = 0;e4 <= l2; e4++) {
              var t4 = (i2 - s2) * (e4 / l2) + s2, r4 = 0.5 + Math.cos(t4) / 2, t4 = 0.5 + Math.sin(t4) / 2;
              this.vertices.push(new S.default.Vector(r4, t4, 0)), this.uvs.push([r4, t4]), e4 < l2 - 1 && (this.faces.push([0, e4 + 1, e4 + 2]), this.edges.push([e4 + 1, e4 + 2]));
            }
            switch (a2) {
              case _.PIE:
                this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, this.vertices.length - 1]);
                break;
              case _.CHORD:
                this.edges.push([0, 1]), this.edges.push([0, this.vertices.length - 1]);
                break;
              case _.OPEN:
                this.edges.push([0, 1]);
                break;
              default:
                this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]);
            }
          }
        })).computeNormals(), l2 <= 50 ? t3._edgesToVertices(t3) : this._doStroke && console.log("Cannot apply a stroke to an ".concat(c, " with more than 50 detail")), this.createBuffers(u, t3)), this.uMVMatrix.copy());
        try {
          this.uMVMatrix.translate([e3, r3, 0]), this.uMVMatrix.scale(o2, n2, 1), this.drawBuffers(u);
        } finally {
          this.uMVMatrix = c;
        }
        return this;
      }, S.default.RendererGL.prototype.rect = function(e3) {
        var t3 = e3[0], r3 = e3[1], o2 = e3[2], n2 = e3[3];
        if (e3[4] === undefined) {
          var s2 = this._pInst._glAttributes.perPixelLighting, i2 = e3[4] || (s2 ? 1 : 24), a2 = e3[5] || (s2 ? 1 : 16), s2 = "rect|".concat(i2, "|").concat(a2), l2 = (this.geometryInHash(s2) || ((l2 = new S.default.Geometry(i2, a2, function() {
            for (var e4 = 0;e4 <= this.detailY; e4++)
              for (var t4 = e4 / this.detailY, r4 = 0;r4 <= this.detailX; r4++) {
                var o3 = r4 / this.detailX, n3 = new S.default.Vector(o3, t4, 0);
                this.vertices.push(n3), this.uvs.push(o3, t4);
              }
            0 < i2 && 0 < a2 && (this.edges = [[0, i2], [i2, (i2 + 1) * (a2 + 1) - 1], [(i2 + 1) * (a2 + 1) - 1, (i2 + 1) * a2], [(i2 + 1) * a2, 0]]);
          })).computeFaces().computeNormals()._edgesToVertices(), this.createBuffers(s2, l2)), this.uMVMatrix.copy());
          try {
            this.uMVMatrix.translate([t3, r3, 0]), this.uMVMatrix.scale(o2, n2, 1), this.drawBuffers(s2);
          } finally {
            this.uMVMatrix = l2;
          }
        } else {
          var s2 = e3[4], l2 = e3[5] === undefined ? s2 : e3[5], u = e3[6] === undefined ? l2 : e3[6], e3 = e3[7] === undefined ? u : e3[7], c = o2, d = n2, h = ((c += t3) < t3 && (h = t3, t3 = c, c = h), (d += r3) < r3 && (h = r3, r3 = d, d = h), Math.min((c - t3) / 2, (d - r3) / 2)), f = (h < s2 && (s2 = h), h < l2 && (l2 = h), h < u && (u = h), h < e3 && (e3 = h), t3), p = r3, h = c, t3 = d, m = (this.beginShape(), l2 !== 0 ? (this.vertex(h - l2, p), this.quadraticVertex(h, p, h, p + l2)) : this.vertex(h, p), u !== 0 ? (this.vertex(h, t3 - u), this.quadraticVertex(h, t3, h - u, t3)) : this.vertex(h, t3), e3 !== 0 ? (this.vertex(f + e3, t3), this.quadraticVertex(f, t3, f, t3 - e3)) : this.vertex(f, t3), s2 !== 0 ? (this.vertex(f, p + s2), this.quadraticVertex(f, p, f + s2, p)) : this.vertex(f, p), !(this.immediateMode.geometry.uvs.length = 0)), r3 = false, c = undefined;
          try {
            for (var y, g = this.immediateMode.geometry.vertices[Symbol.iterator]();!(m = (y = g.next()).done); m = true) {
              var v = y.value, b = (v.x - f) / o2, j = (v.y - p) / n2;
              this.immediateMode.geometry.uvs.push(b, j);
            }
          } catch (e4) {
            r3 = true, c = e4;
          } finally {
            try {
              m || g.return == null || g.return();
            } finally {
              if (r3)
                throw c;
            }
          }
          this.endShape(_.CLOSE);
        }
        return this;
      }, S.default.RendererGL.prototype.quad = function(i2, a2, l2, u, c, d, h, f, p, m, y, g, e3, t3) {
        e3 === undefined && (e3 = 2), t3 === undefined && (t3 = 2);
        var r3 = "quad|".concat(i2, "|").concat(a2, "|").concat(l2, "|").concat(u, "|").concat(c, "|").concat(d, "|").concat(h, "|").concat(f, "|").concat(p, "|").concat(m, "|").concat(y, "|").concat(g, "|").concat(e3, "|").concat(t3);
        if (!this.geometryInHash(r3)) {
          var o2 = new S.default.Geometry(e3, t3, function() {
            for (var e4 = 1 / (this.detailX - 1), t4 = 1 / (this.detailY - 1), r4 = 0;r4 < this.detailY; r4++)
              for (var o3 = 0;o3 < this.detailX; o3++) {
                var n3 = o3 * e4, s3 = r4 * t4;
                this.vertices.push(new S.default.Vector((1 - n3) * ((1 - s3) * i2 + s3 * m) + n3 * ((1 - s3) * u + s3 * h), (1 - n3) * ((1 - s3) * a2 + s3 * y) + n3 * ((1 - s3) * c + s3 * f), (1 - n3) * ((1 - s3) * l2 + s3 * g) + n3 * ((1 - s3) * d + s3 * p))), this.uvs.push([n3, s3]);
              }
          });
          o2.faces = [];
          for (var n2 = 0;n2 < t3 - 1; n2++)
            for (var s2 = 0;s2 < e3 - 1; s2++) {
              var v = s2 + n2 * e3, b = s2 + 1 + (n2 + 1) * e3, j = s2 + (n2 + 1) * e3;
              o2.faces.push([v, s2 + 1 + n2 * e3, b]), o2.faces.push([v, b, j]);
            }
          o2.computeNormals();
          for (var _2 = [o2.edges.length = 0, 2, 3, 1], x = 0;x < _2.length; x++)
            o2.edges.push([_2[x], _2[(x + 1) % _2.length]]);
          o2._edgesToVertices(), this.createBuffers(r3, o2);
        }
        return this.drawBuffers(r3), this;
      }, S.default.RendererGL.prototype.bezier = function(e3, t3, r3, o2, n2, s2, i2, a2, l2, u, c, d) {
        arguments.length === 8 && (c = a2, u = i2, a2 = s2, i2 = n2, n2 = o2, o2 = r3, r3 = s2 = l2 = d = 0);
        var h = this._pInst._bezierDetail || 20;
        this.beginShape();
        for (var f = 0;f <= h; f++) {
          var p = Math.pow(1 - f / h, 3), m = f / h * 3 * Math.pow(1 - f / h, 2), y = 3 * Math.pow(f / h, 2) * (1 - f / h), g = Math.pow(f / h, 3);
          this.vertex(e3 * p + o2 * m + i2 * y + u * g, t3 * p + n2 * m + a2 * y + c * g, r3 * p + s2 * m + l2 * y + d * g);
        }
        return this.endShape(), this;
      }, S.default.RendererGL.prototype.curve = function(e3, t3, r3, o2, n2, s2, i2, a2, l2, u, c, d) {
        arguments.length === 8 && (u = i2, c = a2, i2 = n2, a2 = o2, n2 = o2 = r3, r3 = s2 = l2 = d = 0);
        var h = this._pInst._curveDetail;
        this.beginShape();
        for (var f = 0;f <= h; f++) {
          var p = 0.5 * Math.pow(f / h, 3), m = 0.5 * Math.pow(f / h, 2), y = f / h * 0.5;
          this.vertex(p * (3 * o2 - e3 - 3 * i2 + u) + m * (2 * e3 - 5 * o2 + 4 * i2 - u) + y * (-e3 + i2) + 2 * o2 * 0.5, p * (3 * n2 - t3 - 3 * a2 + c) + m * (2 * t3 - 5 * n2 + 4 * a2 - c) + y * (-t3 + a2) + 2 * n2 * 0.5, p * (3 * s2 - r3 - 3 * l2 + d) + m * (2 * r3 - 5 * s2 + 4 * l2 - d) + y * (-r3 + l2) + 2 * s2 * 0.5);
        }
        return this.endShape(), this;
      }, S.default.RendererGL.prototype.line = function() {
        return arguments.length === 6 ? (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]), this.vertex(arguments.length <= 3 ? undefined : arguments[3], arguments.length <= 4 ? undefined : arguments[4], arguments.length <= 5 ? undefined : arguments[5]), this.endShape()) : arguments.length === 4 && (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], 0), this.vertex(arguments.length <= 2 ? undefined : arguments[2], arguments.length <= 3 ? undefined : arguments[3], 0), this.endShape()), this;
      }, S.default.RendererGL.prototype.bezierVertex = function() {
        if (this.immediateMode._bezierVertex.length === 0)
          throw Error("vertex() must be used once before calling bezierVertex()");
        var e3, t3, r3, o2, n2, s2, i2 = [], a2 = [], l2 = arguments.length;
        if (this._lookUpTableBezier.length === 0 || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, c = 0, d = 1, h = 0;c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[h] = this._bezierCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableBezier[h] = this._bezierCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        for (var f = this._lookUpTableBezier.length, p = [], m = 0;m < 4; m++)
          p.push([]);
        p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[3] = this.curFillColor.slice();
        var y = [];
        for (m = 0;m < 4; m++)
          y.push([]);
        if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[3] = this.curStrokeColor.slice(), l2 === 6) {
          this.isBezier = true;
          var i2 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 2 ? undefined : arguments[2], arguments.length <= 4 ? undefined : arguments[4]], a2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 3 ? undefined : arguments[3], arguments.length <= 5 ? undefined : arguments[5]], g = Math.hypot(i2[0] - i2[1], a2[0] - a2[1]), v = Math.hypot(i2[1] - i2[2], a2[1] - a2[2]), b = Math.hypot(i2[2] - i2[3], a2[2] - a2[3]), v = g + v + b;
          for (g /= v, b /= v, n2 = 0;n2 < 4; n2++)
            p[1].push(p[0][n2] * (1 - g) + p[3][n2] * g), p[2].push(p[0][n2] * b + p[3][n2] * (1 - b)), y[1].push(y[0][n2] * (1 - g) + y[3][n2] * g), y[2].push(y[0][n2] * b + y[3][n2] * (1 - b));
          for (o2 = 0;o2 < f; o2++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t3 = 0;m < 4; m++) {
              for (n2 = 0;n2 < 4; n2++)
                this.curFillColor[n2] += this._lookUpTableBezier[o2][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableBezier[o2][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableBezier[o2][m], t3 += a2[m] * this._lookUpTableBezier[o2][m];
            }
            this.vertex(e3, t3);
          }
          this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? undefined : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? undefined : arguments[5];
        } else if (l2 === 9) {
          this.isBezier = true, i2 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 3 ? undefined : arguments[3], arguments.length <= 6 ? undefined : arguments[6]], a2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 4 ? undefined : arguments[4], arguments.length <= 7 ? undefined : arguments[7]];
          var j = [this.immediateMode._bezierVertex[2], arguments.length <= 2 ? undefined : arguments[2], arguments.length <= 5 ? undefined : arguments[5], arguments.length <= 8 ? undefined : arguments[8]], _2 = Math.hypot(i2[0] - i2[1], a2[0] - a2[1], j[0] - j[1]), v = Math.hypot(i2[1] - i2[2], a2[1] - a2[2], j[1] - j[2]), x = Math.hypot(i2[2] - i2[3], a2[2] - a2[3], j[2] - j[3]), l2 = _2 + v + x;
          for (_2 /= l2, x /= l2, n2 = 0;n2 < 4; n2++)
            p[1].push(p[0][n2] * (1 - _2) + p[3][n2] * _2), p[2].push(p[0][n2] * x + p[3][n2] * (1 - x)), y[1].push(y[0][n2] * (1 - _2) + y[3][n2] * _2), y[2].push(y[0][n2] * x + y[3][n2] * (1 - x));
          for (o2 = 0;o2 < f; o2++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t3 = r3 = 0;m < 4; m++) {
              for (n2 = 0;n2 < 4; n2++)
                this.curFillColor[n2] += this._lookUpTableBezier[o2][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableBezier[o2][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableBezier[o2][m], t3 += a2[m] * this._lookUpTableBezier[o2][m], r3 += j[m] * this._lookUpTableBezier[o2][m];
            }
            this.vertex(e3, t3, r3);
          }
          this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? undefined : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? undefined : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? undefined : arguments[8];
        }
      }, S.default.RendererGL.prototype.quadraticVertex = function() {
        if (this.immediateMode._quadraticVertex.length === 0)
          throw Error("vertex() must be used once before calling quadraticVertex()");
        var e3, t3, r3, o2, n2, s2, i2 = [], a2 = [], l2 = arguments.length;
        if (this._lookUpTableQuadratic.length === 0 || this._lutQuadraticDetail !== this._pInst._curveDetail) {
          this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutQuadraticDetail, c = 0, d = 1, h = 0;c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableQuadratic[h] = this._quadraticCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableQuadratic[h] = this._quadraticCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        for (var f = this._lookUpTableQuadratic.length, p = [], m = 0;m < 3; m++)
          p.push([]);
        p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[2] = this.curFillColor.slice();
        var y = [];
        for (m = 0;m < 3; m++)
          y.push([]);
        if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[2] = this.curStrokeColor.slice(), l2 === 4) {
          this.isQuadratic = true;
          var i2 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 2 ? undefined : arguments[2]], a2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 3 ? undefined : arguments[3]], g = Math.hypot(i2[0] - i2[1], a2[0] - a2[1]);
          for (g /= g + Math.hypot(i2[1] - i2[2], a2[1] - a2[2]), n2 = 0;n2 < 4; n2++)
            p[1].push(p[0][n2] * (1 - g) + p[2][n2] * g), y[1].push(y[0][n2] * (1 - g) + y[2][n2] * g);
          for (o2 = 0;o2 < f; o2++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t3 = 0;m < 3; m++) {
              for (n2 = 0;n2 < 4; n2++)
                this.curFillColor[n2] += this._lookUpTableQuadratic[o2][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableQuadratic[o2][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableQuadratic[o2][m], t3 += a2[m] * this._lookUpTableQuadratic[o2][m];
            }
            this.vertex(e3, t3);
          }
          this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? undefined : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? undefined : arguments[3];
        } else if (l2 === 6) {
          this.isQuadratic = true, i2 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 3 ? undefined : arguments[3]], a2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 4 ? undefined : arguments[4]];
          var v = [this.immediateMode._quadraticVertex[2], arguments.length <= 2 ? undefined : arguments[2], arguments.length <= 5 ? undefined : arguments[5]], b = Math.hypot(i2[0] - i2[1], a2[0] - a2[1], v[0] - v[1]);
          for (b /= b + Math.hypot(i2[1] - i2[2], a2[1] - a2[2], v[1] - v[2]), n2 = 0;n2 < 4; n2++)
            p[1].push(p[0][n2] * (1 - b) + p[2][n2] * b), y[1].push(y[0][n2] * (1 - b) + y[2][n2] * b);
          for (o2 = 0;o2 < f; o2++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t3 = r3 = 0;m < 3; m++) {
              for (n2 = 0;n2 < 4; n2++)
                this.curFillColor[n2] += this._lookUpTableQuadratic[o2][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableQuadratic[o2][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableQuadratic[o2][m], t3 += a2[m] * this._lookUpTableQuadratic[o2][m], r3 += v[m] * this._lookUpTableQuadratic[o2][m];
            }
            this.vertex(e3, t3, r3);
          }
          this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? undefined : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? undefined : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? undefined : arguments[5];
        }
      }, S.default.RendererGL.prototype.curveVertex = function() {
        var e3, t3, r3, o2, n2, s2, i2 = [], a2 = [], l2 = arguments.length;
        if (this._lookUpTableBezier.length === 0 || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, c = 0, d = 1, h = 0;c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[h] = this._bezierCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableBezier[h] = this._bezierCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        var f = this._lookUpTableBezier.length;
        if (l2 === 2) {
          if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? undefined : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? undefined : arguments[1]), this.immediateMode._curveVertex.length === 8) {
            for (this.isCurve = true, i2 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6]]), a2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7]]), n2 = 0;n2 < f; n2++)
              t3 = i2[0] * this._lookUpTableBezier[n2][0] + i2[1] * this._lookUpTableBezier[n2][1] + i2[2] * this._lookUpTableBezier[n2][2] + i2[3] * this._lookUpTableBezier[n2][3], r3 = a2[0] * this._lookUpTableBezier[n2][0] + a2[1] * this._lookUpTableBezier[n2][1] + a2[2] * this._lookUpTableBezier[n2][2] + a2[3] * this._lookUpTableBezier[n2][3], this.vertex(t3, r3);
            for (n2 = 0;n2 < l2; n2++)
              this.immediateMode._curveVertex.shift();
          }
        } else if (l2 === 3 && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? undefined : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? undefined : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? undefined : arguments[2]), this.immediateMode._curveVertex.length === 12)) {
          for (this.isCurve = true, i2 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9]]), a2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10]]), e3 = this._bezierToCatmull([this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11]]), n2 = 0;n2 < f; n2++)
            t3 = i2[0] * this._lookUpTableBezier[n2][0] + i2[1] * this._lookUpTableBezier[n2][1] + i2[2] * this._lookUpTableBezier[n2][2] + i2[3] * this._lookUpTableBezier[n2][3], r3 = a2[0] * this._lookUpTableBezier[n2][0] + a2[1] * this._lookUpTableBezier[n2][1] + a2[2] * this._lookUpTableBezier[n2][2] + a2[3] * this._lookUpTableBezier[n2][3], o2 = e3[0] * this._lookUpTableBezier[n2][0] + e3[1] * this._lookUpTableBezier[n2][1] + e3[2] * this._lookUpTableBezier[n2][2] + e3[3] * this._lookUpTableBezier[n2][3], this.vertex(t3, r3, o2);
          for (n2 = 0;n2 < l2; n2++)
            this.immediateMode._curveVertex.shift();
        }
      }, S.default.RendererGL.prototype.image = function(e3, t3, r3, o2, n2, s2, i2, a2, l2) {
        this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.noStroke(), this._pInst.texture(e3), this._pInst.textureMode(_.NORMAL);
        var u = 0, c = (t3 <= e3.width && (u = t3 / e3.width), 1), t3 = (t3 + o2 <= e3.width && (c = (t3 + o2) / e3.width), 0), o2 = (r3 <= e3.height && (t3 = r3 / e3.height), 1);
        r3 + n2 <= e3.height && (o2 = (r3 + n2) / e3.height), this.beginShape(), this.vertex(s2, i2, 0, u, t3), this.vertex(s2 + a2, i2, 0, c, t3), this.vertex(s2 + a2, i2 + l2, 0, c, o2), this.vertex(s2, i2 + l2, 0, u, o2), this.endShape(_.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(_.REMOVE);
      };
      var n = S.default;
      r2.default = n;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.Geometry": 327, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.math.hypot": 170, "core-js/modules/es.math.sign": 172, "core-js/modules/es.number.to-fixed": 175, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 319: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.assign"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var n = (c = e2("../core/main")) && c.__esModule ? c : { default: c }, a = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function u(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      var c = function() {
        function t3(e4) {
          if (!(this instanceof t3))
            throw new TypeError("Cannot call a class as a function");
          (this.renderer = e4)._pInst.push(), this.identityMatrix = new n.default.Matrix, e4.uMVMatrix = new n.default.Matrix, this.geometry = new n.default.Geometry, this.geometry.gid = "_p5_GeometryBuilder_".concat(t3.nextGeometryId), t3.nextGeometryId++, this.hasTransform = false;
        }
        var e3, r3, o2;
        return e3 = t3, (r3 = [{ key: "transformVertices", value: function(e4) {
          var t4 = this;
          return this.hasTransform ? e4.map(function(e5) {
            return t4.renderer.uMVMatrix.multiplyPoint(e5);
          }) : e4;
        } }, { key: "transformNormals", value: function(e4) {
          var t4 = this;
          return this.hasTransform ? e4.map(function(e5) {
            return t4.renderer.uNMatrix.multiplyVec3(e5);
          }) : e4;
        } }, { key: "addGeometry", value: function(e4) {
          for (var t4, r4 = this, o3 = (this.hasTransform = !this.renderer.uMVMatrix.mat4.every(function(e5, t5) {
            return e5 === r4.identityMatrix.mat4[t5];
          }), this.hasTransform && this.renderer.uNMatrix.inverseTranspose(this.renderer.uMVMatrix), this.geometry.vertices.length), n2 = ((t4 = this.geometry.vertices).push.apply(t4, s2(this.transformVertices(e4.vertices))), (t4 = this.geometry.vertexNormals).push.apply(t4, s2(this.transformNormals(e4.vertexNormals))), (t4 = this.geometry.uvs).push.apply(t4, s2(e4.uvs)), this.renderer._doFill && (t4 = this.geometry.faces).push.apply(t4, s2(e4.faces.map(function(e5) {
            return e5.map(function(e6) {
              return e6 + o3;
            });
          }))), this.renderer._doStroke && (t4 = this.geometry.edges).push.apply(t4, s2(e4.edges.map(function(e5) {
            return e5.map(function(e6) {
              return e6 + o3;
            });
          }))), s2(e4.vertexColors));n2.length < 4 * e4.vertices.length; )
            n2.push.apply(n2, s2(this.renderer.curFillColor));
          (t4 = this.geometry.vertexColors).push.apply(t4, s2(n2));
        } }, { key: "addImmediate", value: function() {
          var e4 = this.renderer.immediateMode.geometry, t4 = this.renderer.immediateMode.shapeMode, r4 = [];
          if (this.renderer._doFill)
            if (t4 === a.TRIANGLE_STRIP || t4 === a.QUAD_STRIP)
              for (var o3 = 2;o3 < e4.vertices.length; o3++)
                o3 % 2 == 0 ? r4.push([o3, o3 - 1, o3 - 2]) : r4.push([o3, o3 - 2, o3 - 1]);
            else if (t4 === a.TRIANGLE_FAN)
              for (var n2 = 2;n2 < e4.vertices.length; n2++)
                r4.push([0, n2 - 1, n2]);
            else
              for (var s3 = 0;s3 < e4.vertices.length; s3 += 3)
                r4.push([s3, s3 + 1, s3 + 2]);
          this.addGeometry(Object.assign({}, e4, { faces: r4 }));
        } }, { key: "addRetained", value: function(e4) {
          this.addGeometry(e4.model);
        } }, { key: "finish", value: function() {
          return this.renderer._pInst.pop(), this.geometry;
        } }]) && u(e3.prototype, r3), o2 && u(e3, o2), t3;
      }();
      c.nextGeometryId = 0, r2.default = c;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 320: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var g = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || v(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = i();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, i = function() {
          return e3;
        }, e3);
      }
      function v(e3) {
        return (v = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      g.default.prototype.orbitControl = function(e3, t3, r3, o2) {
        var n2 = this, s3 = (this._assert3d("orbitControl"), g.default._validateParameters("orbitControl", arguments), this._renderer._curCamera);
        e3 === undefined && (e3 = 1), t3 === undefined && (t3 = e3), r3 === undefined && (r3 = 1), v(o2) !== "object" && (o2 = {}), this.contextMenuDisabled !== true && (this.canvas.oncontextmenu = function() {
          return false;
        }, this._setProperty("contextMenuDisabled", true)), this.wheelDefaultDisabled !== true && (this.canvas.onwheel = function() {
          return false;
        }, this._setProperty("wheelDefaultDisabled", true));
        var i2 = o2.disableTouchActions;
        this.touchActionsDisabled === true || i2 !== undefined && !i2 || (this.canvas.style["touch-action"] = "none", this._setProperty("touchActionsDisabled", true));
        var a, l, u, i2 = o2.freeRotation, o2 = i2 !== undefined && i2, c = [], i2 = (this.touches.forEach(function(t4) {
          n2._renderer.prevTouches.forEach(function(e4) {
            t4.id === e4.id && (e4 = { x: t4.x, y: t4.y, px: e4.x, py: e4.y }, c.push(e4));
          });
        }), this._renderer.prevTouches = this.touches, 0), d = 0, h = 0, f = 0, p = 0, m = this.height < this.width ? this.height : this.width, y = false;
        return 0 < c.length ? (y = 0 < c[0].x && c[0].x < this.width && 0 < c[0].y && c[0].y < this.height, c.length === 1 ? (d = -e3 * ((a = c[0]).x - a.px) / m, h = t3 * (a.y - a.py) / m) : (a = c[0], l = c[1], i2 = -(Math.hypot(a.x - l.x, a.y - l.y) - Math.hypot(a.px - l.px, a.py - l.py)) * r3 * 0.0004, f = 0.5 * (a.x + l.x) - 0.5 * (a.px + l.px), p = 0.5 * (a.y + l.y) - 0.5 * (a.py + l.py)), 0 < this.touches.length ? y && (this._renderer.executeRotateAndMove = true, this._renderer.executeZoom = true) : (this._renderer.executeRotateAndMove = false, this._renderer.executeZoom = false)) : (y = 0 < this.mouseX && this.mouseX < this.width && 0 < this.mouseY && this.mouseY < this.height, this._mouseWheelDeltaY !== 0 ? (i2 = Math.sign(this._mouseWheelDeltaY) * r3, i2 *= 0.01, this._mouseWheelDeltaY = 0, y && (this._renderer.executeZoom = true)) : this._renderer.zoomFlag = false, this.mouseIsPressed ? (this.mouseButton === this.LEFT ? (d = -e3 * this.movedX / m, h = t3 * this.movedY / m) : this.mouseButton === this.RIGHT && (f = this.movedX, p = this.movedY * s3.yScale), y && (this._renderer.executeRotateAndMove = true)) : this._renderer.executeRotateAndMove = false), i2 !== 0 && this._renderer.executeZoom && (this._renderer.zoomVelocity += i2), 0.001 < Math.abs(this._renderer.zoomVelocity) ? (o2 ? s3._orbitFree(0, 0, this._renderer.zoomVelocity) : s3._orbit(0, 0, this._renderer.zoomVelocity), s3.projMatrix.mat4[15] !== 0 && (s3.projMatrix.mat4[0] *= Math.pow(10, -this._renderer.zoomVelocity), s3.projMatrix.mat4[5] *= Math.pow(10, -this._renderer.zoomVelocity), this._renderer.uPMatrix.mat4[0] = s3.projMatrix.mat4[0], this._renderer.uPMatrix.mat4[5] = s3.projMatrix.mat4[5]), this._renderer.zoomVelocity *= 0.85) : this._renderer.zoomVelocity = 0, d === 0 && h === 0 || !this._renderer.executeRotateAndMove || this._renderer.rotateVelocity.add(0.6 * d, 0.6 * h), 0.000001 < this._renderer.rotateVelocity.magSq() ? (o2 ? s3._orbitFree(-this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0) : s3._orbit(this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0), this._renderer.rotateVelocity.mult(0.85)) : this._renderer.rotateVelocity.set(0, 0), f === 0 && p === 0 || !this._renderer.executeRotateAndMove || (a = 2 * f / this.width, l = 2 * -p / this.height, this._renderer.moveVelocity.add(0.15 * a, 0.15 * l)), 0.000001 < this._renderer.moveVelocity.magSq() ? (r3 = s3._getLocalAxes(), e3 = s3.eyeX - s3.centerX, t3 = s3.eyeY - s3.centerY, m = s3.eyeZ - s3.centerZ, y = Math.sqrt(e3 * e3 + t3 * t3 + m * m), i2 = new g.default.Vector(s3.centerX, s3.centerY, s3.centerZ), i2 = s3.cameraMatrix.multiplyPoint(i2), (i2 = this._renderer.uPMatrix.multiplyAndNormalizePoint(i2)).x -= this._renderer.moveVelocity.x, i2.y -= this._renderer.moveVelocity.y, h = (d = this._renderer.uPMatrix.mat4)[15] === 0 ? (u = (d[8] + i2.x) / d[0] * y, (d[9] + i2.y) / d[5] * y) : (u = (i2.x - d[12]) / d[0], (i2.y - d[13]) / d[5]), s3.setPosition(s3.eyeX + u * r3.x[0] + h * r3.y[0], s3.eyeY + u * r3.x[1] + h * r3.y[1], s3.eyeZ + u * r3.x[2] + h * r3.y[2]), this._renderer.moveVelocity.mult(0.85)) : this._renderer.moveVelocity.set(0, 0), this;
      }, g.default.prototype.debugMode = function() {
        this._assert3d("debugMode");
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        g.default._validateParameters("debugMode", t3);
        for (var o2 = this._registeredMethods.post.length - 1;0 <= o2; o2--)
          this._registeredMethods.post[o2].toString() !== this._grid().toString() && this._registeredMethods.post[o2].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(o2, 1);
        t3[0] === n.GRID ? this.registerMethod("post", this._grid.call(this, t3[1], t3[2], t3[3], t3[4], t3[5])) : t3[0] === n.AXES ? this.registerMethod("post", this._axesIcon.call(this, t3[1], t3[2], t3[3], t3[4])) : (this.registerMethod("post", this._grid.call(this, t3[0], t3[1], t3[2], t3[3], t3[4])), this.registerMethod("post", this._axesIcon.call(this, t3[5], t3[6], t3[7], t3[8])));
      }, g.default.prototype.noDebugMode = function() {
        this._assert3d("noDebugMode");
        for (var e3 = this._registeredMethods.post.length - 1;0 <= e3; e3--)
          this._registeredMethods.post[e3].toString() !== this._grid().toString() && this._registeredMethods.post[e3].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e3, 1);
      }, g.default.prototype._grid = function(e3, r3, o2, n2, s3) {
        e3 === undefined && (e3 = this.width / 2), r3 === undefined && (r3 = Math.round(e3 / 30) < 4 ? 4 : Math.round(e3 / 30)), o2 === undefined && (o2 = 0), n2 === undefined && (n2 = 0), s3 === undefined && (s3 = 0);
        var i2 = e3 / r3, a = e3 / 2;
        return function() {
          this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
          for (var e4 = 0;e4 <= r3; e4++)
            this.beginShape(this.LINES), this.vertex(-a + o2, n2, e4 * i2 - a + s3), this.vertex(a + o2, n2, e4 * i2 - a + s3), this.endShape();
          for (var t3 = 0;t3 <= r3; t3++)
            this.beginShape(this.LINES), this.vertex(t3 * i2 - a + o2, n2, -a + s3), this.vertex(t3 * i2 - a + o2, n2, a + s3), this.endShape();
          this.pop();
        };
      }, g.default.prototype._axesIcon = function(e3, t3, r3, o2) {
        return e3 === undefined && (e3 = 40 < this.width / 20 ? this.width / 20 : 40), t3 === undefined && (t3 = -this.width / 4), r3 === undefined && (r3 = t3), o2 === undefined && (o2 = t3), function() {
          this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t3, r3, o2), this.vertex(t3 + e3, r3, o2), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t3, r3, o2), this.vertex(t3, r3 + e3, o2), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t3, r3, o2), this.vertex(t3, r3, o2 + e3), this.endShape(), this.pop();
        };
      };
      var s2 = g.default;
      r2.default = s2;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.splice": 167, "core-js/modules/es.math.hypot": 170, "core-js/modules/es.math.sign": 172, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 321: [function(e2, t2, r2) {
      Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var m = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      m.default.prototype.ambientLight = function(e3, t3, r3, o) {
        this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
        var n = this.color.apply(this, arguments);
        return this._renderer.ambientLightColors.push(n._array[0], n._array[1], n._array[2]), this._renderer._enableLighting = true, this;
      }, m.default.prototype.specularColor = function(e3, t3, r3) {
        this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
        var o = this.color.apply(this, arguments);
        return this._renderer.specularColors = [o._array[0], o._array[1], o._array[2]], this;
      }, m.default.prototype.directionalLight = function(e3, t3, r3, o, n, s2) {
        this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), e3 = e3 instanceof m.default.Color ? e3 : this.color(e3, t3, r3);
        var i, a, t3 = arguments[arguments.length - 1], r3 = typeof t3 == "number" ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t3.x, a = t3.y, t3.z), t3 = Math.sqrt(i * i + a * a + r3 * r3);
        return this._renderer.directionalLightDirections.push(i / t3, a / t3, r3 / t3), this._renderer.directionalLightDiffuseColors.push(e3._array[0], e3._array[1], e3._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.pointLight = function(e3, t3, r3, o, n, s2) {
        this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), e3 = e3 instanceof m.default.Color ? e3 : this.color(e3, t3, r3);
        var i, a, t3 = arguments[arguments.length - 1], r3 = typeof t3 == "number" ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t3.x, a = t3.y, t3.z);
        return this._renderer.pointLightPositions.push(i, a, r3), this._renderer.pointLightDiffuseColors.push(e3._array[0], e3._array[1], e3._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.imageLight = function(e3) {
        this._renderer.activeImageLight = e3, this._renderer._enableLighting = true;
      }, m.default.prototype.lights = function() {
        this._assert3d("lights");
        var e3 = this.color("rgb(128,128,128)");
        return this.ambientLight(e3), this.directionalLight(e3, 0, 0, -1), this;
      }, m.default.prototype.lightFalloff = function(e3, t3, r3) {
        return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e3 < 0 && (e3 = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t3 < 0 && (t3 = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r3 < 0 && (r3 = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), e3 === 0 && t3 === 0 && r3 === 0 && (e3 = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e3, this._renderer.linearAttenuation = t3, this._renderer.quadraticAttenuation = r3, this;
      }, m.default.prototype.spotLight = function(e3, t3, r3, o, n, s2, i, a, l, u, c) {
        this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
        var d, h, f, p = arguments.length;
        switch (p) {
          case 11:
          case 10:
            d = this.color(e3, t3, r3), h = new m.default.Vector(o, n, s2), f = new m.default.Vector(i, a, l);
            break;
          case 9:
            e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t3, r3, o), f = new m.default.Vector(n, s2, i), u = a, c = l) : o instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, f = new m.default.Vector(n, s2, i), u = a, c = l) : i instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = new m.default.Vector(o, n, s2), f = i, u = a, c = l) : (d = this.color(e3, t3, r3), h = new m.default.Vector(o, n, s2), f = new m.default.Vector(i, a, l));
            break;
          case 8:
            u = (f = e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t3, r3, o), new m.default.Vector(n, s2, i)) : o instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, new m.default.Vector(n, s2, i)) : (d = this.color(e3, t3, r3), h = new m.default.Vector(o, n, s2), i), a);
            break;
          case 7:
            e3 instanceof m.default.Color && t3 instanceof m.default.Vector ? (d = e3, h = t3, f = new m.default.Vector(r3, o, n), u = s2, c = i) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t3, r3, o), f = n, u = s2, c = i) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, f = n, u = s2, c = i) : f = e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t3, r3, o), new m.default.Vector(n, s2, i)) : o instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, new m.default.Vector(n, s2, i)) : (d = this.color(e3, t3, r3), h = new m.default.Vector(o, n, s2), i);
            break;
          case 6:
            o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, f = n, u = s2) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t3, r3, o), f = n, u = s2) : e3 instanceof m.default.Color && t3 instanceof m.default.Vector && (d = e3, h = t3, f = new m.default.Vector(r3, o, n), u = s2);
            break;
          case 5:
            e3 instanceof m.default.Color && t3 instanceof m.default.Vector && r3 instanceof m.default.Vector ? (d = e3, h = t3, f = r3, u = o, c = n) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t3, r3), h = o, f = n) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t3, r3, o), f = n) : e3 instanceof m.default.Color && t3 instanceof m.default.Vector && (d = e3, h = t3, f = new m.default.Vector(r3, o, n));
            break;
          case 4:
            d = e3, h = t3, f = r3, u = o;
            break;
          case 3:
            d = e3, h = t3, f = r3;
            break;
          default:
            return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
        }
        return this._renderer.spotLightDiffuseColors.push(d._array[0], d._array[1], d._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(h.x, h.y, h.z), f.normalize(), this._renderer.spotLightDirections.push(f.x, f.y, f.z), u === undefined && (u = Math.PI / 3), c !== undefined && c < 1 ? (c = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : c === undefined && (c = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(c), this._renderer._enableLighting = true, this;
      }, m.default.prototype.noLights = function() {
        this._assert3d("noLights");
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return m.default._validateParameters("noLights", t3), this._renderer._enableLighting = false, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [1, 1, 1], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this;
      };
      e2 = m.default;
      r2.default = e2;
    }, { "../core/main": 275 }], 322: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var x = (o = e2("../core/main")) && o.__esModule ? o : { default: o };
      e2("./p5.Geometry"), x.default.prototype.loadModel = function(e3) {
        x.default._validateParameters("loadModel", arguments);
        var y, g, t3, r3 = e3.slice(-4), v = (typeof arguments[1] == "boolean" ? (y = arguments[1], g = arguments[2], t3 = arguments[3], arguments[4] !== undefined && (r3 = arguments[4])) : (y = false, g = arguments[1], t3 = arguments[2], arguments[3] !== undefined && (r3 = arguments[3])), new x.default.Geometry), b = (v.gid = "".concat(e3, "|").concat(y), this);
        return r3.match(/\.stl$/i) ? this.httpDo(e3, "GET", "arrayBuffer", function(e4) {
          (function(e5, t4) {
            if (function(e6) {
              for (var t5 = new DataView(e6), r4 = [115, 111, 108, 105, 100], o2 = 0;o2 < 5; o2++)
                if (function(e7, t6, r5) {
                  for (var o3 = 0, n = e7.length;o3 < n; o3++)
                    if (e7[o3] !== t6.getUint8(r5 + o3, false))
                      return;
                  return 1;
                }(r4, t5, o2))
                  return;
              return 1;
            }(t4))
              (function(e6, t5) {
                for (var r4, o2, n, s2, i, a, l, u = new DataView(t5), c = u.getUint32(80, true), d = false, h = 0;h < 70; h++)
                  u.getUint32(h, false) === 1129270351 && u.getUint8(h + 4) === 82 && u.getUint8(h + 5) === 61 && (d = true, s2 = [], i = u.getUint8(h + 6) / 255, a = u.getUint8(h + 7) / 255, l = u.getUint8(h + 8) / 255);
                for (var f = 0;f < c; f++) {
                  for (var p, m = 84 + 50 * f, y2 = u.getFloat32(m, true), g2 = u.getFloat32(4 + m, true), v2 = u.getFloat32(8 + m, true), b2 = (d && (p = u.getUint16(48 + m, true), n = (32768 & p) == 0 ? (r4 = (31 & p) / 31, o2 = (p >> 5 & 31) / 31, (p >> 10 & 31) / 31) : (r4 = i, o2 = a, l)), new x.default.Vector(y2, g2, v2)), j = 1;j <= 3; j++) {
                    var _ = m + 12 * j, _ = new x.default.Vector(u.getFloat32(_, true), u.getFloat32(4 + _, true), u.getFloat32(8 + _, true));
                    e6.vertices.push(_), e6.vertexNormals.push(b2), d && s2.push(r4, o2, n);
                  }
                  e6.faces.push([3 * f, 3 * f + 1, 3 * f + 2]), e6.uvs.push([0, 0], [0, 0], [0, 0]);
                }
              })(e5, t4);
            else {
              t4 = new DataView(t4);
              if (!("TextDecoder" in window))
                return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
              t4 = new TextDecoder("utf-8").decode(t4).split("\n");
              (function(e6, t5) {
                for (var r4, o2, n = "", s2 = [], i = 0;i < t5.length; ++i) {
                  for (var a = t5[i].trim(), l = a.split(" "), u = 0;u < l.length; ++u)
                    l[u] === "" && l.splice(u, 1);
                  if (l.length !== 0)
                    switch (n) {
                      case "":
                        if (l[0] !== "solid")
                          return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "solid"'));
                        n = "solid";
                        break;
                      case "solid":
                        if (l[0] !== "facet" || l[1] !== "normal")
                          return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "facet normal"'));
                        r4 = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e6.vertexNormals.push(r4, r4, r4), n = "facet normal";
                        break;
                      case "facet normal":
                        if (l[0] !== "outer" || l[1] !== "loop")
                          return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "outer loop"'));
                        n = "vertex";
                        break;
                      case "vertex":
                        if (l[0] === "vertex")
                          o2 = new x.default.Vector(parseFloat(l[1]), parseFloat(l[2]), parseFloat(l[3])), e6.vertices.push(o2), e6.uvs.push([0, 0]), s2.push(e6.vertices.indexOf(o2));
                        else {
                          if (l[0] !== "endloop")
                            return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "vertex" or "endloop"'));
                          e6.faces.push(s2), s2 = [], n = "endloop";
                        }
                        break;
                      case "endloop":
                        if (l[0] !== "endfacet")
                          return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endfacet"'));
                        n = "endfacet";
                        break;
                      case "endfacet":
                        if (l[0] !== "endsolid") {
                          if (l[0] !== "facet" || l[1] !== "normal")
                            return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endsolid" or "facet normal"'));
                          r4 = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e6.vertexNormals.push(r4, r4, r4), n = "facet normal";
                        }
                        break;
                      default:
                        console.error('Invalid state "'.concat(n, '"'));
                    }
                }
              })(e5, t4);
            }
          })(v, e4), y && v.normalize(), b._decrementPreload(), typeof g == "function" && g(v);
        }, t3) : r3.match(/\.obj$/i) ? this.loadStrings(e3, function(e4) {
          for (var t4 = v, r4 = e4, o2 = { v: [], vt: [], vn: [] }, n = {}, s2 = 0;s2 < r4.length; ++s2) {
            var i = r4[s2].trim().split(/\b\s+/);
            if (0 < i.length) {
              if (i[0] === "v" || i[0] === "vn") {
                var a = new x.default.Vector(parseFloat(i[1]), parseFloat(i[2]), parseFloat(i[3]));
                o2[i[0]].push(a);
              } else if (i[0] === "vt") {
                a = [parseFloat(i[1]), 1 - parseFloat(i[2])];
                o2[i[0]].push(a);
              } else if (i[0] === "f")
                for (var l = 3;l < i.length; ++l) {
                  for (var u = [], c = [1, l - 1, l], d = 0;d < c.length; ++d) {
                    var h = i[c[d]], f = 0;
                    if (n[h] !== undefined)
                      f = n[h];
                    else {
                      for (var p = h.split("/"), m = 0;m < p.length; m++)
                        p[m] = parseInt(p[m]) - 1;
                      f = n[h] = t4.vertices.length, t4.vertices.push(o2.v[p[0]].copy()), o2.vt[p[1]] ? t4.uvs.push(o2.vt[p[1]].slice()) : t4.uvs.push([0, 0]), o2.vn[p[2]] && t4.vertexNormals.push(o2.vn[p[2]].copy());
                    }
                    u.push(f);
                  }
                  u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && t4.faces.push(u);
                }
            }
          }
          t4.vertexNormals.length === 0 && t4.computeNormals(), y && v.normalize(), b._decrementPreload(), typeof g == "function" && g(v);
        }, t3) : (x.default._friendlyFileLoadError(3, e3), t3 ? t3() : x.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), v;
      }, x.default.prototype.model = function(e3) {
        this._assert3d("model"), x.default._validateParameters("model", arguments), 0 < e3.vertices.length && (this._renderer.geometryInHash(e3.gid) || (e3.edges.length === 0 && e3._makeTriangleEdges(), e3._edgesToVertices(), this._renderer.createBuffers(e3.gid, e3)), this._renderer.drawBuffers(e3.gid));
      };
      var o = x.default;
      r2.default = o;
    }, { "../core/main": 275, "./p5.Geometry": 327, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.splice": 167, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.match": 193, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.trim": 201 }], 323: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var u = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Texture"), u.default.prototype.loadShader = function(e3, t3, r3, o2) {
        u.default._validateParameters("loadShader", arguments), o2 = o2 || console.error;
        function n2() {
          i2._decrementPreload(), r3 && r3(s3);
        }
        var s3 = new u.default.Shader, i2 = this, a2 = false, l = false;
        return this.loadStrings(e3, function(e4) {
          s3._vertSrc = e4.join("\n"), l = true, a2 && n2();
        }, o2), this.loadStrings(t3, function(e4) {
          s3._fragSrc = e4.join("\n"), a2 = true, l && n2();
        }, o2), s3;
      }, u.default.prototype.createShader = function(e3, t3) {
        return u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e3, t3);
      }, u.default.prototype.createFilterShader = function(e3) {
        u.default._validateParameters("createFilterShader", arguments);
        var t3 = e3.includes("#version 300 es") ? "#version 300 es\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    in vec3 aPosition;\n    in vec2 aTexCoord;\n    out vec2 vTexCoord;\n\n    void main() {\n      // transferring texcoords for the frag shader\n      vTexCoord = aTexCoord;\n\n      // copy position with a fourth coordinate for projection (1.0 is normal)\n      vec4 positionVec4 = vec4(aPosition, 1.0);\n\n      // project to 3D space\n      gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n    }\n  " : "\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    attribute vec3 aPosition;\n    // texcoords only come from p5 to vertex shader\n    // so pass texcoords on to the fragment shader in a varying variable\n    attribute vec2 aTexCoord;\n    varying vec2 vTexCoord;\n\n    void main() {\n      // transferring texcoords for the frag shader\n      vTexCoord = aTexCoord;\n\n      // copy position with a fourth coordinate for projection (1.0 is normal)\n      vec4 positionVec4 = vec4(aPosition, 1.0);\n\n      // project to 3D space\n      gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n    }\n  ", t3 = new u.default.Shader(this._renderer, t3, e3);
        return this._renderer.GL ? t3.ensureCompiledOnContext(this) : t3.ensureCompiledOnContext(this._renderer.getFilterGraphicsLayer()), t3;
      }, u.default.prototype.shader = function(e3) {
        return this._assert3d("shader"), u.default._validateParameters("shader", arguments), e3.ensureCompiledOnContext(this), e3.isStrokeShader() ? this._renderer.userStrokeShader = e3 : (this._renderer.userFillShader = e3, this._renderer._useNormalMaterial = false), this;
      }, u.default.prototype.resetShader = function() {
        return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
      }, u.default.prototype.texture = function(e3) {
        return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e3.gifProperties && e3._animateGif(this), this._renderer.drawMode = n.TEXTURE, this._renderer._useNormalMaterial = false, this._renderer._tex = e3, this._renderer._setProperty("_doFill", true), this;
      }, u.default.prototype.textureMode = function(e3) {
        e3 !== n.IMAGE && e3 !== n.NORMAL ? console.warn("You tried to set ".concat(e3, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e3;
      }, u.default.prototype.textureWrap = function(e3) {
        var t3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : e3, r3 = (this._renderer.textureWrapX = e3, this._renderer.textureWrapY = t3, true), o2 = false, n2 = undefined;
        try {
          for (var s3, i2 = this._renderer.textures.values()[Symbol.iterator]();!(r3 = (s3 = i2.next()).done); r3 = true)
            s3.value.setWrapMode(e3, t3);
        } catch (e4) {
          o2 = true, n2 = e4;
        } finally {
          try {
            r3 || i2.return == null || i2.return();
          } finally {
            if (o2)
              throw n2;
          }
        }
      }, u.default.prototype.normalMaterial = function() {
        this._assert3d("normalMaterial");
        for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0;r3 < e3; r3++)
          t3[r3] = arguments[r3];
        return u.default._validateParameters("normalMaterial", t3), this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = true, this._renderer.curFillColor = [1, 1, 1, 1], this._renderer._setProperty("_doFill", true), this.noStroke(), this;
      }, u.default.prototype.ambientMaterial = function(e3, t3, r3) {
        this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
        var o2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer._hasSetAmbient = true, this._renderer.curAmbientColor = o2._array, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._setProperty("_doFill", true), this;
      }, u.default.prototype.emissiveMaterial = function(e3, t3, r3, o2) {
        this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curEmissiveColor = n2._array, this._renderer._useEmissiveMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
      }, u.default.prototype.specularMaterial = function(e3, t3, r3, o2) {
        this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curSpecularColor = n2._array, this._renderer._useSpecularMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
      }, u.default.prototype.shininess = function(e3) {
        return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), this._renderer._useShininess = e3 = e3 < 1 ? 1 : e3, this;
      }, u.default.RendererGL.prototype._applyColorBlend = function(e3) {
        var t3 = this.GL, r3 = this.drawMode === n.TEXTURE, r3 = this.userFillShader || this.userStrokeShader || this.userPointShader || r3 || this.curBlendMode !== n.BLEND || e3[e3.length - 1] < 1 || this._isErasing;
        return r3 !== this._isBlending && (r3 || this.curBlendMode !== n.BLEND && this.curBlendMode !== n.ADD ? t3.enable(t3.BLEND) : t3.disable(t3.BLEND), t3.depthMask(true), this._isBlending = r3), this._applyBlendMode(), e3;
      }, u.default.RendererGL.prototype._applyBlendMode = function() {
        if (this._cachedBlendMode !== this.curBlendMode) {
          var e3 = this.GL;
          switch (this.curBlendMode) {
            case n.BLEND:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.ADD:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE);
              break;
            case n.REMOVE:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ZERO, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.MULTIPLY:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.DST_COLOR, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.SCREEN:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE_MINUS_SRC_COLOR);
              break;
            case n.EXCLUSION:
              e3.blendEquationSeparate(e3.FUNC_ADD, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE_MINUS_DST_COLOR, e3.ONE_MINUS_SRC_COLOR, e3.ONE, e3.ONE);
              break;
            case n.REPLACE:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ZERO);
              break;
            case n.SUBTRACT:
              e3.blendEquationSeparate(e3.FUNC_REVERSE_SUBTRACT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.DARKEST:
              this.blendExt ? (e3.blendEquationSeparate(this.blendExt.MIN || this.blendExt.MIN_EXT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
              break;
            case n.LIGHTEST:
              this.blendExt ? (e3.blendEquationSeparate(this.blendExt.MAX || this.blendExt.MAX_EXT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
              break;
            default:
              console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
          }
          this._isErasing || (this._cachedBlendMode = this.curBlendMode);
        }
      };
      var s2 = u.default;
      r2.default = s2;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.Texture": 334, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.join": 162, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 324: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.string.sub"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var _ = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      _.default.prototype.camera = function() {
        var e3;
        this._assert3d("camera");
        for (var t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return _.default._validateParameters("camera", r3), (e3 = this._renderer._curCamera).camera.apply(e3, r3), this;
      }, _.default.prototype.perspective = function() {
        var e3;
        this._assert3d("perspective");
        for (var t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return _.default._validateParameters("perspective", r3), (e3 = this._renderer._curCamera).perspective.apply(e3, r3), this;
      }, _.default.prototype.ortho = function() {
        var e3;
        this._assert3d("ortho");
        for (var t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return _.default._validateParameters("ortho", r3), (e3 = this._renderer._curCamera).ortho.apply(e3, r3), this;
      }, _.default.prototype.frustum = function() {
        var e3;
        this._assert3d("frustum");
        for (var t3 = arguments.length, r3 = new Array(t3), o = 0;o < t3; o++)
          r3[o] = arguments[o];
        return _.default._validateParameters("frustum", r3), (e3 = this._renderer._curCamera).frustum.apply(e3, r3), this;
      }, _.default.prototype.createCamera = function() {
        this._assert3d("createCamera");
        var e3 = new _.default.Camera(this._renderer);
        return e3._computeCameraDefaultSettings(), e3._setDefaultCamera(), this._renderer._curCamera = e3;
      }, _.default.Camera = function() {
        function t3(e4) {
          if (!(this instanceof t3))
            throw new TypeError("Cannot call a class as a function");
          this._renderer = e4, this.cameraType = "default", this.cameraMatrix = new _.default.Matrix, this.projMatrix = new _.default.Matrix, this.yScale = 1;
        }
        var e3, r3, o;
        return e3 = t3, (r3 = [{ key: "perspective", value: function(e4, t4, r4, o2) {
          this.cameraType = 0 < arguments.length ? "custom" : "default", e4 === undefined ? (e4 = this.defaultCameraFOV, this.cameraFOV = e4) : this.cameraFOV = this._renderer._pInst._toRadians(e4), t4 === undefined && (t4 = this.defaultAspectRatio), r4 === undefined && (r4 = this.defaultCameraNear), o2 === undefined && (o2 = this.defaultCameraFar), r4 <= 0.0001 && (r4 = 0.01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o2 < r4 && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t4, this.cameraNear = r4, this.cameraFar = o2, this.projMatrix = _.default.Matrix.identity();
          var e4 = 1 / Math.tan(this.cameraFOV / 2), n2 = 1 / (this.cameraNear - this.cameraFar);
          this.projMatrix.set(e4 / t4, 0, 0, 0, 0, -e4 * this.yScale, 0, 0, 0, 0, (o2 + r4) * n2, -1, 0, 0, 2 * o2 * r4 * n2, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]);
        } }, { key: "ortho", value: function(e4, t4, r4, o2, n2, s2) {
          e4 === undefined && (e4 = -this._renderer.width / 2), t4 === undefined && (t4 = +this._renderer.width / 2), r4 === undefined && (r4 = -this._renderer.height / 2), o2 === undefined && (o2 = +this._renderer.height / 2), n2 === undefined && (n2 = 0), s2 === undefined && (s2 = Math.max(this._renderer.width, this._renderer.height)), this.cameraNear = n2;
          var i = t4 - e4, a = o2 - r4, l = (this.cameraFar = s2) - n2, u = 2 / i, c = 2 / a * this.yScale, d = -2 / l, t4 = -(t4 + e4) / i, e4 = -(o2 + r4) / a, i = -(s2 + n2) / l;
          this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, d, 0, t4, e4, i, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
        } }, { key: "frustum", value: function(e4, t4, r4, o2, n2, s2) {
          e4 === undefined && (e4 = 0.05 * -this._renderer.width), t4 === undefined && (t4 = 0.05 * +this._renderer.width), r4 === undefined && (r4 = 0.05 * +this._renderer.height), o2 === undefined && (o2 = 0.05 * -this._renderer.height), n2 === undefined && (n2 = this.defaultCameraNear), s2 === undefined && (s2 = this.defaultCameraFar), this.cameraNear = n2;
          var i = t4 - e4, a = o2 - r4, l = (this.cameraFar = s2) - n2, u = 2 * n2 / i, c = 2 * n2 / a * this.yScale, d = -2 * s2 * n2 / l, t4 = (t4 + e4) / i, e4 = (o2 + r4) / a, i = -(s2 + n2) / l;
          this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, t4, e4, i, -1, 0, 0, d, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
        } }, { key: "_rotateView", value: function(e4, t4, r4, o2) {
          var n2 = this.centerX, s2 = this.centerY, i = this.centerZ, a = (n2 -= this.eyeX, s2 -= this.eyeY, i -= this.eyeZ, _.default.Matrix.identity(this._renderer._pInst)), e4 = (a.rotate(this._renderer._pInst._toRadians(e4), t4, r4, o2), [n2 * a.mat4[0] + s2 * a.mat4[4] + i * a.mat4[8], n2 * a.mat4[1] + s2 * a.mat4[5] + i * a.mat4[9], n2 * a.mat4[2] + s2 * a.mat4[6] + i * a.mat4[10]]);
          e4[0] += this.eyeX, e4[1] += this.eyeY, e4[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, e4[0], e4[1], e4[2], this.upX, this.upY, this.upZ);
        } }, { key: "pan", value: function(e4) {
          var t4 = this._getLocalAxes();
          this._rotateView(e4, t4.y[0], t4.y[1], t4.y[2]);
        } }, { key: "tilt", value: function(e4) {
          var t4 = this._getLocalAxes();
          this._rotateView(e4, t4.x[0], t4.x[1], t4.x[2]);
        } }, { key: "lookAt", value: function(e4, t4, r4) {
          this.camera(this.eyeX, this.eyeY, this.eyeZ, e4, t4, r4, this.upX, this.upY, this.upZ);
        } }, { key: "camera", value: function(e4, t4, r4, o2, n2, s2, i, a, l) {
          e4 === undefined && (e4 = this.defaultEyeX, t4 = this.defaultEyeY, r4 = this.defaultEyeZ, o2 = e4, n2 = t4, a = 1, l = i = s2 = 0), this.eyeX = e4, this.eyeY = t4, this.eyeZ = r4, o2 !== undefined && (this.centerX = o2, this.centerY = n2, this.centerZ = s2), i !== undefined && (this.upX = i, this.upY = a, this.upZ = l);
          o2 = this._getLocalAxes(), this.cameraMatrix.set(o2.x[0], o2.y[0], o2.z[0], 0, o2.x[1], o2.y[1], o2.z[1], 0, o2.x[2], o2.y[2], o2.z[2], 0, 0, 0, 0, 1), n2 = -e4;
          return this.cameraMatrix.translate([n2, -t4, -r4]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
        } }, { key: "move", value: function(e4, t4, r4) {
          var o2 = this._getLocalAxes(), e4 = [o2.x[0] * e4, o2.x[1] * e4, o2.x[2] * e4], t4 = [o2.y[0] * t4, o2.y[1] * t4, o2.y[2] * t4], o2 = [o2.z[0] * r4, o2.z[1] * r4, o2.z[2] * r4];
          this.camera(this.eyeX + e4[0] + t4[0] + o2[0], this.eyeY + e4[1] + t4[1] + o2[1], this.eyeZ + e4[2] + t4[2] + o2[2], this.centerX + e4[0] + t4[0] + o2[0], this.centerY + e4[1] + t4[1] + o2[1], this.centerZ + e4[2] + t4[2] + o2[2], this.upX, this.upY, this.upZ);
        } }, { key: "setPosition", value: function(e4, t4, r4) {
          var o2 = e4 - this.eyeX, n2 = t4 - this.eyeY, s2 = r4 - this.eyeZ;
          this.camera(e4, t4, r4, this.centerX + o2, this.centerY + n2, this.centerZ + s2, this.upX, this.upY, this.upZ);
        } }, { key: "set", value: function(e4) {
          for (var t4 = 0, r4 = ["eyeX", "eyeY", "eyeZ", "centerX", "centerY", "centerZ", "upX", "upY", "upZ", "cameraFOV", "aspectRatio", "cameraNear", "cameraFar", "cameraType", "yScale"];t4 < r4.length; t4++) {
            var o2 = r4[t4];
            this[o2] = e4[o2];
          }
          this.cameraMatrix = e4.cameraMatrix.copy(), this.projMatrix = e4.projMatrix.copy(), this._isActive() && (this._renderer.uMVMatrix.mat4 = this.cameraMatrix.mat4.slice(), this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice());
        } }, { key: "slerp", value: function(e4, t4, r4) {
          var o2, n2, s2, i, a, l, u, c, d, h, f, p, m, y, g, v, b, j;
          r4 === 0 ? this.set(e4) : r4 === 1 ? this.set(t4) : (this.projMatrix.mat4[15] !== 0 && (this.projMatrix.mat4[0] = e4.projMatrix.mat4[0] * Math.pow(t4.projMatrix.mat4[0] / e4.projMatrix.mat4[0], r4), this.projMatrix.mat4[5] = e4.projMatrix.mat4[5] * Math.pow(t4.projMatrix.mat4[5] / e4.projMatrix.mat4[5], r4), this._isActive() && (this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice())), i = new _.default.Vector(e4.eyeX, e4.eyeY, e4.eyeZ), a = new _.default.Vector(t4.eyeX, t4.eyeY, t4.eyeZ), v = new _.default.Vector(e4.centerX, e4.centerY, e4.centerZ), j = new _.default.Vector(t4.centerX, t4.centerY, t4.centerZ), s2 = _.default.Vector.dist(i, v), o2 = _.default.Vector.dist(a, j), o2 = s2 * Math.pow(o2 / s2, r4), s2 = _.default.Vector.sub(i, a), n2 = 1, 0.000001 < (b = (y = i.copy().sub(a).sub(v).add(j)).magSq()) && (n2 = _.default.Vector.dot(s2, y) / b, n2 = Math.max(0, Math.min(n2, 1))), s2 = _.default.Vector.lerp(_.default.Vector.lerp(i, v, n2), _.default.Vector.lerp(a, j, n2), r4), y = e4.cameraMatrix.createSubMatrix3x3(), b = t4.cameraMatrix.createSubMatrix3x3(), i = y.row(2), v = b.row(2), a = y.row(1), j = b.row(1), e4 = new _.default.Vector, t4 = new _.default.Vector, l = new _.default.Vector, u = new _.default.Vector, 1 - (c = 0.5 * ((y = (b = b.mult3x3(y.copy().transpose3x3())).diagonal())[0] + y[1] + y[2] - 1)) < 0.0000001 ? (e4.set(_.default.Vector.lerp(i, v, r4)).normalize(), l.set(e4).mult(n2 * o2).add(s2), u.set(e4).mult((n2 - 1) * o2).add(s2), t4.set(_.default.Vector.lerp(a, j, r4)).normalize()) : (v = 1 / (1 - c), j = Math.max(y[0], y[1], y[2]), p = b.mat3[1] + b.mat3[3], m = b.mat3[2] + b.mat3[6], g = b.mat3[5] + b.mat3[7], j = j === y[0] ? (h = 0.5 * p * (v /= d = Math.sqrt((y[0] - c) * v)), f = 0.5 * m * v, 0.5 * (b.mat3[7] - b.mat3[5]) / d) : j === y[1] ? (f = 0.5 * g * (v /= h = Math.sqrt((y[1] - c) * v)), d = 0.5 * p * v, 0.5 * (b.mat3[2] - b.mat3[6]) / h) : (d = 0.5 * m * (v /= f = Math.sqrt((y[2] - c) * v)), h = 0.5 * g * v, 0.5 * (b.mat3[3] - b.mat3[1]) / f), p = r4 * Math.atan2(j, c), m = Math.cos(p), y = Math.sin(p), (j = new _.default.Matrix("mat3", [m + (g = 1 - m) * d * d, g * (v = d * h) + y * f, g * (b = f * d) - y * h, g * v - y * f, m + g * h * h, g * (r4 = h * f) + y * d, g * b + y * h, g * r4 - y * d, m + g * f * f])).multiplyVec3(i, e4), l.set(e4).mult(n2 * o2).add(s2), u.set(e4).mult((n2 - 1) * o2).add(s2), j.multiplyVec3(a, t4)), this.camera(l.x, l.y, l.z, u.x, u.y, u.z, t4.x, t4.y, t4.z));
        } }, { key: "_computeCameraDefaultSettings", value: function() {
          this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = 800, this.defaultCameraFOV = 2 * Math.atan(this._renderer.height / 2 / this.defaultEyeZ), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = 0.1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
        } }, { key: "_setDefaultCamera", value: function() {
          this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
        } }, { key: "_resize", value: function() {
          this.cameraType === "default" && (this._computeCameraDefaultSettings(), this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.perspective());
        } }, { key: "copy", value: function() {
          var e4 = new _.default.Camera(this._renderer);
          return e4.cameraFOV = this.cameraFOV, e4.aspectRatio = this.aspectRatio, e4.eyeX = this.eyeX, e4.eyeY = this.eyeY, e4.eyeZ = this.eyeZ, e4.centerX = this.centerX, e4.centerY = this.centerY, e4.centerZ = this.centerZ, e4.upX = this.upX, e4.upY = this.upY, e4.upZ = this.upZ, e4.cameraNear = this.cameraNear, e4.cameraFar = this.cameraFar, e4.cameraType = this.cameraType, e4.cameraMatrix = this.cameraMatrix.copy(), e4.projMatrix = this.projMatrix.copy(), e4.yScale = this.yScale, e4;
        } }, { key: "_getLocalAxes", value: function() {
          var e4 = this.eyeX - this.centerX, t4 = this.eyeY - this.centerY, r4 = this.eyeZ - this.centerZ, o2 = Math.sqrt(e4 * e4 + t4 * t4 + r4 * r4), o2 = (o2 !== 0 && (e4 /= o2, t4 /= o2, r4 /= o2), this.upX), n2 = (a = this.upY) * r4 - (l = this.upZ) * t4, s2 = -o2 * r4 + l * e4, i = o2 * t4 - a * e4, o2 = t4 * i - r4 * s2, a = -e4 * i + r4 * n2, l = e4 * s2 - t4 * n2, u = Math.sqrt(n2 * n2 + s2 * s2 + i * i), u = (u !== 0 && (n2 /= u, s2 /= u, i /= u), Math.sqrt(o2 * o2 + a * a + l * l));
          return u !== 0 && (o2 /= u, a /= u, l /= u), { x: [n2, s2, i], y: [o2, a, l], z: [e4, t4, r4] };
        } }, { key: "_orbit", value: function(e4, t4, r4) {
          var o2 = this.eyeX - this.centerX, n2 = this.eyeY - this.centerY, s2 = this.eyeZ - this.centerZ, i = Math.hypot(o2, n2, s2), o2 = new _.default.Vector(o2, n2, s2).normalize(), n2 = new _.default.Vector(this.upX, this.upY, this.upZ).normalize(), s2 = new _.default.Vector.cross(n2, o2).normalize(), a = new _.default.Vector.cross(s2, n2), r4 = ((i = (i *= Math.pow(10, r4)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.acos(Math.max(-1, Math.min(1, _.default.Vector.dot(o2, n2)))) + t4), t4 = e4;
          (r4 <= 0 || r4 >= Math.PI) && (this.upX *= -1, this.upY *= -1, this.upZ *= -1), n2.mult(Math.cos(r4)), a.mult(Math.cos(t4) * Math.sin(r4)), s2.mult(Math.sin(t4) * Math.sin(r4)), o2.set(n2).add(a).add(s2), this.eyeX = i * o2.x + this.centerX, this.eyeY = i * o2.y + this.centerY, this.eyeZ = i * o2.z + this.centerZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, this.centerX, this.centerY, this.centerZ, this.upX, this.upY, this.upZ);
        } }, { key: "_orbitFree", value: function(e4, t4, r4) {
          var o2 = this.eyeX - this.centerX, n2 = this.eyeY - this.centerY, s2 = this.eyeZ - this.centerZ, i = Math.hypot(o2, n2, s2), o2 = new _.default.Vector(o2, n2, s2).normalize(), n2 = new _.default.Vector(this.upX, this.upY, this.upZ), s2 = new _.default.Vector.cross(n2, o2).normalize(), a = new _.default.Vector.cross(o2, s2), l = Math.atan2(t4, e4), l = (a.mult(Math.sin(l)), s2.mult(Math.cos(l)).add(a), Math.sqrt(e4 * e4 + t4 * t4)), a = new _.default.Vector.cross(o2, s2), e4 = ((i = (i *= Math.pow(10, r4)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.cos(l)), t4 = Math.sin(l), r4 = n2.dot(o2), l = n2.dot(s2), u = r4 * e4 + l * t4, r4 = -r4 * t4 + l * e4, l = n2.dot(a);
          n2.x = u * o2.x + r4 * s2.x + l * a.x, n2.y = u * o2.y + r4 * s2.y + l * a.y, n2.z = u * o2.z + r4 * s2.z + l * a.z, s2.mult(-t4), o2.mult(e4).add(s2).mult(i), this.camera(o2.x + this.centerX, o2.y + this.centerY, o2.z + this.centerZ, this.centerX, this.centerY, this.centerZ, n2.x, n2.y, n2.z);
        } }, { key: "_isActive", value: function() {
          return this === this._renderer._curCamera;
        } }]) && n(e3.prototype, r3), o && n(e3, o), t3;
      }(), _.default.prototype.setCamera = function(e3) {
        this._renderer._curCamera = e3, this._renderer.uPMatrix.set(e3.projMatrix.mat4[0], e3.projMatrix.mat4[1], e3.projMatrix.mat4[2], e3.projMatrix.mat4[3], e3.projMatrix.mat4[4], e3.projMatrix.mat4[5], e3.projMatrix.mat4[6], e3.projMatrix.mat4[7], e3.projMatrix.mat4[8], e3.projMatrix.mat4[9], e3.projMatrix.mat4[10], e3.projMatrix.mat4[11], e3.projMatrix.mat4[12], e3.projMatrix.mat4[13], e3.projMatrix.mat4[14], e3.projMatrix.mat4[15]);
      };
      e2 = _.default.Camera;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.slice": 165, "core-js/modules/es.math.hypot": 170, "core-js/modules/es.string.sub": 200 }], 325: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.log2"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.log2"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      e2.default.DataArray = function() {
        function o() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : 128, t4 = this, r4 = o;
          if (!(t4 instanceof r4))
            throw new TypeError("Cannot call a class as a function");
          this.length = 0, this.data = new Float32Array(e4), this.initialLength = e4;
        }
        var e3, t3, r3;
        return e3 = o, (t3 = [{ key: "dataArray", value: function() {
          return this.subArray(0, this.length);
        } }, { key: "clear", value: function() {
          this.length = 0;
        } }, { key: "rescale", value: function() {
          var e4;
          this.length < this.data.length / 2 && (e4 = 1 << Math.ceil(Math.log2(this.length)), (e4 = new Float32Array(e4)).set(this.data.subarray(0, this.length), 0), this.data = e4);
        } }, { key: "reset", value: function() {
          this.clear(), this.data = new Float32Array(this.initialLength);
        } }, { key: "push", value: function() {
          for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0;r4 < e4; r4++)
            t4[r4] = arguments[r4];
          this.ensureLength(this.length + t4.length), this.data.set(t4, this.length), this.length += t4.length;
        } }, { key: "slice", value: function(e4, t4) {
          return this.data.slice(e4, Math.min(t4, this.length));
        } }, { key: "subArray", value: function(e4, t4) {
          return this.data.subarray(e4, Math.min(t4, this.length));
        } }, { key: "ensureLength", value: function(e4) {
          for (;this.data.length < e4; ) {
            var t4 = new Float32Array(2 * this.data.length);
            t4.set(this.data, 0), this.data = t4;
          }
        } }]) && n(e3.prototype, t3), r3 && n(e3, r3), o;
      }();
      e2 = e2.default.DataArray;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.math.log2": 171, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.float32-array": 211, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231 }], 326: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var f = (_ = e2("../core/main")) && _.__esModule ? _ : { default: _ }, a = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")), n = e2("./p5.Texture"), p = e2("./p5.RendererGL");
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      function u(e3, t3) {
        return function(e4) {
          if (Array.isArray(e4))
            return e4;
        }(e3) || function(e4, t4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]") {
            var r3 = [], o2 = true, n2 = false, s3 = undefined;
            try {
              for (var i2, a2 = e4[Symbol.iterator]();!(o2 = (i2 = a2.next()).done) && (r3.push(i2.value), !t4 || r3.length !== t4); o2 = true)
                ;
            } catch (e5) {
              n2 = true, s3 = e5;
            } finally {
              try {
                o2 || a2.return == null || a2.return();
              } finally {
                if (n2)
                  throw s3;
              }
            }
            return r3;
          }
        }(e3, t3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function s2(e3, t3, r3) {
        return t3 in e3 ? Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e3[t3] = r3, e3;
      }
      function c(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function d(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function h(e3, t3, r3) {
        t3 && d(e3.prototype, t3), r3 && d(e3, r3);
      }
      function m(e3, t3, r3) {
        return (m = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function(e4, t4, r4) {
          var e4 = function(e5, t5) {
            for (;!Object.prototype.hasOwnProperty.call(e5, t5) && (e5 = v(e5)) !== null; )
              ;
            return e5;
          }(e4, t4);
          if (e4)
            return (e4 = Object.getOwnPropertyDescriptor(e4, t4)).get ? e4.get.call(r4) : e4.value;
        })(e3, t3, r3 || e3);
      }
      function y(e3, t3) {
        return (y = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function g(r3) {
        return function() {
          var e3, t3 = v(r3), t3 = (e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = v(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments), this);
          if (!e3 || i(e3) !== "object" && typeof e3 != "function") {
            if (t3 !== undefined)
              return t3;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function v(e3) {
        return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      var b = function(e3) {
        var t3 = o2;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && y(t3, e3);
        var r3 = g(o2);
        function o2(e4) {
          var t4;
          return c(this, o2), (t4 = r3.call(this, e4.target._renderer)).fbo = e4, t4.yScale = -1, t4;
        }
        return h(o2, [{ key: "_computeCameraDefaultSettings", value: function() {
          m(v(o2.prototype), "_computeCameraDefaultSettings", this).call(this), this.defaultAspectRatio = this.fbo.width / this.fbo.height, this.defaultCameraFOV = 2 * Math.atan(this.fbo.height / 2 / this.defaultEyeZ);
        } }]), o2;
      }(f.default.Camera), j = (f.default.FramebufferCamera = b, function() {
        function r3(e3, t3) {
          c(this, r3), this.framebuffer = e3, this.property = t3;
        }
        return h(r3, [{ key: "rawTexture", value: function() {
          return this.framebuffer[this.property];
        } }, { key: "width", get: function() {
          return this.framebuffer.width * this.framebuffer.density;
        } }, { key: "height", get: function() {
          return this.framebuffer.height * this.framebuffer.density;
        } }]), r3;
      }()), _ = (f.default.FramebufferTexture = j, function() {
        function o2(e3) {
          var t3 = this, r3 = 1 < arguments.length && arguments[1] !== undefined ? arguments[1] : {}, e3 = (c(this, o2), this.target = e3, this.target._renderer.framebuffers.add(this), this._isClipApplied = false, this.pixels = [], this.format = r3.format || a.UNSIGNED_BYTE, this.channels = r3.channels || (e3._renderer._pInst._glAttributes.alpha ? a.RGBA : a.RGB), this.useDepth = r3.depth === undefined || r3.depth, this.depthFormat = r3.depthFormat || a.FLOAT, this.textureFiltering = r3.textureFiltering || a.LINEAR, r3.antialias === undefined ? this.antialiasSamples = e3._renderer._pInst._glAttributes.antialias ? 2 : 0 : typeof r3.antialias == "number" ? this.antialiasSamples = r3.antialias : this.antialiasSamples = r3.antialias ? 2 : 0, this.antialias = 0 < this.antialiasSamples, this.antialias && e3.webglVersion !== a.WEBGL2 && (console.warn("Antialiasing is unsupported in a WebGL 1 context"), this.antialias = false), r3.width && r3.height ? (this.width = r3.width, this.height = r3.height, this.autoSized = false) : (r3.width === undefined != (r3.height === undefined) && console.warn("Please supply both width and height for a framebuffer to give it a size. Only one was given, so the framebuffer will match the size of its canvas."), this.width = e3.width, this.height = e3.height, this.autoSized = true), this.density = r3.density || e3.pixelDensity(), e3._renderer.GL);
          if (this.gl = e3, this._checkIfFormatsAvailable(), r3.stencil && !this.useDepth && console.warn("A stencil buffer can only be used if also using depth. Since the framebuffer has no depth buffer, the stencil buffer will be ignored."), this.useStencil = this.useDepth && (r3.stencil === undefined || r3.stencil), this.framebuffer = e3.createFramebuffer(), !this.framebuffer)
            throw new Error("Unable to create a framebuffer");
          if (this.antialias && (this.aaFramebuffer = e3.createFramebuffer(), !this.aaFramebuffer))
            throw new Error("Unable to create a framebuffer for antialiasing");
          this._recreateTextures();
          r3 = this.target._renderer._curCamera;
          this.defaultCamera = this.createCamera(), this.target._renderer._curCamera = r3, this.draw(function() {
            return t3.target.clear();
          });
        }
        return h(o2, [{ key: "resize", value: function(e3, t3) {
          this.autoSized = false, this.width = e3, this.height = t3, this._handleResize();
        } }, { key: "pixelDensity", value: function(e3) {
          if (!e3)
            return this.density;
          this.autoSized = false, this.density = e3, this._handleResize();
        } }, { key: "autoSized", value: function(e3) {
          if (e3 === undefined)
            return this.autoSized;
          this.autoSized = e3, this._handleResize();
        } }, { key: "_checkIfFormatsAvailable", value: function() {
          var e3 = this.gl, e3 = (this.useDepth && this.target.webglVersion === a.WEBGL && !e3.getExtension("WEBGL_depth_texture") && (console.warn("Unable to create depth textures in this environment. Falling back to a framebuffer without depth."), this.useDepth = false), this.useDepth && this.target.webglVersion === a.WEBGL && this.depthFormat === a.FLOAT && (console.warn("FLOAT depth format is unavailable in WebGL 1. Defaulting to UNSIGNED_INT."), this.depthFormat = a.UNSIGNED_INT), [a.UNSIGNED_BYTE, a.FLOAT, a.HALF_FLOAT].includes(this.format) || (console.warn("Unknown Framebuffer format. Please use UNSIGNED_BYTE, FLOAT, or HALF_FLOAT. Defaulting to UNSIGNED_BYTE."), this.format = a.UNSIGNED_BYTE), this.useDepth && ![a.UNSIGNED_INT, a.FLOAT].includes(this.depthFormat) && (console.warn("Unknown Framebuffer depth format. Please use UNSIGNED_INT or FLOAT. Defaulting to FLOAT."), this.depthFormat = a.FLOAT), (0, n.checkWebGLCapabilities)(this.target._renderer));
          e3.float || this.format !== a.FLOAT || (console.warn("This environment does not support FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = a.UNSIGNED_BYTE), this.useDepth && !e3.float && this.depthFormat === a.FLOAT && (console.warn("This environment does not support FLOAT depth textures. Falling back to UNSIGNED_INT."), this.depthFormat = a.UNSIGNED_INT), e3.halfFloat || this.format !== a.HALF_FLOAT || (console.warn("This environment does not support HALF_FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = a.UNSIGNED_BYTE), this.channels === a.RGB && [a.FLOAT, a.HALF_FLOAT].includes(this.format) && (console.warn("FLOAT and HALF_FLOAT formats do not work cross-platform with only RGB channels. Falling back to RGBA."), this.channels = a.RGBA);
        } }, { key: "_recreateTextures", value: function() {
          var e3 = this.gl, t3 = (this._updateSize(), e3.getParameter(e3.TEXTURE_BINDING_2D)), r3 = e3.getParameter(e3.FRAMEBUFFER_BINDING), o3 = e3.createTexture();
          if (!o3)
            throw new Error("Unable to create color texture");
          e3.bindTexture(e3.TEXTURE_2D, o3);
          var n2 = this._glColorFormat();
          if (e3.texImage2D(e3.TEXTURE_2D, 0, n2.internalFormat, this.width * this.density, this.height * this.density, 0, n2.format, n2.type, null), this.colorTexture = o3, e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), e3.framebufferTexture2D(e3.FRAMEBUFFER, e3.COLOR_ATTACHMENT0, e3.TEXTURE_2D, o3, 0), this.useDepth) {
            var o3 = e3.createTexture();
            if (!o3)
              throw new Error("Unable to create depth texture");
            var s3 = this._glDepthFormat();
            e3.bindTexture(e3.TEXTURE_2D, o3), e3.texImage2D(e3.TEXTURE_2D, 0, s3.internalFormat, this.width * this.density, this.height * this.density, 0, s3.format, s3.type, null), e3.framebufferTexture2D(e3.FRAMEBUFFER, this.useStencil ? e3.DEPTH_STENCIL_ATTACHMENT : e3.DEPTH_ATTACHMENT, e3.TEXTURE_2D, o3, 0), this.depthTexture = o3;
          }
          this.antialias && (this.colorRenderbuffer = e3.createRenderbuffer(), e3.bindRenderbuffer(e3.RENDERBUFFER, this.colorRenderbuffer), e3.renderbufferStorageMultisample(e3.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e3.getParameter(e3.MAX_SAMPLES))), n2.internalFormat, this.width * this.density, this.height * this.density), this.useDepth && (s3 = this._glDepthFormat(), this.depthRenderbuffer = e3.createRenderbuffer(), e3.bindRenderbuffer(e3.RENDERBUFFER, this.depthRenderbuffer), e3.renderbufferStorageMultisample(e3.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e3.getParameter(e3.MAX_SAMPLES))), s3.internalFormat, this.width * this.density, this.height * this.density)), e3.bindFramebuffer(e3.FRAMEBUFFER, this.aaFramebuffer), e3.framebufferRenderbuffer(e3.FRAMEBUFFER, e3.COLOR_ATTACHMENT0, e3.RENDERBUFFER, this.colorRenderbuffer), this.useDepth && e3.framebufferRenderbuffer(e3.FRAMEBUFFER, this.useStencil ? e3.DEPTH_STENCIL_ATTACHMENT : e3.DEPTH_ATTACHMENT, e3.RENDERBUFFER, this.depthRenderbuffer)), this.useDepth && (this.depth = new j(this, "depthTexture"), o3 = e3.NEAREST, this.depthP5Texture = new f.default.Texture(this.target._renderer, this.depth, { minFilter: o3, magFilter: o3 }), this.target._renderer.textures.set(this.depth, this.depthP5Texture)), this.color = new j(this, "colorTexture");
          n2 = this.textureFiltering === a.LINEAR ? e3.LINEAR : e3.NEAREST;
          this.colorP5Texture = new f.default.Texture(this.target._renderer, this.color, { minFilter: n2, magFilter: n2 }), this.target._renderer.textures.set(this.color, this.colorP5Texture), e3.bindTexture(e3.TEXTURE_2D, t3), e3.bindFramebuffer(e3.FRAMEBUFFER, r3);
        } }, { key: "_glColorFormat", value: function() {
          var e3, t3, r3 = this.gl, o3 = this.format === a.FLOAT ? r3.FLOAT : this.format === a.HALF_FLOAT ? this.target.webglVersion === a.WEBGL2 ? r3.HALF_FLOAT : r3.getExtension("OES_texture_half_float").HALF_FLOAT_OES : r3.UNSIGNED_BYTE, n2 = this.channels === a.RGBA ? r3.RGBA : r3.RGB;
          return { internalFormat: this.target.webglVersion === a.WEBGL2 ? (s2(t3 = {}, r3.FLOAT, s2({}, r3.RGBA, r3.RGBA32F)), s2(t3, r3.HALF_FLOAT, s2({}, r3.RGBA, r3.RGBA16F)), s2(t3, r3.UNSIGNED_BYTE, (s2(e3 = {}, r3.RGBA, r3.RGBA8), s2(e3, r3.RGB, r3.RGB8), e3)), t3[o3][n2]) : this.format === a.HALF_FLOAT ? r3.RGBA : n2, format: n2, type: o3 };
        } }, { key: "_glDepthFormat", value: function() {
          var e3 = this.gl, t3 = this.useStencil ? this.depthFormat === a.FLOAT ? e3.FLOAT_32_UNSIGNED_INT_24_8_REV : this.target.webglVersion === a.WEBGL2 ? e3.UNSIGNED_INT_24_8 : e3.getExtension("WEBGL_depth_texture").UNSIGNED_INT_24_8_WEBGL : this.depthFormat === a.FLOAT ? e3.FLOAT : e3.UNSIGNED_INT, r3 = this.useStencil ? e3.DEPTH_STENCIL : e3.DEPTH_COMPONENT, e3 = this.useStencil ? this.depthFormat === a.FLOAT ? e3.DEPTH32F_STENCIL8 : this.target.webglVersion === a.WEBGL2 ? e3.DEPTH24_STENCIL8 : e3.DEPTH_STENCIL : this.target.webglVersion === a.WEBGL2 ? this.depthFormat === a.FLOAT ? e3.DEPTH_COMPONENT32F : e3.DEPTH_COMPONENT24 : e3.DEPTH_COMPONENT;
          return { internalFormat: e3, format: r3, type: t3 };
        } }, { key: "_updateSize", value: function() {
          this.autoSized && (this.width = this.target.width, this.height = this.target.height, this.density = this.target.pixelDensity());
        } }, { key: "_canvasSizeChanged", value: function() {
          this.autoSized && this._handleResize();
        } }, { key: "_handleResize", value: function() {
          var e3 = this.color, t3 = this.depth, r3 = this.colorRenderbuffer, o3 = this.depthRenderbuffer, e3 = (this._deleteTexture(e3), t3 && this._deleteTexture(t3), this.gl);
          r3 && e3.deleteRenderbuffer(r3), o3 && e3.deleteRenderbuffer(o3), this._recreateTextures(), this.defaultCamera._resize();
        } }, { key: "createCamera", value: function() {
          var e3 = new b(this);
          return e3._computeCameraDefaultSettings(), e3._setDefaultCamera(), this.target._renderer._curCamera = e3;
        } }, { key: "_deleteTexture", value: function(e3) {
          this.gl.deleteTexture(e3.rawTexture()), this.target._renderer.textures.delete(e3);
        } }, { key: "remove", value: function() {
          var e3 = this.gl;
          this._deleteTexture(this.color), this.depth && this._deleteTexture(this.depth), e3.deleteFramebuffer(this.framebuffer), this.aaFramebuffer && e3.deleteFramebuffer(this.aaFramebuffer), this.depthRenderbuffer && e3.deleteRenderbuffer(this.depthRenderbuffer), this.colorRenderbuffer && e3.deleteRenderbuffer(this.colorRenderbuffer), this.target._renderer.framebuffers.delete(this);
        } }, { key: "begin", value: function() {
          this.prevFramebuffer = this.target._renderer.activeFramebuffer(), this.prevFramebuffer && this.prevFramebuffer._beforeEnd(), this.target._renderer.activeFramebuffers.push(this), this._beforeBegin(), this.target.push(), this.target.setCamera(this.defaultCamera), this.target._renderer.uMVMatrix.set(this.target._renderer._curCamera.cameraMatrix.mat4[0], this.target._renderer._curCamera.cameraMatrix.mat4[1], this.target._renderer._curCamera.cameraMatrix.mat4[2], this.target._renderer._curCamera.cameraMatrix.mat4[3], this.target._renderer._curCamera.cameraMatrix.mat4[4], this.target._renderer._curCamera.cameraMatrix.mat4[5], this.target._renderer._curCamera.cameraMatrix.mat4[6], this.target._renderer._curCamera.cameraMatrix.mat4[7], this.target._renderer._curCamera.cameraMatrix.mat4[8], this.target._renderer._curCamera.cameraMatrix.mat4[9], this.target._renderer._curCamera.cameraMatrix.mat4[10], this.target._renderer._curCamera.cameraMatrix.mat4[11], this.target._renderer._curCamera.cameraMatrix.mat4[12], this.target._renderer._curCamera.cameraMatrix.mat4[13], this.target._renderer._curCamera.cameraMatrix.mat4[14], this.target._renderer._curCamera.cameraMatrix.mat4[15]);
        } }, { key: "_framebufferToBind", value: function() {
          return this.antialias ? this.aaFramebuffer : this.framebuffer;
        } }, { key: "_beforeBegin", value: function() {
          var e3 = this.gl;
          e3.bindFramebuffer(e3.FRAMEBUFFER, this._framebufferToBind()), this.target._renderer.viewport(this.width * this.density, this.height * this.density);
        } }, { key: "_beforeEnd", value: function() {
          if (this.antialias) {
            var e3 = this.gl, t3 = (e3.bindFramebuffer(e3.READ_FRAMEBUFFER, this.aaFramebuffer), e3.bindFramebuffer(e3.DRAW_FRAMEBUFFER, this.framebuffer), [[e3.COLOR_BUFFER_BIT, this.colorP5Texture.glMagFilter]]);
            this.useDepth && t3.push([e3.DEPTH_BUFFER_BIT, this.depthP5Texture.glMagFilter]);
            for (var r3 = 0, o3 = t3;r3 < o3.length; r3++) {
              var n2 = u(o3[r3], 2), s3 = n2[0], n2 = n2[1];
              e3.blitFramebuffer(0, 0, this.width * this.density, this.height * this.density, 0, 0, this.width * this.density, this.height * this.density, s3, n2);
            }
          }
        } }, { key: "end", value: function() {
          var e3 = this.gl;
          if (this.target.pop(), this.target._renderer.activeFramebuffers.pop() !== this)
            throw new Error("It looks like you've called end() while another Framebuffer is active.");
          this._beforeEnd(), this.prevFramebuffer ? this.prevFramebuffer._beforeBegin() : (e3.bindFramebuffer(e3.FRAMEBUFFER, null), this.target._renderer.viewport(this.target._renderer._origViewport.width, this.target._renderer._origViewport.height)), this.target._renderer._applyStencilTestIfClipping();
        } }, { key: "draw", value: function(e3) {
          this.begin(), e3(), this.end();
        } }, { key: "loadPixels", value: function() {
          var e3 = this.gl, t3 = this.target._renderer.activeFramebuffer(), r3 = (e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), this._glColorFormat());
          this.pixels = (0, p.readPixelsWebGL)(this.pixels, e3, this.framebuffer, 0, 0, this.width * this.density, this.height * this.density, r3.format, r3.type), t3 ? e3.bindFramebuffer(e3.FRAMEBUFFER, t3._framebufferToBind()) : e3.bindFramebuffer(e3.FRAMEBUFFER, null);
        } }, { key: "get", value: function(e3, t3, r3, o3) {
          f.default._validateParameters("p5.Framebuffer.get", arguments);
          var n2 = this._glColorFormat();
          if (e3 === undefined && t3 === undefined)
            t3 = e3 = 0, r3 = this.width, o3 = this.height;
          else if (r3 === undefined && o3 === undefined)
            return (e3 < 0 || t3 < 0 || e3 >= this.width || t3 >= this.height) && (console.warn("The x and y values passed to p5.Framebuffer.get are outside of its range and will be clamped."), e3 = this.target.constrain(e3, 0, this.width - 1), t3 = this.target.constrain(t3, 0, this.height - 1)), (0, p.readPixelWebGL)(this.gl, this.framebuffer, e3 * this.density, t3 * this.density, n2.format, n2.type);
          e3 = this.target.constrain(e3, 0, this.width - 1), t3 = this.target.constrain(t3, 0, this.height - 1), r3 = this.target.constrain(r3, 1, this.width - e3), o3 = this.target.constrain(o3, 1, this.height - t3);
          for (var s3 = (0, p.readPixelsWebGL)(undefined, this.gl, this.framebuffer, e3 * this.density, t3 * this.density, r3 * this.density, o3 * this.density, n2.format, n2.type), i2 = new Uint8ClampedArray(r3 * o3 * this.density * this.density * 4), a2 = (i2.fill(255), n2.type === this.gl.RGB ? 3 : 4), l2 = 0;l2 < o3 * this.density; l2++)
            for (var u2 = 0;u2 < r3 * this.density; u2++)
              for (var c2 = 0;c2 < 4; c2++) {
                var d2, h2 = 4 * (l2 * r3 * this.density + u2) + c2;
                c2 < a2 && (d2 = a2 == 4 ? h2 : (l2 * r3 * this.density + u2) * a2 + c2, i2[h2] = s3[d2]);
              }
          e3 = new f.default.Image(r3 * this.density, o3 * this.density);
          return e3.imageData = e3.canvas.getContext("2d").createImageData(e3.width, e3.height), e3.imageData.data.set(i2), e3.pixels = e3.imageData.data, e3.updatePixels(), this.density !== 1 && e3.resize(r3, o3), e3;
        } }, { key: "updatePixels", value: function() {
          var e3 = this.gl, t3 = (this.colorP5Texture.bindTexture(), this._glColorFormat()), r3 = t3.format === e3.RGBA ? 4 : 3, r3 = this.width * this.height * this.density * this.density * r3, o3 = t3.type === e3.UNSIGNED_BYTE ? Uint8Array : Float32Array;
          if (!(this.pixels instanceof o3) || this.pixels.length !== r3)
            throw new Error("The pixels array has not been set correctly. Please call loadPixels() before updatePixels().");
          e3.texImage2D(e3.TEXTURE_2D, 0, t3.internalFormat, this.width * this.density, this.height * this.density, 0, t3.format, t3.type, this.pixels), this.colorP5Texture.unbindTexture();
          o3 = this.target._renderer.activeFramebuffer();
          this.antialias ? (this.begin(), this.target.push(), this.target.imageMode(this.target.CENTER), this.target.resetMatrix(), this.target.noStroke(), this.target.clear(), this.target.image(this, 0, 0), this.target.pop(), this.useDepth && (e3.clearDepth(1), e3.clear(e3.DEPTH_BUFFER_BIT)), this.end()) : (e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), this.useDepth && (e3.clearDepth(1), e3.clear(e3.DEPTH_BUFFER_BIT)), o3 ? e3.bindFramebuffer(e3.FRAMEBUFFER, o3._framebufferToBind()) : e3.bindFramebuffer(e3.FRAMEBUFFER, null));
        } }]), o2;
      }()), e2 = f.default.Framebuffer = _;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.RendererGL": 332, "./p5.Texture": 334, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.reflect.get": 185, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.float32-array": 211, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/es.typed-array.uint8-clamped-array": 235, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 327: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var m = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, y = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function c(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      m.default.Geometry = function() {
        function o2(e4, t4, r4) {
          if (this instanceof o2)
            return this.vertices = [], this.lineVertices = new m.default.DataArray, this.lineTangentsIn = new m.default.DataArray, this.lineTangentsOut = new m.default.DataArray, this.lineSides = new m.default.DataArray, this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.vertexStrokeColors = [], this.lineVertexColors = new m.default.DataArray, this.detailX = e4 !== undefined ? e4 : 1, this.detailY = t4 !== undefined ? t4 : 1, this.dirtyFlags = {}, r4 instanceof Function && r4.call(this), this;
          throw new TypeError("Cannot call a class as a function");
        }
        var e3, t3, r3;
        return e3 = o2, (t3 = [{ key: "reset", value: function() {
          this.lineVertices.clear(), this.lineTangentsIn.clear(), this.lineTangentsOut.clear(), this.lineSides.clear(), this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexStrokeColors.length = 0, this.lineVertexColors.clear(), this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
        } }, { key: "clearColors", value: function() {
          return this.vertexColors = [], this;
        } }, { key: "computeFaces", value: function() {
          this.faces.length = 0;
          for (var e4, t4, r4, o3 = this.detailX + 1, n2 = 0;n2 < this.detailY; n2++)
            for (var s3 = 0;s3 < this.detailX; s3++)
              t4 = (n2 + 1) * o3 + s3 + 1, this.faces.push([n2 * o3 + s3, e4 = n2 * o3 + s3 + 1, r4 = (n2 + 1) * o3 + s3]), this.faces.push([r4, e4, t4]);
          return this;
        } }, { key: "_getFaceNormal", value: function(e4) {
          var e4 = this.faces[e4], t4 = this.vertices[e4[0]], r4 = this.vertices[e4[1]], e4 = this.vertices[e4[2]], r4 = m.default.Vector.sub(r4, t4), e4 = m.default.Vector.sub(e4, t4), t4 = m.default.Vector.cross(r4, e4), o3 = m.default.Vector.mag(t4), r4 = o3 / (m.default.Vector.mag(r4) * m.default.Vector.mag(e4));
          return r4 === 0 || isNaN(r4) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), t4) : (1 < r4 && (r4 = 1), t4.mult(Math.asin(r4) / o3));
        } }, { key: "computeNormals", value: function() {
          var e4, s3 = this, t4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : y.FLAT, r4 = (1 < arguments.length && arguments[1] !== undefined ? arguments[1] : {}).roundToPrecision, i2 = this.vertexNormals, o3 = this.vertices, n2 = this.faces;
          if (t4 === y.SMOOTH) {
            for (var a2 = {}, l = [], u = Math.pow(10, r4 === undefined ? 3 : r4), c2 = function(e5) {
              return Math.round(e5 * u) / u;
            }, d = function(e5) {
              return "".concat(c2(e5.x), ",").concat(c2(e5.y), ",").concat(c2(e5.z));
            }, h = 0;h < o3.length; h++) {
              var f = o3[h], p = d(f);
              a2[p] === undefined && (a2[p] = l.length, l.push(f));
            }
            n2.forEach(function(e5) {
              for (var t5 = 0;t5 < 3; ++t5) {
                var r5 = e5[t5], r5 = o3[r5], r5 = d(r5);
                e5[t5] = a2[r5];
              }
            }), this.edges.forEach(function(e5) {
              for (var t5 = 0;t5 < 2; ++t5) {
                var r5 = e5[t5], r5 = o3[r5], r5 = d(r5);
                e5[t5] = a2[r5];
              }
            }), this.vertices = o3 = l;
          }
          for (e4 = i2.length = 0;e4 < o3.length; ++e4)
            i2.push(new m.default.Vector);
          for (n2.forEach(function(e5, t5) {
            for (var r5 = s3._getFaceNormal(t5), o4 = 0;o4 < 3; ++o4) {
              var n3 = e5[o4];
              i2[n3].add(r5);
            }
          }), e4 = 0;e4 < o3.length; ++e4)
            i2[e4].normalize();
          return this;
        } }, { key: "averageNormals", value: function() {
          for (var e4 = 0;e4 <= this.detailY; e4++) {
            var t4 = this.detailX + 1, r4 = m.default.Vector.add(this.vertexNormals[e4 * t4], this.vertexNormals[e4 * t4 + this.detailX]), r4 = m.default.Vector.div(r4, 2);
            this.vertexNormals[e4 * t4] = r4, this.vertexNormals[e4 * t4 + this.detailX] = r4;
          }
          return this;
        } }, { key: "averagePoleNormals", value: function() {
          for (var e4 = new m.default.Vector(0, 0, 0), t4 = 0;t4 < this.detailX; t4++)
            e4.add(this.vertexNormals[t4]);
          for (var e4 = m.default.Vector.div(e4, this.detailX), r4 = 0;r4 < this.detailX; r4++)
            this.vertexNormals[r4] = e4;
          e4 = new m.default.Vector(0, 0, 0);
          for (var o3 = this.vertices.length - 1;o3 > this.vertices.length - 1 - this.detailX; o3--)
            e4.add(this.vertexNormals[o3]);
          e4 = m.default.Vector.div(e4, this.detailX);
          for (var n2 = this.vertices.length - 1;n2 > this.vertices.length - 1 - this.detailX; n2--)
            this.vertexNormals[n2] = e4;
          return this;
        } }, { key: "_makeTriangleEdges", value: function() {
          for (var e4 = this.edges.length = 0;e4 < this.faces.length; e4++)
            this.edges.push([this.faces[e4][0], this.faces[e4][1]]), this.edges.push([this.faces[e4][1], this.faces[e4][2]]), this.edges.push([this.faces[e4][2], this.faces[e4][0]]);
          return this;
        } }, { key: "_edgesToVertices", value: function() {
          this.lineVertices.clear(), this.lineTangentsIn.clear(), this.lineTangentsOut.clear(), this.lineSides.clear();
          for (var e4, t4 = new Map, r4 = new Set, o3 = 0;o3 < this.edges.length; o3++) {
            var n2, s3 = this.edges[o3 - 1], i2 = this.edges[o3], a2 = this.vertices[i2[0]], l = this.vertices[i2[1]], u = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * i2[0], 4 * (i2[0] + 1)) : [0, 0, 0, 0], c2 = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * i2[1], 4 * (i2[1] + 1)) : [0, 0, 0, 0], d = l.copy().sub(a2).normalize(), h = 0 < d.magSq();
            h && this._addSegment(a2, l, u, c2, d), 0 < o3 && s3[1] === i2[0] ? r4.has(i2[0]) || (r4.add(i2[0]), t4.delete(i2[0]), e4 && h && d.dot(e4) < 1 - 0.00000001 && this._addJoin(a2, e4, d, u)) : (h && !r4.has(i2[0]) && ((n2 = t4.get(i2[0])) ? (this._addJoin(a2, n2.dir, d, u), t4.delete(i2[0]), r4.add(i2[0])) : t4.set(i2[0], { point: a2, dir: d.copy().mult(-1), color: u })), e4 && !r4.has(s3[1]) && ((n2 = t4.get(s3[1])) ? (this._addJoin(this.vertices[s3[1]], e4, n2.dir.copy().mult(-1), u), t4.delete(s3[1]), r4.add(s3[1])) : t4.set(s3[1], { point: this.vertices[s3[1]], dir: e4, color: u }), e4 = undefined)), o3 !== this.edges.length - 1 || r4.has(i2[1]) || ((a2 = t4.get(i2[1])) ? (this._addJoin(l, d, a2.dir.copy().mult(-1), c2), t4.delete(i2[1]), r4.add(i2[1])) : t4.set(i2[1], { point: l, dir: d, color: c2 })), h && (e4 = d);
          }
          var f = true, p = false, m2 = undefined;
          try {
            for (var y2, g = t4.values()[Symbol.iterator]();!(f = (y2 = g.next()).done); f = true) {
              var v = y2.value, b = v.point, j = v.dir, _ = v.color;
              this._addCap(b, j, _);
            }
          } catch (e5) {
            p = true, m2 = e5;
          } finally {
            try {
              f || g.return == null || g.return();
            } finally {
              if (p)
                throw m2;
            }
          }
          return this;
        } }, { key: "_addSegment", value: function(e4, t4, r4, o3, n2) {
          var e4 = e4.array(), t4 = t4.array(), s3 = n2.array();
          this.lineSides.push(1, 1, -1, 1, -1, -1);
          for (var i2 = 0, a2 = [this.lineTangentsIn, this.lineTangentsOut];i2 < a2.length; i2++)
            for (var l = a2[i2], u = 0;u < 6; u++)
              l.push.apply(l, c(s3));
          return (n2 = this.lineVertices).push.apply(n2, c(e4).concat(c(t4), c(e4), c(t4), c(t4), c(e4))), (n2 = this.lineVertexColors).push.apply(n2, c(r4).concat(c(o3), c(r4), c(o3), c(o3), c(r4))), this;
        } }, { key: "_addCap", value: function(e4, t4, r4) {
          for (var o3, n2 = e4.array(), s3 = t4.array(), i2 = [0, 0, 0], a2 = 0;a2 < 6; a2++)
            (o3 = this.lineVertices).push.apply(o3, c(n2)), (o3 = this.lineTangentsIn).push.apply(o3, c(s3)), (o3 = this.lineTangentsOut).push.apply(o3, i2), (o3 = this.lineVertexColors).push.apply(o3, c(r4));
          return this.lineSides.push(-1, 2, -2, 1, 2, -1), this;
        } }, { key: "_addJoin", value: function(e4, t4, r4, o3) {
          for (var n2, s3 = e4.array(), i2 = t4.array(), a2 = r4.array(), l = 0;l < 12; l++)
            (n2 = this.lineVertices).push.apply(n2, c(s3)), (n2 = this.lineTangentsIn).push.apply(n2, c(i2)), (n2 = this.lineTangentsOut).push.apply(n2, c(a2)), (n2 = this.lineVertexColors).push.apply(n2, c(o3));
          return this.lineSides.push(-1, -3, -2, -1, 0, -3), this.lineSides.push(3, 1, 2, 3, 0, 1), this;
        } }, { key: "normalize", value: function() {
          if (0 < this.vertices.length) {
            for (var e4 = this.vertices[0].copy(), t4 = this.vertices[0].copy(), r4 = 0;r4 < this.vertices.length; r4++)
              e4.x = Math.max(e4.x, this.vertices[r4].x), t4.x = Math.min(t4.x, this.vertices[r4].x), e4.y = Math.max(e4.y, this.vertices[r4].y), t4.y = Math.min(t4.y, this.vertices[r4].y), e4.z = Math.max(e4.z, this.vertices[r4].z), t4.z = Math.min(t4.z, this.vertices[r4].z);
            for (var o3 = m.default.Vector.lerp(e4, t4, 0.5), n2 = m.default.Vector.sub(e4, t4), s3 = 200 / Math.max(Math.max(n2.x, n2.y), n2.z), i2 = 0;i2 < this.vertices.length; i2++)
              this.vertices[i2].sub(o3), this.vertices[i2].mult(s3);
          }
          return this;
        } }]) && n(e3.prototype, t3), r3 && n(e3, r3), o2;
      }();
      var s2 = m.default.Geometry;
      r2.default = s2;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.for-each": 157, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.map": 169, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.set": 189, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.sub": 200, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.for-each": 237, "core-js/modules/web.dom-collections.iterator": 238 }], 328: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var C = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      var s2 = Array, O = function(e3) {
        return Array.isArray(e3);
      }, e2 = (typeof Float32Array != "undefined" && (s2 = Float32Array, O = function(e3) {
        return Array.isArray(e3) || e3 instanceof Float32Array;
      }), C.default.Matrix = function() {
        function r3() {
          var e4 = this, t4 = r3;
          if (e4 instanceof t4)
            return arguments.length && ((e4 = arguments.length - 1) < 0 || arguments.length <= e4 ? undefined : arguments[e4]) instanceof C.default && (this.p5 = (t4 = arguments.length - 1) < 0 || arguments.length <= t4 ? undefined : arguments[t4]), (arguments.length <= 0 ? undefined : arguments[0]) === "mat3" ? this.mat3 = Array.isArray(arguments.length <= 1 ? undefined : arguments[1]) ? arguments.length <= 1 ? undefined : arguments[1] : new s2([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 = Array.isArray(arguments.length <= 0 ? undefined : arguments[0]) ? arguments.length <= 0 ? undefined : arguments[0] : new s2([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
          throw new TypeError("Cannot call a class as a function");
        }
        var e3, t3, o;
        return e3 = r3, o = [{ key: "identity", value: function(e4) {
          return new C.default.Matrix(e4);
        } }], (t3 = [{ key: "set", value: function(e4) {
          return e4 instanceof C.default.Matrix ? this.mat4 = e4.mat4 : O(e4) ? this.mat4 = e4 : arguments.length === 16 && (this.mat4[0] = e4, this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this;
        } }, { key: "get", value: function() {
          return new C.default.Matrix(this.mat4, this.p5);
        } }, { key: "copy", value: function() {
          var e4;
          return this.mat3 !== undefined ? ((e4 = new C.default.Matrix("mat3", this.p5)).mat3[0] = this.mat3[0], e4.mat3[1] = this.mat3[1], e4.mat3[2] = this.mat3[2], e4.mat3[3] = this.mat3[3], e4.mat3[4] = this.mat3[4], e4.mat3[5] = this.mat3[5], e4.mat3[6] = this.mat3[6], e4.mat3[7] = this.mat3[7], e4.mat3[8] = this.mat3[8]) : ((e4 = new C.default.Matrix(this.p5)).mat4[0] = this.mat4[0], e4.mat4[1] = this.mat4[1], e4.mat4[2] = this.mat4[2], e4.mat4[3] = this.mat4[3], e4.mat4[4] = this.mat4[4], e4.mat4[5] = this.mat4[5], e4.mat4[6] = this.mat4[6], e4.mat4[7] = this.mat4[7], e4.mat4[8] = this.mat4[8], e4.mat4[9] = this.mat4[9], e4.mat4[10] = this.mat4[10], e4.mat4[11] = this.mat4[11], e4.mat4[12] = this.mat4[12], e4.mat4[13] = this.mat4[13], e4.mat4[14] = this.mat4[14], e4.mat4[15] = this.mat4[15]), e4;
        } }, { key: "transpose", value: function(e4) {
          var t4, r4, o2, n2, s3, i;
          return e4 instanceof C.default.Matrix ? (t4 = e4.mat4[1], r4 = e4.mat4[2], o2 = e4.mat4[3], n2 = e4.mat4[6], s3 = e4.mat4[7], i = e4.mat4[11], this.mat4[0] = e4.mat4[0], this.mat4[1] = e4.mat4[4], this.mat4[2] = e4.mat4[8], this.mat4[3] = e4.mat4[12], this.mat4[4] = t4, this.mat4[5] = e4.mat4[5], this.mat4[6] = e4.mat4[9], this.mat4[7] = e4.mat4[13], this.mat4[8] = r4, this.mat4[9] = n2, this.mat4[10] = e4.mat4[10], this.mat4[11] = e4.mat4[14], this.mat4[12] = o2, this.mat4[13] = s3, this.mat4[14] = i, this.mat4[15] = e4.mat4[15]) : O(e4) && (t4 = e4[1], r4 = e4[2], o2 = e4[3], n2 = e4[6], s3 = e4[7], i = e4[11], this.mat4[0] = e4[0], this.mat4[1] = e4[4], this.mat4[2] = e4[8], this.mat4[3] = e4[12], this.mat4[4] = t4, this.mat4[5] = e4[5], this.mat4[6] = e4[9], this.mat4[7] = e4[13], this.mat4[8] = r4, this.mat4[9] = n2, this.mat4[10] = e4[10], this.mat4[11] = e4[14], this.mat4[12] = o2, this.mat4[13] = s3, this.mat4[14] = i, this.mat4[15] = e4[15]), this;
        } }, { key: "invert", value: function(e4) {
          e4 instanceof C.default.Matrix ? (t4 = e4.mat4[0], r4 = e4.mat4[1], o2 = e4.mat4[2], n2 = e4.mat4[3], s3 = e4.mat4[4], i = e4.mat4[5], a = e4.mat4[6], l = e4.mat4[7], u = e4.mat4[8], c = e4.mat4[9], d = e4.mat4[10], h = e4.mat4[11], f = e4.mat4[12], p = e4.mat4[13], m = e4.mat4[14], y = e4.mat4[15]) : O(e4) && (t4 = e4[0], r4 = e4[1], o2 = e4[2], n2 = e4[3], s3 = e4[4], i = e4[5], a = e4[6], l = e4[7], u = e4[8], c = e4[9], d = e4[10], h = e4[11], f = e4[12], p = e4[13], m = e4[14], y = e4[15]);
          var t4, r4, o2, n2, s3, i, a, l, u, c, d, h, f, p, m, y, e4 = t4 * i - r4 * s3, g = t4 * a - o2 * s3, v = t4 * l - n2 * s3, b = r4 * a - o2 * i, j = r4 * l - n2 * i, _ = o2 * l - n2 * a, x = u * p - c * f, w = u * m - d * f, S = u * y - h * f, T = c * m - d * p, M = c * y - h * p, E = d * y - h * m, k = e4 * E - g * M + v * T + b * S - j * w + _ * x;
          return k ? (this.mat4[0] = (i * E - a * M + l * T) * (k = 1 / k), this.mat4[1] = (o2 * M - r4 * E - n2 * T) * k, this.mat4[2] = (p * _ - m * j + y * b) * k, this.mat4[3] = (d * j - c * _ - h * b) * k, this.mat4[4] = (a * S - s3 * E - l * w) * k, this.mat4[5] = (t4 * E - o2 * S + n2 * w) * k, this.mat4[6] = (m * v - f * _ - y * g) * k, this.mat4[7] = (u * _ - d * v + h * g) * k, this.mat4[8] = (s3 * M - i * S + l * x) * k, this.mat4[9] = (r4 * S - t4 * M - n2 * x) * k, this.mat4[10] = (f * j - p * v + y * e4) * k, this.mat4[11] = (c * v - u * j - h * e4) * k, this.mat4[12] = (i * w - s3 * T - a * x) * k, this.mat4[13] = (t4 * T - r4 * w + o2 * x) * k, this.mat4[14] = (p * g - f * b - m * e4) * k, this.mat4[15] = (u * b - c * g + d * e4) * k, this) : null;
        } }, { key: "invert3x3", value: function() {
          var e4 = this.mat3[0], t4 = this.mat3[1], r4 = this.mat3[2], o2 = this.mat3[3], n2 = this.mat3[4], s3 = this.mat3[5], i = this.mat3[6], a = this.mat3[7], l = this.mat3[8], u = l * n2 - s3 * a, c = -l * o2 + s3 * i, d = a * o2 - n2 * i, h = e4 * u + t4 * c + r4 * d;
          return h ? (this.mat3[0] = u * (h = 1 / h), this.mat3[1] = (-l * t4 + r4 * a) * h, this.mat3[2] = (s3 * t4 - r4 * n2) * h, this.mat3[3] = c * h, this.mat3[4] = (l * e4 - r4 * i) * h, this.mat3[5] = (-s3 * e4 + r4 * o2) * h, this.mat3[6] = d * h, this.mat3[7] = (-a * e4 + t4 * i) * h, this.mat3[8] = (n2 * e4 - t4 * o2) * h, this) : null;
        } }, { key: "transpose3x3", value: function(e4) {
          var t4 = (e4 = e4 === undefined ? this.mat3 : e4)[1], r4 = e4[2], o2 = e4[5];
          return this.mat3[0] = e4[0], this.mat3[1] = e4[3], this.mat3[2] = e4[6], this.mat3[3] = t4, this.mat3[4] = e4[4], this.mat3[5] = e4[7], this.mat3[6] = r4, this.mat3[7] = o2, this.mat3[8] = e4[8], this;
        } }, { key: "inverseTranspose", value: function(e4) {
          e4 = e4.mat4, this.mat3 === undefined ? C.default._friendlyError("sorry, this function only works with mat3") : (this.mat3[0] = e4[0], this.mat3[1] = e4[1], this.mat3[2] = e4[2], this.mat3[3] = e4[4], this.mat3[4] = e4[5], this.mat3[5] = e4[6], this.mat3[6] = e4[8], this.mat3[7] = e4[9], this.mat3[8] = e4[10]), e4 = this.invert3x3();
          if (e4)
            e4.transpose3x3(this.mat3);
          else
            for (var t4 = 0;t4 < 9; t4++)
              this.mat3[t4] = 0;
          return this;
        } }, { key: "determinant", value: function() {
          var e4 = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t4 = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r4 = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], o2 = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n2 = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], s3 = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], i = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], c = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
          return e4 * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t4 * c + r4 * u + o2 * l - n2 * a + s3 * i;
        } }, { key: "mult", value: function(e4) {
          var t4;
          if (e4 === this || e4 === this.mat4)
            t4 = this.copy().mat4;
          else if (e4 instanceof C.default.Matrix)
            t4 = e4.mat4;
          else if (O(e4))
            t4 = e4;
          else {
            if (arguments.length !== 16)
              return;
            t4 = arguments;
          }
          var e4 = this.mat4[0], r4 = this.mat4[1], o2 = this.mat4[2], n2 = this.mat4[3];
          return this.mat4[0] = e4 * t4[0] + r4 * t4[4] + o2 * t4[8] + n2 * t4[12], this.mat4[1] = e4 * t4[1] + r4 * t4[5] + o2 * t4[9] + n2 * t4[13], this.mat4[2] = e4 * t4[2] + r4 * t4[6] + o2 * t4[10] + n2 * t4[14], this.mat4[3] = e4 * t4[3] + r4 * t4[7] + o2 * t4[11] + n2 * t4[15], e4 = this.mat4[4], r4 = this.mat4[5], o2 = this.mat4[6], n2 = this.mat4[7], this.mat4[4] = e4 * t4[0] + r4 * t4[4] + o2 * t4[8] + n2 * t4[12], this.mat4[5] = e4 * t4[1] + r4 * t4[5] + o2 * t4[9] + n2 * t4[13], this.mat4[6] = e4 * t4[2] + r4 * t4[6] + o2 * t4[10] + n2 * t4[14], this.mat4[7] = e4 * t4[3] + r4 * t4[7] + o2 * t4[11] + n2 * t4[15], e4 = this.mat4[8], r4 = this.mat4[9], o2 = this.mat4[10], n2 = this.mat4[11], this.mat4[8] = e4 * t4[0] + r4 * t4[4] + o2 * t4[8] + n2 * t4[12], this.mat4[9] = e4 * t4[1] + r4 * t4[5] + o2 * t4[9] + n2 * t4[13], this.mat4[10] = e4 * t4[2] + r4 * t4[6] + o2 * t4[10] + n2 * t4[14], this.mat4[11] = e4 * t4[3] + r4 * t4[7] + o2 * t4[11] + n2 * t4[15], e4 = this.mat4[12], r4 = this.mat4[13], o2 = this.mat4[14], n2 = this.mat4[15], this.mat4[12] = e4 * t4[0] + r4 * t4[4] + o2 * t4[8] + n2 * t4[12], this.mat4[13] = e4 * t4[1] + r4 * t4[5] + o2 * t4[9] + n2 * t4[13], this.mat4[14] = e4 * t4[2] + r4 * t4[6] + o2 * t4[10] + n2 * t4[14], this.mat4[15] = e4 * t4[3] + r4 * t4[7] + o2 * t4[11] + n2 * t4[15], this;
        } }, { key: "apply", value: function(e4) {
          var t4;
          if (e4 === this || e4 === this.mat4)
            t4 = this.copy().mat4;
          else if (e4 instanceof C.default.Matrix)
            t4 = e4.mat4;
          else if (O(e4))
            t4 = e4;
          else {
            if (arguments.length !== 16)
              return;
            t4 = arguments;
          }
          var e4 = this.mat4, r4 = e4[0], o2 = e4[4], n2 = e4[8], s3 = e4[12], r4 = (e4[0] = t4[0] * r4 + t4[1] * o2 + t4[2] * n2 + t4[3] * s3, e4[4] = t4[4] * r4 + t4[5] * o2 + t4[6] * n2 + t4[7] * s3, e4[8] = t4[8] * r4 + t4[9] * o2 + t4[10] * n2 + t4[11] * s3, e4[12] = t4[12] * r4 + t4[13] * o2 + t4[14] * n2 + t4[15] * s3, e4[1]), o2 = e4[5], n2 = e4[9], s3 = e4[13], r4 = (e4[1] = t4[0] * r4 + t4[1] * o2 + t4[2] * n2 + t4[3] * s3, e4[5] = t4[4] * r4 + t4[5] * o2 + t4[6] * n2 + t4[7] * s3, e4[9] = t4[8] * r4 + t4[9] * o2 + t4[10] * n2 + t4[11] * s3, e4[13] = t4[12] * r4 + t4[13] * o2 + t4[14] * n2 + t4[15] * s3, e4[2]), o2 = e4[6], n2 = e4[10], s3 = e4[14], r4 = (e4[2] = t4[0] * r4 + t4[1] * o2 + t4[2] * n2 + t4[3] * s3, e4[6] = t4[4] * r4 + t4[5] * o2 + t4[6] * n2 + t4[7] * s3, e4[10] = t4[8] * r4 + t4[9] * o2 + t4[10] * n2 + t4[11] * s3, e4[14] = t4[12] * r4 + t4[13] * o2 + t4[14] * n2 + t4[15] * s3, e4[3]), o2 = e4[7], n2 = e4[11], s3 = e4[15];
          return e4[3] = t4[0] * r4 + t4[1] * o2 + t4[2] * n2 + t4[3] * s3, e4[7] = t4[4] * r4 + t4[5] * o2 + t4[6] * n2 + t4[7] * s3, e4[11] = t4[8] * r4 + t4[9] * o2 + t4[10] * n2 + t4[11] * s3, e4[15] = t4[12] * r4 + t4[13] * o2 + t4[14] * n2 + t4[15] * s3, this;
        } }, { key: "scale", value: function(e4, t4, r4) {
          return e4 instanceof C.default.Vector ? (t4 = e4.y, r4 = e4.z, e4 = e4.x) : e4 instanceof Array && (t4 = e4[1], r4 = e4[2], e4 = e4[0]), this.mat4[0] *= e4, this.mat4[1] *= e4, this.mat4[2] *= e4, this.mat4[3] *= e4, this.mat4[4] *= t4, this.mat4[5] *= t4, this.mat4[6] *= t4, this.mat4[7] *= t4, this.mat4[8] *= r4, this.mat4[9] *= r4, this.mat4[10] *= r4, this.mat4[11] *= r4, this;
        } }, { key: "rotate", value: function(e4, t4, r4, o2) {
          t4 instanceof C.default.Vector ? (r4 = t4.y, o2 = t4.z, t4 = t4.x) : t4 instanceof Array && (r4 = t4[1], o2 = t4[2], t4 = t4[0]);
          var n2 = Math.sqrt(t4 * t4 + r4 * r4 + o2 * o2), n2 = (t4 *= 1 / n2, r4 *= 1 / n2, o2 *= 1 / n2, this.mat4[0]), s3 = this.mat4[1], i = this.mat4[2], a = this.mat4[3], l = this.mat4[4], u = this.mat4[5], c = this.mat4[6], d = this.mat4[7], h = this.mat4[8], f = this.mat4[9], p = this.mat4[10], m = this.mat4[11], y = Math.sin(e4), e4 = Math.cos(e4), g = 1 - e4, v = t4 * t4 * g + e4, b = r4 * t4 * g + o2 * y, j = o2 * t4 * g - r4 * y, _ = t4 * r4 * g - o2 * y, x = r4 * r4 * g + e4, w = o2 * r4 * g + t4 * y, S = t4 * o2 * g + r4 * y, r4 = r4 * o2 * g - t4 * y, t4 = o2 * o2 * g + e4;
          return this.mat4[0] = n2 * v + l * b + h * j, this.mat4[1] = s3 * v + u * b + f * j, this.mat4[2] = i * v + c * b + p * j, this.mat4[3] = a * v + d * b + m * j, this.mat4[4] = n2 * _ + l * x + h * w, this.mat4[5] = s3 * _ + u * x + f * w, this.mat4[6] = i * _ + c * x + p * w, this.mat4[7] = a * _ + d * x + m * w, this.mat4[8] = n2 * S + l * r4 + h * t4, this.mat4[9] = s3 * S + u * r4 + f * t4, this.mat4[10] = i * S + c * r4 + p * t4, this.mat4[11] = a * S + d * r4 + m * t4, this;
        } }, { key: "translate", value: function(e4) {
          var t4 = e4[0], r4 = e4[1], e4 = e4[2] || 0;
          this.mat4[12] += this.mat4[0] * t4 + this.mat4[4] * r4 + this.mat4[8] * e4, this.mat4[13] += this.mat4[1] * t4 + this.mat4[5] * r4 + this.mat4[9] * e4, this.mat4[14] += this.mat4[2] * t4 + this.mat4[6] * r4 + this.mat4[10] * e4, this.mat4[15] += this.mat4[3] * t4 + this.mat4[7] * r4 + this.mat4[11] * e4;
        } }, { key: "rotateX", value: function(e4) {
          this.rotate(e4, 1, 0, 0);
        } }, { key: "rotateY", value: function(e4) {
          this.rotate(e4, 0, 1, 0);
        } }, { key: "rotateZ", value: function(e4) {
          this.rotate(e4, 0, 0, 1);
        } }, { key: "perspective", value: function(e4, t4, r4, o2) {
          var e4 = 1 / Math.tan(e4 / 2), n2 = 1 / (r4 - o2);
          return this.mat4[0] = e4 / t4, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = e4, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (o2 + r4) * n2, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * o2 * r4 * n2, this.mat4[15] = 0, this;
        } }, { key: "ortho", value: function(e4, t4, r4, o2, n2, s3) {
          var i = 1 / (e4 - t4), a = 1 / (r4 - o2), l = 1 / (n2 - s3);
          return this.mat4[0] = -2 * i, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * a, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e4 + t4) * i, this.mat4[13] = (o2 + r4) * a, this.mat4[14] = (s3 + n2) * l, this.mat4[15] = 1, this;
        } }, { key: "multiplyVec4", value: function(e4, t4, r4, o2) {
          var n2 = new Array(4), s3 = this.mat4;
          return n2[0] = s3[0] * e4 + s3[4] * t4 + s3[8] * r4 + s3[12] * o2, n2[1] = s3[1] * e4 + s3[5] * t4 + s3[9] * r4 + s3[13] * o2, n2[2] = s3[2] * e4 + s3[6] * t4 + s3[10] * r4 + s3[14] * o2, n2[3] = s3[3] * e4 + s3[7] * t4 + s3[11] * r4 + s3[15] * o2, n2;
        } }, { key: "multiplyPoint", value: function(e4) {
          var { x: t4, y: r4, z: e4 } = e4, t4 = this.multiplyVec4(t4, r4, e4, 1);
          return new C.default.Vector(t4[0], t4[1], t4[2]);
        } }, { key: "multiplyAndNormalizePoint", value: function(e4) {
          var { x: t4, y: r4, z: e4 } = e4, t4 = this.multiplyVec4(t4, r4, e4, 1);
          return t4[0] /= t4[3], t4[1] /= t4[3], t4[2] /= t4[3], new C.default.Vector(t4[0], t4[1], t4[2]);
        } }, { key: "multiplyDirection", value: function(e4) {
          var { x: t4, y: r4, z: e4 } = e4, t4 = this.multiplyVec4(t4, r4, e4, 0);
          return new C.default.Vector(t4[0], t4[1], t4[2]);
        } }, { key: "mult3x3", value: function(e4) {
          var t4;
          if (e4 === this || e4 === this.mat3)
            t4 = this.copy().mat3;
          else if (e4 instanceof C.default.Matrix)
            t4 = e4.mat3;
          else if (O(e4))
            t4 = e4;
          else {
            if (arguments.length !== 9)
              return;
            t4 = arguments;
          }
          var e4 = this.mat3[0], r4 = this.mat3[1], o2 = this.mat3[2];
          return this.mat3[0] = e4 * t4[0] + r4 * t4[3] + o2 * t4[6], this.mat3[1] = e4 * t4[1] + r4 * t4[4] + o2 * t4[7], this.mat3[2] = e4 * t4[2] + r4 * t4[5] + o2 * t4[8], e4 = this.mat3[3], r4 = this.mat3[4], o2 = this.mat3[5], this.mat3[3] = e4 * t4[0] + r4 * t4[3] + o2 * t4[6], this.mat3[4] = e4 * t4[1] + r4 * t4[4] + o2 * t4[7], this.mat3[5] = e4 * t4[2] + r4 * t4[5] + o2 * t4[8], e4 = this.mat3[6], r4 = this.mat3[7], o2 = this.mat3[8], this.mat3[6] = e4 * t4[0] + r4 * t4[3] + o2 * t4[6], this.mat3[7] = e4 * t4[1] + r4 * t4[4] + o2 * t4[7], this.mat3[8] = e4 * t4[2] + r4 * t4[5] + o2 * t4[8], this;
        } }, { key: "column", value: function(e4) {
          return new C.default.Vector(this.mat3[3 * e4], this.mat3[3 * e4 + 1], this.mat3[3 * e4 + 2]);
        } }, { key: "row", value: function(e4) {
          return new C.default.Vector(this.mat3[e4], this.mat3[e4 + 3], this.mat3[e4 + 6]);
        } }, { key: "diagonal", value: function() {
          return this.mat3 !== undefined ? [this.mat3[0], this.mat3[4], this.mat3[8]] : [this.mat4[0], this.mat4[5], this.mat4[10], this.mat4[15]];
        } }, { key: "multiplyVec3", value: function(e4, t4) {
          return (t4 = t4 === undefined ? e4.copy() : t4).x = this.row(0).dot(e4), t4.y = this.row(1).dot(e4), t4.z = this.row(2).dot(e4), t4;
        } }, { key: "createSubMatrix3x3", value: function() {
          var e4 = new C.default.Matrix("mat3");
          return e4.mat3[0] = this.mat4[0], e4.mat3[1] = this.mat4[1], e4.mat3[2] = this.mat4[2], e4.mat3[3] = this.mat4[4], e4.mat3[4] = this.mat4[5], e4.mat3[5] = this.mat4[6], e4.mat3[6] = this.mat4[8], e4.mat3[7] = this.mat4[9], e4.mat3[8] = this.mat4[10], e4;
        } }]) && n(e3.prototype, t3), o && n(e3, o), r3;
      }(), C.default.Matrix);
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.float32-array": 211, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231 }], 329: [function(e2, t2, r2) {
      e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.map"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function o(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      e2.default.RenderBuffer = function() {
        function i(e4, t4, r4, o2, n, s2) {
          if (!(this instanceof i))
            throw new TypeError("Cannot call a class as a function");
          this.size = e4, this.src = t4, this.dst = r4, this.attr = o2, this._renderer = n, this.map = s2;
        }
        var e3, t3, r3;
        return e3 = i, (t3 = [{ key: "_prepareBuffer", value: function(e4, t4) {
          var r4, o2, n, s2 = t4.attributes, i2 = this._renderer.GL, a = e4.model || e4, s2 = s2[this.attr];
          s2 && (r4 = e4[this.dst], 0 < (o2 = a[this.src]).length ? ((n = !r4) && (e4[this.dst] = r4 = i2.createBuffer()), i2.bindBuffer(i2.ARRAY_BUFFER, r4), !n && a.dirtyFlags[this.src] === false || (n = (e4 = this.map) ? e4(o2) : o2, this._renderer._bindBuffer(r4, i2.ARRAY_BUFFER, n), a.dirtyFlags[this.src] = false), t4.enableAttrib(s2, this.size)) : (e4 = s2.location) !== -1 && this._renderer.registerEnabled.has(e4) && (i2.disableVertexAttribArray(e4), this._renderer.registerEnabled.delete(e4)));
        } }]) && o(e3.prototype, t3), r3 && o(e3, r3), i;
      }();
      e2 = e2.default.RenderBuffer;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.map": 164 }], 330: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.find-index"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.find-index"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var l = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, h = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s2.get || s2.set) ? Object.defineProperty(o2, r3, s2) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function f(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      e2("./p5.RenderBuffer"), l.default.RendererGL.prototype.beginShape = function(e3) {
        return this.immediateMode.shapeMode = e3 !== undefined ? e3 : h.TESS, this.immediateMode.geometry.reset(), this.immediateMode.contourIndices = [], this;
      };
      var u = { vertices: 1, vertexNormals: 1, vertexColors: 4, vertexStrokeColors: 4, uvs: 2 }, n = (l.default.RendererGL.prototype.beginContour = function() {
        if (this.immediateMode.shapeMode !== h.TESS)
          throw new Error("WebGL mode can only use contours with beginShape(TESS).");
        this.immediateMode.contourIndices.push(this.immediateMode.geometry.vertices.length);
      }, l.default.RendererGL.prototype.vertex = function(e3, t3) {
        if (this.immediateMode.shapeMode === h.QUADS && this.immediateMode.geometry.vertices.length % 6 == 3)
          for (var r3 in u) {
            var o2 = u[r3], r3 = this.immediateMode.geometry[r3];
            r3.push.apply(r3, f(r3.slice(r3.length - 3 * o2, r3.length - 2 * o2)).concat(f(r3.slice(r3.length - o2, r3.length))));
          }
        var n2, s2, i2 = n2 = s2 = 0, a2 = (arguments.length === 3 ? i2 = arguments[2] : arguments.length === 4 ? (n2 = arguments[2], s2 = arguments[3]) : arguments.length === 5 && (i2 = arguments[2], n2 = arguments[3], s2 = arguments[4]), new l.default.Vector(e3, t3, i2)), a2 = (this.immediateMode.geometry.vertices.push(a2), this.immediateMode.geometry.vertexNormals.push(this._currentNormal), this.curFillColor || [0.5, 0.5, 0.5, 1]), a2 = (this.immediateMode.geometry.vertexColors.push(a2[0], a2[1], a2[2], a2[3]), this.curStrokeColor || [0.5, 0.5, 0.5, 1]);
        return this.immediateMode.geometry.vertexStrokeColors.push(a2[0], a2[1], a2[2], a2[3]), this.textureMode !== h.IMAGE || this.isProcessingVertices || (this._tex !== null ? 0 < this._tex.width && 0 < this._tex.height && (n2 /= this._tex.width, s2 /= this._tex.height) : this.userFillShader === undefined && this.userStrokeShader === undefined && this.userPointShader === undefined && this._tex === null && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(n2, s2), this.immediateMode._bezierVertex[0] = e3, this.immediateMode._bezierVertex[1] = t3, this.immediateMode._bezierVertex[2] = i2, this.immediateMode._quadraticVertex[0] = e3, this.immediateMode._quadraticVertex[1] = t3, this.immediateMode._quadraticVertex[2] = i2, this;
      }, l.default.RendererGL.prototype.normal = function(e3, t3, r3) {
        return e3 instanceof l.default.Vector ? this._currentNormal = e3 : this._currentNormal = new l.default.Vector(e3, t3, r3), this;
      }, l.default.RendererGL.prototype.endShape = function(e3, t3, r3, o2, n2, s2) {
        var i2 = 6 < arguments.length && arguments[6] !== undefined ? arguments[6] : 1;
        return this.immediateMode.shapeMode === h.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (this.immediateMode.geometry.vertices.length === 3 && this.immediateMode.shapeMode === h.TESS && (this.immediateMode.shapeMode, h.TRIANGLES), this.isProcessingVertices = true, this._processVertices.apply(this, arguments), this.isProcessingVertices = false, this.immediateMode.shapeMode !== h.LINE_STRIP && this.immediateMode.shapeMode !== h.LINES || (this.immediateMode.shapeMode = h.TRIANGLE_FAN), this.immediateMode.shapeMode === h.QUADS ? this.immediateMode.shapeMode = h.TRIANGLES : this.immediateMode.shapeMode === h.QUAD_STRIP && (this.immediateMode.shapeMode = h.TRIANGLE_STRIP), this._doFill && !this.geometryBuilder && 3 <= this.immediateMode.geometry.vertices.length && this._drawImmediateFill(i2), this._doStroke && !this.geometryBuilder && 1 <= this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.geometryBuilder && this.geometryBuilder.addImmediate(), this.isBezier = false, this.isQuadratic = false, this.isCurve = false, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
      }, l.default.RendererGL.prototype._processVertices = function(e3) {
        var t3;
        this.immediateMode.geometry.vertices.length !== 0 && (t3 = this._doStroke, e3 = e3 === h.CLOSE, t3 && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, e3), this.geometryBuilder || this.immediateMode.geometry._edgesToVertices()), t3 = this.immediateMode.shapeMode === h.TESS, e3 = 0 < this.immediateMode.contourIndices.length, this._doFill && (this.isBezier || this.isQuadratic || this.isCurve || t3 || e3) && this.immediateMode.shapeMode !== h.LINES && this._tesselateShape());
      }, l.default.RendererGL.prototype._calculateEdges = function(e3, t3, r3) {
        var o2 = [], n2 = 0, s2 = this.immediateMode.contourIndices.slice(), i2 = 0;
        switch (e3) {
          case h.TRIANGLE_STRIP:
            for (n2 = 0;n2 < t3.length - 2; n2++)
              o2.push([n2, n2 + 1]), o2.push([n2, n2 + 2]);
            o2.push([n2, n2 + 1]);
            break;
          case h.TRIANGLE_FAN:
            for (n2 = 1;n2 < t3.length - 1; n2++)
              o2.push([0, n2]), o2.push([n2, n2 + 1]);
            o2.push([0, t3.length - 1]);
            break;
          case h.TRIANGLES:
            for (n2 = 0;n2 < t3.length - 2; n2 += 3)
              o2.push([n2, n2 + 1]), o2.push([n2 + 1, n2 + 2]), o2.push([n2 + 2, n2]);
            break;
          case h.LINES:
            for (n2 = 0;n2 < t3.length - 1; n2 += 2)
              o2.push([n2, n2 + 1]);
            break;
          case h.QUADS:
            for (n2 = 0;n2 < t3.length - 5; n2 += 6)
              o2.push([n2, n2 + 1]), o2.push([n2 + 1, n2 + 2]), o2.push([n2 + 3, n2 + 5]), o2.push([n2 + 4, n2 + 5]);
            break;
          case h.QUAD_STRIP:
            for (n2 = 0;n2 < t3.length - 2; n2 += 2)
              o2.push([n2, n2 + 1]), o2.push([n2, n2 + 2]), o2.push([n2 + 1, n2 + 3]);
            o2.push([n2, n2 + 1]);
            break;
          default:
            for (n2 = 0;n2 < t3.length; n2++)
              n2 + 1 < t3.length && n2 + 1 !== s2[0] ? o2.push([n2, n2 + 1]) : ((r3 || i2) && o2.push([n2, i2]), 0 < s2.length && (i2 = s2.shift()));
        }
        return e3 !== h.TESS && r3 && o2.push([t3.length - 1, 0]), o2;
      }, l.default.RendererGL.prototype._tesselateShape = function() {
        for (var u2 = this, e3 = (this.immediateMode.shapeMode = h.TRIANGLES, [[]]), t3 = 0;t3 < this.immediateMode.geometry.vertices.length; t3++)
          0 < this.immediateMode.contourIndices.length && this.immediateMode.contourIndices[0] === t3 && (this.immediateMode.contourIndices.shift(), e3.push([])), e3[e3.length - 1].push(this.immediateMode.geometry.vertices[t3].x, this.immediateMode.geometry.vertices[t3].y, this.immediateMode.geometry.vertices[t3].z, this.immediateMode.geometry.uvs[2 * t3], this.immediateMode.geometry.uvs[2 * t3 + 1], this.immediateMode.geometry.vertexColors[4 * t3], this.immediateMode.geometry.vertexColors[4 * t3 + 1], this.immediateMode.geometry.vertexColors[4 * t3 + 2], this.immediateMode.geometry.vertexColors[4 * t3 + 3], this.immediateMode.geometry.vertexNormals[t3].x, this.immediateMode.geometry.vertexNormals[t3].y, this.immediateMode.geometry.vertexNormals[t3].z);
        for (var c, r3 = this._triangulate(e3), d = this.immediateMode.geometry.vertices, o2 = (this.immediateMode.geometry.vertices = [], this.immediateMode.geometry.vertexNormals = [], this.immediateMode.geometry.uvs = [], []), n2 = 0, s2 = r3.length;n2 < s2; n2 += l.default.RendererGL.prototype.tessyVertexSize)
          o2.push.apply(o2, f(r3.slice(n2 + 5, n2 + 9))), this.normal.apply(this, f(r3.slice(n2 + 9, n2 + 12))), this.vertex.apply(this, f(r3.slice(n2, n2 + 5)));
        this.geometryBuilder && (c = new Map, this.immediateMode.geometry.edges = this.immediateMode.geometry.edges.map(function(e4) {
          return e4.map(function(e5) {
            if (!c.has(e5)) {
              var t4 = d[e5], r4 = u2.immediateMode.geometry.vertices.findIndex(function(e6) {
                return t4.x === e6.x && t4.y === e6.y && t4.z === e6.z;
              });
              if (r4 === -1) {
                for (var o3 = 1 / 0, n3 = 0, s3 = 0;s3 < u2.immediateMode.geometry.vertices.length; s3++) {
                  var i2 = u2.immediateMode.geometry.vertices[s3], a2 = t4.x - i2.x, l2 = t4.y - i2.y, i2 = t4.z - i2.z, a2 = a2 * a2 + l2 * l2 + i2 * i2;
                  a2 < o3 && (o3 = a2, n3 = s3);
                }
                r4 = n3;
              }
              c.set(e5, r4);
            }
            return c.get(e5);
          });
        })), this.immediateMode.geometry.vertexColors = o2;
      }, l.default.RendererGL.prototype._drawImmediateFill = function() {
        var e3, t3 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : 1, r3 = this.GL, o2 = (this._useVertexColor = 0 < this.immediateMode.geometry.vertexColors.length, e3 = this._getImmediateFillShader(), this._setFillUniforms(e3), true), n2 = false, s2 = undefined;
        try {
          for (var i2, a2 = this.immediateMode.buffers.fill[Symbol.iterator]();!(o2 = (i2 = a2.next()).done); o2 = true)
            i2.value._prepareBuffer(this.immediateMode.geometry, e3);
        } catch (e4) {
          n2 = true, s2 = e4;
        } finally {
          try {
            o2 || a2.return == null || a2.return();
          } finally {
            if (n2)
              throw s2;
          }
        }
        if (e3.disableRemainingAttributes(), this._applyColorBlend(this.curFillColor), t3 === 1)
          r3.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length);
        else
          try {
            r3.drawArraysInstanced(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length, t3);
          } catch (e4) {
            console.log("\uD83C\uDF38 p5.js says: Instancing is only supported in WebGL2 mode");
          }
        e3.unbindShader();
      }, l.default.RendererGL.prototype._drawImmediateStroke = function() {
        var e3 = this.GL, t3 = (this._useLineColor = 0 < this.immediateMode.geometry.vertexStrokeColors.length, this._getImmediateStrokeShader()), r3 = (this._setStrokeUniforms(t3), true), o2 = false, n2 = undefined;
        try {
          for (var s2, i2 = this.immediateMode.buffers.stroke[Symbol.iterator]();!(r3 = (s2 = i2.next()).done); r3 = true)
            s2.value._prepareBuffer(this.immediateMode.geometry, t3);
        } catch (e4) {
          o2 = true, n2 = e4;
        } finally {
          try {
            r3 || i2.return == null || i2.return();
          } finally {
            if (o2)
              throw n2;
          }
        }
        t3.disableRemainingAttributes(), this._applyColorBlend(this.curStrokeColor), e3.drawArrays(e3.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length / 3), t3.unbindShader();
      }, l.default.RendererGL);
      r2.default = n;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.RenderBuffer": 329, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.find-index": 156, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.map": 164, "core-js/modules/es.array.slice": 165, "core-js/modules/es.map": 169, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 331: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var a = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = (e2("./p5.RendererGL"), e2("./p5.RenderBuffer"), function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")));
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      a.default.RendererGL.prototype.freeGeometry = function(e3) {
        e3.gid ? this._freeBuffers(e3.gid) : console.warn("The model you passed to freeGeometry does not have an id!");
      }, a.default.RendererGL.prototype._initBufferDefaults = function(e3) {
        var t3;
        return this._freeBuffers(e3), 1000 < Object.keys(this.retainedMode.geometry).length && (t3 = Object.keys(this.retainedMode.geometry)[0], this._freeBuffers(t3)), this.retainedMode.geometry[e3] = {};
      }, a.default.RendererGL.prototype._freeBuffers = function(e3) {
        var a2, l2 = this.retainedMode.geometry[e3];
        function t3(e4) {
          var t4 = true, r3 = false, o2 = undefined;
          try {
            for (var n2, s3 = e4[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i2 = n2.value;
              l2[i2.dst] && (a2.deleteBuffer(l2[i2.dst]), l2[i2.dst] = null);
            }
          } catch (e5) {
            r3 = true, o2 = e5;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r3)
                throw o2;
            }
          }
        }
        l2 && (delete this.retainedMode.geometry[e3], a2 = this.GL, l2.indexBuffer && a2.deleteBuffer(l2.indexBuffer), t3(this.retainedMode.buffers.stroke), t3(this.retainedMode.buffers.fill));
      }, a.default.RendererGL.prototype.createBuffers = function(e3, t3) {
        var r3, o2, n2, s3 = this.GL, e3 = this._initBufferDefaults(e3), i2 = (e3.model = t3, e3.indexBuffer);
        return t3.faces.length ? (i2 = i2 || (e3.indexBuffer = s3.createBuffer()), n2 = (o2 = (r3 = a.default.RendererGL.prototype._flatten(t3.faces)).some(function(e4) {
          return 65535 < e4;
        })) ? Uint32Array : Uint16Array, this._bindBuffer(i2, s3.ELEMENT_ARRAY_BUFFER, r3, n2), e3.indexBufferType = o2 ? s3.UNSIGNED_INT : s3.UNSIGNED_SHORT, e3.vertexCount = 3 * t3.faces.length) : (i2 && (s3.deleteBuffer(i2), e3.indexBuffer = null), e3.vertexCount = t3.vertices ? t3.vertices.length : 0), e3.lineVertexCount = t3.lineVertices ? t3.lineVertices.length / 3 : 0, e3;
      }, a.default.RendererGL.prototype.drawBuffers = function(e3) {
        var t3 = this.GL, r3 = this.retainedMode.geometry[e3];
        if (!this.geometryBuilder && this._doFill && 0 < this.retainedMode.geometry[e3].vertexCount) {
          this._useVertexColor = 0 < r3.model.vertexColors.length;
          var o2 = this._getRetainedFillShader(), n2 = (this._setFillUniforms(o2), true), s3 = false, i2 = undefined;
          try {
            for (var a2, l2 = this.retainedMode.buffers.fill[Symbol.iterator]();!(n2 = (a2 = l2.next()).done); n2 = true)
              a2.value._prepareBuffer(r3, o2);
          } catch (e4) {
            s3 = true, i2 = e4;
          } finally {
            try {
              n2 || l2.return == null || l2.return();
            } finally {
              if (s3)
                throw i2;
            }
          }
          o2.disableRemainingAttributes(), r3.indexBuffer && this._bindBuffer(r3.indexBuffer, t3.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor), this._drawElements(t3.TRIANGLES, e3), o2.unbindShader();
        }
        if (!this.geometryBuilder && this._doStroke && 0 < r3.lineVertexCount) {
          this._useLineColor = 0 < r3.model.vertexStrokeColors.length;
          var u = this._getRetainedStrokeShader(), c = (this._setStrokeUniforms(u), true), s3 = false, i2 = undefined;
          try {
            for (var d, h = this.retainedMode.buffers.stroke[Symbol.iterator]();!(c = (d = h.next()).done); c = true)
              d.value._prepareBuffer(r3, u);
          } catch (e4) {
            s3 = true, i2 = e4;
          } finally {
            try {
              c || h.return == null || h.return();
            } finally {
              if (s3)
                throw i2;
            }
          }
          u.disableRemainingAttributes(), this._applyColorBlend(this.curStrokeColor), this._drawArrays(t3.TRIANGLES, e3), u.unbindShader();
        }
        return this.geometryBuilder && this.geometryBuilder.addRetained(r3), this;
      }, a.default.RendererGL.prototype.drawBuffersScaled = function(e3, t3, r3, o2) {
        var n2 = this.uMVMatrix.copy();
        try {
          this.uMVMatrix.scale(t3, r3, o2), this.drawBuffers(e3);
        } finally {
          this.uMVMatrix = n2;
        }
      }, a.default.RendererGL.prototype._drawArrays = function(e3, t3) {
        return this.GL.drawArrays(e3, 0, this.retainedMode.geometry[t3].lineVertexCount), this;
      }, a.default.RendererGL.prototype._drawElements = function(e3, t3) {
        var t3 = this.retainedMode.geometry[t3], r3 = this.GL;
        if (t3.indexBuffer) {
          if (this._pInst.webglVersion !== n.WEBGL2 && t3.indexBufferType === r3.UNSIGNED_INT && !r3.getExtension("OES_element_index_uint"))
            throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");
          r3.drawElements(r3.TRIANGLES, t3.vertexCount, t3.indexBufferType, 0);
        } else
          r3.drawArrays(e3 || r3.TRIANGLES, 0, t3.vertexCount);
      }, a.default.RendererGL.prototype._drawPoints = function(e3, t3) {
        var r3 = this.GL, o2 = this._getImmediatePointShader();
        this._setPointUniforms(o2), this._bindBuffer(t3, r3.ARRAY_BUFFER, this._vToNArray(e3), Float32Array, r3.STATIC_DRAW), o2.enableAttrib(o2.attributes.aPosition, 3), this._applyColorBlend(this.curStrokeColor), r3.drawArrays(r3.Points, 0, e3.length), o2.unbindShader();
      };
      var s2 = a.default.RendererGL;
      r2.default = s2;
    }, { "../core/constants": 264, "../core/main": 275, "./p5.RenderBuffer": 329, "./p5.RendererGL": 332, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.some": 166, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.float32-array": 211, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint16-array": 232, "core-js/modules/es.typed-array.uint32-array": 233, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 332: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.float64-array"), e2("core-js/modules/es.typed-array.int16-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.float64-array"), e2("core-js/modules/es.typed-array.int16-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.readPixelsWebGL = k, r2.readPixelWebGL = C, r2.default = undefined;
      var g = n(e2("../core/main")), l = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = d();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants")), a = n(e2("./GeometryBuilder")), u = n(e2("libtess")), c = (e2("./p5.Shader"), e2("./p5.Camera"), e2("../core/p5.Renderer"), e2("./p5.Matrix"), e2("./p5.Framebuffer"), e2("path"), e2("./p5.Texture"));
      function d() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, d = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function h(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t3 = 0, r3 = new Array(e4.length);t3 < e4.length; t3++)
              r3[t3] = e4[t3];
            return r3;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || Object.prototype.toString.call(e4) === "[object Arguments]")
            return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function f(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function p(e3, t3, r3) {
        return (p = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function(e4, t4, r4) {
          var e4 = function(e5, t5) {
            for (;!Object.prototype.hasOwnProperty.call(e5, t5) && (e5 = b(e5)) !== null; )
              ;
            return e5;
          }(e4, t4);
          if (e4)
            return (e4 = Object.getOwnPropertyDescriptor(e4, t4)).get ? e4.get.call(r4) : e4.value;
        })(e3, t3, r3 || e3);
      }
      function m(e3, t3) {
        return (m = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function y(o2) {
        return function() {
          var e3, t3, r3 = b(o2);
          return e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = b(this).constructor, Reflect.construct(r3, arguments, e3)) : r3.apply(this, arguments), r3 = this, !(t3 = e3) || i(t3) !== "object" && typeof t3 != "function" ? v(r3) : t3;
        };
      }
      function v(e3) {
        if (e3 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function b(e3) {
        return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function j(e3, t3, r3) {
        t3 in e3 ? Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e3[t3] = r3;
      }
      function s2(e3, t3) {
        T += "#define STROKE_CAP_".concat(e3, " ").concat(t3, "\n"), w[l[e3]] = t3;
      }
      function _(e3, t3) {
        T += "#define STROKE_JOIN_".concat(e3, " ").concat(t3, "\n"), S[l[e3]] = t3;
      }
      var x, w = {}, S = {}, T = "", e2 = (s2("ROUND", 0), s2("PROJECT", 1), s2("SQUARE", 2), _("ROUND", 0), _("MITER", 1), _("BEVEL", 2), '#define PI 3.141592\n\nprecision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];\t\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\n// setting from  _setImageLightUniforms()\n// boolean to initiate the calculateImageDiffuse and calculateImageSpecular\nuniform bool uUseImageLight;\n// texture for use in calculateImageDiffuse\nuniform sampler2D environmentMapDiffused;\n// texture for use in calculateImageSpecular\nuniform sampler2D environmentMapSpecular;\n// roughness for use in calculateImageSpecular\nuniform float levelOfDetail;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\n// converts the range of "value" from [min1 to max1] to [min2 to max2]\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 mapTextureToNormal( vec3 v ){\n  // x = r sin(phi) cos(theta)   \n  // y = r cos(phi)  \n  // z = r sin(phi) sin(theta)\n  float phi = acos( v.y );\n  // if phi is 0, then there are no x, z components\n  float theta = 0.0;\n  // else \n  theta = acos(v.x / sin(phi));\n  float sinTheta = v.z / sin(phi);\n  if (sinTheta < 0.0) {\n    // Turn it into -theta, but in the 0-2PI range\n    theta = 2.0 * PI - theta;\n  }\n  theta = theta / (2.0 * 3.14159);\n  phi = phi / 3.14159 ;\n  \n  vec2 angles = vec2( fract(theta + 0.25), 1.0 - phi );\n  return angles;\n}\n\n\nvec3 calculateImageDiffuse( vec3 vNormal, vec3 vViewPosition ){\n  // make 2 seperate builds \n  vec3 worldCameraPosition =  vec3(0.0, 0.0, 0.0);  // hardcoded world camera position\n  vec3 worldNormal = normalize(vNormal);\n  vec2 newTexCoor = mapTextureToNormal( worldNormal );\n  vec4 texture = TEXTURE( environmentMapDiffused, newTexCoor );\n  // this is to make the darker sections more dark\n  // png and jpg usually flatten the brightness so it is to reverse that\n  return smoothstep(vec3(0.0), vec3(0.8), texture.xyz);\n}\n\nvec3 calculateImageSpecular( vec3 vNormal, vec3 vViewPosition ){\n  vec3 worldCameraPosition =  vec3(0.0, 0.0, 0.0);\n  vec3 worldNormal = normalize(vNormal);\n  vec3 lightDirection = normalize( vViewPosition - worldCameraPosition );\n  vec3 R = reflect(lightDirection, worldNormal);\n  vec2 newTexCoor = mapTextureToNormal( R );\n#ifdef WEBGL2\n  vec4 outColor = textureLod(environmentMapSpecular, newTexCoor, levelOfDetail);\n#else\n  vec4 outColor = TEXTURE(environmentMapSpecular, newTexCoor);\n#endif\n  // this is to make the darker sections more dark\n  // png and jpg usually flatten the brightness so it is to reverse that\n  return pow(outColor.xyz, vec3(10.0));\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  if( uUseImageLight ){\n    totalDiffuse += calculateImageDiffuse(normal, modelPosition);\n    totalSpecular += calculateImageSpecular(normal, modelPosition);\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n'), M = { immediateVert: "IN vec3 aPosition;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nOUT vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n", vertexColorVert: "IN vec3 aPosition;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nOUT vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n", vertexColorFrag: "IN vec4 vColor;\nvoid main(void) {\n  OUT_COLOR = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", normalVert: "IN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec4 uMaterialColor;\nuniform bool uUseVertexColor;\n\nOUT vec3 vVertexNormal;\nOUT highp vec2 vVertTexCoord;\nOUT vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", normalFrag: "IN vec3 vVertexNormal;\nvoid main(void) {\n  OUT_COLOR = vec4(vVertexNormal, 1.0);\n}\n", basicFrag: "IN vec4 vColor;\nvoid main(void) {\n  OUT_COLOR = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", lightVert: e2 + "// include lighting.glgl\n\nIN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nOUT highp vec2 vVertTexCoord;\nOUT vec3 vDiffuseColor;\nOUT vec3 vSpecularColor;\nOUT vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", lightTextureFrag: "uniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nIN highp vec2 vVertTexCoord;\nIN vec3 vDiffuseColor;\nIN vec3 vSpecularColor;\nIN vec4 vColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    OUT_COLOR = vColor;\n  }\n  else {\n    vec4 baseColor = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? TEXTURE(uSampler, vVertTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n    OUT_COLOR = vec4(baseColor.rgb * vDiffuseColor + vSpecularColor, baseColor.a);\n  }\n}\n", phongVert: "precision highp int;\n\nIN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nOUT vec3 vNormal;\nOUT vec2 vTexCoord;\nOUT vec3 vViewPosition;\nOUT vec3 vAmbientColor;\nOUT vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", phongFrag: e2 + "// include lighting.glsl\nprecision highp int;\n\nuniform bool uHasSetAmbient;\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nIN vec3 vNormal;\nIN vec2 vTexCoord;\nIN vec3 vViewPosition;\nIN vec3 vAmbientColor;\nIN vec4 vColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  vec4 baseColor = isTexture\n    // Textures come in with premultiplied alpha. To apply tint and still have\n    // premultiplied alpha output, we need to multiply the RGB channels by the\n    // tint RGB, and all channels by the tint alpha.\n    ? TEXTURE(uSampler, vTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n    // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n    // channels by alpha to convert it to premultiplied alpha.\n    : vec4(vColor.rgb * vColor.a, vColor.a);\n  OUT_COLOR = vec4(diffuse * baseColor.rgb + \n                    vAmbientColor * (\n                      uHasSetAmbient ? uAmbientMatColor.rgb : baseColor.rgb\n                    ) + \n                    specular * uSpecularMatColor.rgb + \n                    uEmissiveMatColor.rgb, baseColor.a);\n}\n", fontVert: "IN vec3 aPosition;\nIN vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nOUT vec2 vTexCoord;\nOUT float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // Expand glyph bounding boxes by 1px on each side to give a bit of room\n  // for antialiasing\n  vec3 newOrigin = (uModelViewMatrix * vec4(0., 0., 0., 1.)).xyz;\n  vec3 newDX = (uModelViewMatrix * vec4(1., 0., 0., 1.)).xyz;\n  vec3 newDY = (uModelViewMatrix * vec4(0., 1., 0., 1.)).xyz;\n  vec2 pixelScale = vec2(\n    1. / length(newOrigin - newDX),\n    1. / length(newOrigin - newDY)\n  );\n  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);\n  vec2 textureOffset = offset * (1. / vec2(\n    uGlyphRect.z - uGlyphRect.x,\n    uGlyphRect.w - uGlyphRect.y\n  ));\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n\n  positionVec4.xy += offset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord + textureOffset;\n  w = gl_Position.w;\n}\n", fontFrag: "#ifndef WEBGL2\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision highp int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nIN vec2 vTexCoord;\n\n// some helper functions\nint ROUND(float v) { return ifloor(v + 0.5); }\nivec2 ROUND(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = ROUND(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return TEXTURE(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n  OUT_COLOR *= saturate(max(antialias, cover));\n}\n", lineVert: T + "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nprecision mediump int;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform bool uUseLineColor;\nuniform vec4 uMaterialColor;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\nuniform int uStrokeJoin;\n\nIN vec4 aPosition;\nIN vec3 aTangentIn;\nIN vec3 aTangentOut;\nIN float aSide;\nIN vec4 aVertexColor;\n\nOUT vec4 vColor;\nOUT vec2 vTangent;\nOUT vec2 vCenter;\nOUT vec2 vPosition;\nOUT float vMaxDist;\nOUT float vCap;\nOUT float vJoin;\n\nvec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {\n  // Rotate and translate so a starts at the origin and goes out to the right\n  bPoint -= aPoint;\n  vec2 rotatedBFrom = vec2(\n    bPoint.x*aDir.x + bPoint.y*aDir.y,\n    bPoint.y*aDir.x - bPoint.x*aDir.y\n  );\n  vec2 bTo = bPoint + bDir;\n  vec2 rotatedBTo = vec2(\n    bTo.x*aDir.x + bTo.y*aDir.y,\n    bTo.y*aDir.x - bTo.x*aDir.y\n  );\n  float intersectionDistance =\n    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /\n    (rotatedBTo.y - rotatedBFrom.y);\n  return aPoint + aDir * intersectionDistance;\n}\n\nvoid main() {\n  // Caps have one of either the in or out tangent set to 0\n  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))\n    ? 1. : 0.;\n\n  // Joins have two unique, defined tangents\n  vJoin = (\n    aTangentIn != vec3(0.) &&\n    aTangentOut != vec3(0.) &&\n    aTangentIn != aTangentOut\n  ) ? 1. : 0.;\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posqIn = uModelViewMatrix * (aPosition + vec4(aTangentIn, 0));\n  vec4 posqOut = uModelViewMatrix * (aPosition + vec4(aTangentOut, 0));\n\n  float facingCamera = pow(\n    // The word space tangent's z value is 0 if it's facing the camera\n    abs(normalize(posqIn-posp).z),\n\n    // Using pow() here to ramp `facingCamera` up from 0 to 1 really quickly\n    // so most lines get scaled and don't get clipped\n    0.25\n  );\n\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  float scale = mix(1., 0.995, facingCamera);\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posqIn.xyz = posqIn.xyz * scale;\n  posqOut.xyz = posqOut.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 qIn = uProjectionMatrix * posqIn;\n  vec4 qOut = uProjectionMatrix * posqOut;\n  vCenter = p.xy;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);\n  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);\n\n  vec2 curPerspScale;\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n\n    // The y value of the projection matrix may be flipped if rendering to a Framebuffer.\n    // Multiplying again by its sign here negates the flip to get just the scale.\n    curPerspScale = (uProjectionMatrix * vec4(1, sign(uProjectionMatrix[1][1]), 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  vec2 offset;\n  if (vJoin == 1.) {\n    vTangent = normalize(tangentIn + tangentOut);\n    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);\n    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);\n    float side = sign(aSide);\n    float sideEnum = abs(aSide);\n\n    // We generate vertices for joins on either side of the centerline, but\n    // the \"elbow\" side is the only one needing a join. By not setting the\n    // offset for the other side, all its vertices will end up in the same\n    // spot and not render, effectively discarding it.\n    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {\n      // Side enums:\n      //   1: the side going into the join\n      //   2: the middle of the join\n      //   3: the side going out of the join\n      if (sideEnum == 2.) {\n        // Calculate the position + tangent on either side of the join, and\n        // find where the lines intersect to find the elbow of the join\n        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;\n        vec2 intersection = lineIntersection(\n          c + (side * normalIn * uStrokeWeight / 2.),\n          tangentIn,\n          c + (side * normalOut * uStrokeWeight / 2.),\n          tangentOut\n        );\n        offset = (intersection - c);\n\n        // When lines are thick and the angle of the join approaches 180, the\n        // elbow might be really far from the center. We'll apply a limit to\n        // the magnitude to avoid lines going across the whole screen when this\n        // happens.\n        float mag = length(offset);\n        float maxMag = 3. * uStrokeWeight;\n        if (mag > maxMag) {\n          offset *= maxMag / mag;\n        }\n      } else if (sideEnum == 1.) {\n        offset = side * normalIn * uStrokeWeight / 2.;\n      } else if (sideEnum == 3.) {\n        offset = side * normalOut * uStrokeWeight / 2.;\n      }\n    }\n    if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);\n      vMaxDist = abs(dot(avgNormal, normalIn * uStrokeWeight / 2.));\n    } else {\n      vMaxDist = uStrokeWeight / 2.;\n    }\n  } else {\n    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;\n    vTangent = tangent;\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float normalOffset = sign(aSide);\n    // Caps will have side values of -2 or 2 on the edge of the cap that\n    // extends out from the line\n    float tangentOffset = abs(aSide) - 1.;\n    offset = (normal * normalOffset + tangent * tangentOffset) *\n      uStrokeWeight * 0.5;\n    vMaxDist = uStrokeWeight / 2.;\n  }\n  vPosition = vCenter + offset;\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n  \n  vColor = (uUseLineColor ? aVertexColor : uMaterialColor);\n}\n", lineFrag: T + "precision mediump int;\n\nuniform vec4 uMaterialColor;\nuniform int uStrokeCap;\nuniform int uStrokeJoin;\nuniform float uStrokeWeight;\n\nIN vec4 vColor;\nIN vec2 vTangent;\nIN vec2 vCenter;\nIN vec2 vPosition;\nIN float vMaxDist;\nIN float vCap;\nIN float vJoin;\n\nfloat distSquared(vec2 a, vec2 b) {\n  vec2 aToB = b - a;\n  return dot(aToB, aToB);\n}\n\nvoid main() {\n  if (vCap > 0.) {\n    if (\n      uStrokeCap == STROKE_CAP_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (\n      uStrokeCap == STROKE_CAP_SQUARE &&\n      dot(vPosition - vCenter, vTangent) > 0.\n    ) {\n      discard;\n    }\n    // Use full area for PROJECT\n  } else if (vJoin > 0.) {\n    if (\n      uStrokeJoin == STROKE_JOIN_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 normal = vec2(-vTangent.y, vTangent.x);\n      if (abs(dot(vPosition - vCenter, normal)) > vMaxDist) {\n        discard;\n      }\n    }\n    // Use full area for MITER\n  }\n  OUT_COLOR = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", pointVert: "IN vec3 aPosition;\nuniform float uPointSize;\nOUT float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}\n", pointFrag: "precision mediump int;\nuniform vec4 uMaterialColor;\nIN float vStrokeWeight;\n\nvoid main(){\n  float mask = 0.0;\n\n  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n  // if strokeWeight is 1 or less lets just draw a square\n  // this prevents weird artifacting from carving circles when our points are really small\n  // if strokeWeight is larger than 1, we just use it as is\n\n  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n  // throw away the borders of the mask\n  // otherwise we get weird alpha blending issues\n\n  if(mask > 0.98){\n    discard;\n  }\n\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n}\n", imageLightVert: "precision highp float;\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nvarying vec3 localPos;\nvarying vec3 vWorldNormal;\nvarying vec3 vWorldPosition;\nvarying vec2 vTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvoid main() {\n  // Multiply the position by the matrix.\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n  \n  // orient the normals and pass to the fragment shader\n  vWorldNormal = uNormalMatrix * aNormal;\n  \n  // send the view position to the fragment shader\n  vWorldPosition = (uModelViewMatrix * vec4(aPosition, 1.0)).xyz;\n  \n  localPos = vWorldPosition;\n  vTexCoord = aTexCoord;\n}\n\n\n/*\nin the vertex shader we'll compute the world position and world oriented normal of the vertices and pass those to the fragment shader as varyings.\n*/\n", imageLightDiffusedFrag: "precision highp float;\nvarying vec3 localPos;\n\n// the HDR cubemap converted (can be from an equirectangular environment map.)\nuniform sampler2D environmentMap;\nvarying vec2 vTexCoord;\n\nconst float PI = 3.14159265359;\n\nvec2 nTOE( vec3 v ){\n  // x = r sin(phi) cos(theta)   \n  // y = r cos(phi)  \n  // z = r sin(phi) sin(theta)\n  float phi = acos( v.y );\n  // if phi is 0, then there are no x, z components\n  float theta = 0.0;\n  // else \n  theta = acos(v.x / sin(phi));\n  float sinTheta = v.z / sin(phi);\n  if (sinTheta < 0.0) {\n    // Turn it into -theta, but in the 0-2PI range\n    theta = 2.0 * PI - theta;\n  }\n  theta = theta / (2.0 * 3.14159);\n  phi = phi / 3.14159 ;\n  \n  vec2 angles = vec2( phi, theta );\n  return angles;\n}\n\nvoid main()\n{   \t \n\t// the sample direction equals the hemisphere's orientation\n  float phi = vTexCoord.x * 2.0 * PI;\n  float theta = vTexCoord.y * PI;\n  float x = sin(theta) * cos(phi);\n  float y = sin(theta) * sin(phi);\n  float z = cos(theta);\n  vec3 normal = vec3( x, y, z);\n\n\t// Discretely sampling the hemisphere given the integral's\n  // spherical coordinates translates to the following fragment code:\n\tvec3 irradiance = vec3(0.0);  \n\tvec3 up\t= vec3(0.0, 1.0, 0.0);\n\tvec3 right = normalize(cross(up, normal));\n\tup = normalize(cross(normal, right));\n\n\t//  We specify a fixed sampleDelta delta value to traverse\n  // the hemisphere; decreasing or increasing the sample delta\n  // will increase or decrease the accuracy respectively.\n\tconst float sampleDelta = 0.025;\n\tfloat nrSamples = 0.0;\n  \n\tfor(float phi = 0.0; phi < 2.0 * PI; phi += sampleDelta)\n\t{\n    for(float theta = 0.0; theta < ( 0.5 ) * PI; theta += sampleDelta)\n    {\n      // spherical to cartesian (in tangent space) // tangent space to world // add each sample result to irradiance\n      float x = sin(theta) * cos(phi);\n      float y = sin(theta) * sin(phi);\n      float z = cos(theta);\n      vec3 tangentSample = vec3( x, y, z);\n      \n      vec3 sampleVec = tangentSample.x * right + tangentSample.y * up + tangentSample.z * normal;\n        irradiance += (texture2D(environmentMap, nTOE(sampleVec)).xyz) * cos(theta) * sin(theta);\n      nrSamples++;\n    }\n\t}\n\t// divide by the total number of samples taken, giving us the average sampled irradiance.\n\tirradiance = PI * irradiance * (1.0 / float(nrSamples )) ;\n  \n \n\tgl_FragColor = vec4(irradiance, 1.0);\n}", imageLightSpecularFrag: "precision highp float;\r\nvarying vec3 localPos;\r\nvarying vec2 vTexCoord;\r\n\r\n// our texture\r\nuniform sampler2D environmentMap;\r\nuniform float roughness;\r\n\r\nconst float PI = 3.14159265359;\r\n\r\nfloat VanDerCorput(int bits);\r\nvec2 HammersleyNoBitOps(int i, int N);\r\nvec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness);\r\n\r\n\r\nvec2 nTOE( vec3 v ){\r\n  // x = r sin(phi) cos(theta)   \r\n  // y = r cos(phi)  \r\n  // z = r sin(phi) sin(theta)\r\n  float phi = acos( v.y );\r\n  // if phi is 0, then there are no x, z components\r\n  float theta = 0.0;\r\n  // else \r\n  theta = acos(v.x / sin(phi));\r\n  float sinTheta = v.z / sin(phi);\r\n  if (sinTheta < 0.0) {\r\n    // Turn it into -theta, but in the 0-2PI range\r\n    theta = 2.0 * PI - theta;\r\n  }\r\n  theta = theta / (2.0 * 3.14159);\r\n  phi = phi / 3.14159 ;\r\n  \r\n  vec2 angles = vec2( phi, theta );\r\n  return angles;\r\n}\r\n\r\n\r\nvoid main(){\r\n  const int SAMPLE_COUNT = 1024; // 4096\r\n  float totalWeight = 0.0;\r\n  vec3 prefilteredColor = vec3(0.0);\r\n  float phi = vTexCoord.x * 2.0 * PI;\r\n  float theta = vTexCoord.y * PI;\r\n  float x = sin(theta) * cos(phi);\r\n  float y = sin(theta) * sin(phi);\r\n  float z = cos(theta);\r\n  vec3 N = vec3(x,y,z);\r\n  vec3 V = N;\r\n  for (int i = 0; i < SAMPLE_COUNT; ++i)\r\n  {\r\n    vec2 Xi = HammersleyNoBitOps(i, SAMPLE_COUNT);\r\n    vec3 H = ImportanceSampleGGX(Xi, N, roughness);\r\n    vec3 L = normalize(2.0 * dot(V, H) * H - V);\r\n\r\n    float NdotL = max(dot(N, L), 0.0);\r\n    if (NdotL > 0.0)\r\n    {\r\n      prefilteredColor += texture2D(environmentMap, nTOE(L)).xyz * NdotL;\r\n      totalWeight += NdotL;\r\n    }\r\n  }\r\n  prefilteredColor = prefilteredColor / totalWeight;\r\n\r\n  gl_FragColor = vec4(prefilteredColor, 1.0);\r\n}\r\n\r\nvec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness){\r\n  float a = roughness * roughness;\r\n\r\n  float phi = 2.0 * PI * Xi.x;\r\n  float cosTheta = sqrt((1.0 - Xi.y) / (1.0 + (a * a - 1.0) * Xi.y));\r\n  float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\r\n  // from spherical coordinates to cartesian coordinates\r\n  vec3 H;\r\n  H.x = cos(phi) * sinTheta;\r\n  H.y = sin(phi) * sinTheta;\r\n  H.z = cosTheta;\r\n\r\n  // from tangent-space vector to world-space sample vector\r\n  vec3 up = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\r\n  vec3 tangent = normalize(cross(up, N));\r\n  vec3 bitangent = cross(N, tangent);\r\n\r\n  vec3 sampleVec = tangent * H.x + bitangent * H.y + N * H.z;\r\n  return normalize(sampleVec);\r\n}\r\n\r\n\r\nfloat VanDerCorput(int n, int base)\r\n{\r\n  float invBase = 1.0 / float(base);\r\n  float denom = 1.0;\r\n  float result = 0.0;\r\n\r\n  for (int i = 0; i < 32; ++i)\r\n  {\r\n\tif (n > 0)\r\n\t{\r\n  \tdenom = mod(float(n), 2.0);\r\n  \tresult += denom * invBase;\r\n  \tinvBase = invBase / 2.0;\r\n  \tn = int(float(n) / 2.0);\r\n\t}\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nvec2 HammersleyNoBitOps(int i, int N)\r\n{\r\n  return vec2(float(i) / float(N), VanDerCorput(i, 2));\r\n}\r\n" };
      for (x in M)
        M[x] = "#ifdef WEBGL2\n\n#define IN in\n#define OUT out\n\n#ifdef FRAGMENT_SHADER\nout vec4 outColor;\n#define OUT_COLOR outColor\n#endif\n#define TEXTURE texture\n\n#else\n\n#ifdef FRAGMENT_SHADER\n#define IN varying\n#else\n#define IN attribute\n#endif\n#define OUT varying\n#define TEXTURE texture2D\n\n#ifdef FRAGMENT_SHADER\n#define OUT_COLOR gl_FragColor\n#endif\n\n#endif\n" + M[x];
      j(e2 = {}, l.GRAY, "precision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  return dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid main() {\n  vec4 tex = texture2D(tex0, vTexCoord);\n  float gray = luma(tex.rgb);\n  gl_FragColor = vec4(gray, gray, gray, tex.a);\n}\n"), j(e2, l.ERODE, "// Reduces the bright areas in an image\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform vec2 texelSize;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  // weights 77, 151, 28 taken from src/image/filters.js\n  return dot(color, vec3(0.300781, 0.589844, 0.109375));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float lum = luma(color.rgb);\n\n  // set current color as the darkest neighbor color\n\n  vec4 neighbors[4];\n  neighbors[0] = texture2D(tex0, vTexCoord + vec2( texelSize.x, 0.0));\n  neighbors[1] = texture2D(tex0, vTexCoord + vec2(-texelSize.x, 0.0));\n  neighbors[2] = texture2D(tex0, vTexCoord + vec2(0.0,  texelSize.y));\n  neighbors[3] = texture2D(tex0, vTexCoord + vec2(0.0, -texelSize.y));\n\n  for (int i = 0; i < 4; i++) {\n    vec4 neighborColor = neighbors[i];\n    float neighborLum = luma(neighborColor.rgb);\n\n    if (neighborLum < lum) {\n      color = neighborColor;\n      lum = neighborLum;\n    }\n  }\n\n  gl_FragColor = color;\n}\n"), j(e2, l.DILATE, "// Increase the bright areas in an image\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform vec2 texelSize;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  // weights 77, 151, 28 taken from src/image/filters.js\n  return dot(color, vec3(0.300781, 0.589844, 0.109375));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float lum = luma(color.rgb);\n\n  // set current color as the brightest neighbor color\n\n  vec4 neighbors[4];\n  neighbors[0] = texture2D(tex0, vTexCoord + vec2( texelSize.x, 0.0));\n  neighbors[1] = texture2D(tex0, vTexCoord + vec2(-texelSize.x, 0.0));\n  neighbors[2] = texture2D(tex0, vTexCoord + vec2(0.0,  texelSize.y));\n  neighbors[3] = texture2D(tex0, vTexCoord + vec2(0.0, -texelSize.y));\n\n  for (int i = 0; i < 4; i++) {\n    vec4 neighborColor = neighbors[i];\n    float neighborLum = luma(neighborColor.rgb);\n\n    if (neighborLum > lum) {\n      color = neighborColor;\n      lum = neighborLum;\n    }\n  }\n\n  gl_FragColor = color;\n}\n"), j(e2, l.BLUR, "precision highp float;\n\n// Two-pass blur filter, unweighted kernel.\n// See also a similar blur at Adam Ferriss' repo of shader examples:\n// https://github.com/aferriss/p5jsShaderExamples/blob/gh-pages/4_image-effects/4-9_single-pass-blur/effect.frag\n\n\nuniform sampler2D tex0;\nvarying vec2 vTexCoord;\nuniform vec2 direction;\nuniform vec2 canvasSize;\nuniform float radius;\n\nfloat random(vec2 p) {\n  vec3 p3  = fract(vec3(p.xyx) * .1031);\n  p3 += dot(p3, p3.yzx + 33.33);\n  return fract((p3.x + p3.y) * p3.z);\n}\n\n// This isn't a real Gaussian weight, it's a quadratic weight. It's what the\n// CPU mode's blur uses though, so we also use it here to match.\nfloat quadWeight(float x, float e) {\n  return pow(e-abs(x), 2.);\n}\n\nvoid main(){\n  vec2 uv = vTexCoord;\n\n  // A reasonable maximum number of samples\n  const float maxSamples = 64.0;\n\n  float numSamples = floor(7. * radius);\n  if (fract(numSamples / 2.) == 0.) {\n    numSamples++;\n  }\n  vec4 avg = vec4(0.0);\n  float total = 0.0;\n\n  // Calculate the spacing to avoid skewing if numSamples > maxSamples\n  float spacing = 1.0;\n  if (numSamples > maxSamples) {\n    spacing = numSamples / maxSamples;\n    numSamples = maxSamples;\n  }\n\n  float randomOffset = (spacing - 1.0) * mix(-0.5, 0.5, random(gl_FragCoord.xy));\n  for (float i = 0.0; i < maxSamples; i++) {\n    if (i >= numSamples) break;\n\n    float sample = i * spacing - (numSamples - 1.0) * 0.5 * spacing + randomOffset;\n    vec2 sampleCoord = uv + vec2(sample, sample) / canvasSize * direction;\n    float weight = quadWeight(sample, (numSamples - 1.0) * 0.5 * spacing);\n\n    avg += weight * texture2D(tex0, sampleCoord);\n    total += weight;\n  }\n\n  avg /= total;\n  gl_FragColor = avg;\n}\n"), j(e2, l.POSTERIZE, "// Limit color space for a stylized cartoon / poster effect\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform float filterParameter;\n\nvec3 quantize(vec3 color, float n) {\n  // restrict values to N options/bins\n  // and floor each channel to nearest value\n  //\n  // eg. when N = 5, values = 0.0, 0.25, 0.50, 0.75, 1.0\n  // then quantize (0.1, 0.7, 0.9) -> (0.0, 0.5, 1.0)\n\n  color = color * n;\n  color = floor(color);\n  color = color / (n - 1.0);\n  return color;\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n\n  vec3 restrictedColor = quantize(color.rgb / color.a, filterParameter);\n\n  gl_FragColor = vec4(restrictedColor.rgb * color.a, color.a);\n}\n"), j(e2, l.OPAQUE, "// Set alpha channel to entirely opaque\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  gl_FragColor = vec4(color.rgb / color.a, 1.0);\n}\n"), j(e2, l.INVERT, "// Set each pixel to inverse value\n// Note that original INVERT does not change the opacity, so this follows suit\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nvoid main() {\nvec4 color = texture2D(tex0, vTexCoord);\nvec3 origColor = color.rgb / color.a;\nvec3 invertedColor = vec3(1.0) - origColor;\ngl_FragColor = vec4(invertedColor * color.a, color.a);\n}\n"), j(e2, l.THRESHOLD, "// Convert pixels to either white or black, \n// depending on if their luma is above or below filterParameter\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform float filterParameter;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  return dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float gray = luma(color.rgb / color.a);\n  // floor() used to match src/image/filters.js\n  float threshold = floor(filterParameter * 255.0) / 255.0;\n  float blackOrWhite = step(threshold, gray);\n  gl_FragColor = vec4(vec3(blackOrWhite) * color.a, color.a);\n}\n");
      var E = e2;
      function k(e3, t3, r3, o2, n2, s3, i2, a2, l2, u2) {
        var c2 = t3.getParameter(t3.FRAMEBUFFER_BINDING), r3 = (t3.bindFramebuffer(t3.FRAMEBUFFER, r3), a2 === t3.RGBA ? 4 : 3), d2 = s3 * i2 * r3, h2 = l2 === t3.UNSIGNED_BYTE ? Uint8Array : Float32Array;
        if (e3 instanceof h2 && e3.length === d2 || (e3 = new h2(d2)), t3.readPixels(o2, u2 ? u2 - n2 - i2 : n2, s3, i2, a2, l2, e3), t3.bindFramebuffer(t3.FRAMEBUFFER, c2), u2)
          for (var f2 = Math.floor(i2 / 2), p2 = new h2(s3 * r3), m2 = 0;m2 < f2; m2++) {
            var y2 = m2 * s3 * 4, g2 = (i2 - m2 - 1) * s3 * 4;
            p2.set(e3.subarray(y2, y2 + 4 * s3)), e3.copyWithin(y2, g2, g2 + 4 * s3), e3.set(p2, g2);
          }
        return e3;
      }
      function C(e3, t3, r3, o2, n2, s3, i2) {
        var a2 = e3.getParameter(e3.FRAMEBUFFER_BINDING), t3 = (e3.bindFramebuffer(e3.FRAMEBUFFER, t3), n2 === e3.RGBA ? 4 : 3), t3 = new (s3 === e3.UNSIGNED_BYTE ? Uint8Array : Float32Array)(t3);
        return e3.readPixels(r3, i2 ? i2 - o2 - 1 : o2, 1, 1, n2, s3, t3), e3.bindFramebuffer(e3.FRAMEBUFFER, a2), Array.from(t3);
      }
      g.default.prototype.setAttributes = function(e3, t3) {
        if (this._glAttributes === undefined)
          console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
        else {
          var r3 = true;
          if (t3 !== undefined ? (this._glAttributes === null && (this._glAttributes = {}), this._glAttributes[e3] !== t3 && (this._glAttributes[e3] = t3, r3 = false)) : e3 instanceof Object && this._glAttributes !== e3 && (this._glAttributes = e3, r3 = false), this._renderer.isP3D && !r3) {
            if (!this._setupDone) {
              for (var o2 in this._renderer.retainedMode.geometry)
                if (this._renderer.retainedMode.geometry.hasOwnProperty(o2))
                  return void g.default._friendlyError("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
            }
            this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
          }
        }
      }, g.default.RendererGL = function(e3) {
        var t3 = s3;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && m(t3, e3);
        var r3, n2 = y(s3);
        function s3(e4, t4, r4, o2) {
          if (this instanceof s3)
            return (e4 = n2.call(this, e4, t4, r4))._setAttributeDefaults(t4), e4._initContext(), e4.isP3D = true, e4.geometryBuilder = undefined, e4.GL = e4.drawingContext, e4._pInst._setProperty("drawingContext", e4.drawingContext), e4._isErasing = false, e4._clipDepths = [], e4._isClipApplied = false, e4._stencilTestOn = false, e4._enableLighting = false, e4.ambientLightColors = [], e4.specularColors = [1, 1, 1], e4.directionalLightDirections = [], e4.directionalLightDiffuseColors = [], e4.directionalLightSpecularColors = [], e4.pointLightPositions = [], e4.pointLightDiffuseColors = [], e4.pointLightSpecularColors = [], e4.spotLightPositions = [], e4.spotLightDirections = [], e4.spotLightDiffuseColors = [], e4.spotLightSpecularColors = [], e4.spotLightAngle = [], e4.spotLightConc = [], e4.activeImageLight = null, e4.diffusedTextures = new Map, e4.specularTextures = new Map, e4.drawMode = l.FILL, e4.curFillColor = e4._cachedFillStyle = [1, 1, 1, 1], e4.curAmbientColor = e4._cachedFillStyle = [1, 1, 1, 1], e4.curSpecularColor = e4._cachedFillStyle = [0, 0, 0, 0], e4.curEmissiveColor = e4._cachedFillStyle = [0, 0, 0, 0], e4.curStrokeColor = e4._cachedStrokeStyle = [0, 0, 0, 1], e4.curBlendMode = l.BLEND, e4._cachedBlendMode = undefined, e4.webglVersion === l.WEBGL2 ? e4.blendExt = e4.GL : e4.blendExt = e4.GL.getExtension("EXT_blend_minmax"), e4._isBlending = false, e4._hasSetAmbient = false, e4._useSpecularMaterial = false, e4._useEmissiveMaterial = false, e4._useNormalMaterial = false, e4._useShininess = 1, e4._useLineColor = false, e4._useVertexColor = false, e4.registerEnabled = new Set, e4._tint = [255, 255, 255, 255], e4.constantAttenuation = 1, e4.linearAttenuation = 0, e4.quadraticAttenuation = 0, e4.uMVMatrix = new g.default.Matrix, e4.uPMatrix = new g.default.Matrix, e4.uNMatrix = new g.default.Matrix("mat3"), e4._currentNormal = new g.default.Vector(0, 0, 1), e4._curCamera = new g.default.Camera(v(e4)), e4._curCamera._computeCameraDefaultSettings(), e4._curCamera._setDefaultCamera(), e4.filterCamera = new g.default.Camera(v(e4)), e4.filterCamera._computeCameraDefaultSettings(), e4.filterCamera._setDefaultCamera(), e4.prevTouches = [], e4.zoomVelocity = 0, e4.rotateVelocity = new g.default.Vector(0, 0), e4.moveVelocity = new g.default.Vector(0, 0), e4.executeZoom = false, e4.executeRotateAndMove = false, e4._defaultLightShader = undefined, e4._defaultImmediateModeShader = undefined, e4._defaultNormalShader = undefined, e4._defaultColorShader = undefined, e4._defaultPointShader = undefined, e4.userFillShader = undefined, e4.userStrokeShader = undefined, e4.userPointShader = undefined, e4.retainedMode = { geometry: {}, buffers: { stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", v(e4)), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", v(e4)), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", v(e4)), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", v(e4))], fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", v(e4), e4._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", v(e4)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)], text: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)] } }, e4.immediateMode = { geometry: new g.default.Geometry, shapeMode: l.TRIANGLE_FAN, contourIndices: [], _bezierVertex: [], _quadraticVertex: [], _curveVertex: [], buffers: { fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", v(e4), e4._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", v(e4)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)], stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", v(e4)), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", v(e4)), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", v(e4)), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", v(e4))], point: e4.GL.createBuffer() } }, e4.pointSize = 5, e4.curStrokeWeight = 1, e4.curStrokeCap = l.ROUND, e4.curStrokeJoin = l.ROUND, e4.textures = new Map, e4.framebuffers = new Set, e4.activeFramebuffers = [], e4.filterShader = undefined, e4.filterLayer = undefined, e4.filterLayerTemp = undefined, e4.defaultFilterShaders = {}, e4.textureMode = l.IMAGE, e4.textureWrapX = l.CLAMP, e4.textureWrapY = l.CLAMP, e4._tex = null, e4._curveTightness = 6, e4._lookUpTableBezier = [], e4._lookUpTableQuadratic = [], e4._lutBezierDetail = 0, e4._lutQuadraticDetail = 0, e4.isProcessingVertices = false, e4._tessy = e4._initTessy(), e4.fontInfos = {}, e4._curShader = undefined, e4;
          throw new TypeError("Cannot call a class as a function");
        }
        return t3 = s3, (e3 = [{ key: "beginGeometry", value: function() {
          if (this.geometryBuilder)
            throw new Error("It looks like `beginGeometry()` is being called while another p5.Geometry is already being build.");
          this.geometryBuilder = new a.default(this);
        } }, { key: "endGeometry", value: function() {
          var e4;
          if (this.geometryBuilder)
            return e4 = this.geometryBuilder.finish(), this.geometryBuilder = undefined, e4;
          throw new Error("Make sure you call beginGeometry() before endGeometry()!");
        } }, { key: "buildGeometry", value: function(e4) {
          return this.beginGeometry(), e4(), this.endGeometry();
        } }, { key: "_setAttributeDefaults", value: function(e4) {
          var t4 = { alpha: true, depth: true, stencil: true, antialias: navigator.userAgent.toLowerCase().includes("safari"), premultipliedAlpha: true, preserveDrawingBuffer: true, perPixelLighting: true, version: 2 };
          e4._glAttributes === null ? e4._glAttributes = t4 : e4._glAttributes = Object.assign(t4, e4._glAttributes);
        } }, { key: "_initContext", value: function() {
          if (this._pInst._glAttributes.version !== 1 && (this.drawingContext = this.canvas.getContext("webgl2", this._pInst._glAttributes)), this.webglVersion = this.drawingContext ? l.WEBGL2 : l.WEBGL, this._pInst._setProperty("webglVersion", this.webglVersion), this.drawingContext || (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes)), this.drawingContext === null)
            throw new Error("Error creating webgl context");
          var e4 = this.drawingContext;
          e4.enable(e4.DEPTH_TEST), e4.depthFunc(e4.LEQUAL), e4.viewport(0, 0, e4.drawingBufferWidth, e4.drawingBufferHeight), e4.pixelStorei(e4.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
        } }, { key: "_resetContext", value: function(e4, t4) {
          var r4, o2 = this.width, n3 = this.height, s4 = this.canvas.id, i2 = this._pInst instanceof g.default.Graphics, s4 = (i2 ? ((r4 = this._pInst).canvas.parentNode.removeChild(r4.canvas), r4.canvas = document.createElement("canvas"), (r4._pInst._userNode || document.body).appendChild(r4.canvas), g.default.Element.call(r4, r4.canvas, r4._pInst), r4.width = o2, r4.height = n3) : ((r4 = this.canvas) && r4.parentNode.removeChild(r4), (r4 = document.createElement("canvas")).id = s4, (this._pInst._userNode || document.body).appendChild(r4), this._pInst.canvas = r4, this.canvas = r4), new g.default.RendererGL(this._pInst.canvas, this._pInst, !i2));
          this._pInst._setProperty("_renderer", s4), s4.resize(o2, n3), s4._applyDefaults(), i2 || this._pInst._elements.push(s4), typeof t4 == "function" && setTimeout(function() {
            t4.apply(window._renderer, e4);
          }, 0);
        } }, { key: "_update", value: function() {
          this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.specularColors = [1, 1, 1], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = false, this._tint = [255, 255, 255, 255], this.GL.clearStencil(0), this.GL.clear(this.GL.DEPTH_BUFFER_BIT | this.GL.STENCIL_BUFFER_BIT), this.GL.disable(this.GL.STENCIL_TEST);
        } }, { key: "background", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments), t4 = e4.levels[0] / 255, r4 = e4.levels[1] / 255, o2 = e4.levels[2] / 255, e4 = e4.levels[3] / 255;
          this.clear(t4, r4, o2, e4);
        } }, { key: "fill", value: function(e4, t4, r4, o2) {
          var n3 = g.default.prototype.color.apply(this._pInst, arguments);
          this.curFillColor = n3._array, this.drawMode = l.FILL, this._useNormalMaterial = false, this._tex = null;
        } }, { key: "stroke", value: function(e4, t4, r4, o2) {
          var n3 = g.default.prototype.color.apply(this._pInst, arguments);
          this.curStrokeColor = n3._array;
        } }, { key: "strokeCap", value: function(e4) {
          this.curStrokeCap = e4;
        } }, { key: "strokeJoin", value: function(e4) {
          this.curStrokeJoin = e4;
        } }, { key: "getFilterLayer", value: function() {
          return this.filterLayer || (this.filterLayer = this._pInst.createFramebuffer()), this.filterLayer;
        } }, { key: "getFilterLayerTemp", value: function() {
          return this.filterLayerTemp || (this.filterLayerTemp = this._pInst.createFramebuffer()), this.filterLayerTemp;
        } }, { key: "matchSize", value: function(e4, t4) {
          e4.width === t4.width && e4.height === t4.height || e4.resize(t4.width, t4.height), e4.pixelDensity() !== t4.pixelDensity() && e4.pixelDensity(t4.pixelDensity());
        } }, { key: "filter", value: function() {
          var e4, t4, r4 = this, o2 = this.getFilterLayer(), n3 = undefined, s4 = undefined, i2 = (typeof (arguments.length <= 0 ? undefined : arguments[0]) == "string" ? (s4 = arguments.length <= 0 ? undefined : arguments[0], j(e4 = {}, l.BLUR, 3), j(e4, l.POSTERIZE, 4), j(e4, l.THRESHOLD, 0.5), n3 = (s4 in (e4 = e4)) && (arguments.length <= 1 ? undefined : arguments[1]) === undefined ? e4[s4] : arguments.length <= 1 ? undefined : arguments[1], (s4 in this.defaultFilterShaders) || (this.defaultFilterShaders[s4] = new g.default.Shader(o2._renderer, "uniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nattribute vec3 aPosition;\n// texcoords only come from p5 to vertex shader\n// so pass texcoords on to the fragment shader in a varying variable\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n  // transferring texcoords for the frag shader\n  vTexCoord = aTexCoord;\n\n  // copy position with a fourth coordinate for projection (1.0 is normal)\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n}\n", E[s4])), this.filterShader = this.defaultFilterShaders[s4]) : this.filterShader = arguments.length <= 0 ? undefined : arguments[0], this.activeFramebuffer() || this), a2 = (this.matchSize(o2, i2), i2 !== this && (this.filterCamera = this.getFilterLayer().createCamera()), o2.draw(function() {
            return r4._pInst.clear();
          }), [1 / (i2.width * i2.pixelDensity()), 1 / (i2.height * i2.pixelDensity())]);
          s4 === l.BLUR ? (t4 = this.getFilterLayerTemp(), this.matchSize(t4, i2), this._pInst.push(), this._pInst.noStroke(), this._pInst.shader(this.filterShader), this.filterShader.setUniform("texelSize", a2), this.filterShader.setUniform("canvasSize", [i2.width, i2.height]), this.filterShader.setUniform("radius", Math.max(1, n3)), t4.draw(function() {
            r4.filterShader.setUniform("direction", [1, 0]), r4.filterShader.setUniform("tex0", i2), r4._pInst.clear(), r4._pInst.shader(r4.filterShader), r4._pInst.rect(-i2.width / 2, -i2.height / 2, i2.width, i2.height);
          }), o2.draw(function() {
            r4.filterShader.setUniform("direction", [0, 1]), r4.filterShader.setUniform("tex0", t4), r4._pInst.clear(), r4._pInst.shader(r4.filterShader), r4._pInst.rect(-i2.width / 2, -i2.height / 2, i2.width, i2.height);
          }), this._pInst.pop()) : o2.draw(function() {
            r4._pInst.noStroke(), r4._pInst.shader(r4.filterShader), r4.filterShader.setUniform("tex0", i2), r4.filterShader.setUniform("texelSize", a2), r4.filterShader.setUniform("canvasSize", [i2.width, i2.height]), r4.filterShader.setUniform("filterParameter", n3), r4._pInst.rect(-i2.width / 2, -i2.height / 2, i2.width, i2.height);
          }), this._pInst.push(), this._pInst.noStroke(), this.clear(), this._pInst.push(), this._pInst.imageMode(l.CORNER), this._pInst.blendMode(l.BLEND), this.filterCamera._resize(), this._pInst.setCamera(this.filterCamera), this._pInst.resetMatrix(), this._pInst.image(o2, -this.width / 2, -this.height / 2, this.width, this.height), this._pInst.pop(), this._pInst.pop();
        } }, { key: "pixelDensity", value: function(e4) {
          return e4 ? this._pInst.pixelDensity(e4) : this._pInst.pixelDensity();
        } }, { key: "blendMode", value: function(e4) {
          e4 === l.DARKEST || e4 === l.LIGHTEST || e4 === l.ADD || e4 === l.BLEND || e4 === l.SUBTRACT || e4 === l.SCREEN || e4 === l.EXCLUSION || e4 === l.REPLACE || e4 === l.MULTIPLY || e4 === l.REMOVE ? this.curBlendMode = e4 : e4 !== l.BURN && e4 !== l.OVERLAY && e4 !== l.HARD_LIGHT && e4 !== l.SOFT_LIGHT && e4 !== l.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
        } }, { key: "erase", value: function(e4, t4) {
          this._isErasing || (this._cachedBlendMode = this.curBlendMode, this._isErasing = true, this.blendMode(l.REMOVE), this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [1, 1, 1, e4 / 255], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [1, 1, 1, t4 / 255]);
        } }, { key: "noErase", value: function() {
          var e4;
          this._isErasing && (this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), e4 = this.curBlendMode, this.blendMode(this._cachedBlendMode), this._cachedBlendMode = e4, this._isErasing = false, this._applyBlendMode());
        } }, { key: "drawTarget", value: function() {
          return this.activeFramebuffers[this.activeFramebuffers.length - 1] || this;
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && arguments[0] !== undefined ? arguments[0] : {}, e4 = (p(b(s3.prototype), "beginClip", this).call(this, e4), this.drawTarget()._isClipApplied = true, this.GL);
          e4.clearStencil(0), e4.clear(e4.STENCIL_BUFFER_BIT), e4.enable(e4.STENCIL_TEST), this._stencilTestOn = true, e4.stencilFunc(e4.ALWAYS, 1, 255), e4.stencilOp(e4.KEEP, e4.KEEP, e4.REPLACE), e4.disable(e4.DEPTH_TEST), this._pInst.push(), this._pInst.resetShader(), this._doFill && this._pInst.fill(0, 0), this._doStroke && this._pInst.stroke(0, 0);
        } }, { key: "endClip", value: function() {
          this._pInst.pop();
          var e4 = this.GL;
          e4.stencilOp(e4.KEEP, e4.KEEP, e4.KEEP), e4.stencilFunc(this._clipInvert ? e4.EQUAL : e4.NOTEQUAL, 0, 255), e4.enable(e4.DEPTH_TEST), this._clipDepths.push(this._pushPopDepth), p(b(s3.prototype), "endClip", this).call(this);
        } }, { key: "_clearClip", value: function() {
          this.GL.clearStencil(1), this.GL.clear(this.GL.STENCIL_BUFFER_BIT), 0 < this._clipDepths.length && this._clipDepths.pop(), this.drawTarget()._isClipApplied = false;
        } }, { key: "strokeWeight", value: function(e4) {
          this.curStrokeWeight !== e4 && (this.pointSize = e4, this.curStrokeWeight = e4);
        } }, { key: "_getPixel", value: function(e4, t4) {
          var r4 = this.GL;
          return C(r4, null, e4, t4, r4.RGBA, r4.UNSIGNED_BYTE, this._pInst.height * this._pInst.pixelDensity());
        } }, { key: "loadPixels", value: function() {
          var e4, t4, r4 = this._pixelsState;
          this._pInst._glAttributes.preserveDrawingBuffer !== true ? console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.") : (e4 = this._pInst._pixelDensity, t4 = this.GL, r4._setProperty("pixels", k(r4.pixels, t4, null, 0, 0, this.width * e4, this.height * e4, t4.RGBA, t4.UNSIGNED_BYTE, this.height * e4)));
        } }, { key: "updatePixels", value: function() {
          var e4 = this._getTempFramebuffer();
          e4.pixels = this._pixelsState.pixels, e4.updatePixels(), this._pInst.push(), this._pInst.resetMatrix(), this._pInst.clear(), this._pInst.imageMode(l.CENTER), this._pInst.image(e4, 0, 0), this._pInst.pop(), this.GL.clearDepth(1), this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
        } }, { key: "_getTempFramebuffer", value: function() {
          return this._tempFramebuffer || (this._tempFramebuffer = this._pInst.createFramebuffer({ format: l.UNSIGNED_BYTE, useDepth: this._pInst._glAttributes.depth, depthFormat: l.UNSIGNED_INT, antialias: this._pInst._glAttributes.antialias })), this._tempFramebuffer;
        } }, { key: "geometryInHash", value: function(e4) {
          return this.retainedMode.geometry[e4] !== undefined;
        } }, { key: "viewport", value: function(e4, t4) {
          this._viewport = [0, 0, e4, t4], this.GL.viewport(0, 0, e4, t4);
        } }, { key: "resize", value: function(t4, r4) {
          g.default.Renderer.prototype.resize.call(this, t4, r4), this._origViewport = { width: this.GL.drawingBufferWidth, height: this.GL.drawingBufferHeight }, this.viewport(this._origViewport.width, this._origViewport.height), this._curCamera._resize();
          var t4 = this._pixelsState, e4 = (t4.pixels !== undefined && t4._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4)), true), r4 = false, t4 = undefined;
          try {
            for (var o2, n3 = this.framebuffers[Symbol.iterator]();!(e4 = (o2 = n3.next()).done); e4 = true)
              o2.value._canvasSizeChanged();
          } catch (e5) {
            r4 = true, t4 = e5;
          } finally {
            try {
              e4 || n3.return == null || n3.return();
            } finally {
              if (r4)
                throw t4;
            }
          }
        } }, { key: "clear", value: function() {
          var e4 = (arguments.length <= 0 ? undefined : arguments[0]) || 0, t4 = (arguments.length <= 1 ? undefined : arguments[1]) || 0, r4 = (arguments.length <= 2 ? undefined : arguments[2]) || 0, o2 = (arguments.length <= 3 ? undefined : arguments[3]) || 0, n3 = this.activeFramebuffer();
          n3 && n3.format === l.UNSIGNED_BYTE && !n3.antialias && o2 === 0 && (o2 = 0.0000000001), this.GL.clearColor(e4 * o2, t4 * o2, r4 * o2, o2), this.GL.clearDepth(1), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
        } }, { key: "applyMatrix", value: function(e4, t4, r4, o2, n3, s4) {
          arguments.length === 16 ? g.default.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([e4, t4, 0, 0, r4, o2, 0, 0, 0, 0, 1, 0, n3, s4, 0, 1]);
        } }, { key: "translate", value: function(e4, t4, r4) {
          return e4 instanceof g.default.Vector && (r4 = e4.z, t4 = e4.y, e4 = e4.x), this.uMVMatrix.translate([e4, t4, r4]), this;
        } }, { key: "scale", value: function(e4, t4, r4) {
          return this.uMVMatrix.scale(e4, t4, r4), this;
        } }, { key: "rotate", value: function(e4, t4) {
          return t4 === undefined ? this.rotateZ(e4) : (g.default.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
        } }, { key: "rotateX", value: function(e4) {
          return this.rotate(e4, 1, 0, 0), this;
        } }, { key: "rotateY", value: function(e4) {
          return this.rotate(e4, 0, 1, 0), this;
        } }, { key: "rotateZ", value: function(e4) {
          return this.rotate(e4, 0, 0, 1), this;
        } }, { key: "push", value: function() {
          var e4 = g.default.Renderer.prototype.push.apply(this), t4 = e4.properties;
          return t4.uMVMatrix = this.uMVMatrix.copy(), t4.uPMatrix = this.uPMatrix.copy(), t4._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t4.ambientLightColors = this.ambientLightColors.slice(), t4.specularColors = this.specularColors.slice(), t4.directionalLightDirections = this.directionalLightDirections.slice(), t4.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t4.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t4.pointLightPositions = this.pointLightPositions.slice(), t4.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t4.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t4.spotLightPositions = this.spotLightPositions.slice(), t4.spotLightDirections = this.spotLightDirections.slice(), t4.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t4.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t4.spotLightAngle = this.spotLightAngle.slice(), t4.spotLightConc = this.spotLightConc.slice(), t4.userFillShader = this.userFillShader, t4.userStrokeShader = this.userStrokeShader, t4.userPointShader = this.userPointShader, t4.pointSize = this.pointSize, t4.curStrokeWeight = this.curStrokeWeight, t4.curStrokeColor = this.curStrokeColor, t4.curFillColor = this.curFillColor, t4.curAmbientColor = this.curAmbientColor, t4.curSpecularColor = this.curSpecularColor, t4.curEmissiveColor = this.curEmissiveColor, t4._hasSetAmbient = this._hasSetAmbient, t4._useSpecularMaterial = this._useSpecularMaterial, t4._useEmissiveMaterial = this._useEmissiveMaterial, t4._useShininess = this._useShininess, t4.constantAttenuation = this.constantAttenuation, t4.linearAttenuation = this.linearAttenuation, t4.quadraticAttenuation = this.quadraticAttenuation, t4._enableLighting = this._enableLighting, t4._useNormalMaterial = this._useNormalMaterial, t4._tex = this._tex, t4.drawMode = this.drawMode, t4._currentNormal = this._currentNormal, t4.curBlendMode = this.curBlendMode, t4.activeImageLight = this.activeImageLight, e4;
        } }, { key: "pop", value: function() {
          var e4;
          0 < this._clipDepths.length && this._pushPopDepth === this._clipDepths[this._clipDepths.length - 1] && this._clearClip();
          for (var t4 = arguments.length, r4 = new Array(t4), o2 = 0;o2 < t4; o2++)
            r4[o2] = arguments[o2];
          (e4 = p(b(s3.prototype), "pop", this)).call.apply(e4, [this].concat(r4)), this._applyStencilTestIfClipping();
        } }, { key: "_applyStencilTestIfClipping", value: function() {
          var e4 = this.drawTarget();
          e4._isClipApplied !== this._stencilTestOn && (e4._isClipApplied ? (this.GL.enable(this.GL.STENCIL_TEST), this._stencilTestOn = true) : (this.GL.disable(this.GL.STENCIL_TEST), this._stencilTestOn = false));
        } }, { key: "resetMatrix", value: function() {
          return this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this;
        } }, { key: "_getImmediateStrokeShader", value: function() {
          var e4 = this.userStrokeShader;
          return e4 && e4.isStrokeShader() ? e4 : this._getLineShader();
        } }, { key: "_getRetainedStrokeShader", value: function() {
          return this._getImmediateStrokeShader();
        } }, { key: "_getImmediateFillShader", value: function() {
          var e4 = this.userFillShader;
          if (this._useNormalMaterial && (!e4 || !e4.isNormalShader()))
            return this._getNormalShader();
          if (this._enableLighting) {
            if (!e4 || !e4.isLightShader())
              return this._getLightShader();
          } else if (this._tex) {
            if (!e4 || !e4.isTextureShader())
              return this._getLightShader();
          } else if (!e4)
            return this._getImmediateModeShader();
          return e4;
        } }, { key: "_getRetainedFillShader", value: function() {
          if (this._useNormalMaterial)
            return this._getNormalShader();
          var e4 = this.userFillShader;
          if (this._enableLighting) {
            if (!e4 || !e4.isLightShader())
              return this._getLightShader();
          } else if (this._tex) {
            if (!e4 || !e4.isTextureShader())
              return this._getLightShader();
          } else if (!e4)
            return this._getColorShader();
          return e4;
        } }, { key: "_getImmediatePointShader", value: function() {
          var e4 = this.userPointShader;
          return e4 && e4.isPointShader() ? e4 : this._getPointShader();
        } }, { key: "_getRetainedLineShader", value: function() {
          return this._getImmediateLineShader();
        } }, { key: "_getLightShader", value: function() {
          return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "highp") + M.phongVert, this._webGL2CompatibilityPrefix("frag", "highp") + M.phongFrag) : this._defaultLightShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "highp") + M.lightVert, this._webGL2CompatibilityPrefix("frag", "highp") + M.lightTextureFrag)), this._defaultLightShader;
        } }, { key: "_getImmediateModeShader", value: function() {
          return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.immediateVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.vertexColorFrag)), this._defaultImmediateModeShader;
        } }, { key: "_getNormalShader", value: function() {
          return this._defaultNormalShader || (this._defaultNormalShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.normalVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.normalFrag)), this._defaultNormalShader;
        } }, { key: "_getColorShader", value: function() {
          return this._defaultColorShader || (this._defaultColorShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.normalVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.basicFrag)), this._defaultColorShader;
        } }, { key: "_getPointShader", value: function() {
          return this._defaultPointShader || (this._defaultPointShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.pointVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.pointFrag)), this._defaultPointShader;
        } }, { key: "_getLineShader", value: function() {
          return this._defaultLineShader || (this._defaultLineShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.lineVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.lineFrag)), this._defaultLineShader;
        } }, { key: "_getFontShader", value: function() {
          return this._defaultFontShader || (this.webglVersion === l.WEBGL && this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + M.fontVert, this._webGL2CompatibilityPrefix("frag", "mediump") + M.fontFrag)), this._defaultFontShader;
        } }, { key: "_webGL2CompatibilityPrefix", value: function(e4, t4) {
          var r4 = "";
          return this.webglVersion === l.WEBGL2 && (r4 += "#version 300 es\n#define WEBGL2\n"), e4 === "vert" ? r4 += "#define VERTEX_SHADER\n" : e4 === "frag" && (r4 += "#define FRAGMENT_SHADER\n"), t4 && (r4 += "precision ".concat(t4, " float;\n")), r4;
        } }, { key: "_getEmptyTexture", value: function() {
          var e4;
          return this._emptyTexture || ((e4 = new g.default.Image(1, 1)).set(0, 0, 255), this._emptyTexture = new g.default.Texture(this, e4)), this._emptyTexture;
        } }, { key: "getTexture", value: function(e4) {
          e4 instanceof g.default.Framebuffer && (e4 = e4.color);
          var t4 = this.textures.get(e4);
          return t4 || (t4 = new g.default.Texture(this, e4), this.textures.set(e4, t4), t4);
        } }, { key: "getDiffusedTexture", value: function(e4) {
          var t4, r4;
          return this.diffusedTextures.get(e4) != null ? this.diffusedTextures.get(e4) : (0, t4 = Math.floor(e4.height / e4.width * 200), r4 = (t4 = this._pInst.createGraphics(200, t4, l.WEBGL)).createShader(M.imageLightVert, M.imageLightDiffusedFrag), t4.shader(r4), r4.setUniform("environmentMap", e4), t4.noStroke(), t4.rectMode(t4.CENTER), t4.rect(0, 0, t4.width, t4.height), this.diffusedTextures.set(e4, t4), t4);
        } }, { key: "getSpecularTexture", value: function(e4) {
          if (this.specularTextures.get(e4) != null)
            return this.specularTextures.get(e4);
          var t4, r4 = [], o2 = this._pInst.createGraphics(512, 512, l.WEBGL), n3 = Math.log(512) / Math.log(2);
          o2.pixelDensity(1);
          for (var s4 = 512;1 <= s4; s4 /= 2) {
            o2.resizeCanvas(s4, s4);
            var i2 = 1 - Math.log(s4) / Math.log(2) / n3, a2 = o2.createShader(M.imageLightVert, M.imageLightSpecularFrag);
            o2.shader(a2), o2.clear(), a2.setUniform("environmentMap", e4), a2.setUniform("roughness", i2), o2.noStroke(), o2.plane(s4, s4), r4.push(o2.get().drawingContext.getImageData(0, 0, s4, s4));
          }
          return o2.remove(), t4 = new c.MipmapTexture(this, r4, {}), this.specularTextures.set(e4, t4), t4;
        } }, { key: "activeFramebuffer", value: function() {
          return this.activeFramebuffers[this.activeFramebuffers.length - 1] || null;
        } }, { key: "createFramebuffer", value: function(e4) {
          return new g.default.Framebuffer(this, e4);
        } }, { key: "_setStrokeUniforms", value: function(e4) {
          e4.bindShader(), e4.setUniform("uUseLineColor", this._useLineColor), e4.setUniform("uMaterialColor", this.curStrokeColor), e4.setUniform("uStrokeWeight", this.curStrokeWeight), e4.setUniform("uStrokeCap", w[this.curStrokeCap]), e4.setUniform("uStrokeJoin", S[this.curStrokeJoin]);
        } }, { key: "_setFillUniforms", value: function(e4) {
          e4.bindShader(), e4.setUniform("uUseVertexColor", this._useVertexColor), e4.setUniform("uMaterialColor", this.curFillColor), e4.setUniform("isTexture", !!this._tex), this._tex && e4.setUniform("uSampler", this._tex), e4.setUniform("uTint", this._tint), e4.setUniform("uHasSetAmbient", this._hasSetAmbient), e4.setUniform("uAmbientMatColor", this.curAmbientColor), e4.setUniform("uSpecularMatColor", this.curSpecularColor), e4.setUniform("uEmissiveMatColor", this.curEmissiveColor), e4.setUniform("uSpecular", this._useSpecularMaterial), e4.setUniform("uEmissive", this._useEmissiveMaterial), e4.setUniform("uShininess", this._useShininess), this._setImageLightUniforms(e4), e4.setUniform("uUseLighting", this._enableLighting);
          var t4 = this.pointLightDiffuseColors.length / 3, t4 = (e4.setUniform("uPointLightCount", t4), e4.setUniform("uPointLightLocation", this.pointLightPositions), e4.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e4.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors), this.directionalLightDiffuseColors.length / 3), t4 = (e4.setUniform("uDirectionalLightCount", t4), e4.setUniform("uLightingDirection", this.directionalLightDirections), e4.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e4.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors), this.ambientLightColors.length / 3), t4 = (e4.setUniform("uAmbientLightCount", t4), e4.setUniform("uAmbientColor", this.ambientLightColors), this.spotLightDiffuseColors.length / 3);
          e4.setUniform("uSpotLightCount", t4), e4.setUniform("uSpotLightAngle", this.spotLightAngle), e4.setUniform("uSpotLightConc", this.spotLightConc), e4.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e4.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e4.setUniform("uSpotLightLocation", this.spotLightPositions), e4.setUniform("uSpotLightDirection", this.spotLightDirections), e4.setUniform("uConstantAttenuation", this.constantAttenuation), e4.setUniform("uLinearAttenuation", this.linearAttenuation), e4.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e4.bindTextures();
        } }, { key: "_setImageLightUniforms", value: function(e4) {
          var t4, r4;
          e4.setUniform("uUseImageLight", this.activeImageLight != null), this.activeImageLight && (t4 = this.getDiffusedTexture(this.activeImageLight), e4.setUniform("environmentMapDiffused", t4), t4 = this.getSpecularTexture(this.activeImageLight), r4 = 20 / this._useShininess, e4.setUniform("levelOfDetail", 8 * r4), e4.setUniform("environmentMapSpecular", t4));
        } }, { key: "_setPointUniforms", value: function(e4) {
          e4.bindShader(), e4.setUniform("uMaterialColor", this.curStrokeColor), e4.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
        } }, { key: "_bindBuffer", value: function(e4, t4, r4, o2, n3) {
          t4 = t4 || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t4, e4), r4 !== undefined && ((e4 = r4) instanceof g.default.DataArray ? e4 = r4.dataArray() : e4 instanceof (o2 || Float32Array) || (e4 = new (o2 || Float32Array)(e4)), this.GL.bufferData(t4, e4, n3 || this.GL.STATIC_DRAW));
        } }, { key: "_arraysEqual", value: function(e4, r4) {
          return e4.length === r4.length && e4.every(function(e5, t4) {
            return e5 === r4[t4];
          });
        } }, { key: "_isTypedArray", value: function(t4) {
          return [Float32Array, Float64Array, Int16Array, Uint16Array, Uint32Array].some(function(e4) {
            return t4 instanceof e4;
          });
        } }, { key: "_flatten", value: function(e4) {
          if (e4.length === 0)
            return [];
          var t4;
          if (20000 < e4.length) {
            for (var r4 = [], o2 = e4.slice(), n3 = o2.pop();Array.isArray(n3) ? o2.push.apply(o2, h(n3)) : r4.push(n3), o2.length && (n3 = o2.pop()) !== undefined; )
              ;
            return r4.reverse(), r4;
          }
          return (t4 = []).concat.apply(t4, h(e4));
        } }, { key: "_vToNArray", value: function(e4) {
          var t4 = [], r4 = true, o2 = false, n3 = undefined;
          try {
            for (var s4, i2 = e4[Symbol.iterator]();!(r4 = (s4 = i2.next()).done); r4 = true) {
              var a2 = s4.value;
              t4.push(a2.x, a2.y, a2.z);
            }
          } catch (e5) {
            o2 = true, n3 = e5;
          } finally {
            try {
              r4 || i2.return == null || i2.return();
            } finally {
              if (o2)
                throw n3;
            }
          }
          return t4;
        } }, { key: "_bezierCoefficients", value: function(e4) {
          var t4 = e4 * e4, r4 = 1 - e4, o2 = r4 * r4;
          return [o2 * r4, 3 * o2 * e4, 3 * r4 * t4, t4 * e4];
        } }, { key: "_quadraticCoefficients", value: function(e4) {
          var t4 = 1 - e4;
          return [t4 * t4, 2 * t4 * e4, e4 * e4];
        } }, { key: "_bezierToCatmull", value: function(e4) {
          return [e4[1], e4[1] + (e4[2] - e4[0]) / this._curveTightness, e4[2] - (e4[3] - e4[1]) / this._curveTightness, e4[2]];
        } }, { key: "_initTessy", value: function() {
          var e4 = new u.default.GluTesselator;
          return e4.gluTessCallback(u.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e5, t4) {
            for (var r4 = 0;r4 < e5.length; r4++)
              t4.push(e5[r4]);
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_BEGIN, function(e5) {
            e5 !== u.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e5));
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_ERROR, function(e5) {
            console.log("error callback"), console.log("error number: ".concat(e5));
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_COMBINE, function(e5, t4, r4) {
            for (var o2 = new Array(g.default.RendererGL.prototype.tessyVertexSize).fill(0), n3 = 0;n3 < r4.length; n3++)
              for (var s4 = 0;s4 < o2.length; s4++)
                r4[n3] !== 0 && t4[n3] && (o2[s4] += t4[n3][s4] * r4[n3]);
            return o2;
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e5) {
          }), e4.gluTessProperty(u.default.gluEnum.GLU_TESS_WINDING_RULE, u.default.windingRule.GLU_TESS_WINDING_NONZERO), e4;
        } }, { key: "_triangulate", value: function(e4) {
          var t4 = e4[0] ? e4[0][2] : undefined, r4 = true, o2 = true, n3 = false, s4 = undefined;
          try {
            for (var i2, a2 = e4[Symbol.iterator]();!(o2 = (i2 = a2.next()).done); o2 = true)
              for (var l2 = i2.value, u2 = 0;u2 < l2.length; u2 += g.default.RendererGL.prototype.tessyVertexSize)
                if (l2[u2 + 2] !== t4) {
                  r4 = false;
                  break;
                }
          } catch (e5) {
            n3 = true, s4 = e5;
          } finally {
            try {
              o2 || a2.return == null || a2.return();
            } finally {
              if (n3)
                throw s4;
            }
          }
          r4 ? this._tessy.gluTessNormal(0, 0, 1) : this._tessy.gluTessNormal(0, 0, 0);
          var n3 = [], c2 = (this._tessy.gluTessBeginPolygon(n3), true), s4 = false, d2 = undefined;
          try {
            for (var h2, f2 = e4[Symbol.iterator]();!(c2 = (h2 = f2.next()).done); c2 = true) {
              var p2 = h2.value;
              this._tessy.gluTessBeginContour();
              for (var m2 = 0;m2 < p2.length; m2 += g.default.RendererGL.prototype.tessyVertexSize) {
                var y2 = p2.slice(m2, m2 + g.default.RendererGL.prototype.tessyVertexSize);
                this._tessy.gluTessVertex(y2, y2);
              }
              this._tessy.gluTessEndContour();
            }
          } catch (e5) {
            s4 = true, d2 = e5;
          } finally {
            try {
              c2 || f2.return == null || f2.return();
            } finally {
              if (s4)
                throw d2;
            }
          }
          return this._tessy.gluTessEndPolygon(), n3;
        } }]) && f(t3.prototype, e3), r3 && f(t3, r3), s3;
      }(g.default.Renderer), g.default.prototype._assert3d = function(e3) {
        if (!this._renderer.isP3D)
          throw new Error("".concat(e3, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
      }, g.default.RendererGL.prototype.tessyVertexSize = 12;
      e2 = g.default.RendererGL;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/main": 275, "../core/p5.Renderer": 278, "./GeometryBuilder": 319, "./p5.Camera": 324, "./p5.Framebuffer": 326, "./p5.Matrix": 328, "./p5.Shader": 333, "./p5.Texture": 334, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.copy-within": 152, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 158, "core-js/modules/es.array.includes": 159, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.some": 166, "core-js/modules/es.map": 169, "core-js/modules/es.object.assign": 176, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.reflect.get": 185, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.set": 189, "core-js/modules/es.string.includes": 191, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.float32-array": 211, "core-js/modules/es.typed-array.float64-array": 212, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.int16-array": 216, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint16-array": 232, "core-js/modules/es.typed-array.uint32-array": 233, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238, libtess: 247, path: 250 }], 333: [function(e2, t2, r2) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r2, "__esModule", { value: true }), r2.default = undefined;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o = t3[r3];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      s2.default.Shader = function() {
        function o(e4, t4, r4) {
          if (!(this instanceof o))
            throw new TypeError("Cannot call a class as a function");
          this._renderer = e4, this._vertSrc = t4, this._fragSrc = r4, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = false, this.attributes = {}, this._loadedUniforms = false, this.uniforms = {}, this._bound = false, this.samplers = [];
        }
        var e3, t3, r3;
        return e3 = o, (t3 = [{ key: "init", value: function() {
          if (this._glProgram === 0) {
            var e4 = this._renderer.GL;
            if (this._vertShader = e4.createShader(e4.VERTEX_SHADER), e4.shaderSource(this._vertShader, this._vertSrc), e4.compileShader(this._vertShader), !e4.getShaderParameter(this._vertShader, e4.COMPILE_STATUS))
              return s2.default._friendlyError("Yikes! An error occurred compiling the vertex shader:".concat(e4.getShaderInfoLog(this._vertShader))), null;
            if (this._fragShader = e4.createShader(e4.FRAGMENT_SHADER), e4.shaderSource(this._fragShader, this._fragSrc), e4.compileShader(this._fragShader), !e4.getShaderParameter(this._fragShader, e4.COMPILE_STATUS))
              return s2.default._friendlyError("Darn! An error occurred compiling the fragment shader:".concat(e4.getShaderInfoLog(this._fragShader))), null;
            this._glProgram = e4.createProgram(), e4.attachShader(this._glProgram, this._vertShader), e4.attachShader(this._glProgram, this._fragShader), e4.linkProgram(this._glProgram), e4.getProgramParameter(this._glProgram, e4.LINK_STATUS) || s2.default._friendlyError("Snap! Error linking shader program: ".concat(e4.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
          }
          return this;
        } }, { key: "copyToContext", value: function(e4) {
          var t4 = new s2.default.Shader(e4._renderer, this._vertSrc, this._fragSrc);
          return t4.ensureCompiledOnContext(e4), t4;
        } }, { key: "ensureCompiledOnContext", value: function(e4) {
          if (this._glProgram !== 0 && this._renderer !== e4._renderer)
            throw new Error("The shader being run is attached to a different context. Do you need to copy it to this context first with .copyToContext()?");
          this._glProgram === 0 && (this._renderer = e4._renderer, this.init());
        } }, { key: "_loadAttributes", value: function() {
          if (!this._loadedAttributes) {
            this.attributes = {};
            for (var e4 = this._renderer.GL, t4 = e4.getProgramParameter(this._glProgram, e4.ACTIVE_ATTRIBUTES), r4 = 0;r4 < t4; ++r4) {
              var o2 = e4.getActiveAttrib(this._glProgram, r4), n2 = o2.name, s3 = e4.getAttribLocation(this._glProgram, n2), i = {};
              i.name = n2, i.location = s3, i.index = r4, i.type = o2.type, i.size = o2.size, this.attributes[n2] = i;
            }
            this._loadedAttributes = true;
          }
        } }, { key: "_loadUniforms", value: function() {
          if (!this._loadedUniforms) {
            for (var e4 = this._renderer.GL, t4 = e4.getProgramParameter(this._glProgram, e4.ACTIVE_UNIFORMS), r4 = 0, o2 = 0;o2 < t4; ++o2) {
              var n2 = e4.getActiveUniform(this._glProgram, o2), s3 = {}, i = (s3.location = e4.getUniformLocation(this._glProgram, n2.name), s3.size = n2.size, n2.name);
              1 < n2.size && (i = i.substring(0, i.indexOf("[0]"))), s3.name = i, s3.type = n2.type, s3._cachedData = undefined, s3.type === e4.SAMPLER_2D && (s3.samplerIndex = r4, r4++, this.samplers.push(s3)), s3.isArray = 1 < n2.size || s3.type === e4.FLOAT_MAT3 || s3.type === e4.FLOAT_MAT4 || s3.type === e4.FLOAT_VEC2 || s3.type === e4.FLOAT_VEC3 || s3.type === e4.FLOAT_VEC4 || s3.type === e4.INT_VEC2 || s3.type === e4.INT_VEC4 || s3.type === e4.INT_VEC3, this.uniforms[i] = s3;
            }
            this._loadedUniforms = true;
          }
        } }, { key: "compile", value: function() {
        } }, { key: "bindShader", value: function() {
          this.init(), this._bound || (this.useProgram(), this._bound = true, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
        } }, { key: "unbindShader", value: function() {
          return this._bound && (this.unbindTextures(), this._bound = false), this;
        } }, { key: "bindTextures", value: function() {
          var e4 = this._renderer.GL, t4 = true, r4 = false, o2 = undefined;
          try {
            for (var n2, s3 = this.samplers[Symbol.iterator]();!(t4 = (n2 = s3.next()).done); t4 = true) {
              var i = n2.value, a = i.texture;
              a === undefined && (a = this._renderer._getEmptyTexture()), e4.activeTexture(e4.TEXTURE0 + i.samplerIndex), a.bindTexture(), a.update(), e4.uniform1i(i.location, i.samplerIndex);
            }
          } catch (e5) {
            r4 = true, o2 = e5;
          } finally {
            try {
              t4 || s3.return == null || s3.return();
            } finally {
              if (r4)
                throw o2;
            }
          }
        } }, { key: "updateTextures", value: function() {
          var e4 = true, t4 = false, r4 = undefined;
          try {
            for (var o2, n2 = this.samplers[Symbol.iterator]();!(e4 = (o2 = n2.next()).done); e4 = true) {
              var s3 = o2.value.texture;
              s3 && s3.update();
            }
          } catch (e5) {
            t4 = true, r4 = e5;
          } finally {
            try {
              e4 || n2.return == null || n2.return();
            } finally {
              if (t4)
                throw r4;
            }
          }
        } }, { key: "unbindTextures", value: function() {
          var e4 = true, t4 = false, r4 = undefined;
          try {
            for (var o2, n2 = this.samplers[Symbol.iterator]();!(e4 = (o2 = n2.next()).done); e4 = true) {
              var s3 = o2.value;
              this.setUniform(s3.name, this._renderer._getEmptyTexture());
            }
          } catch (e5) {
            t4 = true, r4 = e5;
          } finally {
            try {
              e4 || n2.return == null || n2.return();
            } finally {
              if (t4)
                throw r4;
            }
          }
        } }, { key: "_setMatrixUniforms", value: function() {
          var e4 = this._renderer._curCamera.cameraMatrix, t4 = this._renderer.uPMatrix, r4 = this._renderer.uMVMatrix, o2 = r4.copy();
          o2.mult(t4), this.isStrokeShader() && (this._renderer._curCamera.cameraType === "default" ? this.setUniform("uPerspective", 1) : this.setUniform("uPerspective", 0)), this.setUniform("uViewMatrix", e4.mat4), this.setUniform("uProjectionMatrix", t4.mat4), this.setUniform("uModelViewMatrix", r4.mat4), this.setUniform("uModelViewProjectionMatrix", o2.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
        } }, { key: "useProgram", value: function() {
          var e4 = this._renderer.GL;
          return this._renderer._curShader !== this && (e4.useProgram(this._glProgram), this._renderer._curShader = this), this;
        } }, { key: "setUniform", value: function(e4, t4) {
          var r4 = this.uniforms[e4];
          if (r4) {
            var o2 = this._renderer.GL;
            if (r4.isArray) {
              if (r4._cachedData && this._renderer._arraysEqual(r4._cachedData, t4))
                return;
              r4._cachedData = t4.slice(0);
            } else {
              if (r4._cachedData && r4._cachedData === t4)
                return;
              Array.isArray(t4) ? r4._cachedData = t4.slice(0) : r4._cachedData = t4;
            }
            var n2 = r4.location;
            switch (this.useProgram(), r4.type) {
              case o2.BOOL:
                t4 === true ? o2.uniform1i(n2, 1) : o2.uniform1i(n2, 0);
                break;
              case o2.INT:
                1 < r4.size ? t4.length && o2.uniform1iv(n2, t4) : o2.uniform1i(n2, t4);
                break;
              case o2.FLOAT:
                1 < r4.size ? t4.length && o2.uniform1fv(n2, t4) : o2.uniform1f(n2, t4);
                break;
              case o2.FLOAT_MAT3:
                o2.uniformMatrix3fv(n2, false, t4);
                break;
              case o2.FLOAT_MAT4:
                o2.uniformMatrix4fv(n2, false, t4);
                break;
              case o2.FLOAT_VEC2:
                1 < r4.size ? t4.length && o2.uniform2fv(n2, t4) : o2.uniform2f(n2, t4[0], t4[1]);
                break;
              case o2.FLOAT_VEC3:
                1 < r4.size ? t4.length && o2.uniform3fv(n2, t4) : o2.uniform3f(n2, t4[0], t4[1], t4[2]);
                break;
              case o2.FLOAT_VEC4:
                1 < r4.size ? t4.length && o2.uniform4fv(n2, t4) : o2.uniform4f(n2, t4[0], t4[1], t4[2], t4[3]);
                break;
              case o2.INT_VEC2:
                1 < r4.size ? t4.length && o2.uniform2iv(n2, t4) : o2.uniform2i(n2, t4[0], t4[1]);
                break;
              case o2.INT_VEC3:
                1 < r4.size ? t4.length && o2.uniform3iv(n2, t4) : o2.uniform3i(n2, t4[0], t4[1], t4[2]);
                break;
              case o2.INT_VEC4:
                1 < r4.size ? t4.length && o2.uniform4iv(n2, t4) : o2.uniform4i(n2, t4[0], t4[1], t4[2], t4[3]);
                break;
              case o2.SAMPLER_2D:
                o2.activeTexture(o2.TEXTURE0 + r4.samplerIndex), r4.texture = t4 instanceof s2.default.Texture ? t4 : this._renderer.getTexture(t4), o2.uniform1i(n2, r4.samplerIndex), r4.texture.src.gifProperties && r4.texture.src._animateGif(this._renderer._pInst);
            }
            return this;
          }
        } }, { key: "isLightShader", value: function() {
          return this.attributes.aNormal !== undefined || this.uniforms.uUseLighting !== undefined || this.uniforms.uAmbientLightCount !== undefined || this.uniforms.uDirectionalLightCount !== undefined || this.uniforms.uPointLightCount !== undefined || this.uniforms.uAmbientColor !== undefined || this.uniforms.uDirectionalDiffuseColors !== undefined || this.uniforms.uDirectionalSpecularColors !== undefined || this.uniforms.uPointLightLocation !== undefined || this.uniforms.uPointLightDiffuseColors !== undefined || this.uniforms.uPointLightSpecularColors !== undefined || this.uniforms.uLightingDirection !== undefined || this.uniforms.uSpecular !== undefined;
        } }, { key: "isNormalShader", value: function() {
          return this.attributes.aNormal !== undefined;
        } }, { key: "isTextureShader", value: function() {
          return 0 < this.samplers.length;
        } }, { key: "isColorShader", value: function() {
          return this.attributes.aVertexColor !== undefined || this.uniforms.uMaterialColor !== undefined;
        } }, { key: "isTexLightShader", value: function() {
          return this.isLightShader() && this.isTextureShader();
        } }, { key: "isStrokeShader", value: function() {
          return this.uniforms.uStrokeWeight !== undefined;
        } }, { key: "enableAttrib", value: function(e4, t4, r4, o2, n2, s3) {
          var i;
          return e4 && (e4 = e4.location) !== -1 && (i = this._renderer.GL, this._renderer.registerEnabled.has(e4) || (i.enableVertexAttribArray(e4), this._renderer.registerEnabled.add(e4)), this._renderer.GL.vertexAttribPointer(e4, t4, r4 || i.FLOAT, o2 || false, n2 || 0, s3 || 0)), this;
        } }, { key: "disableRemainingAttributes", value: function() {
          var r4 = this, e4 = true, t4 = false, o2 = undefined;
          try {
            for (var n2, s3 = this._renderer.registerEnabled.values()[Symbol.iterator]();!(e4 = (n2 = s3.next()).done); e4 = true)
              (function() {
                var t5 = n2.value;
                Object.keys(r4.attributes).some(function(e5) {
                  return r4.attributes[e5].location === t5;
                }) || (r4._renderer.GL.disableVertexAttribArray(t5), r4._renderer.registerEnabled.delete(t5));
              })();
          } catch (e5) {
            t4 = true, o2 = e5;
          } finally {
            try {
              e4 || s3.return == null || s3.return();
            } finally {
              if (t4)
                throw o2;
            }
          }
        } }]) && n(e3.prototype, t3), r3 && n(e3, r3), o;
      }();
      e2 = s2.default.Shader;
      r2.default = e2;
    }, { "../core/main": 275, "core-js/modules/es.array.index-of": 160, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.array.slice": 165, "core-js/modules/es.array.some": 166, "core-js/modules/es.function.name": 168, "core-js/modules/es.object.keys": 181, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/web.dom-collections.iterator": 238 }], 334: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r2, "__esModule", { value: true }), r2.checkWebGLCapabilities = m, r2.default = r2.MipmapTexture = undefined;
      var s2 = (p = e2("../core/main")) && p.__esModule ? p : { default: p }, a = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = l();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, l = function() {
          return e3;
        }, e3);
      }
      function u(e3, t3) {
        return (u = Object.setPrototypeOf || function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function c(r3) {
        return function() {
          var e3, t3 = n(r3), t3 = (e3 = function() {
            if (typeof Reflect != "undefined" && Reflect.construct && !Reflect.construct.sham) {
              if (typeof Proxy == "function")
                return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = n(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments), this);
          if (!e3 || i(e3) !== "object" && typeof e3 != "function") {
            if (t3 !== undefined)
              return t3;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function n(e3) {
        return (n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function d(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function h(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function f(e3, t3, r3) {
        t3 && h(e3.prototype, t3), r3 && h(e3, r3);
      }
      s2.default.Texture = function() {
        function n2(e3, t3, r3) {
          d(this, n2), this._renderer = e3;
          var o2 = this._renderer.GL, r3 = (r3 = r3 || {}, this.src = t3, this.glTex = undefined, this.glTarget = o2.TEXTURE_2D, this.glFormat = r3.format || o2.RGBA, this.mipmaps = false, this.glMinFilter = r3.minFilter || o2.LINEAR, this.glMagFilter = r3.magFilter || o2.LINEAR, this.glWrapS = r3.wrapS || o2.CLAMP_TO_EDGE, this.glWrapT = r3.wrapT || o2.CLAMP_TO_EDGE, this.glDataType = r3.dataType || o2.UNSIGNED_BYTE, m(e3)), e3 = (this.glFormat !== o2.HALF_FLOAT || r3.halfFloat || (console.log("This device does not support dataType HALF_FLOAT. Falling back to FLOAT."), this.glDataType = o2.FLOAT), this.glFormat !== o2.HALF_FLOAT || this.glMinFilter !== o2.LINEAR && this.glMagFilter !== o2.LINEAR || r3.halfFloatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o2.LINEAR && (this.glMinFilter = o2.NEAREST), this.glMagFilter === o2.LINEAR && (this.glMagFilter = o2.NEAREST)), this.glFormat !== o2.FLOAT || r3.float || (console.log("This device does not support dataType FLOAT. Falling back to UNSIGNED_BYTE."), this.glDataType = o2.UNSIGNED_BYTE), this.glFormat !== o2.FLOAT || this.glMinFilter !== o2.LINEAR && this.glMagFilter !== o2.LINEAR || r3.floatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o2.LINEAR && (this.glMinFilter = o2.NEAREST), this.glMagFilter === o2.LINEAR && (this.glMagFilter = o2.NEAREST)), this.isSrcMediaElement = s2.default.MediaElement !== undefined && t3 instanceof s2.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = s2.default.Element !== undefined && t3 instanceof s2.default.Element && !(t3 instanceof s2.default.Graphics) && !(t3 instanceof s2.default.Renderer), this.isSrcP5Image = t3 instanceof s2.default.Image, this.isSrcP5Graphics = t3 instanceof s2.default.Graphics, this.isSrcP5Renderer = t3 instanceof s2.default.Renderer, this.isImageData = typeof ImageData != "undefined" && t3 instanceof ImageData, this.isFramebufferTexture = t3 instanceof s2.default.FramebufferTexture, this._getTextureDataFromSource());
          return this.width = e3.width, this.height = e3.height, this.init(e3), this;
        }
        return f(n2, [{ key: "_getTextureDataFromSource", value: function() {
          var e3;
          return this.isFramebufferTexture ? e3 = this.src.rawTexture() : this.isSrcP5Image ? e3 = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcP5Renderer || this.isSrcHTMLElement ? e3 = this.src.elt : this.isImageData && (e3 = this.src), e3;
        } }, { key: "init", value: function(e3) {
          var t3, r3 = this._renderer.GL;
          this.isFramebufferTexture || (this.glTex = r3.createTexture()), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), r3.texParameteri(r3.TEXTURE_2D, r3.TEXTURE_MAG_FILTER, this.glMagFilter), r3.texParameteri(r3.TEXTURE_2D, r3.TEXTURE_MIN_FILTER, this.glMinFilter), this.isFramebufferTexture || (this.width === 0 || this.height === 0 || this.isSrcMediaElement && !this.src.loadedmetadata ? (t3 = new Uint8Array([1, 1, 1, 1]), r3.texImage2D(this.glTarget, 0, r3.RGBA, 1, 1, 0, this.glFormat, this.glDataType, t3)) : r3.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e3));
        } }, { key: "update", value: function() {
          var e3, t3, r3, o2 = this.src;
          return o2.width !== 0 && o2.height !== 0 && (!this.isFramebufferTexture && (e3 = this._getTextureDataFromSource(), t3 = false, r3 = this._renderer.GL, e3.width !== this.width || e3.height !== this.height ? (t3 = true, this.width = e3.width || o2.width, this.height = e3.height || o2.height, this.isSrcP5Image ? o2.setModified(false) : (this.isSrcMediaElement || this.isSrcHTMLElement) && o2.setModified(true)) : this.isSrcP5Image ? o2.isModified() && o2.setModified(!(t3 = true)) : this.isSrcMediaElement ? o2.isModified() ? o2.setModified(!(t3 = true)) : o2.loadedmetadata && this._videoPrevUpdateTime !== o2.time() && (this._videoPrevUpdateTime = o2.time(), t3 = true) : this.isImageData ? o2._dirty && (t3 = !(o2._dirty = false)) : t3 = true, t3 && (this.bindTexture(), r3.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e3)), t3));
        } }, { key: "bindTexture", value: function() {
          return this._renderer.GL.bindTexture(this.glTarget, this.getTexture()), this;
        } }, { key: "unbindTexture", value: function() {
          this._renderer.GL.bindTexture(this.glTarget, null);
        } }, { key: "getTexture", value: function() {
          return this.isFramebufferTexture ? this.src.rawTexture() : this.glTex;
        } }, { key: "setInterpolation", value: function(e3, t3) {
          var r3 = this._renderer.GL;
          this.glMinFilter = this.glFilter(e3), this.glMagFilter = this.glFilter(t3), this.bindTexture(), r3.texParameteri(r3.TEXTURE_2D, r3.TEXTURE_MIN_FILTER, this.glMinFilter), r3.texParameteri(r3.TEXTURE_2D, r3.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
        } }, { key: "glFilter", value: function(e3) {
          var t3 = this._renderer.GL;
          return e3 === a.NEAREST ? t3.NEAREST : t3.LINEAR;
        } }, { key: "setWrapMode", value: function(e3, t3) {
          function r3(e4) {
            return (e4 & e4 - 1) == 0;
          }
          var o2 = this._renderer.GL, n3 = this._getTextureDataFromSource(), n3 = n3.naturalWidth && n3.naturalHeight ? (s3 = n3.naturalWidth, n3.naturalHeight) : (s3 = this.width, this.height), s3 = r3(s3), n3 = r3(n3);
          e3 === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s3 && n3 ? this.glWrapS = o2.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o2.CLAMP_TO_EDGE) : e3 === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s3 && n3 ? this.glWrapS = o2.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o2.CLAMP_TO_EDGE) : this.glWrapS = o2.CLAMP_TO_EDGE, t3 === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s3 && n3 ? this.glWrapT = o2.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o2.CLAMP_TO_EDGE) : t3 === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s3 && n3 ? this.glWrapT = o2.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o2.CLAMP_TO_EDGE) : this.glWrapT = o2.CLAMP_TO_EDGE, this.bindTexture(), o2.texParameteri(o2.TEXTURE_2D, o2.TEXTURE_WRAP_S, this.glWrapS), o2.texParameteri(o2.TEXTURE_2D, o2.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
        } }]), n2;
      }();
      var p = function(e3) {
        var t3 = n2;
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && u(t3, e3);
        var o2 = c(n2);
        function n2(e4, t4, r3) {
          d(this, n2);
          t4 = (e4 = o2.call(this, e4, t4, r3))._renderer.GL;
          return e4.glMinFilter === t4.LINEAR && (e4.glMinFilter = t4.LINEAR_MIPMAP_LINEAR), e4;
        }
        return f(n2, [{ key: "glFilter", value: function(e4) {
          return this._renderer.GL.LINEAR_MIPMAP_LINEAR;
        } }, { key: "_getTextureDataFromSource", value: function() {
          return this.src;
        } }, { key: "init", value: function(e4) {
          var t4 = this._renderer.GL;
          this.glTex = t4.createTexture(), this.bindTexture();
          for (var r3 = 0;r3 < e4.length; r3++)
            t4.texImage2D(this.glTarget, r3, this.glFormat, this.glFormat, this.glDataType, e4[r3]);
          this.glMinFilter = t4.LINEAR_MIPMAP_LINEAR, t4.texParameteri(t4.TEXTURE_2D, t4.TEXTURE_MAG_FILTER, this.glMagFilter), t4.texParameteri(t4.TEXTURE_2D, t4.TEXTURE_MIN_FILTER, this.glMinFilter), this.unbindTexture();
        } }, { key: "update", value: function() {
        } }]), n2;
      }(s2.default.Texture);
      function m(e3) {
        var { GL: t3, webglVersion: e3 } = e3, r3 = e3 === a.WEBGL2 ? t3.getExtension("EXT_color_buffer_float") && t3.getExtension("EXT_float_blend") : t3.getExtension("OES_texture_float"), o2 = r3 && t3.getExtension("OES_texture_float_linear"), e3 = e3 === a.WEBGL2 ? t3.getExtension("EXT_color_buffer_float") : t3.getExtension("OES_texture_half_float");
        return { float: r3, floatLinear: o2, halfFloat: e3, halfFloatLinear: e3 && t3.getExtension("OES_texture_half_float_linear") };
      }
      r2.MipmapTexture = p;
      e2 = s2.default.Texture;
      r2.default = e2;
    }, { "../core/constants": 264, "../core/main": 275, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.get-prototype-of": 180, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.reflect.construct": 184, "core-js/modules/es.regexp.to-string": 188, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.typed-array.copy-within": 205, "core-js/modules/es.typed-array.every": 206, "core-js/modules/es.typed-array.fill": 207, "core-js/modules/es.typed-array.filter": 208, "core-js/modules/es.typed-array.find": 210, "core-js/modules/es.typed-array.find-index": 209, "core-js/modules/es.typed-array.for-each": 213, "core-js/modules/es.typed-array.includes": 214, "core-js/modules/es.typed-array.index-of": 215, "core-js/modules/es.typed-array.iterator": 218, "core-js/modules/es.typed-array.join": 219, "core-js/modules/es.typed-array.last-index-of": 220, "core-js/modules/es.typed-array.map": 221, "core-js/modules/es.typed-array.reduce": 223, "core-js/modules/es.typed-array.reduce-right": 222, "core-js/modules/es.typed-array.reverse": 224, "core-js/modules/es.typed-array.set": 225, "core-js/modules/es.typed-array.slice": 226, "core-js/modules/es.typed-array.some": 227, "core-js/modules/es.typed-array.sort": 228, "core-js/modules/es.typed-array.subarray": 229, "core-js/modules/es.typed-array.to-locale-string": 230, "core-js/modules/es.typed-array.to-string": 231, "core-js/modules/es.typed-array.uint8-array": 234, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }], 335: [function(e2, t2, r2) {
      function o(e3) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = typeof Symbol == "function" && o(Symbol.iterator) === "symbol" ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/web.dom-collections.iterator");
      var n, B = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, M = function(e3) {
        if (e3 && e3.__esModule)
          return e3;
        if (e3 === null || i(e3) !== "object" && typeof e3 != "function")
          return { default: e3 };
        var t3 = a();
        if (t3 && t3.has(e3))
          return t3.get(e3);
        var r3, o2 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r3 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r3) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r3) : null) && (s3.get || s3.set) ? Object.defineProperty(o2, r3, s3) : o2[r3] = e3[r3]);
        }
        o2.default = e3, t3 && t3.set(e3, o2);
        return o2;
      }(e2("../core/constants"));
      function a() {
        var e3;
        return typeof WeakMap != "function" ? null : (e3 = new WeakMap, a = function() {
          return e3;
        }, e3);
      }
      function G(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function s2(e3, t3) {
        for (var r3 = 0;r3 < t3.length; r3++) {
          var o2 = t3[r3];
          o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
        }
      }
      function V(e3, t3, r3) {
        t3 && s2(e3.prototype, t3), r3 && s2(e3, r3);
      }
      e2("./p5.Shader"), e2("./p5.RendererGL.Retained"), B.default.RendererGL.prototype._applyTextProperties = function() {
      }, B.default.RendererGL.prototype.textWidth = function(e3) {
        return this._isOpenType() ? this._textFont._textWidth(e3, this._textSize) : 0;
      };
      var l = function() {
        function r3(e3, t3) {
          G(this, r3), this.width = e3, this.height = t3, this.infos = [];
        }
        return V(r3, [{ key: "findImage", value: function(e3) {
          var t3, r4, o2 = this.width * this.height;
          if (o2 < e3)
            throw new Error("font is too complex to render in 3D");
          for (var n2 = this.infos.length - 1;0 <= n2; --n2) {
            var s3 = this.infos[n2];
            if (s3.index + e3 < o2) {
              r4 = (t3 = s3).imageData;
              break;
            }
          }
          if (!t3) {
            try {
              r4 = new ImageData(this.width, this.height);
            } catch (e4) {
              var i2 = document.getElementsByTagName("canvas")[0], a2 = !i2, l2 = (i2 || ((i2 = document.createElement("canvas")).style.display = "none", document.body.appendChild(i2)), i2.getContext("2d"));
              l2 && (r4 = l2.createImageData(this.width, this.height)), a2 && document.body.removeChild(i2);
            }
            this.infos.push(t3 = { index: 0, imageData: r4 });
          }
          l2 = t3.index;
          return t3.index += e3, r4._dirty = true, { imageData: r4, index: l2 };
        } }]), r3;
      }();
      function z(e3, t3, r3, o2, n2) {
        var s3 = e3.imageData.data, e3 = 4 * e3.index++;
        s3[e3++] = t3, s3[e3++] = r3, s3[e3++] = o2, s3[+e3] = n2;
      }
      var H = Math.sqrt(3), E = function() {
        function t3(e3) {
          G(this, t3), this.font = e3, this.strokeImageInfos = new l(64, 64), this.colDimImageInfos = new l(64, 64), this.rowDimImageInfos = new l(64, 64), this.colCellImageInfos = new l(64, 64), this.rowCellImageInfos = new l(64, 64), this.glyphInfos = {};
        }
        return V(t3, [{ key: "getGlyphInfo", value: function(e3) {
          var t4 = this.glyphInfos[e3.index];
          if (!t4) {
            var r3 = e3.getBoundingBox(), o2 = r3.x1, n2 = r3.y1, s3 = r3.x2 - o2, i2 = r3.y2 - n2, a2 = e3.path.commands;
            if (s3 == 0 || i2 == 0 || !a2.length)
              return this.glyphInfos[e3.index] = {};
            for (var u = [], c = [], d = [], l2 = 8;0 <= l2; --l2)
              d.push([]);
            for (l2 = 8;0 <= l2; --l2)
              c.push([]);
            var h, f, p, m, D = function() {
              function n3(e4, t5, r4, o3) {
                G(this, n3), this.p0 = e4, this.c0 = t5, this.c1 = r4, this.p1 = o3;
              }
              return V(n3, [{ key: "toQuadratic", value: function() {
                return { x: this.p0.x, y: this.p0.y, x1: this.p1.x, y1: this.p1.y, cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4, cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4 };
              } }, { key: "quadError", value: function() {
                return B.default.Vector.sub(B.default.Vector.sub(this.p1, this.p0), B.default.Vector.mult(B.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
              } }, { key: "split", value: function(e4) {
                var t5 = B.default.Vector.lerp(this.p0, this.c0, e4), r4 = B.default.Vector.lerp(this.c0, this.c1, e4), o3 = B.default.Vector.lerp(t5, r4, e4), r4 = (this.c1 = B.default.Vector.lerp(this.c1, this.p1, e4), this.c0 = B.default.Vector.lerp(r4, this.c1, e4), B.default.Vector.lerp(o3, this.c0, e4)), e4 = new n3(this.p0, t5, o3, r4);
                return this.p0 = r4, e4;
              } }, { key: "splitInflections", value: function() {
                var e4 = B.default.Vector.sub(this.c0, this.p0), t5 = B.default.Vector.sub(B.default.Vector.sub(this.c1, this.c0), e4), r4 = B.default.Vector.sub(B.default.Vector.sub(B.default.Vector.sub(this.p1, this.c1), e4), B.default.Vector.mult(t5, 2)), o3 = [], n4 = t5.x * r4.y - t5.y * r4.x;
                return n4 !== 0 && 0 <= (e4 = (r4 = e4.x * r4.y - e4.y * r4.x) * r4 - 4 * n4 * (e4.x * t5.y - e4.y * t5.x)) && (n4 < 0 && (n4 = -n4, r4 = -r4, 0), e4 = (-r4 + (t5 = Math.sqrt(e4))) / (2 * n4), 0 < (r4 = (-r4 - t5) / (2 * n4)) && r4 < 1 && (o3.push(this.split(r4)), e4 = 1 - (1 - e4) / (1 - r4)), 0 < e4 && e4 < 1 && o3.push(this.split(e4))), o3.push(this), o3;
              } }]), n3;
            }(), y = true, g = false, v = undefined;
            try {
              for (var b, j = a2[Symbol.iterator]();!(y = (b = j.next()).done); y = true) {
                var _ = b.value, x = (_.x - o2) / s3, w = (_.y - n2) / i2;
                if (!U(h, f, x, w)) {
                  switch (_.type) {
                    case "M":
                      p = x, m = w;
                      break;
                    case "L":
                      I(h, f, x, w);
                      break;
                    case "Q":
                      var S = (_.x1 - o2) / s3, T = (_.y1 - n2) / i2;
                      L([h, x, S], [f, w, T], { x: h, y: f, cx: S, cy: T });
                      break;
                    case "Z":
                      U(h, f, p, m) ? u.push({ x: h, y: f }) : (I(h, f, p, m), u.push({ x: p, y: m }));
                      break;
                    case "C":
                      for (var M2 = function(e4, t5, r4, o3, n3, s4, i3, a3) {
                        var e4 = new D(new B.default.Vector(e4, t5), new B.default.Vector(r4, o3), new B.default.Vector(n3, s4), new B.default.Vector(i3, a3)).splitInflections(), l3 = [], u2 = 30 / H, c2 = true, t5 = false, r4 = undefined;
                        try {
                          for (var d2, h2 = e4[Symbol.iterator]();!(c2 = (d2 = h2.next()).done); c2 = true) {
                            for (var f2 = d2.value, p2 = [], m2 = undefined;!(0.125 <= (m2 = u2 / f2.quadError())); ) {
                              var y2 = Math.pow(m2, 1 / 3), g2 = f2.split(y2), v2 = f2.split(1 - y2 / (1 - y2));
                              l3.push(g2), p2.push(f2), f2 = v2;
                            }
                            m2 < 1 && l3.push(f2.split(0.5)), l3.push(f2), Array.prototype.push.apply(l3, p2.reverse());
                          }
                        } catch (e5) {
                          t5 = true, r4 = e5;
                        } finally {
                          try {
                            c2 || h2.return == null || h2.return();
                          } finally {
                            if (t5)
                              throw r4;
                          }
                        }
                        return l3;
                      }(h, f, (_.x1 - o2) / s3, (_.y1 - n2) / i2, (_.x2 - o2) / s3, (_.y2 - n2) / i2, x, w), E2 = 0;E2 < M2.length; E2++) {
                        var k = M2[E2].toQuadratic();
                        L([k.x, k.x1, k.cx], [k.y, k.y1, k.cy], k);
                      }
                      break;
                    default:
                      throw new Error("unknown command type: ".concat(_.type));
                  }
                  h = x, f = w;
                }
              }
            } catch (e4) {
              g = true, v = e4;
            } finally {
              try {
                y || j.return == null || j.return();
              } finally {
                if (g)
                  throw v;
              }
            }
            for (var C = u.length, O = this.strokeImageInfos.findImage(C), F = O.index, P = 0;P < C; ++P) {
              var A = u[P];
              z(O, R(A.x), R(A.y), R(A.cx), R(A.cy));
            }
            (t4 = this.glyphInfos[e3.index] = { glyph: e3, uGlyphRect: [r3.x1, -r3.y1, r3.x2, -r3.y2], strokeImageInfo: O, strokes: u, colInfo: N(d, this.colDimImageInfos, this.colCellImageInfos), rowInfo: N(c, this.rowDimImageInfos, this.rowCellImageInfos) }).uGridOffset = [t4.colInfo.dimOffset, t4.rowInfo.dimOffset];
          }
          return t4;
          function L(e4, t5, r4) {
            var o3 = u.length;
            function n3(e5, t6, r5) {
              for (var o4 = e5.length;0 < o4--; ) {
                var n4 = e5[o4];
                n4 < t6 && (t6 = n4), r5 < n4 && (r5 = n4);
              }
              return { min: t6, max: r5 };
            }
            u.push(r4);
            for (var r4 = n3(e4, 1, 0), e4 = Math.max(Math.floor(9 * r4.min - 0.5), 0), s4 = Math.min(Math.ceil(9 * r4.max + 0.5), 9), i3 = e4;i3 < s4; ++i3)
              d[i3].push(o3);
            for (var r4 = n3(t5, 1, 0), e4 = Math.max(Math.floor(9 * r4.min - 0.5), 0), a3 = Math.min(Math.ceil(9 * r4.max + 0.5), 9), l3 = e4;l3 < a3; ++l3)
              c[l3].push(o3);
          }
          function R(e4) {
            return (e4 = (r4 = 255) * e4) < (t5 = 0) ? t5 : r4 < e4 ? r4 : e4;
            var t5, r4;
          }
          function I(e4, t5, r4, o3) {
            L([e4, r4], [t5, o3], { x: e4, y: t5, cx: (e4 + r4) / 2, cy: (t5 + o3) / 2 });
          }
          function U(e4, t5, r4, o3) {
            return Math.abs(r4 - e4) < 0.00001 && Math.abs(o3 - t5) < 0.00001;
          }
          function N(e4, t5, r4) {
            for (var o3 = e4.length, n3 = t5.findImage(o3), t5 = n3.index, s4 = 0, i3 = 0;i3 < o3; ++i3)
              s4 += e4[i3].length;
            for (var a3 = r4.findImage(s4), l3 = 0;l3 < o3; ++l3) {
              var u2 = e4[l3], c2 = u2.length, d2 = a3.index;
              z(n3, d2 >> 7, 127 & d2, c2 >> 7, 127 & c2);
              for (var h2 = 0;h2 < c2; ++h2) {
                var f2 = u2[h2] + F;
                z(a3, f2 >> 7, 127 & f2, 0, 0);
              }
            }
            return { cellImageInfo: a3, dimOffset: t5, dimImageInfo: n3 };
          }
        } }]), t3;
      }();
      B.default.RendererGL.prototype._renderText = function(e3, t3, r3, o2, n2) {
        if (this._textFont && typeof this._textFont != "string") {
          if (!(n2 <= o2) && this._doFill) {
            if (this._isOpenType()) {
              e3.push();
              var n2 = this._doStroke, s3 = this.drawMode, i2 = (this._doStroke = false, this.drawMode = M.TEXTURE, this._textFont.font), a2 = (a2 = this._textFont._fontInfo) || (this._textFont._fontInfo = new E(i2)), r3 = this._textFont._handleAlignment(this, t3, r3, o2), o2 = this._textSize / i2.unitsPerEm, l2 = (this.translate(r3.x, r3.y, 0), this.scale(o2, o2, 1), this.GL), r3 = !this._defaultFontShader, u = this._getFontShader(), c = (u.init(), u.bindShader(), r3 && (u.setUniform("uGridImageSize", [64, 64]), u.setUniform("uCellsImageSize", [64, 64]), u.setUniform("uStrokeImageSize", [64, 64]), u.setUniform("uGridSize", [9, 9])), this._applyColorBlend(this.curFillColor), this.retainedMode.geometry.glyph), d = (c || ((o2 = this._textGeom = new B.default.Geometry(1, 1, function() {
                for (var e4 = 0;e4 <= 1; e4++)
                  for (var t4 = 0;t4 <= 1; t4++)
                    this.vertices.push(new B.default.Vector(t4, e4, 0)), this.uvs.push(t4, e4);
              })).computeFaces().computeNormals(), c = this.createBuffers("glyph", o2)), true), r3 = false, o2 = undefined;
              try {
                for (var h, f = this.retainedMode.buffers.text[Symbol.iterator]();!(d = (h = f.next()).done); d = true)
                  h.value._prepareBuffer(c, u);
              } catch (e4) {
                r3 = true, o2 = e4;
              } finally {
                try {
                  d || f.return == null || f.return();
                } finally {
                  if (r3)
                    throw o2;
                }
              }
              this._bindBuffer(c.indexBuffer, l2.ELEMENT_ARRAY_BUFFER), u.setUniform("uMaterialColor", this.curFillColor), l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
              try {
                var p = 0, m = null, y = i2.stringToGlyphs(t3), g = true, v = false, b = undefined;
                try {
                  for (var j, _ = y[Symbol.iterator]();!(g = (j = _.next()).done); g = true) {
                    var x, w, S = j.value, T = (m && (p += i2.getKerningValue(m, S)), a2.getGlyphInfo(S));
                    T.uGlyphRect && (x = T.rowInfo, w = T.colInfo, u.setUniform("uSamplerStrokes", T.strokeImageInfo.imageData), u.setUniform("uSamplerRowStrokes", x.cellImageInfo.imageData), u.setUniform("uSamplerRows", x.dimImageInfo.imageData), u.setUniform("uSamplerColStrokes", w.cellImageInfo.imageData), u.setUniform("uSamplerCols", w.dimImageInfo.imageData), u.setUniform("uGridOffset", T.uGridOffset), u.setUniform("uGlyphRect", T.uGlyphRect), u.setUniform("uGlyphOffset", p), u.bindTextures(), l2.drawElements(l2.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0)), p += S.advanceWidth, m = S;
                  }
                } catch (e4) {
                  v = true, b = e4;
                } finally {
                  try {
                    g || _.return == null || _.return();
                  } finally {
                    if (v)
                      throw b;
                  }
                }
              } finally {
                u.unbindShader(), this._doStroke = n2, this.drawMode = s3, l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), e3.pop();
              }
            } else
              console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported");
            return e3;
          }
        } else
          console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
      };
    }, { "../core/constants": 264, "../core/main": 275, "./p5.RendererGL.Retained": 331, "./p5.Shader": 333, "core-js/modules/es.array.iterator": 161, "core-js/modules/es.object.get-own-property-descriptor": 178, "core-js/modules/es.object.to-string": 182, "core-js/modules/es.regexp.exec": 187, "core-js/modules/es.string.iterator": 192, "core-js/modules/es.string.split": 198, "core-js/modules/es.string.sub": 200, "core-js/modules/es.symbol": 204, "core-js/modules/es.symbol.description": 202, "core-js/modules/es.symbol.iterator": 203, "core-js/modules/es.weak-map": 236, "core-js/modules/web.dom-collections.iterator": 238 }] }, {}, [259])(259);
  });
});

// node_modules/tone/build/esm/version.js
var version = "14.7.77";

// node_modules/standardized-audio-context/build/es2019/module.js
var import_automation_events2 = __toESM(require_bundle(), 1);

// node_modules/standardized-audio-context/build/es2019/factories/abort-error.js
var createAbortError = () => new DOMException("", "AbortError");

// node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js
var createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {
  return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {
    insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js
var createAddAudioNodeConnections = (audioNodeConnectionsStore) => {
  return (audioNode, audioNodeRenderer, nativeAudioNode) => {
    const activeInputs = [];
    for (let i = 0;i < nativeAudioNode.numberOfInputs; i += 1) {
      activeInputs.push(new Set);
    }
    audioNodeConnectionsStore.set(audioNode, {
      activeInputs,
      outputs: new Set,
      passiveInputs: new WeakMap,
      renderer: audioNodeRenderer
    });
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js
var createAddAudioParamConnections = (audioParamConnectionsStore) => {
  return (audioParam, audioParamRenderer) => {
    audioParamConnectionsStore.set(audioParam, { activeInputs: new Set, passiveInputs: new WeakMap, renderer: audioParamRenderer });
  };
};

// node_modules/standardized-audio-context/build/es2019/globals.js
var ACTIVE_AUDIO_NODE_STORE = new WeakSet;
var AUDIO_NODE_CONNECTIONS_STORE = new WeakMap;
var AUDIO_NODE_STORE = new WeakMap;
var AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap;
var AUDIO_PARAM_STORE = new WeakMap;
var CONTEXT_STORE = new WeakMap;
var EVENT_LISTENERS = new WeakMap;
var CYCLE_COUNTERS = new WeakMap;
var NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap;
var NODE_TO_PROCESSOR_MAPS = new WeakMap;

// node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js
var handler = {
  construct() {
    return handler;
  }
};
var isConstructible = (constructible) => {
  try {
    const proxy = new Proxy(constructible, handler);
    new proxy;
  } catch {
    return false;
  }
  return true;
};

// node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js
var IMPORT_STATEMENT_REGEX = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/;
var splitImportStatements = (source, url) => {
  const importStatements = [];
  let sourceWithoutImportStatements = source.replace(/^[\s]+/, "");
  let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
  while (result !== null) {
    const unresolvedUrl = result[1].slice(1, -1);
    const importStatementWithResolvedUrl = result[0].replace(/([\s]+)?;?$/, "").replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());
    importStatements.push(importStatementWithResolvedUrl);
    sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\s]+/, "");
    result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
  }
  return [importStatements.join(";"), sourceWithoutImportStatements];
};

// node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js
var verifyParameterDescriptors = (parameterDescriptors) => {
  if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {
    throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.");
  }
};
var verifyProcessorCtor = (processorCtor) => {
  if (!isConstructible(processorCtor)) {
    throw new TypeError("The given value for processorCtor should be a constructor.");
  }
  if (processorCtor.prototype === null || typeof processorCtor.prototype !== "object") {
    throw new TypeError("The given value for processorCtor should have a prototype.");
  }
};
var createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window2) => {
  let index = 0;
  return (context, moduleURL, options = { credentials: "omit" }) => {
    const resolvedRequestsOfContext = resolvedRequests.get(context);
    if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {
      return Promise.resolve();
    }
    const ongoingRequestsOfContext = ongoingRequests.get(context);
    if (ongoingRequestsOfContext !== undefined) {
      const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);
      if (promiseOfOngoingRequest !== undefined) {
        return promiseOfOngoingRequest;
      }
    }
    const nativeContext = getNativeContext(context);
    const promise = nativeContext.audioWorklet === undefined ? fetchSource(moduleURL).then(([source, absoluteUrl]) => {
      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);
      const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}
})})(window,'_AWGS')`;
      return evaluateSource(wrappedSource);
    }).then(() => {
      const evaluateAudioWorkletGlobalScope = window2._AWGS.pop();
      if (evaluateAudioWorkletGlobalScope === undefined) {
        throw new SyntaxError;
      }
      exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {
      }, undefined, (name, processorCtor) => {
        if (name.trim() === "") {
          throw createNotSupportedError();
        }
        const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);
        if (nodeNameToProcessorConstructorMap !== undefined) {
          if (nodeNameToProcessorConstructorMap.has(name)) {
            throw createNotSupportedError();
          }
          verifyProcessorCtor(processorCtor);
          verifyParameterDescriptors(processorCtor.parameterDescriptors);
          nodeNameToProcessorConstructorMap.set(name, processorCtor);
        } else {
          verifyProcessorCtor(processorCtor);
          verifyParameterDescriptors(processorCtor.parameterDescriptors);
          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));
        }
      }, nativeContext.sampleRate, undefined, undefined));
    }) : Promise.all([
      fetchSource(moduleURL),
      Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))
    ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {
      const currentIndex = index + 1;
      index = currentIndex;
      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);
      const patchedAudioWorkletProcessor = isSupportingPostMessage ? "AudioWorkletProcessor" : "class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}";
      const memberDefinition = isSupportingPostMessage ? "" : "__c = (a) => a.forEach(e=>this.__b.add(e.buffer));";
      const bufferRegistration = isSupportingPostMessage ? "" : "i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));";
      const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}
})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;
      const blob = new Blob([wrappedSource], { type: "application/javascript; charset=utf-8" });
      const url = URL.createObjectURL(blob);
      return nativeContext.audioWorklet.addModule(url, options).then(() => {
        if (isNativeOfflineAudioContext(nativeContext)) {
          return nativeContext;
        }
        const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);
        return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);
      }).then((nativeContextOrBackupOfflineAudioContext) => {
        if (nativeAudioWorkletNodeConstructor === null) {
          throw new SyntaxError;
        }
        try {
          new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`);
        } catch {
          throw new SyntaxError;
        }
      }).finally(() => URL.revokeObjectURL(url));
    });
    if (ongoingRequestsOfContext === undefined) {
      ongoingRequests.set(context, new Map([[moduleURL, promise]]));
    } else {
      ongoingRequestsOfContext.set(moduleURL, promise);
    }
    promise.then(() => {
      const updatedResolvedRequestsOfContext = resolvedRequests.get(context);
      if (updatedResolvedRequestsOfContext === undefined) {
        resolvedRequests.set(context, new Set([moduleURL]));
      } else {
        updatedResolvedRequestsOfContext.add(moduleURL);
      }
    }).finally(() => {
      const updatedOngoingRequestsOfContext = ongoingRequests.get(context);
      if (updatedOngoingRequestsOfContext !== undefined) {
        updatedOngoingRequestsOfContext.delete(moduleURL);
      }
    });
    return promise;
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js
var getValueForKey = (map, key) => {
  const value = map.get(key);
  if (value === undefined) {
    throw new Error("A value with the given key could not be found.");
  }
  return value;
};

// node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js
var pickElementFromSet = (set, predicate) => {
  const matchingElements = Array.from(set).filter(predicate);
  if (matchingElements.length > 1) {
    throw Error("More than one element was found.");
  }
  if (matchingElements.length === 0) {
    throw Error("No element was found.");
  }
  const [matchingElement] = matchingElements;
  set.delete(matchingElement);
  return matchingElement;
};

// node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js
var deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {
  const passiveInputConnections = getValueForKey(passiveInputs, source);
  const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);
  if (passiveInputConnections.size === 0) {
    passiveInputs.delete(source);
  }
  return matchingConnection;
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js
var getEventListenersOfAudioNode = (audioNode) => {
  return getValueForKey(EVENT_LISTENERS, audioNode);
};

// node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js
var setInternalStateToActive = (audioNode) => {
  if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {
    throw new Error("The AudioNode is already stored.");
  }
  ACTIVE_AUDIO_NODE_STORE.add(audioNode);
  getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));
};

// node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js
var isAudioWorkletNode = (audioNode) => {
  return "port" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js
var setInternalStateToPassive = (audioNode) => {
  if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {
    throw new Error("The AudioNode is not stored.");
  }
  ACTIVE_AUDIO_NODE_STORE.delete(audioNode);
  getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));
};

// node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js
var setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {
  if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {
    setInternalStateToPassive(audioNode);
  }
};

// node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js
var createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode2, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {
  const tailTimeTimeoutIds = new WeakMap;
  return (source, destination, output, input, isOffline) => {
    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);
    const { outputs } = getAudioNodeConnections(source);
    const eventListeners = getEventListenersOfAudioNode2(source);
    const eventListener = (isActive) => {
      const nativeDestinationAudioNode = getNativeAudioNode(destination);
      const nativeSourceAudioNode = getNativeAudioNode(source);
      if (isActive) {
        const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);
        addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);
        if (!isOffline && !isPartOfACycle(source)) {
          connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
        }
        if (isPassiveAudioNode(destination)) {
          setInternalStateToActive(destination);
        }
      } else {
        const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);
        addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);
        if (!isOffline && !isPartOfACycle(source)) {
          disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
        }
        const tailTime = getAudioNodeTailTime(destination);
        if (tailTime === 0) {
          if (isActiveAudioNode(destination)) {
            setInternalStateToPassiveWhenNecessary(destination, activeInputs);
          }
        } else {
          const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);
          if (tailTimeTimeoutId !== undefined) {
            clearTimeout(tailTimeTimeoutId);
          }
          tailTimeTimeoutIds.set(destination, setTimeout(() => {
            if (isActiveAudioNode(destination)) {
              setInternalStateToPassiveWhenNecessary(destination, activeInputs);
            }
          }, tailTime * 1000));
        }
      }
    };
    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {
      eventListeners.add(eventListener);
      if (isActiveAudioNode(source)) {
        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);
      } else {
        addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);
      }
      return true;
    }
    return false;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js
var createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {
  return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {
    const passiveInputConnections = passiveInputs.get(source);
    if (passiveInputConnections === undefined) {
      passiveInputs.set(source, new Set([[output, input, eventListener]]));
    } else {
      insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js
var createAddSilentConnection = (createNativeGainNode) => {
  return (nativeContext, nativeAudioScheduledSourceNode) => {
    const nativeGainNode = createNativeGainNode(nativeContext, {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      gain: 0
    });
    nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);
    const disconnect = () => {
      nativeAudioScheduledSourceNode.removeEventListener("ended", disconnect);
      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);
      nativeGainNode.disconnect();
    };
    nativeAudioScheduledSourceNode.addEventListener("ended", disconnect);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js
var createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {
  return (nativeContext, audioWorkletNode) => {
    getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js
var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  fftSize: 2048,
  maxDecibels: -30,
  minDecibels: -100,
  smoothingTimeConstant: 0.8
};
var createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class AnalyserNode extends audionNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS, ...options };
      const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);
      const analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;
      super(context, false, nativeAnalyserNode, analyserNodeRenderer);
      this._nativeAnalyserNode = nativeAnalyserNode;
    }
    get fftSize() {
      return this._nativeAnalyserNode.fftSize;
    }
    set fftSize(value) {
      this._nativeAnalyserNode.fftSize = value;
    }
    get frequencyBinCount() {
      return this._nativeAnalyserNode.frequencyBinCount;
    }
    get maxDecibels() {
      return this._nativeAnalyserNode.maxDecibels;
    }
    set maxDecibels(value) {
      const maxDecibels = this._nativeAnalyserNode.maxDecibels;
      this._nativeAnalyserNode.maxDecibels = value;
      if (!(value > this._nativeAnalyserNode.minDecibels)) {
        this._nativeAnalyserNode.maxDecibels = maxDecibels;
        throw createIndexSizeError();
      }
    }
    get minDecibels() {
      return this._nativeAnalyserNode.minDecibels;
    }
    set minDecibels(value) {
      const minDecibels = this._nativeAnalyserNode.minDecibels;
      this._nativeAnalyserNode.minDecibels = value;
      if (!(this._nativeAnalyserNode.maxDecibels > value)) {
        this._nativeAnalyserNode.minDecibels = minDecibels;
        throw createIndexSizeError();
      }
    }
    get smoothingTimeConstant() {
      return this._nativeAnalyserNode.smoothingTimeConstant;
    }
    set smoothingTimeConstant(value) {
      this._nativeAnalyserNode.smoothingTimeConstant = value;
    }
    getByteFrequencyData(array) {
      this._nativeAnalyserNode.getByteFrequencyData(array);
    }
    getByteTimeDomainData(array) {
      this._nativeAnalyserNode.getByteTimeDomainData(array);
    }
    getFloatFrequencyData(array) {
      this._nativeAnalyserNode.getFloatFrequencyData(array);
    }
    getFloatTimeDomainData(array) {
      this._nativeAnalyserNode.getFloatTimeDomainData(array);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js
var isOwnedByContext = (nativeAudioNode, nativeContext) => {
  return nativeAudioNode.context === nativeContext;
};

// node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js
var createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeAnalyserNodes = new WeakMap;
    const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAnalyserNode = getNativeAudioNode(proxy);
      const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);
      if (!nativeAnalyserNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeAnalyserNode.channelCount,
          channelCountMode: nativeAnalyserNode.channelCountMode,
          channelInterpretation: nativeAnalyserNode.channelInterpretation,
          fftSize: nativeAnalyserNode.fftSize,
          maxDecibels: nativeAnalyserNode.maxDecibels,
          minDecibels: nativeAnalyserNode.minDecibels,
          smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant
        };
        nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);
      }
      renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);
      return nativeAnalyserNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAnalyserNode !== undefined) {
          return Promise.resolve(renderedNativeAnalyserNode);
        }
        return createAnalyserNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js
var testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {
  try {
    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);
  } catch {
    return false;
  }
  return true;
};

// node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js
var createIndexSizeError = () => new DOMException("", "IndexSizeError");

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js
var wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {
  audioBuffer.getChannelData = ((getChannelData) => {
    return (channel) => {
      try {
        return getChannelData.call(audioBuffer, channel);
      } catch (err) {
        if (err.code === 12) {
          throw createIndexSizeError();
        }
        throw err;
      }
    };
  })(audioBuffer.getChannelData);
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js
var DEFAULT_OPTIONS2 = {
  numberOfChannels: 1
};
var createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
  let nativeOfflineAudioContext = null;
  return class AudioBuffer2 {
    constructor(options) {
      if (nativeOfflineAudioContextConstructor === null) {
        throw new Error("Missing the native OfflineAudioContext constructor.");
      }
      const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS2, ...options };
      if (nativeOfflineAudioContext === null) {
        nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
      }
      const audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);
      if (audioBuffer.numberOfChannels === 0) {
        throw createNotSupportedError();
      }
      if (typeof audioBuffer.copyFromChannel !== "function") {
        wrapAudioBufferCopyChannelMethods(audioBuffer);
        wrapAudioBufferGetChannelDataMethod(audioBuffer);
      } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {
        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
      }
      audioBufferStore.add(audioBuffer);
      return audioBuffer;
    }
    static [Symbol.hasInstance](instance) {
      return instance !== null && typeof instance === "object" && Object.getPrototypeOf(instance) === AudioBuffer2.prototype || audioBufferStore.has(instance);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/constants.js
var MOST_NEGATIVE_SINGLE_FLOAT = -340282346638528860000000000000000000000;
var MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;

// node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js
var isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);

// node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js
var DEFAULT_OPTIONS3 = {
  buffer: null,
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  loop: false,
  loopEnd: 0,
  loopStart: 0,
  playbackRate: 1
};
var createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
  return class AudioBufferSourceNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS3, ...options };
      const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;
      super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);
      this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;
      this._isBufferNullified = false;
      this._isBufferSet = mergedOptions.buffer !== null;
      this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;
      this._onended = null;
      this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
    }
    get buffer() {
      if (this._isBufferNullified) {
        return null;
      }
      return this._nativeAudioBufferSourceNode.buffer;
    }
    set buffer(value) {
      this._nativeAudioBufferSourceNode.buffer = value;
      if (value !== null) {
        if (this._isBufferSet) {
          throw createInvalidStateError();
        }
        this._isBufferSet = true;
      }
    }
    get loop() {
      return this._nativeAudioBufferSourceNode.loop;
    }
    set loop(value) {
      this._nativeAudioBufferSourceNode.loop = value;
    }
    get loopEnd() {
      return this._nativeAudioBufferSourceNode.loopEnd;
    }
    set loopEnd(value) {
      this._nativeAudioBufferSourceNode.loopEnd = value;
    }
    get loopStart() {
      return this._nativeAudioBufferSourceNode.loopStart;
    }
    set loopStart(value) {
      this._nativeAudioBufferSourceNode.loopStart = value;
    }
    get onended() {
      return this._onended;
    }
    set onended(value) {
      const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
      this._nativeAudioBufferSourceNode.onended = wrappedListener;
      const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;
      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
    }
    get playbackRate() {
      return this._playbackRate;
    }
    start(when = 0, offset = 0, duration) {
      this._nativeAudioBufferSourceNode.start(when, offset, duration);
      if (this._audioBufferSourceNodeRenderer !== null) {
        this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];
      }
      if (this.context.state !== "closed") {
        setInternalStateToActive(this);
        const resetInternalStateToPassive = () => {
          this._nativeAudioBufferSourceNode.removeEventListener("ended", resetInternalStateToPassive);
          if (isActiveAudioNode(this)) {
            setInternalStateToPassive(this);
          }
        };
        this._nativeAudioBufferSourceNode.addEventListener("ended", resetInternalStateToPassive);
      }
    }
    stop(when = 0) {
      this._nativeAudioBufferSourceNode.stop(when);
      if (this._audioBufferSourceNodeRenderer !== null) {
        this._audioBufferSourceNodeRenderer.stop = when;
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js
var createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeAudioBufferSourceNodes = new WeakMap;
    let start = null;
    let stop = null;
    const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);
      const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);
      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
        const options = {
          buffer: nativeAudioBufferSourceNode.buffer,
          channelCount: nativeAudioBufferSourceNode.channelCount,
          channelCountMode: nativeAudioBufferSourceNode.channelCountMode,
          channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,
          loop: nativeAudioBufferSourceNode.loop,
          loopEnd: nativeAudioBufferSourceNode.loopEnd,
          loopStart: nativeAudioBufferSourceNode.loopStart,
          playbackRate: nativeAudioBufferSourceNode.playbackRate.value
        };
        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);
        if (start !== null) {
          nativeAudioBufferSourceNode.start(...start);
        }
        if (stop !== null) {
          nativeAudioBufferSourceNode.stop(stop);
        }
      }
      renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);
      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);
      return nativeAudioBufferSourceNode;
    };
    return {
      set start(value) {
        start = value;
      },
      set stop(value) {
        stop = value;
      },
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAudioBufferSourceNode !== undefined) {
          return Promise.resolve(renderedNativeAudioBufferSourceNode);
        }
        return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js
var isAudioBufferSourceNode = (audioNode) => {
  return "playbackRate" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js
var isBiquadFilterNode = (audioNode) => {
  return "frequency" in audioNode && "gain" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js
var isConstantSourceNode = (audioNode) => {
  return "offset" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/guards/gain-node.js
var isGainNode = (audioNode) => {
  return !("frequency" in audioNode) && "gain" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js
var isOscillatorNode = (audioNode) => {
  return "detune" in audioNode && "frequency" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js
var isStereoPannerNode = (audioNode) => {
  return "pan" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js
var getAudioNodeConnections = (audioNode) => {
  return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js
var getAudioParamConnections = (audioParam) => {
  return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);
};

// node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js
var deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {
  const { activeInputs } = getAudioNodeConnections(audioNode);
  activeInputs.forEach((connections) => connections.forEach(([source]) => {
    if (!trace.includes(audioNode)) {
      deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);
    }
  }));
  const audioParams = isAudioBufferSourceNode(audioNode) ? [
    audioNode.playbackRate
  ] : isAudioWorkletNode(audioNode) ? Array.from(audioNode.parameters.values()) : isBiquadFilterNode(audioNode) ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain] : isConstantSourceNode(audioNode) ? [audioNode.offset] : isGainNode(audioNode) ? [audioNode.gain] : isOscillatorNode(audioNode) ? [audioNode.detune, audioNode.frequency] : isStereoPannerNode(audioNode) ? [audioNode.pan] : [];
  for (const audioParam of audioParams) {
    const audioParamConnections = getAudioParamConnections(audioParam);
    if (audioParamConnections !== undefined) {
      audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));
    }
  }
  if (isActiveAudioNode(audioNode)) {
    setInternalStateToPassive(audioNode);
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js
var deactivateAudioGraph = (context) => {
  deactivateActiveAudioNodeInputConnections(context.destination, []);
};

// node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js
var isValidLatencyHint = (latencyHint) => {
  return latencyHint === undefined || typeof latencyHint === "number" || typeof latencyHint === "string" && (latencyHint === "balanced" || latencyHint === "interactive" || latencyHint === "playback");
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js
var createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {
  return class AudioContext extends baseAudioContextConstructor {
    constructor(options = {}) {
      if (nativeAudioContextConstructor === null) {
        throw new Error("Missing the native AudioContext constructor.");
      }
      let nativeAudioContext;
      try {
        nativeAudioContext = new nativeAudioContextConstructor(options);
      } catch (err) {
        if (err.code === 12 && err.message === "sampleRate is not in range") {
          throw createNotSupportedError();
        }
        throw err;
      }
      if (nativeAudioContext === null) {
        throw createUnknownError();
      }
      if (!isValidLatencyHint(options.latencyHint)) {
        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
      }
      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
        throw createNotSupportedError();
      }
      super(nativeAudioContext, 2);
      const { latencyHint } = options;
      const { sampleRate } = nativeAudioContext;
      this._baseLatency = typeof nativeAudioContext.baseLatency === "number" ? nativeAudioContext.baseLatency : latencyHint === "balanced" ? 512 / sampleRate : latencyHint === "interactive" || latencyHint === undefined ? 256 / sampleRate : latencyHint === "playback" ? 1024 / sampleRate : Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
      this._nativeAudioContext = nativeAudioContext;
      if (nativeAudioContextConstructor.name === "webkitAudioContext") {
        this._nativeGainNode = nativeAudioContext.createGain();
        this._nativeOscillatorNode = nativeAudioContext.createOscillator();
        this._nativeGainNode.gain.value = 0.0000000000000000000000000000000000001;
        this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
        this._nativeOscillatorNode.start();
      } else {
        this._nativeGainNode = null;
        this._nativeOscillatorNode = null;
      }
      this._state = null;
      if (nativeAudioContext.state === "running") {
        this._state = "suspended";
        const revokeState = () => {
          if (this._state === "suspended") {
            this._state = null;
          }
          nativeAudioContext.removeEventListener("statechange", revokeState);
        };
        nativeAudioContext.addEventListener("statechange", revokeState);
      }
    }
    get baseLatency() {
      return this._baseLatency;
    }
    get state() {
      return this._state !== null ? this._state : this._nativeAudioContext.state;
    }
    close() {
      if (this.state === "closed") {
        return this._nativeAudioContext.close().then(() => {
          throw createInvalidStateError();
        });
      }
      if (this._state === "suspended") {
        this._state = null;
      }
      return this._nativeAudioContext.close().then(() => {
        if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
          this._nativeOscillatorNode.stop();
          this._nativeGainNode.disconnect();
          this._nativeOscillatorNode.disconnect();
        }
        deactivateAudioGraph(this);
      });
    }
    createMediaElementSource(mediaElement) {
      return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });
    }
    createMediaStreamDestination() {
      return new mediaStreamAudioDestinationNodeConstructor(this);
    }
    createMediaStreamSource(mediaStream) {
      return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });
    }
    createMediaStreamTrackSource(mediaStreamTrack) {
      return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });
    }
    resume() {
      if (this._state === "suspended") {
        return new Promise((resolve, reject) => {
          const resolvePromise = () => {
            this._nativeAudioContext.removeEventListener("statechange", resolvePromise);
            if (this._nativeAudioContext.state === "running") {
              resolve();
            } else {
              this.resume().then(resolve, reject);
            }
          };
          this._nativeAudioContext.addEventListener("statechange", resolvePromise);
        });
      }
      return this._nativeAudioContext.resume().catch((err) => {
        if (err === undefined || err.code === 15) {
          throw createInvalidStateError();
        }
        throw err;
      });
    }
    suspend() {
      return this._nativeAudioContext.suspend().catch((err) => {
        if (err === undefined) {
          throw createInvalidStateError();
        }
        throw err;
      });
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js
var createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError2, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {
  return class AudioDestinationNode extends audioNodeConstructor {
    constructor(context, channelCount) {
      const nativeContext = getNativeContext(context);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);
      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;
      super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);
      this._isNodeOfNativeOfflineAudioContext = isOffline;
      this._nativeAudioDestinationNode = nativeAudioDestinationNode;
    }
    get channelCount() {
      return this._nativeAudioDestinationNode.channelCount;
    }
    set channelCount(value) {
      if (this._isNodeOfNativeOfflineAudioContext) {
        throw createInvalidStateError();
      }
      if (value > this._nativeAudioDestinationNode.maxChannelCount) {
        throw createIndexSizeError2();
      }
      this._nativeAudioDestinationNode.channelCount = value;
    }
    get channelCountMode() {
      return this._nativeAudioDestinationNode.channelCountMode;
    }
    set channelCountMode(value) {
      if (this._isNodeOfNativeOfflineAudioContext) {
        throw createInvalidStateError();
      }
      this._nativeAudioDestinationNode.channelCountMode = value;
    }
    get maxChannelCount() {
      return this._nativeAudioDestinationNode.maxChannelCount;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js
var createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {
  const renderedNativeAudioDestinationNodes = new WeakMap;
  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {
    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
    renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);
    await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);
    return nativeAudioDestinationNode;
  };
  return {
    render(proxy, nativeOfflineAudioContext) {
      const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);
      if (renderedNativeAudioDestinationNode !== undefined) {
        return Promise.resolve(renderedNativeAudioDestinationNode);
      }
      return createAudioDestinationNode(proxy, nativeOfflineAudioContext);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js
var createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {
  return (context, nativeContext) => {
    const nativeListener = nativeContext.listener;
    const createFakeAudioParams = () => {
      const buffer = new Float32Array(1);
      const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
        channelCount: 1,
        channelCountMode: "explicit",
        channelInterpretation: "speakers",
        numberOfInputs: 9
      });
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      let isScriptProcessorNodeCreated = false;
      let lastOrientation = [0, 0, -1, 0, 1, 0];
      let lastPosition = [0, 0, 0];
      const createScriptProcessorNode = () => {
        if (isScriptProcessorNodeCreated) {
          return;
        }
        isScriptProcessorNodeCreated = true;
        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);
        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {
          const orientation = [
            getFirstSample(inputBuffer, buffer, 0),
            getFirstSample(inputBuffer, buffer, 1),
            getFirstSample(inputBuffer, buffer, 2),
            getFirstSample(inputBuffer, buffer, 3),
            getFirstSample(inputBuffer, buffer, 4),
            getFirstSample(inputBuffer, buffer, 5)
          ];
          if (orientation.some((value, index) => value !== lastOrientation[index])) {
            nativeListener.setOrientation(...orientation);
            lastOrientation = orientation;
          }
          const positon = [
            getFirstSample(inputBuffer, buffer, 6),
            getFirstSample(inputBuffer, buffer, 7),
            getFirstSample(inputBuffer, buffer, 8)
          ];
          if (positon.some((value, index) => value !== lastPosition[index])) {
            nativeListener.setPosition(...positon);
            lastPosition = positon;
          }
        };
        channelMergerNode.connect(scriptProcessorNode);
      };
      const createSetOrientation = (index) => (value) => {
        if (value !== lastOrientation[index]) {
          lastOrientation[index] = value;
          nativeListener.setOrientation(...lastOrientation);
        }
      };
      const createSetPosition = (index) => (value) => {
        if (value !== lastPosition[index]) {
          lastPosition[index] = value;
          nativeListener.setPosition(...lastPosition);
        }
      };
      const createFakeAudioParam = (input, initialValue, setValue) => {
        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
          channelCount: 1,
          channelCountMode: "explicit",
          channelInterpretation: "discrete",
          offset: initialValue
        });
        constantSourceNode.connect(channelMergerNode, 0, input);
        constantSourceNode.start();
        Object.defineProperty(constantSourceNode.offset, "defaultValue", {
          get() {
            return initialValue;
          }
        });
        const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
        overwriteAccessors(audioParam, "value", (get) => () => get.call(audioParam), (set) => (value) => {
          try {
            set.call(audioParam, value);
          } catch (err) {
            if (err.code !== 9) {
              throw err;
            }
          }
          createScriptProcessorNode();
          if (isOffline) {
            setValue(value);
          }
        });
        audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = cancelAndHoldAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.cancelAndHoldAtTime);
        audioParam.cancelScheduledValues = ((cancelScheduledValues) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = cancelScheduledValues.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.cancelScheduledValues);
        audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = exponentialRampToValueAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.exponentialRampToValueAtTime);
        audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = linearRampToValueAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.linearRampToValueAtTime);
        audioParam.setTargetAtTime = ((setTargetAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = setTargetAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.setTargetAtTime);
        audioParam.setValueAtTime = ((setValueAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = setValueAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.setValueAtTime);
        audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {
          if (isOffline) {
            return () => {
              throw createNotSupportedError();
            };
          }
          return (...args) => {
            const value = setValueCurveAtTime.apply(audioParam, args);
            createScriptProcessorNode();
            return value;
          };
        })(audioParam.setValueCurveAtTime);
        return audioParam;
      };
      return {
        forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),
        forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),
        forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),
        positionX: createFakeAudioParam(6, 0, createSetPosition(0)),
        positionY: createFakeAudioParam(7, 0, createSetPosition(1)),
        positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),
        upX: createFakeAudioParam(3, 0, createSetOrientation(3)),
        upY: createFakeAudioParam(4, 1, createSetOrientation(4)),
        upZ: createFakeAudioParam(5, 0, createSetOrientation(5))
      };
    };
    const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;
    return {
      get forwardX() {
        return forwardX;
      },
      get forwardY() {
        return forwardY;
      },
      get forwardZ() {
        return forwardZ;
      },
      get positionX() {
        return positionX;
      },
      get positionY() {
        return positionY;
      },
      get positionZ() {
        return positionZ;
      },
      get upX() {
        return upX;
      },
      get upY() {
        return upY;
      },
      get upZ() {
        return upZ;
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/guards/audio-node.js
var isAudioNode = (audioNodeOrAudioParam) => {
  return "context" in audioNodeOrAudioParam;
};

// node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js
var isAudioNodeOutputConnection = (outputConnection) => {
  return isAudioNode(outputConnection[0]);
};

// node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js
var insertElementInSet = (set, element, predicate, ignoreDuplicates) => {
  for (const lmnt of set) {
    if (predicate(lmnt)) {
      if (ignoreDuplicates) {
        return false;
      }
      throw Error("The set contains at least one similar element.");
    }
  }
  set.add(element);
  return true;
};

// node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js
var addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {
  insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);
};

// node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js
var addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {
  const passiveInputConnections = passiveInputs.get(source);
  if (passiveInputConnections === undefined) {
    passiveInputs.set(source, new Set([[output, eventListener]]));
  } else {
    insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);
  }
};

// node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js
var isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {
  return "inputs" in nativeAudioNodeOrNativeAudioNodeFaker;
};

// node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js
var connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {
  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {
    const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];
    nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);
    return [fakeNativeDestinationAudioNode, output, 0];
  }
  nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);
  return [nativeDestinationAudioNode, output, input];
};

// node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js
var deleteActiveInputConnection = (activeInputConnections, source, output) => {
  for (const activeInputConnection of activeInputConnections) {
    if (activeInputConnection[0] === source && activeInputConnection[1] === output) {
      activeInputConnections.delete(activeInputConnection);
      return activeInputConnection;
    }
  }
  return null;
};

// node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js
var deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {
  return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);
};

// node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js
var deleteEventListenerOfAudioNode = (audioNode, eventListener) => {
  const eventListeners = getEventListenersOfAudioNode(audioNode);
  if (!eventListeners.delete(eventListener)) {
    throw new Error("Missing the expected event listener.");
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js
var deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {
  const passiveInputConnections = getValueForKey(passiveInputs, source);
  const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);
  if (passiveInputConnections.size === 0) {
    passiveInputs.delete(source);
  }
  return matchingConnection;
};

// node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js
var disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {
  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {
    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);
  } else {
    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js
var getNativeAudioNode = (audioNode) => {
  return getValueForKey(AUDIO_NODE_STORE, audioNode);
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js
var getNativeAudioParam = (audioParam) => {
  return getValueForKey(AUDIO_PARAM_STORE, audioParam);
};

// node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js
var isPartOfACycle = (audioNode) => {
  return CYCLE_COUNTERS.has(audioNode);
};

// node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js
var isPassiveAudioNode = (audioNode) => {
  return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js
var testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {
  return new Promise((resolve) => {
    if (nativeAudioWorkletNodeConstructor !== null) {
      resolve(true);
    } else {
      const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);
      const dummy = nativeAudioContext.createGain();
      const ones = nativeAudioContext.createBuffer(1, 2, 44100);
      const channelData = ones.getChannelData(0);
      channelData[0] = 1;
      channelData[1] = 1;
      const source = nativeAudioContext.createBufferSource();
      source.buffer = ones;
      source.loop = true;
      source.connect(analyzer).connect(nativeAudioContext.destination);
      source.connect(dummy);
      source.disconnect(dummy);
      analyzer.onaudioprocess = (event) => {
        const chnnlDt = event.inputBuffer.getChannelData(0);
        if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {
          resolve(true);
        } else {
          resolve(false);
        }
        source.stop();
        analyzer.onaudioprocess = null;
        source.disconnect(analyzer);
        analyzer.disconnect(nativeAudioContext.destination);
      };
      source.start();
    }
  });
};

// node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js
var visitEachAudioNodeOnce = (cycles, visitor) => {
  const counts = new Map;
  for (const cycle of cycles) {
    for (const audioNode of cycle) {
      const count = counts.get(audioNode);
      counts.set(audioNode, count === undefined ? 1 : count + 1);
    }
  }
  counts.forEach((count, audioNode) => visitor(audioNode, count));
};

// node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js
var isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {
  return "context" in nativeAudioNodeOrAudioParam;
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js
var wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {
  const connections = new Map;
  nativeAudioNode.connect = ((connect) => {
    return (destination, output = 0, input = 0) => {
      const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);
      const connectionsToDestination = connections.get(destination);
      if (connectionsToDestination === undefined) {
        connections.set(destination, [{ input, output }]);
      } else {
        if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {
          connectionsToDestination.push({ input, output });
        }
      }
      return returnValue;
    };
  })(nativeAudioNode.connect.bind(nativeAudioNode));
  nativeAudioNode.disconnect = ((disconnect) => {
    return (destinationOrOutput, output, input) => {
      disconnect.apply(nativeAudioNode);
      if (destinationOrOutput === undefined) {
        connections.clear();
      } else if (typeof destinationOrOutput === "number") {
        for (const [destination, connectionsToDestination] of connections) {
          const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);
          if (filteredConnections.length === 0) {
            connections.delete(destination);
          } else {
            connections.set(destination, filteredConnections);
          }
        }
      } else if (connections.has(destinationOrOutput)) {
        if (output === undefined) {
          connections.delete(destinationOrOutput);
        } else {
          const connectionsToDestination = connections.get(destinationOrOutput);
          if (connectionsToDestination !== undefined) {
            const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));
            if (filteredConnections.length === 0) {
              connections.delete(destinationOrOutput);
            } else {
              connections.set(destinationOrOutput, filteredConnections);
            }
          }
        }
      }
      for (const [destination, connectionsToDestination] of connections) {
        connectionsToDestination.forEach((connection) => {
          if (isNativeAudioNode(destination)) {
            nativeAudioNode.connect(destination, connection.output, connection.input);
          } else {
            nativeAudioNode.connect(destination, connection.output);
          }
        });
      }
    };
  })(nativeAudioNode.disconnect);
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js
var addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {
  const { activeInputs, passiveInputs } = getAudioParamConnections(destination);
  const { outputs } = getAudioNodeConnections(source);
  const eventListeners = getEventListenersOfAudioNode(source);
  const eventListener = (isActive) => {
    const nativeAudioNode = getNativeAudioNode(source);
    const nativeAudioParam = getNativeAudioParam(destination);
    if (isActive) {
      const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);
      addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);
      if (!isOffline && !isPartOfACycle(source)) {
        nativeAudioNode.connect(nativeAudioParam, output);
      }
    } else {
      const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);
      addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);
      if (!isOffline && !isPartOfACycle(source)) {
        nativeAudioNode.disconnect(nativeAudioParam, output);
      }
    }
  };
  if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {
    eventListeners.add(eventListener);
    if (isActiveAudioNode(source)) {
      addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);
    } else {
      addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);
    }
    return true;
  }
  return false;
};
var deleteInputConnectionOfAudioNode = (source, destination, output, input) => {
  const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);
  const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);
  if (activeInputConnection === null) {
    const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);
    return [passiveInputConnection[2], false];
  }
  return [activeInputConnection[2], true];
};
var deleteInputConnectionOfAudioParam = (source, destination, output) => {
  const { activeInputs, passiveInputs } = getAudioParamConnections(destination);
  const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);
  if (activeInputConnection === null) {
    const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);
    return [passiveInputConnection[1], false];
  }
  return [activeInputConnection[2], true];
};
var deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {
  const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);
  if (listener !== null) {
    deleteEventListenerOfAudioNode(source, listener);
    if (isActive && !isOffline && !isPartOfACycle(source)) {
      disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);
    }
  }
  if (isActiveAudioNode(destination)) {
    const { activeInputs } = getAudioNodeConnections(destination);
    setInternalStateToPassiveWhenNecessary(destination, activeInputs);
  }
};
var deleteInputsOfAudioParam = (source, isOffline, destination, output) => {
  const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);
  if (listener !== null) {
    deleteEventListenerOfAudioNode(source, listener);
    if (isActive && !isOffline && !isPartOfACycle(source)) {
      getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);
    }
  }
};
var deleteAnyConnection = (source, isOffline) => {
  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);
  const destinations = [];
  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {
    if (isAudioNodeOutputConnection(outputConnection)) {
      deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
    } else {
      deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
    }
    destinations.push(outputConnection[0]);
  }
  audioNodeConnectionsOfSource.outputs.clear();
  return destinations;
};
var deleteConnectionAtOutput = (source, isOffline, output) => {
  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);
  const destinations = [];
  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {
    if (outputConnection[1] === output) {
      if (isAudioNodeOutputConnection(outputConnection)) {
        deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
      } else {
        deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
      }
      destinations.push(outputConnection[0]);
      audioNodeConnectionsOfSource.outputs.delete(outputConnection);
    }
  }
  return destinations;
};
var deleteConnectionToDestination = (source, isOffline, destination, output, input) => {
  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);
  return Array.from(audioNodeConnectionsOfSource.outputs).filter((outputConnection) => outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input)).map((outputConnection) => {
    if (isAudioNodeOutputConnection(outputConnection)) {
      deleteInputsOfAudioNode(source, isOffline, ...outputConnection);
    } else {
      deleteInputsOfAudioParam(source, isOffline, ...outputConnection);
    }
    audioNodeConnectionsOfSource.outputs.delete(outputConnection);
    return outputConnection[0];
  });
};
var createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError2, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode2, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {
  return class AudioNode extends eventTargetConstructor {
    constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {
      super(nativeAudioNode);
      this._context = context;
      this._nativeAudioNode = nativeAudioNode;
      const nativeContext = getNativeContext(context);
      if (isNativeAudioContext(nativeContext) && cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {
        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);
      }) !== true) {
        wrapAudioNodeDisconnectMethod(nativeAudioNode);
      }
      AUDIO_NODE_STORE.set(this, nativeAudioNode);
      EVENT_LISTENERS.set(this, new Set);
      if (context.state !== "closed" && isActive) {
        setInternalStateToActive(this);
      }
      addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);
    }
    get channelCount() {
      return this._nativeAudioNode.channelCount;
    }
    set channelCount(value) {
      this._nativeAudioNode.channelCount = value;
    }
    get channelCountMode() {
      return this._nativeAudioNode.channelCountMode;
    }
    set channelCountMode(value) {
      this._nativeAudioNode.channelCountMode = value;
    }
    get channelInterpretation() {
      return this._nativeAudioNode.channelInterpretation;
    }
    set channelInterpretation(value) {
      this._nativeAudioNode.channelInterpretation = value;
    }
    get context() {
      return this._context;
    }
    get numberOfInputs() {
      return this._nativeAudioNode.numberOfInputs;
    }
    get numberOfOutputs() {
      return this._nativeAudioNode.numberOfOutputs;
    }
    connect(destination, output = 0, input = 0) {
      if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {
        throw createIndexSizeError2();
      }
      const nativeContext = getNativeContext(this._context);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      if (isNativeAudioNode2(destination) || isNativeAudioParam(destination)) {
        throw createInvalidAccessError();
      }
      if (isAudioNode(destination)) {
        const nativeDestinationAudioNode = getNativeAudioNode(destination);
        try {
          const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);
          const isPassive = isPassiveAudioNode(this);
          if (isOffline || isPassive) {
            this._nativeAudioNode.disconnect(...connection);
          }
          if (this.context.state !== "closed" && !isPassive && isPassiveAudioNode(destination)) {
            setInternalStateToActive(destination);
          }
        } catch (err) {
          if (err.code === 12) {
            throw createInvalidAccessError();
          }
          throw err;
        }
        const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);
        if (isNewConnectionToAudioNode) {
          const cycles = detectCycles([this], destination);
          visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));
        }
        return destination;
      }
      const nativeAudioParam = getNativeAudioParam(destination);
      if (nativeAudioParam.name === "playbackRate" && nativeAudioParam.maxValue === 1024) {
        throw createNotSupportedError();
      }
      try {
        this._nativeAudioNode.connect(nativeAudioParam, output);
        if (isOffline || isPassiveAudioNode(this)) {
          this._nativeAudioNode.disconnect(nativeAudioParam, output);
        }
      } catch (err) {
        if (err.code === 12) {
          throw createInvalidAccessError();
        }
        throw err;
      }
      const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);
      if (isNewConnectionToAudioParam) {
        const cycles = detectCycles([this], destination);
        visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));
      }
    }
    disconnect(destinationOrOutput, output, input) {
      let destinations;
      const nativeContext = getNativeContext(this._context);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      if (destinationOrOutput === undefined) {
        destinations = deleteAnyConnection(this, isOffline);
      } else if (typeof destinationOrOutput === "number") {
        if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {
          throw createIndexSizeError2();
        }
        destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);
      } else {
        if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {
          throw createIndexSizeError2();
        }
        if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {
          throw createIndexSizeError2();
        }
        destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);
        if (destinations.length === 0) {
          throw createInvalidAccessError();
        }
      }
      for (const destination of destinations) {
        const cycles = detectCycles([this], destination);
        visitEachAudioNodeOnce(cycles, decrementCycleCounter);
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js
var import_automation_events = __toESM(require_bundle(), 1);
var createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {
  return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {
    const defaultValue = nativeAudioParam.value;
    const automationEventList = new import_automation_events.AutomationEventList(defaultValue);
    const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;
    const audioParam = {
      get defaultValue() {
        return defaultValue;
      },
      get maxValue() {
        return maxValue === null ? nativeAudioParam.maxValue : maxValue;
      },
      get minValue() {
        return minValue === null ? nativeAudioParam.minValue : minValue;
      },
      get value() {
        return nativeAudioParam.value;
      },
      set value(value) {
        nativeAudioParam.value = value;
        audioParam.setValueAtTime(value, audioNode.context.currentTime);
      },
      cancelAndHoldAtTime(cancelTime) {
        if (typeof nativeAudioParam.cancelAndHoldAtTime === "function") {
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }
          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
          nativeAudioParam.cancelAndHoldAtTime(cancelTime);
        } else {
          const previousLastEvent = Array.from(automationEventList).pop();
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }
          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
          const currentLastEvent = Array.from(automationEventList).pop();
          nativeAudioParam.cancelScheduledValues(cancelTime);
          if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {
            if (currentLastEvent.type === "exponentialRampToValue") {
              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
            } else if (currentLastEvent.type === "linearRampToValue") {
              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
            } else if (currentLastEvent.type === "setValue") {
              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);
            } else if (currentLastEvent.type === "setValueCurve") {
              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);
            }
          }
        }
        return audioParam;
      },
      cancelScheduledValues(cancelTime) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }
        automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));
        nativeAudioParam.cancelScheduledValues(cancelTime);
        return audioParam;
      },
      exponentialRampToValueAtTime(value, endTime) {
        if (value === 0) {
          throw new RangeError;
        }
        if (!Number.isFinite(endTime) || endTime < 0) {
          throw new RangeError;
        }
        const currentTime = audioNode.context.currentTime;
        if (audioParamRenderer === null) {
          automationEventList.flush(currentTime);
        }
        if (Array.from(automationEventList).length === 0) {
          automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));
          nativeAudioParam.setValueAtTime(defaultValue, currentTime);
        }
        automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));
        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);
        return audioParam;
      },
      linearRampToValueAtTime(value, endTime) {
        const currentTime = audioNode.context.currentTime;
        if (audioParamRenderer === null) {
          automationEventList.flush(currentTime);
        }
        if (Array.from(automationEventList).length === 0) {
          automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));
          nativeAudioParam.setValueAtTime(defaultValue, currentTime);
        }
        automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));
        nativeAudioParam.linearRampToValueAtTime(value, endTime);
        return audioParam;
      },
      setTargetAtTime(target, startTime, timeConstant) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }
        automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));
        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);
        return audioParam;
      },
      setValueAtTime(value, startTime) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }
        automationEventList.add(createSetValueAutomationEvent(value, startTime));
        nativeAudioParam.setValueAtTime(value, startTime);
        return audioParam;
      },
      setValueCurveAtTime(values, startTime, duration) {
        const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);
        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext") {
          const endTime = startTime + duration;
          const sampleRate = audioNode.context.sampleRate;
          const firstSample = Math.ceil(startTime * sampleRate);
          const lastSample = Math.floor(endTime * sampleRate);
          const numberOfInterpolatedValues = lastSample - firstSample;
          const interpolatedValues = new Float32Array(numberOfInterpolatedValues);
          for (let i = 0;i < numberOfInterpolatedValues; i += 1) {
            const theoreticIndex = (convertedValues.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);
            const lowerIndex = Math.floor(theoreticIndex);
            const upperIndex = Math.ceil(theoreticIndex);
            interpolatedValues[i] = lowerIndex === upperIndex ? convertedValues[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];
          }
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }
          automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));
          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);
          const timeOfLastSample = lastSample / sampleRate;
          if (timeOfLastSample < endTime) {
            setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);
          }
          setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);
        } else {
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }
          automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));
          nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);
        }
        return audioParam;
      }
    };
    audioParamStore.set(audioParam, nativeAudioParam);
    audioParamAudioNodeStore.set(audioParam, audioNode);
    addAudioParamConnections(audioParam, audioParamRenderer);
    return audioParam;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js
var createAudioParamRenderer = (automationEventList) => {
  return {
    replay(audioParam) {
      for (const automationEvent of automationEventList) {
        if (automationEvent.type === "exponentialRampToValue") {
          const { endTime, value } = automationEvent;
          audioParam.exponentialRampToValueAtTime(value, endTime);
        } else if (automationEvent.type === "linearRampToValue") {
          const { endTime, value } = automationEvent;
          audioParam.linearRampToValueAtTime(value, endTime);
        } else if (automationEvent.type === "setTarget") {
          const { startTime, target, timeConstant } = automationEvent;
          audioParam.setTargetAtTime(target, startTime, timeConstant);
        } else if (automationEvent.type === "setValue") {
          const { startTime, value } = automationEvent;
          audioParam.setValueAtTime(value, startTime);
        } else if (automationEvent.type === "setValueCurve") {
          const { duration, startTime, values } = automationEvent;
          audioParam.setValueCurveAtTime(values, startTime, duration);
        } else {
          throw new Error("Can't apply an unknown automation.");
        }
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/read-only-map.js
class ReadOnlyMap {
  constructor(parameters) {
    this._map = new Map(parameters);
  }
  get size() {
    return this._map.size;
  }
  entries() {
    return this._map.entries();
  }
  forEach(callback, thisArg = null) {
    return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));
  }
  get(name) {
    return this._map.get(name);
  }
  has(name) {
    return this._map.has(name);
  }
  keys() {
    return this._map.keys();
  }
  values() {
    return this._map.values();
  }
}

// node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js
var DEFAULT_OPTIONS4 = {
  channelCount: 2,
  channelCountMode: "explicit",
  channelInterpretation: "speakers",
  numberOfInputs: 1,
  numberOfOutputs: 1,
  parameterData: {},
  processorOptions: {}
};
var createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections2, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {
  return class AudioWorkletNode extends audioNodeConstructor {
    constructor(context, name, options) {
      var _a;
      const nativeContext = getNativeContext(context);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS4, ...options });
      testAudioWorkletNodeOptionsClonability(mergedOptions);
      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);
      const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === undefined ? undefined : nodeNameToProcessorConstructorMap.get(name);
      const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== "closed" ? nativeContext : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== undefined ? _a : nativeContext;
      const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);
      const audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;
      super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);
      const parameters = [];
      nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {
        const audioParam = createAudioParam(this, isOffline, nativeAudioParam);
        parameters.push([nm, audioParam]);
      });
      this._nativeAudioWorkletNode = nativeAudioWorkletNode;
      this._onprocessorerror = null;
      this._parameters = new ReadOnlyMap(parameters);
      if (isOffline) {
        addUnrenderedAudioWorkletNode(nativeContext, this);
      }
      const { activeInputs } = getAudioNodeConnections2(this);
      setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);
    }
    get onprocessorerror() {
      return this._onprocessorerror;
    }
    set onprocessorerror(value) {
      const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
      this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;
      const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;
      this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;
    }
    get parameters() {
      if (this._parameters === null) {
        return this._nativeAudioWorkletNode.parameters;
      }
      return this._parameters;
    }
    get port() {
      return this._nativeAudioWorkletNode.port;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js
function copyFromChannel(audioBuffer, parent, key, channelNumber, bufferOffset) {
  if (typeof audioBuffer.copyFromChannel === "function") {
    if (parent[key].byteLength === 0) {
      parent[key] = new Float32Array(128);
    }
    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);
  } else {
    const channelData = audioBuffer.getChannelData(channelNumber);
    if (parent[key].byteLength === 0) {
      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);
    } else {
      const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);
      parent[key].set(slicedInput);
    }
  }
}

// node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js
var copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {
  if (typeof audioBuffer.copyToChannel === "function") {
    if (parent[key].byteLength !== 0) {
      audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);
    }
  } else {
    if (parent[key].byteLength !== 0) {
      audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);
    }
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js
var createNestedArrays = (x, y) => {
  const arrays = [];
  for (let i = 0;i < x; i += 1) {
    const array = [];
    const length = typeof y === "number" ? y : y[i];
    for (let j = 0;j < length; j += 1) {
      array.push(new Float32Array(128));
    }
    arrays.push(array);
  }
  return arrays;
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js
var getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {
  const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);
  const nativeAudioWorkletNode = getNativeAudioNode(proxy);
  return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);
};

// node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js
var processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {
  const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;
  const numberOfInputChannels = options.channelCount * options.numberOfInputs;
  const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
  const processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);
  if (processorConstructor === undefined) {
    throw new Error("Missing the processor constructor.");
  }
  const audioNodeConnections = getAudioNodeConnections(proxy);
  const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);
  const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);
  const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);
  const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});
  for (let i = 0;i < length; i += 128) {
    if (options.numberOfInputs > 0 && renderedBuffer !== null) {
      for (let j = 0;j < options.numberOfInputs; j += 1) {
        for (let k = 0;k < options.channelCount; k += 1) {
          copyFromChannel(renderedBuffer, inputs[j], k, k, i);
        }
      }
    }
    if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {
      processorConstructor.parameterDescriptors.forEach(({ name }, index) => {
        copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);
      });
    }
    for (let j = 0;j < options.numberOfInputs; j += 1) {
      for (let k = 0;k < outputChannelCount[j]; k += 1) {
        if (outputs[j][k].byteLength === 0) {
          outputs[j][k] = new Float32Array(128);
        }
      }
    }
    try {
      const potentiallyEmptyInputs = inputs.map((input, index) => {
        if (audioNodeConnections.activeInputs[index].size === 0) {
          return [];
        }
        return input;
      });
      const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
      if (processedBuffer !== null) {
        for (let j = 0, outputChannelSplitterNodeOutput = 0;j < options.numberOfOutputs; j += 1) {
          for (let k = 0;k < outputChannelCount[j]; k += 1) {
            copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
          }
          outputChannelSplitterNodeOutput += outputChannelCount[j];
        }
      }
      if (!activeSourceFlag) {
        break;
      }
    } catch (error) {
      proxy.dispatchEvent(new ErrorEvent("processorerror", {
        colno: error.colno,
        filename: error.filename,
        lineno: error.lineno,
        message: error.message
      }));
      break;
    }
  }
  return processedBuffer;
};
var createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode2, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
  return (name, options, processorConstructor) => {
    const renderedNativeAudioNodes = new WeakMap;
    let processedBufferPromise = null;
    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAudioWorkletNode = getNativeAudioNode2(proxy);
      let nativeOutputNodes = null;
      const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);
      const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);
      if (nativeAudioWorkletNodeConstructor === null) {
        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {
          channelCount: Math.max(1, numberOfOutputChannels),
          channelCountMode: "explicit",
          channelInterpretation: "discrete",
          numberOfOutputs: Math.max(1, numberOfOutputChannels)
        });
        const outputChannelMergerNodes = [];
        for (let i = 0;i < proxy.numberOfOutputs; i += 1) {
          outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "speakers",
            numberOfInputs: outputChannelCount[i]
          }));
        }
        const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
          channelCount: options.channelCount,
          channelCountMode: options.channelCountMode,
          channelInterpretation: options.channelInterpretation,
          gain: 1
        });
        outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);
        outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);
        nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];
      } else if (!nativeAudioWorkletNodeIsOwnedByContext) {
        nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);
      }
      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);
      if (nativeOutputNodes !== null) {
        if (processedBufferPromise === null) {
          if (processorConstructor === undefined) {
            throw new Error("Missing the processor constructor.");
          }
          if (nativeOfflineAudioContextConstructor === null) {
            throw new Error("Missing the native OfflineAudioContext constructor.");
          }
          const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;
          const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
          const numberOfChannels = numberOfInputChannels + numberOfParameters;
          const renderBuffer = async () => {
            const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);
            const gainNodes = [];
            const inputChannelSplitterNodes = [];
            for (let i = 0;i < options.numberOfInputs; i += 1) {
              gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {
                channelCount: options.channelCount,
                channelCountMode: options.channelCountMode,
                channelInterpretation: options.channelInterpretation,
                gain: 1
              }));
              inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {
                channelCount: options.channelCount,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                numberOfOutputs: options.channelCount
              }));
            }
            const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {
              const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                offset: audioParam.value
              });
              await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);
              return constantSourceNode;
            }));
            const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
              channelCount: 1,
              channelCountMode: "explicit",
              channelInterpretation: "speakers",
              numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
            });
            for (let i = 0;i < options.numberOfInputs; i += 1) {
              gainNodes[i].connect(inputChannelSplitterNodes[i]);
              for (let j = 0;j < options.channelCount; j += 1) {
                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
              }
            }
            for (const [index, constantSourceNode] of constantSourceNodes.entries()) {
              constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
              constantSourceNode.start(0);
            }
            inputChannelMergerNode.connect(partialOfflineAudioContext.destination);
            await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));
            return renderNativeOfflineAudioContext(partialOfflineAudioContext);
          };
          processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);
        }
        const processedBuffer = await processedBufferPromise;
        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
          buffer: null,
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          loop: false,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1
        });
        const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;
        if (processedBuffer !== null) {
          audioBufferSourceNode.buffer = processedBuffer;
          audioBufferSourceNode.start(0);
        }
        audioBufferSourceNode.connect(outputChannelSplitterNode);
        for (let i = 0, outputChannelSplitterNodeOutput = 0;i < proxy.numberOfOutputs; i += 1) {
          const outputChannelMergerNode = outputChannelMergerNodes[i];
          for (let j = 0;j < outputChannelCount[i]; j += 1) {
            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
          }
          outputChannelSplitterNodeOutput += outputChannelCount[i];
        }
        return outputGainNode;
      }
      if (!nativeAudioWorkletNodeIsOwnedByContext) {
        for (const [nm, audioParam] of proxy.parameters.entries()) {
          await renderAutomation(nativeOfflineAudioContext, audioParam, nativeAudioWorkletNode.parameters.get(nm));
        }
      } else {
        for (const [nm, audioParam] of proxy.parameters.entries()) {
          await connectAudioParam(nativeOfflineAudioContext, audioParam, nativeAudioWorkletNode.parameters.get(nm));
        }
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);
      return nativeAudioWorkletNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);
        const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {
          return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);
        }
        return createAudioNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js
var createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {
  return class BaseAudioContext extends minimalBaseAudioContextConstructor {
    constructor(_nativeContext, numberOfChannels) {
      super(_nativeContext, numberOfChannels);
      this._nativeContext = _nativeContext;
      this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {
        addModule: (moduleURL, options) => {
          return addAudioWorkletModule(this, moduleURL, options);
        }
      };
    }
    get audioWorklet() {
      return this._audioWorklet;
    }
    createAnalyser() {
      return new analyserNodeConstructor(this);
    }
    createBiquadFilter() {
      return new biquadFilterNodeConstructor(this);
    }
    createBuffer(numberOfChannels, length, sampleRate) {
      return new audioBufferConstructor({ length, numberOfChannels, sampleRate });
    }
    createBufferSource() {
      return new audioBufferSourceNodeConstructor(this);
    }
    createChannelMerger(numberOfInputs = 6) {
      return new channelMergerNodeConstructor(this, { numberOfInputs });
    }
    createChannelSplitter(numberOfOutputs = 6) {
      return new channelSplitterNodeConstructor(this, { numberOfOutputs });
    }
    createConstantSource() {
      return new constantSourceNodeConstructor(this);
    }
    createConvolver() {
      return new convolverNodeConstructor(this);
    }
    createDelay(maxDelayTime = 1) {
      return new delayNodeConstructor(this, { maxDelayTime });
    }
    createDynamicsCompressor() {
      return new dynamicsCompressorNodeConstructor(this);
    }
    createGain() {
      return new gainNodeConstructor(this);
    }
    createIIRFilter(feedforward, feedback) {
      return new iIRFilterNodeConstructor(this, { feedback, feedforward });
    }
    createOscillator() {
      return new oscillatorNodeConstructor(this);
    }
    createPanner() {
      return new pannerNodeConstructor(this);
    }
    createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {
      return new periodicWaveConstructor(this, { ...constraints, imag, real });
    }
    createStereoPanner() {
      return new stereoPannerNodeConstructor(this);
    }
    createWaveShaper() {
      return new waveShaperNodeConstructor(this);
    }
    decodeAudioData(audioData, successCallback, errorCallback) {
      return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {
        if (typeof successCallback === "function") {
          successCallback(audioBuffer);
        }
        return audioBuffer;
      }, (err) => {
        if (typeof errorCallback === "function") {
          errorCallback(err);
        }
        throw err;
      });
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js
var DEFAULT_OPTIONS5 = {
  Q: 1,
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  detune: 0,
  frequency: 350,
  gain: 0,
  type: "lowpass"
};
var createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class BiquadFilterNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS5, ...options };
      const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;
      super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);
      this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));
      this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);
      this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);
      this._nativeBiquadFilterNode = nativeBiquadFilterNode;
      setAudioNodeTailTime(this, 1);
    }
    get detune() {
      return this._detune;
    }
    get frequency() {
      return this._frequency;
    }
    get gain() {
      return this._gain;
    }
    get Q() {
      return this._Q;
    }
    get type() {
      return this._nativeBiquadFilterNode.type;
    }
    set type(value) {
      this._nativeBiquadFilterNode.type = value;
    }
    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
      try {
        this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
      } catch (err) {
        if (err.code === 11) {
          throw createInvalidAccessError();
        }
        throw err;
      }
      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
        throw createInvalidAccessError();
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js
var createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeBiquadFilterNodes = new WeakMap;
    const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeBiquadFilterNode = getNativeAudioNode2(proxy);
      const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);
      if (!nativeBiquadFilterNodeIsOwnedByContext) {
        const options = {
          Q: nativeBiquadFilterNode.Q.value,
          channelCount: nativeBiquadFilterNode.channelCount,
          channelCountMode: nativeBiquadFilterNode.channelCountMode,
          channelInterpretation: nativeBiquadFilterNode.channelInterpretation,
          detune: nativeBiquadFilterNode.detune.value,
          frequency: nativeBiquadFilterNode.frequency.value,
          gain: nativeBiquadFilterNode.gain.value,
          type: nativeBiquadFilterNode.type
        };
        nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);
      }
      renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);
      if (!nativeBiquadFilterNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);
        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);
        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);
        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);
        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);
        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);
        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);
      return nativeBiquadFilterNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);
        if (renderedNativeBiquadFilterNode !== undefined) {
          return Promise.resolve(renderedNativeBiquadFilterNode);
        }
        return createBiquadFilterNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js
var createCacheTestResult = (ongoingTests, testResults) => {
  return (tester, test) => {
    const cachedTestResult = testResults.get(tester);
    if (cachedTestResult !== undefined) {
      return cachedTestResult;
    }
    const ongoingTest = ongoingTests.get(tester);
    if (ongoingTest !== undefined) {
      return ongoingTest;
    }
    try {
      const synchronousTestResult = test();
      if (synchronousTestResult instanceof Promise) {
        ongoingTests.set(tester, synchronousTestResult);
        return synchronousTestResult.catch(() => false).then((finalTestResult) => {
          ongoingTests.delete(tester);
          testResults.set(tester, finalTestResult);
          return finalTestResult;
        });
      }
      testResults.set(tester, synchronousTestResult);
      return synchronousTestResult;
    } catch {
      testResults.set(tester, false);
      return false;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js
var DEFAULT_OPTIONS6 = {
  channelCount: 1,
  channelCountMode: "explicit",
  channelInterpretation: "speakers",
  numberOfInputs: 6
};
var createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class ChannelMergerNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS6, ...options };
      const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
      const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;
      super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js
var createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode2, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeAudioNodes = new WeakMap;
    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAudioNode = getNativeAudioNode2(proxy);
      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);
      if (!nativeAudioNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeAudioNode.channelCount,
          channelCountMode: nativeAudioNode.channelCountMode,
          channelInterpretation: nativeAudioNode.channelInterpretation,
          numberOfInputs: nativeAudioNode.numberOfInputs
        };
        nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);
      }
      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);
      return nativeAudioNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }
        return createAudioNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js
var DEFAULT_OPTIONS7 = {
  channelCount: 6,
  channelCountMode: "explicit",
  channelInterpretation: "discrete",
  numberOfOutputs: 6
};
var createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {
  return class ChannelSplitterNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS7, ...options });
      const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);
      const channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;
      super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js
var createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode2, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeAudioNodes = new WeakMap;
    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAudioNode = getNativeAudioNode2(proxy);
      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);
      if (!nativeAudioNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeAudioNode.channelCount,
          channelCountMode: nativeAudioNode.channelCountMode,
          channelInterpretation: nativeAudioNode.channelInterpretation,
          numberOfOutputs: nativeAudioNode.numberOfOutputs
        };
        nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);
      }
      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);
      return nativeAudioNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }
        return createAudioNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js
var createConnectAudioParam = (renderInputsOfAudioParam) => {
  return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {
    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js
var createConnectMultipleOutputs = (createIndexSizeError2) => {
  return (outputAudioNodes, destination, output = 0, input = 0) => {
    const outputAudioNode = outputAudioNodes[output];
    if (outputAudioNode === undefined) {
      throw createIndexSizeError2();
    }
    if (isNativeAudioNode(destination)) {
      return outputAudioNode.connect(destination, 0, input);
    }
    return outputAudioNode.connect(destination, 0);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js
var createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {
  return (nativeContext, nativeAudioNode) => {
    const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
      buffer: null,
      channelCount: 2,
      channelCountMode: "max",
      channelInterpretation: "speakers",
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      playbackRate: 1
    });
    const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    nativeAudioBufferSourceNode.loop = true;
    nativeAudioBufferSourceNode.connect(nativeAudioNode);
    nativeAudioBufferSourceNode.start();
    return () => {
      nativeAudioBufferSourceNode.stop();
      nativeAudioBufferSourceNode.disconnect(nativeAudioNode);
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js
var DEFAULT_OPTIONS8 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  offset: 1
};
var createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
  return class ConstantSourceNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS8, ...options };
      const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;
      super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);
      this._constantSourceNodeRenderer = constantSourceNodeRenderer;
      this._nativeConstantSourceNode = nativeConstantSourceNode;
      this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._onended = null;
    }
    get offset() {
      return this._offset;
    }
    get onended() {
      return this._onended;
    }
    set onended(value) {
      const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
      this._nativeConstantSourceNode.onended = wrappedListener;
      const nativeOnEnded = this._nativeConstantSourceNode.onended;
      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
    }
    start(when = 0) {
      this._nativeConstantSourceNode.start(when);
      if (this._constantSourceNodeRenderer !== null) {
        this._constantSourceNodeRenderer.start = when;
      }
      if (this.context.state !== "closed") {
        setInternalStateToActive(this);
        const resetInternalStateToPassive = () => {
          this._nativeConstantSourceNode.removeEventListener("ended", resetInternalStateToPassive);
          if (isActiveAudioNode(this)) {
            setInternalStateToPassive(this);
          }
        };
        this._nativeConstantSourceNode.addEventListener("ended", resetInternalStateToPassive);
      }
    }
    stop(when = 0) {
      this._nativeConstantSourceNode.stop(when);
      if (this._constantSourceNodeRenderer !== null) {
        this._constantSourceNodeRenderer.stop = when;
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js
var createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeConstantSourceNodes = new WeakMap;
    let start = null;
    let stop = null;
    const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeConstantSourceNode = getNativeAudioNode2(proxy);
      const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);
      if (!nativeConstantSourceNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeConstantSourceNode.channelCount,
          channelCountMode: nativeConstantSourceNode.channelCountMode,
          channelInterpretation: nativeConstantSourceNode.channelInterpretation,
          offset: nativeConstantSourceNode.offset.value
        };
        nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);
        if (start !== null) {
          nativeConstantSourceNode.start(start);
        }
        if (stop !== null) {
          nativeConstantSourceNode.stop(stop);
        }
      }
      renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);
      if (!nativeConstantSourceNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);
      return nativeConstantSourceNode;
    };
    return {
      set start(value) {
        start = value;
      },
      set stop(value) {
        stop = value;
      },
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);
        if (renderedNativeConstantSourceNode !== undefined) {
          return Promise.resolve(renderedNativeConstantSourceNode);
        }
        return createConstantSourceNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js
var createConvertNumberToUnsignedLong = (unit32Array) => {
  return (value) => {
    unit32Array[0] = value;
    return unit32Array[0];
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js
var DEFAULT_OPTIONS9 = {
  buffer: null,
  channelCount: 2,
  channelCountMode: "clamped-max",
  channelInterpretation: "speakers",
  disableNormalization: false
};
var createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class ConvolverNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS9, ...options };
      const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;
      super(context, false, nativeConvolverNode, convolverNodeRenderer);
      this._isBufferNullified = false;
      this._nativeConvolverNode = nativeConvolverNode;
      if (mergedOptions.buffer !== null) {
        setAudioNodeTailTime(this, mergedOptions.buffer.duration);
      }
    }
    get buffer() {
      if (this._isBufferNullified) {
        return null;
      }
      return this._nativeConvolverNode.buffer;
    }
    set buffer(value) {
      this._nativeConvolverNode.buffer = value;
      if (value === null && this._nativeConvolverNode.buffer !== null) {
        const nativeContext = this._nativeConvolverNode.context;
        this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);
        this._isBufferNullified = true;
        setAudioNodeTailTime(this, 0);
      } else {
        this._isBufferNullified = false;
        setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);
      }
    }
    get normalize() {
      return this._nativeConvolverNode.normalize;
    }
    set normalize(value) {
      this._nativeConvolverNode.normalize = value;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js
var createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode2, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeConvolverNodes = new WeakMap;
    const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeConvolverNode = getNativeAudioNode2(proxy);
      const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);
      if (!nativeConvolverNodeIsOwnedByContext) {
        const options = {
          buffer: nativeConvolverNode.buffer,
          channelCount: nativeConvolverNode.channelCount,
          channelCountMode: nativeConvolverNode.channelCountMode,
          channelInterpretation: nativeConvolverNode.channelInterpretation,
          disableNormalization: !nativeConvolverNode.normalize
        };
        nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);
      }
      renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);
      if (isNativeAudioNodeFaker(nativeConvolverNode)) {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);
      } else {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);
      }
      return nativeConvolverNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);
        if (renderedNativeConvolverNode !== undefined) {
          return Promise.resolve(renderedNativeConvolverNode);
        }
        return createConvolverNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js
var createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {
  return (numberOfChannels, length, sampleRate) => {
    if (nativeOfflineAudioContextConstructor === null) {
      throw new Error("Missing the native OfflineAudioContext constructor.");
    }
    try {
      return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);
    } catch (err) {
      if (err.name === "SyntaxError") {
        throw createNotSupportedError();
      }
      throw err;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js
var createDataCloneError = () => new DOMException("", "DataCloneError");

// node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js
var detachArrayBuffer = (arrayBuffer) => {
  const { port1, port2 } = new MessageChannel;
  return new Promise((resolve) => {
    const closeAndResolve = () => {
      port2.onmessage = null;
      port1.close();
      port2.close();
      resolve();
    };
    port2.onmessage = () => closeAndResolve();
    try {
      port1.postMessage(arrayBuffer, [arrayBuffer]);
    } catch {
    } finally {
      closeAndResolve();
    }
  });
};

// node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js
var createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError2, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
  return (anyContext, audioData) => {
    const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);
    if (detachedArrayBuffers.has(audioData)) {
      const err = createDataCloneError2();
      return Promise.reject(err);
    }
    try {
      detachedArrayBuffers.add(audioData);
    } catch {
    }
    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {
      return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {
        detachArrayBuffer(audioData).catch(() => {
        });
        if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport2(audioBuffer))) {
          wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
        }
        audioBufferStore.add(audioBuffer);
        return audioBuffer;
      });
    }
    return new Promise((resolve, reject) => {
      const complete = async () => {
        try {
          await detachArrayBuffer(audioData);
        } catch {
        }
      };
      const fail = (err) => {
        reject(err);
        complete();
      };
      try {
        nativeContext.decodeAudioData(audioData, (audioBuffer) => {
          if (typeof audioBuffer.copyFromChannel !== "function") {
            wrapAudioBufferCopyChannelMethods(audioBuffer);
            wrapAudioBufferGetChannelDataMethod(audioBuffer);
          }
          audioBufferStore.add(audioBuffer);
          complete().then(() => resolve(audioBuffer));
        }, (err) => {
          if (err === null) {
            fail(createEncodingError());
          } else {
            fail(err);
          }
        });
      } catch (err) {
        fail(err);
      }
    });
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js
var createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode2, cycleCounters, getAudioNodeConnections2, getNativeAudioNode2, getNativeAudioParam2, getNativeContext, isActiveAudioNode2, isNativeOfflineAudioContext) => {
  return (audioNode, count) => {
    const cycleCounter = cycleCounters.get(audioNode);
    if (cycleCounter === undefined) {
      throw new Error("Missing the expected cycle count.");
    }
    const nativeContext = getNativeContext(audioNode.context);
    const isOffline = isNativeOfflineAudioContext(nativeContext);
    if (cycleCounter === count) {
      cycleCounters.delete(audioNode);
      if (!isOffline && isActiveAudioNode2(audioNode)) {
        const nativeSourceAudioNode = getNativeAudioNode2(audioNode);
        const { outputs } = getAudioNodeConnections2(audioNode);
        for (const output of outputs) {
          if (isAudioNodeOutputConnection(output)) {
            const nativeDestinationAudioNode = getNativeAudioNode2(output[0]);
            connectNativeAudioNodeToNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
          } else {
            const nativeDestinationAudioParam = getNativeAudioParam2(output[0]);
            nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);
          }
        }
      }
    } else {
      cycleCounters.set(audioNode, cycleCounter - count);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js
var DEFAULT_OPTIONS10 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  delayTime: 0,
  maxDelayTime: 1
};
var createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class DelayNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS10, ...options };
      const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;
      super(context, false, nativeDelayNode, delayNodeRenderer);
      this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);
      setAudioNodeTailTime(this, mergedOptions.maxDelayTime);
    }
    get delayTime() {
      return this._delayTime;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js
var createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return (maxDelayTime) => {
    const renderedNativeDelayNodes = new WeakMap;
    const createDelayNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeDelayNode = getNativeAudioNode2(proxy);
      const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);
      if (!nativeDelayNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeDelayNode.channelCount,
          channelCountMode: nativeDelayNode.channelCountMode,
          channelInterpretation: nativeDelayNode.channelInterpretation,
          delayTime: nativeDelayNode.delayTime.value,
          maxDelayTime
        };
        nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);
      }
      renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);
      if (!nativeDelayNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);
      return nativeDelayNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);
        if (renderedNativeDelayNode !== undefined) {
          return Promise.resolve(renderedNativeDelayNode);
        }
        return createDelayNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js
var createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet2) => {
  return (activeInputs, source, output, input) => {
    return pickElementFromSet2(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js
var createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {
  return (nativeContext, audioWorkletNode) => {
    getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);
  };
};

// node_modules/standardized-audio-context/build/es2019/guards/delay-node.js
var isDelayNode = (audioNode) => {
  return "delayTime" in audioNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js
var createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections2, getValueForKey2) => {
  return function detectCycles(chain, nextLink) {
    const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey2(audioParamAudioNodeStore, nextLink);
    if (isDelayNode(audioNode)) {
      return [];
    }
    if (chain[0] === audioNode) {
      return [chain];
    }
    if (chain.includes(audioNode)) {
      return [];
    }
    const { outputs } = getAudioNodeConnections2(audioNode);
    return Array.from(outputs).map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0])).reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js
var getOutputAudioNodeAtIndex = (createIndexSizeError2, outputAudioNodes, output) => {
  const outputAudioNode = outputAudioNodes[output];
  if (outputAudioNode === undefined) {
    throw createIndexSizeError2();
  }
  return outputAudioNode;
};
var createDisconnectMultipleOutputs = (createIndexSizeError2) => {
  return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {
    if (destinationOrOutput === undefined) {
      return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());
    }
    if (typeof destinationOrOutput === "number") {
      return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, destinationOrOutput).disconnect();
    }
    if (isNativeAudioNode(destinationOrOutput)) {
      if (output === undefined) {
        return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));
      }
      if (input === undefined) {
        return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
      }
      return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);
    }
    if (output === undefined) {
      return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));
    }
    return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js
var DEFAULT_OPTIONS11 = {
  attack: 0.003,
  channelCount: 2,
  channelCountMode: "clamped-max",
  channelInterpretation: "speakers",
  knee: 30,
  ratio: 12,
  release: 0.25,
  threshold: -24
};
var createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class DynamicsCompressorNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS11, ...options };
      const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;
      super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);
      this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);
      this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);
      this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;
      this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);
      this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);
      this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);
      setAudioNodeTailTime(this, 0.006);
    }
    get attack() {
      return this._attack;
    }
    get channelCount() {
      return this._nativeDynamicsCompressorNode.channelCount;
    }
    set channelCount(value) {
      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;
      this._nativeDynamicsCompressorNode.channelCount = value;
      if (value > 2) {
        this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;
        throw createNotSupportedError();
      }
    }
    get channelCountMode() {
      return this._nativeDynamicsCompressorNode.channelCountMode;
    }
    set channelCountMode(value) {
      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;
      this._nativeDynamicsCompressorNode.channelCountMode = value;
      if (value === "max") {
        this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;
        throw createNotSupportedError();
      }
    }
    get knee() {
      return this._knee;
    }
    get ratio() {
      return this._ratio;
    }
    get reduction() {
      if (typeof this._nativeDynamicsCompressorNode.reduction.value === "number") {
        return this._nativeDynamicsCompressorNode.reduction.value;
      }
      return this._nativeDynamicsCompressorNode.reduction;
    }
    get release() {
      return this._release;
    }
    get threshold() {
      return this._threshold;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js
var createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeDynamicsCompressorNodes = new WeakMap;
    const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeDynamicsCompressorNode = getNativeAudioNode2(proxy);
      const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);
      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
        const options = {
          attack: nativeDynamicsCompressorNode.attack.value,
          channelCount: nativeDynamicsCompressorNode.channelCount,
          channelCountMode: nativeDynamicsCompressorNode.channelCountMode,
          channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,
          knee: nativeDynamicsCompressorNode.knee.value,
          ratio: nativeDynamicsCompressorNode.ratio.value,
          release: nativeDynamicsCompressorNode.release.value,
          threshold: nativeDynamicsCompressorNode.threshold.value
        };
        nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);
      }
      renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);
      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);
        await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);
        await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);
        await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);
        await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);
        await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);
        await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);
        await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);
        await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);
      return nativeDynamicsCompressorNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);
        if (renderedNativeDynamicsCompressorNode !== undefined) {
          return Promise.resolve(renderedNativeDynamicsCompressorNode);
        }
        return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js
var createEncodingError = () => new DOMException("", "EncodingError");

// node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js
var createEvaluateSource = (window2) => {
  return (source) => new Promise((resolve, reject) => {
    if (window2 === null) {
      reject(new SyntaxError);
      return;
    }
    const head = window2.document.head;
    if (head === null) {
      reject(new SyntaxError);
    } else {
      const script = window2.document.createElement("script");
      const blob = new Blob([source], { type: "application/javascript" });
      const url = URL.createObjectURL(blob);
      const originalOnErrorHandler = window2.onerror;
      const removeErrorEventListenerAndRevokeUrl = () => {
        window2.onerror = originalOnErrorHandler;
        URL.revokeObjectURL(url);
      };
      window2.onerror = (message, src, lineno, colno, error) => {
        if (src === url || src === window2.location.href && lineno === 1 && colno === 1) {
          removeErrorEventListenerAndRevokeUrl();
          reject(error);
          return false;
        }
        if (originalOnErrorHandler !== null) {
          return originalOnErrorHandler(message, src, lineno, colno, error);
        }
      };
      script.onerror = () => {
        removeErrorEventListenerAndRevokeUrl();
        reject(new SyntaxError);
      };
      script.onload = () => {
        removeErrorEventListenerAndRevokeUrl();
        resolve();
      };
      script.src = url;
      script.type = "module";
      head.appendChild(script);
    }
  });
};

// node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js
var createEventTargetConstructor = (wrapEventListener) => {
  return class EventTarget {
    constructor(_nativeEventTarget) {
      this._nativeEventTarget = _nativeEventTarget;
      this._listeners = new WeakMap;
    }
    addEventListener(type, listener, options) {
      if (listener !== null) {
        let wrappedEventListener = this._listeners.get(listener);
        if (wrappedEventListener === undefined) {
          wrappedEventListener = wrapEventListener(this, listener);
          if (typeof listener === "function") {
            this._listeners.set(listener, wrappedEventListener);
          }
        }
        this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
      }
    }
    dispatchEvent(event) {
      return this._nativeEventTarget.dispatchEvent(event);
    }
    removeEventListener(type, listener, options) {
      const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);
      this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js
var createExposeCurrentFrameAndCurrentTime = (window2) => {
  return (currentTime, sampleRate, fn) => {
    Object.defineProperties(window2, {
      currentFrame: {
        configurable: true,
        get() {
          return Math.round(currentTime * sampleRate);
        }
      },
      currentTime: {
        configurable: true,
        get() {
          return currentTime;
        }
      }
    });
    try {
      return fn();
    } finally {
      if (window2 !== null) {
        delete window2.currentFrame;
        delete window2.currentTime;
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js
var createFetchSource = (createAbortError2) => {
  return async (url) => {
    try {
      const response = await fetch(url);
      if (response.ok) {
        return [await response.text(), response.url];
      }
    } catch {
    }
    throw createAbortError2();
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js
var DEFAULT_OPTIONS12 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  gain: 1
};
var createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class GainNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS12, ...options };
      const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;
      super(context, false, nativeGainNode, gainNodeRenderer);
      this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
    }
    get gain() {
      return this._gain;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js
var createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeGainNodes = new WeakMap;
    const createGainNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeGainNode = getNativeAudioNode2(proxy);
      const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);
      if (!nativeGainNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeGainNode.channelCount,
          channelCountMode: nativeGainNode.channelCountMode,
          channelInterpretation: nativeGainNode.channelInterpretation,
          gain: nativeGainNode.gain.value
        };
        nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);
      }
      renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);
      if (!nativeGainNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);
      return nativeGainNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);
        if (renderedNativeGainNode !== undefined) {
          return Promise.resolve(renderedNativeGainNode);
        }
        return createGainNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js
var createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey2) => {
  return (nativeAudioWorkletNode) => getValueForKey2(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);
};

// node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js
var createGetAudioNodeRenderer = (getAudioNodeConnections2) => {
  return (audioNode) => {
    const audioNodeConnections = getAudioNodeConnections2(audioNode);
    if (audioNodeConnections.renderer === null) {
      throw new Error("Missing the renderer of the given AudioNode in the audio graph.");
    }
    return audioNodeConnections.renderer;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js
var createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {
  return (audioNode) => {
    var _a;
    return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== undefined ? _a : 0;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js
var createGetAudioParamRenderer = (getAudioParamConnections2) => {
  return (audioParam) => {
    const audioParamConnections = getAudioParamConnections2(audioParam);
    if (audioParamConnections.renderer === null) {
      throw new Error("Missing the renderer of the given AudioParam in the audio graph.");
    }
    return audioParamConnections.renderer;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js
var createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {
  return (nativeContext) => {
    return backupOfflineAudioContextStore.get(nativeContext);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js
var createInvalidStateError = () => new DOMException("", "InvalidStateError");

// node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js
var createGetNativeContext = (contextStore) => {
  return (context) => {
    const nativeContext = contextStore.get(context);
    if (nativeContext === undefined) {
      throw createInvalidStateError();
    }
    return nativeContext;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js
var createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {
  return (nativeContext) => {
    let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);
    if (backupOfflineAudioContext !== undefined) {
      return backupOfflineAudioContext;
    }
    if (nativeOfflineAudioContextConstructor === null) {
      throw new Error("Missing the native OfflineAudioContext constructor.");
    }
    backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);
    return backupOfflineAudioContext;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js
var createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {
  return (nativeContext) => {
    const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);
    if (unrenderedAudioWorkletNodes === undefined) {
      throw new Error("The context has no set of AudioWorkletNodes.");
    }
    return unrenderedAudioWorkletNodes;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js
var createInvalidAccessError = () => new DOMException("", "InvalidAccessError");

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js
var wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {
  nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {
    return (frequencyHz, magResponse, phaseResponse) => {
      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
        throw createInvalidAccessError();
      }
      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);
    };
  })(nativeIIRFilterNode.getFrequencyResponse);
};

// node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js
var DEFAULT_OPTIONS13 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers"
};
var createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class IIRFilterNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const mergedOptions = { ...DEFAULT_OPTIONS13, ...options };
      const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);
      const iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;
      super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);
      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);
      this._nativeIIRFilterNode = nativeIIRFilterNode;
      setAudioNodeTailTime(this, 1);
    }
    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
      return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js
var filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {
  const inputLength = input.length;
  let i = bufferIndex;
  for (let j = 0;j < inputLength; j += 1) {
    let y = feedforward[0] * input[j];
    for (let k = 1;k < minLength; k += 1) {
      const x = i - k & bufferLength - 1;
      y += feedforward[k] * xBuffer[x];
      y -= feedback[k] * yBuffer[x];
    }
    for (let k = minLength;k < feedforwardLength; k += 1) {
      y += feedforward[k] * xBuffer[i - k & bufferLength - 1];
    }
    for (let k = minLength;k < feedbackLength; k += 1) {
      y -= feedback[k] * yBuffer[i - k & bufferLength - 1];
    }
    xBuffer[i] = input[j];
    yBuffer[i] = y;
    i = i + 1 & bufferLength - 1;
    output[j] = y;
  }
  return i;
};

// node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js
var filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {
  const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
  const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
  const feedbackLength = convertedFeedback.length;
  const feedforwardLength = convertedFeedforward.length;
  const minLength = Math.min(feedbackLength, feedforwardLength);
  if (convertedFeedback[0] !== 1) {
    for (let i = 0;i < feedbackLength; i += 1) {
      convertedFeedforward[i] /= convertedFeedback[0];
    }
    for (let i = 1;i < feedforwardLength; i += 1) {
      convertedFeedback[i] /= convertedFeedback[0];
    }
  }
  const bufferLength = 32;
  const xBuffer = new Float32Array(bufferLength);
  const yBuffer = new Float32Array(bufferLength);
  const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);
  const numberOfChannels = renderedBuffer.numberOfChannels;
  for (let i = 0;i < numberOfChannels; i += 1) {
    const input = renderedBuffer.getChannelData(i);
    const output = filteredBuffer.getChannelData(i);
    xBuffer.fill(0);
    yBuffer.fill(0);
    filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);
  }
  return filteredBuffer;
};
var createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode2, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
  return (feedback, feedforward) => {
    const renderedNativeAudioNodes = new WeakMap;
    let filteredBufferPromise = null;
    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeAudioBufferSourceNode = null;
      let nativeIIRFilterNode = getNativeAudioNode2(proxy);
      const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);
      if (nativeOfflineAudioContext.createIIRFilter === undefined) {
        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
          buffer: null,
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          loop: false,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1
        });
      } else if (!nativeIIRFilterNodeIsOwnedByContext) {
        nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);
      }
      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);
      if (nativeAudioBufferSourceNode !== null) {
        if (filteredBufferPromise === null) {
          if (nativeOfflineAudioContextConstructor === null) {
            throw new Error("Missing the native OfflineAudioContext constructor.");
          }
          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(proxy.context.destination.channelCount, proxy.context.length, nativeOfflineAudioContext.sampleRate);
          filteredBufferPromise = (async () => {
            await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);
            const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);
            return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);
          })();
        }
        const filteredBuffer = await filteredBufferPromise;
        nativeAudioBufferSourceNode.buffer = filteredBuffer;
        nativeAudioBufferSourceNode.start(0);
        return nativeAudioBufferSourceNode;
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);
      return nativeIIRFilterNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }
        return createAudioNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js
var createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode2, getAudioNodeConnections2, getNativeAudioNode2, getNativeAudioParam2, isActiveAudioNode2) => {
  return (isOffline) => {
    return (audioNode, count) => {
      const cycleCounter = cycleCounters.get(audioNode);
      if (cycleCounter === undefined) {
        if (!isOffline && isActiveAudioNode2(audioNode)) {
          const nativeSourceAudioNode = getNativeAudioNode2(audioNode);
          const { outputs } = getAudioNodeConnections2(audioNode);
          for (const output of outputs) {
            if (isAudioNodeOutputConnection(output)) {
              const nativeDestinationAudioNode = getNativeAudioNode2(output[0]);
              disconnectNativeAudioNodeFromNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
            } else {
              const nativeDestinationAudioParam = getNativeAudioParam2(output[0]);
              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);
            }
          }
        }
        cycleCounters.set(audioNode, count);
      } else {
        cycleCounters.set(audioNode, cycleCounter + count);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js
var createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {
  return (anything) => {
    const nativeContext = contextStore.get(anything);
    return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js
var createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode2) => {
  return (anything) => audioNodeStore.has(anything) || isNativeAudioNode2(anything);
};

// node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js
var createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {
  return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);
};

// node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js
var createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {
  return (anything) => {
    const nativeContext = contextStore.get(anything);
    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js
var createIsNativeAudioContext = (nativeAudioContextConstructor) => {
  return (anything) => {
    return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js
var createIsNativeAudioNode = (window2) => {
  return (anything) => {
    return window2 !== null && typeof window2.AudioNode === "function" && anything instanceof window2.AudioNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js
var createIsNativeAudioParam = (window2) => {
  return (anything) => {
    return window2 !== null && typeof window2.AudioParam === "function" && anything instanceof window2.AudioParam;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js
var createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {
  return (anything) => {
    return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js
var createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {
  return (anything) => {
    return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js
var createIsSecureContext = (window2) => window2 !== null && window2.isSecureContext;

// node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js
var createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class MediaElementAudioSourceNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);
      if (isNativeOfflineAudioContext(nativeContext)) {
        throw TypeError();
      }
      super(context, true, nativeMediaElementAudioSourceNode, null);
      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;
    }
    get mediaElement() {
      return this._nativeMediaElementAudioSourceNode.mediaElement;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js
var DEFAULT_OPTIONS14 = {
  channelCount: 2,
  channelCountMode: "explicit",
  channelInterpretation: "speakers"
};
var createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class MediaStreamAudioDestinationNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      if (isNativeOfflineAudioContext(nativeContext)) {
        throw new TypeError;
      }
      const mergedOptions = { ...DEFAULT_OPTIONS14, ...options };
      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);
      super(context, false, nativeMediaStreamAudioDestinationNode, null);
      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;
    }
    get stream() {
      return this._nativeMediaStreamAudioDestinationNode.stream;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js
var createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {
  return class MediaStreamAudioSourceNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);
      if (isNativeOfflineAudioContext(nativeContext)) {
        throw new TypeError;
      }
      super(context, true, nativeMediaStreamAudioSourceNode, null);
      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;
    }
    get mediaStream() {
      return this._nativeMediaStreamAudioSourceNode.mediaStream;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js
var createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {
  return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);
      super(context, true, nativeMediaStreamTrackAudioSourceNode, null);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js
var createMinimalAudioContextConstructor = (createInvalidStateError2, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {
  return class MinimalAudioContext extends minimalBaseAudioContextConstructor {
    constructor(options = {}) {
      if (nativeAudioContextConstructor === null) {
        throw new Error("Missing the native AudioContext constructor.");
      }
      let nativeAudioContext;
      try {
        nativeAudioContext = new nativeAudioContextConstructor(options);
      } catch (err) {
        if (err.code === 12 && err.message === "sampleRate is not in range") {
          throw createNotSupportedError();
        }
        throw err;
      }
      if (nativeAudioContext === null) {
        throw createUnknownError();
      }
      if (!isValidLatencyHint(options.latencyHint)) {
        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);
      }
      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
        throw createNotSupportedError();
      }
      super(nativeAudioContext, 2);
      const { latencyHint } = options;
      const { sampleRate } = nativeAudioContext;
      this._baseLatency = typeof nativeAudioContext.baseLatency === "number" ? nativeAudioContext.baseLatency : latencyHint === "balanced" ? 512 / sampleRate : latencyHint === "interactive" || latencyHint === undefined ? 256 / sampleRate : latencyHint === "playback" ? 1024 / sampleRate : Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
      this._nativeAudioContext = nativeAudioContext;
      if (nativeAudioContextConstructor.name === "webkitAudioContext") {
        this._nativeGainNode = nativeAudioContext.createGain();
        this._nativeOscillatorNode = nativeAudioContext.createOscillator();
        this._nativeGainNode.gain.value = 0.0000000000000000000000000000000000001;
        this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);
        this._nativeOscillatorNode.start();
      } else {
        this._nativeGainNode = null;
        this._nativeOscillatorNode = null;
      }
      this._state = null;
      if (nativeAudioContext.state === "running") {
        this._state = "suspended";
        const revokeState = () => {
          if (this._state === "suspended") {
            this._state = null;
          }
          nativeAudioContext.removeEventListener("statechange", revokeState);
        };
        nativeAudioContext.addEventListener("statechange", revokeState);
      }
    }
    get baseLatency() {
      return this._baseLatency;
    }
    get state() {
      return this._state !== null ? this._state : this._nativeAudioContext.state;
    }
    close() {
      if (this.state === "closed") {
        return this._nativeAudioContext.close().then(() => {
          throw createInvalidStateError2();
        });
      }
      if (this._state === "suspended") {
        this._state = null;
      }
      return this._nativeAudioContext.close().then(() => {
        if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {
          this._nativeOscillatorNode.stop();
          this._nativeGainNode.disconnect();
          this._nativeOscillatorNode.disconnect();
        }
        deactivateAudioGraph(this);
      });
    }
    resume() {
      if (this._state === "suspended") {
        return new Promise((resolve, reject) => {
          const resolvePromise = () => {
            this._nativeAudioContext.removeEventListener("statechange", resolvePromise);
            if (this._nativeAudioContext.state === "running") {
              resolve();
            } else {
              this.resume().then(resolve, reject);
            }
          };
          this._nativeAudioContext.addEventListener("statechange", resolvePromise);
        });
      }
      return this._nativeAudioContext.resume().catch((err) => {
        if (err === undefined || err.code === 15) {
          throw createInvalidStateError2();
        }
        throw err;
      });
    }
    suspend() {
      return this._nativeAudioContext.suspend().catch((err) => {
        if (err === undefined) {
          throw createInvalidStateError2();
        }
        throw err;
      });
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js
var createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {
  return class MinimalBaseAudioContext extends eventTargetConstructor {
    constructor(_nativeContext, numberOfChannels) {
      super(_nativeContext);
      this._nativeContext = _nativeContext;
      CONTEXT_STORE.set(this, _nativeContext);
      if (isNativeOfflineAudioContext(_nativeContext)) {
        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set);
      }
      this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);
      this._listener = createAudioListener(this, _nativeContext);
      this._onstatechange = null;
    }
    get currentTime() {
      return this._nativeContext.currentTime;
    }
    get destination() {
      return this._destination;
    }
    get listener() {
      return this._listener;
    }
    get onstatechange() {
      return this._onstatechange;
    }
    set onstatechange(value) {
      const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
      this._nativeContext.onstatechange = wrappedListener;
      const nativeOnStateChange = this._nativeContext.onstatechange;
      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;
    }
    get sampleRate() {
      return this._nativeContext.sampleRate;
    }
    get state() {
      return this._nativeContext.state;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js
var testPromiseSupport = (nativeContext) => {
  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);
  try {
    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {
    });
    if (promise === undefined) {
      return false;
    }
    promise.catch(() => {
    });
    return true;
  } catch {
  }
  return false;
};

// node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js
var DEFAULT_OPTIONS15 = {
  numberOfChannels: 1
};
var createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError2, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {
  return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {
    constructor(options) {
      const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS15, ...options };
      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {
        nativeOfflineAudioContext.addEventListener("statechange", (() => {
          let i = 0;
          const delayStateChangeEvent = (event) => {
            if (this._state === "running") {
              if (i > 0) {
                nativeOfflineAudioContext.removeEventListener("statechange", delayStateChangeEvent);
                event.stopImmediatePropagation();
                this._waitForThePromiseToSettle(event);
              } else {
                i += 1;
              }
            }
          };
          return delayStateChangeEvent;
        })());
      }
      super(nativeOfflineAudioContext, numberOfChannels);
      this._length = length;
      this._nativeOfflineAudioContext = nativeOfflineAudioContext;
      this._state = null;
    }
    get length() {
      if (this._nativeOfflineAudioContext.length === undefined) {
        return this._length;
      }
      return this._nativeOfflineAudioContext.length;
    }
    get state() {
      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
    }
    startRendering() {
      if (this._state === "running") {
        return Promise.reject(createInvalidStateError2());
      }
      this._state = "running";
      return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {
        this._state = null;
        deactivateAudioGraph(this);
      });
    }
    _waitForThePromiseToSettle(event) {
      if (this._state === null) {
        this._nativeOfflineAudioContext.dispatchEvent(event);
      } else {
        setTimeout(() => this._waitForThePromiseToSettle(event));
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js
var createMonitorConnections = (insertElementInSet2, isNativeAudioNode2) => {
  return (nativeAudioNode, whenConnected, whenDisconnected) => {
    const connections = new Set;
    nativeAudioNode.connect = ((connect) => {
      return (destination, output = 0, input = 0) => {
        const wasDisconnected = connections.size === 0;
        if (isNativeAudioNode2(destination)) {
          connect.call(nativeAudioNode, destination, output, input);
          insertElementInSet2(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);
          if (wasDisconnected) {
            whenConnected();
          }
          return destination;
        }
        connect.call(nativeAudioNode, destination, output);
        insertElementInSet2(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);
        if (wasDisconnected) {
          whenConnected();
        }
        return;
      };
    })(nativeAudioNode.connect);
    nativeAudioNode.disconnect = ((disconnect) => {
      return (destinationOrOutput, output, input) => {
        const wasConnected = connections.size > 0;
        if (destinationOrOutput === undefined) {
          disconnect.apply(nativeAudioNode);
          connections.clear();
        } else if (typeof destinationOrOutput === "number") {
          disconnect.call(nativeAudioNode, destinationOrOutput);
          for (const connection of connections) {
            if (connection[1] === destinationOrOutput) {
              connections.delete(connection);
            }
          }
        } else {
          if (isNativeAudioNode2(destinationOrOutput)) {
            disconnect.call(nativeAudioNode, destinationOrOutput, output, input);
          } else {
            disconnect.call(nativeAudioNode, destinationOrOutput, output);
          }
          for (const connection of connections) {
            if (connection[0] === destinationOrOutput && (output === undefined || connection[1] === output) && (input === undefined || connection[2] === input)) {
              connections.delete(connection);
            }
          }
        }
        const isDisconnected = connections.size === 0;
        if (wasConnected && isDisconnected) {
          whenDisconnected();
        }
      };
    })(nativeAudioNode.disconnect);
    return nativeAudioNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js
var assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {
  const value = options[option];
  if (value !== undefined && value !== nativeAudioNode[option]) {
    nativeAudioNode[option] = value;
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js
var assignNativeAudioNodeOptions = (nativeAudioNode, options) => {
  assignNativeAudioNodeOption(nativeAudioNode, options, "channelCount");
  assignNativeAudioNodeOption(nativeAudioNode, options, "channelCountMode");
  assignNativeAudioNodeOption(nativeAudioNode, options, "channelInterpretation");
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js
var testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {
  return typeof nativeAnalyserNode.getFloatTimeDomainData === "function";
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js
var wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {
  nativeAnalyserNode.getFloatTimeDomainData = (array) => {
    const byteTimeDomainData = new Uint8Array(array.length);
    nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);
    const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);
    for (let i = 0;i < length; i += 1) {
      array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;
    }
    return array;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js
var createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError2) => {
  return (nativeContext, options) => {
    const nativeAnalyserNode = nativeContext.createAnalyser();
    assignNativeAudioNodeOptions(nativeAnalyserNode, options);
    if (!(options.maxDecibels > options.minDecibels)) {
      throw createIndexSizeError2();
    }
    assignNativeAudioNodeOption(nativeAnalyserNode, options, "fftSize");
    assignNativeAudioNodeOption(nativeAnalyserNode, options, "maxDecibels");
    assignNativeAudioNodeOption(nativeAnalyserNode, options, "minDecibels");
    assignNativeAudioNodeOption(nativeAnalyserNode, options, "smoothingTimeConstant");
    if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {
      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);
    }
    return nativeAnalyserNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js
var createNativeAudioBufferConstructor = (window2) => {
  if (window2 === null) {
    return null;
  }
  if (window2.hasOwnProperty("AudioBuffer")) {
    return window2.AudioBuffer;
  }
  return null;
};

// node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js
var assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {
  const value = options[audioParam];
  if (value !== undefined && value !== nativeAudioNode[audioParam].value) {
    nativeAudioNode[audioParam].value = value;
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js
var wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {
  nativeAudioBufferSourceNode.start = ((start) => {
    let isScheduled = false;
    return (when = 0, offset = 0, duration) => {
      if (isScheduled) {
        throw createInvalidStateError();
      }
      start.call(nativeAudioBufferSourceNode, when, offset, duration);
      isScheduled = true;
    };
  })(nativeAudioBufferSourceNode.start);
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js
var wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {
  nativeAudioScheduledSourceNode.start = ((start) => {
    return (when = 0, offset = 0, duration) => {
      if (typeof duration === "number" && duration < 0 || offset < 0 || when < 0) {
        throw new RangeError("The parameters can't be negative.");
      }
      start.call(nativeAudioScheduledSourceNode, when, offset, duration);
    };
  })(nativeAudioScheduledSourceNode.start);
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js
var wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {
  nativeAudioScheduledSourceNode.stop = ((stop) => {
    return (when = 0) => {
      if (when < 0) {
        throw new RangeError("The parameter can't be negative.");
      }
      stop.call(nativeAudioScheduledSourceNode, when);
    };
  })(nativeAudioScheduledSourceNode.stop);
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js
var createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {
  return (nativeContext, options) => {
    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);
    assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, "playbackRate");
    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, "buffer");
    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, "loop");
    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, "loopEnd");
    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, "loopStart");
    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {
      wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);
    }
    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {
      wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);
    }
    if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {
      wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);
    }
    addSilentConnection(nativeContext, nativeAudioBufferSourceNode);
    return nativeAudioBufferSourceNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js
var createNativeAudioContextConstructor = (window2) => {
  if (window2 === null) {
    return null;
  }
  if (window2.hasOwnProperty("AudioContext")) {
    return window2.AudioContext;
  }
  return window2.hasOwnProperty("webkitAudioContext") ? window2.webkitAudioContext : null;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js
var createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {
  return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {
    const nativeAudioDestinationNode = nativeContext.destination;
    if (nativeAudioDestinationNode.channelCount !== channelCount) {
      try {
        nativeAudioDestinationNode.channelCount = channelCount;
      } catch {
      }
    }
    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== "explicit") {
      nativeAudioDestinationNode.channelCountMode = "explicit";
    }
    if (nativeAudioDestinationNode.maxChannelCount === 0) {
      Object.defineProperty(nativeAudioDestinationNode, "maxChannelCount", {
        value: channelCount
      });
    }
    const gainNode = createNativeGainNode(nativeContext, {
      channelCount,
      channelCountMode: nativeAudioDestinationNode.channelCountMode,
      channelInterpretation: nativeAudioDestinationNode.channelInterpretation,
      gain: 1
    });
    overwriteAccessors(gainNode, "channelCount", (get) => () => get.call(gainNode), (set) => (value) => {
      set.call(gainNode, value);
      try {
        nativeAudioDestinationNode.channelCount = value;
      } catch (err) {
        if (value > nativeAudioDestinationNode.maxChannelCount) {
          throw err;
        }
      }
    });
    overwriteAccessors(gainNode, "channelCountMode", (get) => () => get.call(gainNode), (set) => (value) => {
      set.call(gainNode, value);
      nativeAudioDestinationNode.channelCountMode = value;
    });
    overwriteAccessors(gainNode, "channelInterpretation", (get) => () => get.call(gainNode), (set) => (value) => {
      set.call(gainNode, value);
      nativeAudioDestinationNode.channelInterpretation = value;
    });
    Object.defineProperty(gainNode, "maxChannelCount", {
      get: () => nativeAudioDestinationNode.maxChannelCount
    });
    gainNode.connect(nativeAudioDestinationNode);
    return gainNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js
var createNativeAudioWorkletNodeConstructor = (window2) => {
  if (window2 === null) {
    return null;
  }
  return window2.hasOwnProperty("AudioWorkletNode") ? window2.AudioWorkletNode : null;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js
var testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {
  const { port1 } = new MessageChannel;
  try {
    port1.postMessage(audioWorkletNodeOptions);
  } finally {
    port1.close();
  }
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js
var createNativeAudioWorkletNodeFactory = (createInvalidStateError2, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {
  return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {
    if (nativeAudioWorkletNodeConstructor !== null) {
      try {
        const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);
        const patchedEventListeners = new Map;
        let onprocessorerror = null;
        Object.defineProperties(nativeAudioWorkletNode, {
          channelCount: {
            get: () => options.channelCount,
            set: () => {
              throw createInvalidStateError2();
            }
          },
          channelCountMode: {
            get: () => "explicit",
            set: () => {
              throw createInvalidStateError2();
            }
          },
          onprocessorerror: {
            get: () => onprocessorerror,
            set: (value) => {
              if (typeof onprocessorerror === "function") {
                nativeAudioWorkletNode.removeEventListener("processorerror", onprocessorerror);
              }
              onprocessorerror = typeof value === "function" ? value : null;
              if (typeof onprocessorerror === "function") {
                nativeAudioWorkletNode.addEventListener("processorerror", onprocessorerror);
              }
            }
          }
        });
        nativeAudioWorkletNode.addEventListener = ((addEventListener) => {
          return (...args) => {
            if (args[0] === "processorerror") {
              const unpatchedEventListener = typeof args[1] === "function" ? args[1] : typeof args[1] === "object" && args[1] !== null && typeof args[1].handleEvent === "function" ? args[1].handleEvent : null;
              if (unpatchedEventListener !== null) {
                const patchedEventListener = patchedEventListeners.get(args[1]);
                if (patchedEventListener !== undefined) {
                  args[1] = patchedEventListener;
                } else {
                  args[1] = (event) => {
                    if (event.type === "error") {
                      Object.defineProperties(event, {
                        type: { value: "processorerror" }
                      });
                      unpatchedEventListener(event);
                    } else {
                      unpatchedEventListener(new ErrorEvent(args[0], { ...event }));
                    }
                  };
                  patchedEventListeners.set(unpatchedEventListener, args[1]);
                }
              }
            }
            addEventListener.call(nativeAudioWorkletNode, "error", args[1], args[2]);
            return addEventListener.call(nativeAudioWorkletNode, ...args);
          };
        })(nativeAudioWorkletNode.addEventListener);
        nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {
          return (...args) => {
            if (args[0] === "processorerror") {
              const patchedEventListener = patchedEventListeners.get(args[1]);
              if (patchedEventListener !== undefined) {
                patchedEventListeners.delete(args[1]);
                args[1] = patchedEventListener;
              }
            }
            removeEventListener.call(nativeAudioWorkletNode, "error", args[1], args[2]);
            return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
          };
        })(nativeAudioWorkletNode.removeEventListener);
        if (options.numberOfOutputs !== 0) {
          const nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: 0
          });
          nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);
          const whenConnected = () => nativeGainNode.disconnect();
          const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);
          return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);
        }
        return nativeAudioWorkletNode;
      } catch (err) {
        if (err.code === 11) {
          throw createNotSupportedError();
        }
        throw err;
      }
    }
    if (processorConstructor === undefined) {
      throw createNotSupportedError();
    }
    testClonabilityOfAudioWorkletNodeOptions(options);
    return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js
var computeBufferSize = (baseLatency, sampleRate) => {
  if (baseLatency === null) {
    return 512;
  }
  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));
};

// node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js
var cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {
  return new Promise((resolve, reject) => {
    const { port1, port2 } = new MessageChannel;
    port1.onmessage = ({ data }) => {
      port1.close();
      port2.close();
      resolve(data);
    };
    port1.onmessageerror = ({ data }) => {
      port1.close();
      port2.close();
      reject(data);
    };
    port2.postMessage(audioWorkletNodeOptions);
  });
};

// node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js
var createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {
  const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);
  return new processorConstructor(clonedAudioWorkletNodeOptions);
};

// node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js
var createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {
  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);
  if (nodeToProcessorMap === undefined) {
    nodeToProcessorMap = new WeakMap;
    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);
  }
  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);
  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
  return audioWorkletProcessorPromise;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js
var createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError2, createInvalidStateError2, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {
  return (nativeContext, baseLatency, processorConstructor, options) => {
    if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {
      throw createNotSupportedError();
    }
    const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);
    if (outputChannelCount.some((channelCount) => channelCount < 1)) {
      throw createNotSupportedError();
    }
    if (outputChannelCount.length !== options.numberOfOutputs) {
      throw createIndexSizeError2();
    }
    if (options.channelCountMode !== "explicit") {
      throw createNotSupportedError();
    }
    const numberOfInputChannels = options.channelCount * options.numberOfInputs;
    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);
    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
    if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {
      throw createNotSupportedError();
    }
    const messageChannel = new MessageChannel;
    const gainNodes = [];
    const inputChannelSplitterNodes = [];
    for (let i = 0;i < options.numberOfInputs; i += 1) {
      gainNodes.push(createNativeGainNode(nativeContext, {
        channelCount: options.channelCount,
        channelCountMode: options.channelCountMode,
        channelInterpretation: options.channelInterpretation,
        gain: 1
      }));
      inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {
        channelCount: options.channelCount,
        channelCountMode: "explicit",
        channelInterpretation: "discrete",
        numberOfOutputs: options.channelCount
      }));
    }
    const constantSourceNodes = [];
    if (processorConstructor.parameterDescriptors !== undefined) {
      for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {
        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {
          channelCount: 1,
          channelCountMode: "explicit",
          channelInterpretation: "discrete",
          offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue
        });
        Object.defineProperties(constantSourceNode.offset, {
          defaultValue: {
            get: () => defaultValue === undefined ? 0 : defaultValue
          },
          maxValue: {
            get: () => maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue
          },
          minValue: {
            get: () => minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue
          }
        });
        constantSourceNodes.push(constantSourceNode);
      }
    }
    const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "speakers",
      numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
    });
    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);
    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, Math.max(1, numberOfOutputChannels));
    const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
      channelCount: Math.max(1, numberOfOutputChannels),
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      numberOfOutputs: Math.max(1, numberOfOutputChannels)
    });
    const outputChannelMergerNodes = [];
    for (let i = 0;i < options.numberOfOutputs; i += 1) {
      outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {
        channelCount: 1,
        channelCountMode: "explicit",
        channelInterpretation: "speakers",
        numberOfInputs: outputChannelCount[i]
      }));
    }
    for (let i = 0;i < options.numberOfInputs; i += 1) {
      gainNodes[i].connect(inputChannelSplitterNodes[i]);
      for (let j = 0;j < options.channelCount; j += 1) {
        inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);
      }
    }
    const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(({ name }, index) => {
      const constantSourceNode = constantSourceNodes[index];
      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
      constantSourceNode.start(0);
      return [name, constantSourceNode.offset];
    }));
    inputChannelMergerNode.connect(scriptProcessorNode);
    let channelInterpretation = options.channelInterpretation;
    let onprocessorerror = null;
    const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;
    const nativeAudioWorkletNodeFaker = {
      get bufferSize() {
        return bufferSize;
      },
      get channelCount() {
        return options.channelCount;
      },
      set channelCount(_) {
        throw createInvalidStateError2();
      },
      get channelCountMode() {
        return options.channelCountMode;
      },
      set channelCountMode(_) {
        throw createInvalidStateError2();
      },
      get channelInterpretation() {
        return channelInterpretation;
      },
      set channelInterpretation(value) {
        for (const gainNode of gainNodes) {
          gainNode.channelInterpretation = value;
        }
        channelInterpretation = value;
      },
      get context() {
        return scriptProcessorNode.context;
      },
      get inputs() {
        return gainNodes;
      },
      get numberOfInputs() {
        return options.numberOfInputs;
      },
      get numberOfOutputs() {
        return options.numberOfOutputs;
      },
      get onprocessorerror() {
        return onprocessorerror;
      },
      set onprocessorerror(value) {
        if (typeof onprocessorerror === "function") {
          nativeAudioWorkletNodeFaker.removeEventListener("processorerror", onprocessorerror);
        }
        onprocessorerror = typeof value === "function" ? value : null;
        if (typeof onprocessorerror === "function") {
          nativeAudioWorkletNodeFaker.addEventListener("processorerror", onprocessorerror);
        }
      },
      get parameters() {
        return parameterMap;
      },
      get port() {
        return messageChannel.port2;
      },
      addEventListener(...args) {
        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
      },
      connect: connectMultipleOutputs.bind(null, outputAudioNodes),
      disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),
      dispatchEvent(...args) {
        return scriptProcessorNode.dispatchEvent(args[0]);
      },
      removeEventListener(...args) {
        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
      }
    };
    const patchedEventListeners = new Map;
    messageChannel.port1.addEventListener = ((addEventListener) => {
      return (...args) => {
        if (args[0] === "message") {
          const unpatchedEventListener = typeof args[1] === "function" ? args[1] : typeof args[1] === "object" && args[1] !== null && typeof args[1].handleEvent === "function" ? args[1].handleEvent : null;
          if (unpatchedEventListener !== null) {
            const patchedEventListener = patchedEventListeners.get(args[1]);
            if (patchedEventListener !== undefined) {
              args[1] = patchedEventListener;
            } else {
              args[1] = (event) => {
                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));
              };
              patchedEventListeners.set(unpatchedEventListener, args[1]);
            }
          }
        }
        return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
      };
    })(messageChannel.port1.addEventListener);
    messageChannel.port1.removeEventListener = ((removeEventListener) => {
      return (...args) => {
        if (args[0] === "message") {
          const patchedEventListener = patchedEventListeners.get(args[1]);
          if (patchedEventListener !== undefined) {
            patchedEventListeners.delete(args[1]);
            args[1] = patchedEventListener;
          }
        }
        return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
      };
    })(messageChannel.port1.removeEventListener);
    let onmessage = null;
    Object.defineProperty(messageChannel.port1, "onmessage", {
      get: () => onmessage,
      set: (value) => {
        if (typeof onmessage === "function") {
          messageChannel.port1.removeEventListener("message", onmessage);
        }
        onmessage = typeof value === "function" ? value : null;
        if (typeof onmessage === "function") {
          messageChannel.port1.addEventListener("message", onmessage);
          messageChannel.port1.start();
        }
      }
    });
    processorConstructor.prototype.port = messageChannel.port1;
    let audioWorkletProcessor = null;
    const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);
    audioWorkletProcessorPromise.then((dWrkltPrcssr) => audioWorkletProcessor = dWrkltPrcssr);
    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);
    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);
    const parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});
    let isActive = true;
    const disconnectOutputsGraph = () => {
      if (options.numberOfOutputs > 0) {
        scriptProcessorNode.disconnect(outputChannelSplitterNode);
      }
      for (let i = 0, outputChannelSplitterNodeOutput = 0;i < options.numberOfOutputs; i += 1) {
        const outputChannelMergerNode = outputChannelMergerNodes[i];
        for (let j = 0;j < outputChannelCount[i]; j += 1) {
          outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
        }
        outputChannelSplitterNodeOutput += outputChannelCount[i];
      }
    };
    const activeInputIndexes = new Map;
    scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {
      if (audioWorkletProcessor !== null) {
        const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);
        for (let i = 0;i < bufferSize; i += 128) {
          for (let j = 0;j < options.numberOfInputs; j += 1) {
            for (let k = 0;k < options.channelCount; k += 1) {
              copyFromChannel(inputBuffer, inputs[j], k, k, i);
            }
          }
          if (processorConstructor.parameterDescriptors !== undefined) {
            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {
              copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);
            });
          }
          for (let j = 0;j < options.numberOfInputs; j += 1) {
            for (let k = 0;k < outputChannelCount[j]; k += 1) {
              if (outputs[j][k].byteLength === 0) {
                outputs[j][k] = new Float32Array(128);
              }
            }
          }
          try {
            const potentiallyEmptyInputs = inputs.map((input, index) => {
              const activeInput = activeInputs[index];
              if (activeInput.size > 0) {
                activeInputIndexes.set(index, bufferSize / 128);
                return input;
              }
              const count = activeInputIndexes.get(index);
              if (count === undefined) {
                return [];
              }
              if (input.every((channelData) => channelData.every((sample) => sample === 0))) {
                if (count === 1) {
                  activeInputIndexes.delete(index);
                } else {
                  activeInputIndexes.set(index, count - 1);
                }
              }
              return input;
            });
            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));
            isActive = activeSourceFlag;
            for (let j = 0, outputChannelSplitterNodeOutput = 0;j < options.numberOfOutputs; j += 1) {
              for (let k = 0;k < outputChannelCount[j]; k += 1) {
                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);
              }
              outputChannelSplitterNodeOutput += outputChannelCount[j];
            }
          } catch (error) {
            isActive = false;
            nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent("processorerror", {
              colno: error.colno,
              filename: error.filename,
              lineno: error.lineno,
              message: error.message
            }));
          }
          if (!isActive) {
            for (let j = 0;j < options.numberOfInputs; j += 1) {
              gainNodes[j].disconnect(inputChannelSplitterNodes[j]);
              for (let k = 0;k < options.channelCount; k += 1) {
                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);
              }
            }
            if (processorConstructor.parameterDescriptors !== undefined) {
              const length = processorConstructor.parameterDescriptors.length;
              for (let j = 0;j < length; j += 1) {
                const constantSourceNode = constantSourceNodes[j];
                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);
                constantSourceNode.stop();
              }
            }
            inputChannelMergerNode.disconnect(scriptProcessorNode);
            scriptProcessorNode.onaudioprocess = null;
            if (isConnected) {
              disconnectOutputsGraph();
            } else {
              disconnectFakeGraph();
            }
            break;
          }
        }
      }
    };
    let isConnected = false;
    const nativeGainNode = createNativeGainNode(nativeContext, {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      gain: 0
    });
    const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);
    const disconnectFakeGraph = () => {
      scriptProcessorNode.disconnect(nativeGainNode);
      nativeGainNode.disconnect();
    };
    const whenConnected = () => {
      if (isActive) {
        disconnectFakeGraph();
        if (options.numberOfOutputs > 0) {
          scriptProcessorNode.connect(outputChannelSplitterNode);
        }
        for (let i = 0, outputChannelSplitterNodeOutput = 0;i < options.numberOfOutputs; i += 1) {
          const outputChannelMergerNode = outputChannelMergerNodes[i];
          for (let j = 0;j < outputChannelCount[i]; j += 1) {
            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
          }
          outputChannelSplitterNodeOutput += outputChannelCount[i];
        }
      }
      isConnected = true;
    };
    const whenDisconnected = () => {
      if (isActive) {
        connectFakeGraph();
        disconnectOutputsGraph();
      }
      isConnected = false;
    };
    connectFakeGraph();
    return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js
var createNativeBiquadFilterNode = (nativeContext, options) => {
  const nativeBiquadFilterNode = nativeContext.createBiquadFilter();
  assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);
  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, "Q");
  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, "detune");
  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, "frequency");
  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, "gain");
  assignNativeAudioNodeOption(nativeBiquadFilterNode, options, "type");
  return nativeBiquadFilterNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js
var createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {
  return (nativeContext, options) => {
    const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);
    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext") {
      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);
    }
    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);
    return nativeChannelMergerNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js
var wrapChannelSplitterNode = (channelSplitterNode) => {
  const channelCount = channelSplitterNode.numberOfOutputs;
  Object.defineProperty(channelSplitterNode, "channelCount", {
    get: () => channelCount,
    set: (value) => {
      if (value !== channelCount) {
        throw createInvalidStateError();
      }
    }
  });
  Object.defineProperty(channelSplitterNode, "channelCountMode", {
    get: () => "explicit",
    set: (value) => {
      if (value !== "explicit") {
        throw createInvalidStateError();
      }
    }
  });
  Object.defineProperty(channelSplitterNode, "channelInterpretation", {
    get: () => "discrete",
    set: (value) => {
      if (value !== "discrete") {
        throw createInvalidStateError();
      }
    }
  });
};

// node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js
var createNativeChannelSplitterNode = (nativeContext, options) => {
  const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);
  assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);
  wrapChannelSplitterNode(nativeChannelSplitterNode);
  return nativeChannelSplitterNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js
var createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {
  return (nativeContext, options) => {
    if (nativeContext.createConstantSource === undefined) {
      return createNativeConstantSourceNodeFaker(nativeContext, options);
    }
    const nativeConstantSourceNode = nativeContext.createConstantSource();
    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);
    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, "offset");
    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);
    }
    addSilentConnection(nativeContext, nativeConstantSourceNode);
    return nativeConstantSourceNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js
var interceptConnections = (original, interceptor) => {
  original.connect = interceptor.connect.bind(interceptor);
  original.disconnect = interceptor.disconnect.bind(interceptor);
  return original;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js
var createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {
  return (nativeContext, { offset, ...audioNodeOptions }) => {
    const audioBuffer = nativeContext.createBuffer(1, 2, 44100);
    const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
      buffer: null,
      channelCount: 2,
      channelCountMode: "max",
      channelInterpretation: "speakers",
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      playbackRate: 1
    });
    const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });
    const channelData = audioBuffer.getChannelData(0);
    channelData[0] = 1;
    channelData[1] = 1;
    audioBufferSourceNode.buffer = audioBuffer;
    audioBufferSourceNode.loop = true;
    const nativeConstantSourceNodeFaker = {
      get bufferSize() {
        return;
      },
      get channelCount() {
        return gainNode.channelCount;
      },
      set channelCount(value) {
        gainNode.channelCount = value;
      },
      get channelCountMode() {
        return gainNode.channelCountMode;
      },
      set channelCountMode(value) {
        gainNode.channelCountMode = value;
      },
      get channelInterpretation() {
        return gainNode.channelInterpretation;
      },
      set channelInterpretation(value) {
        gainNode.channelInterpretation = value;
      },
      get context() {
        return gainNode.context;
      },
      get inputs() {
        return [];
      },
      get numberOfInputs() {
        return audioBufferSourceNode.numberOfInputs;
      },
      get numberOfOutputs() {
        return gainNode.numberOfOutputs;
      },
      get offset() {
        return gainNode.gain;
      },
      get onended() {
        return audioBufferSourceNode.onended;
      },
      set onended(value) {
        audioBufferSourceNode.onended = value;
      },
      addEventListener(...args) {
        return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);
      },
      dispatchEvent(...args) {
        return audioBufferSourceNode.dispatchEvent(args[0]);
      },
      removeEventListener(...args) {
        return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);
      },
      start(when = 0) {
        audioBufferSourceNode.start.call(audioBufferSourceNode, when);
      },
      stop(when = 0) {
        audioBufferSourceNode.stop.call(audioBufferSourceNode, when);
      }
    };
    const whenConnected = () => audioBufferSourceNode.connect(gainNode);
    const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);
    addSilentConnection(nativeContext, audioBufferSourceNode);
    return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js
var createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {
  return (nativeContext, options) => {
    const nativeConvolverNode = nativeContext.createConvolver();
    assignNativeAudioNodeOptions(nativeConvolverNode, options);
    if (options.disableNormalization === nativeConvolverNode.normalize) {
      nativeConvolverNode.normalize = !options.disableNormalization;
    }
    assignNativeAudioNodeOption(nativeConvolverNode, options, "buffer");
    if (options.channelCount > 2) {
      throw createNotSupportedError();
    }
    overwriteAccessors(nativeConvolverNode, "channelCount", (get) => () => get.call(nativeConvolverNode), (set) => (value) => {
      if (value > 2) {
        throw createNotSupportedError();
      }
      return set.call(nativeConvolverNode, value);
    });
    if (options.channelCountMode === "max") {
      throw createNotSupportedError();
    }
    overwriteAccessors(nativeConvolverNode, "channelCountMode", (get) => () => get.call(nativeConvolverNode), (set) => (value) => {
      if (value === "max") {
        throw createNotSupportedError();
      }
      return set.call(nativeConvolverNode, value);
    });
    return nativeConvolverNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js
var createNativeDelayNode = (nativeContext, options) => {
  const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);
  assignNativeAudioNodeOptions(nativeDelayNode, options);
  assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, "delayTime");
  return nativeDelayNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js
var createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {
  return (nativeContext, options) => {
    const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();
    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);
    if (options.channelCount > 2) {
      throw createNotSupportedError();
    }
    if (options.channelCountMode === "max") {
      throw createNotSupportedError();
    }
    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, "attack");
    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, "knee");
    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, "ratio");
    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, "release");
    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, "threshold");
    return nativeDynamicsCompressorNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js
var createNativeGainNode = (nativeContext, options) => {
  const nativeGainNode = nativeContext.createGain();
  assignNativeAudioNodeOptions(nativeGainNode, options);
  assignNativeAudioNodeAudioParamValue(nativeGainNode, options, "gain");
  return nativeGainNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js
var createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {
  return (nativeContext, baseLatency, options) => {
    if (nativeContext.createIIRFilter === undefined) {
      return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);
    }
    const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);
    assignNativeAudioNodeOptions(nativeIIRFilterNode, options);
    return nativeIIRFilterNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js
var divide = function(a, b) {
  const denominator = b[0] * b[0] + b[1] * b[1];
  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];
};
var multiply = function(a, b) {
  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];
};
var evaluatePolynomial = function(coefficient, z) {
  let result = [0, 0];
  for (let i = coefficient.length - 1;i >= 0; i -= 1) {
    result = multiply(result, z);
    result[0] += coefficient[i];
  }
  return result;
};
var createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError2, createInvalidStateError2, createNativeScriptProcessorNode, createNotSupportedError) => {
  return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {
    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);
    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
    const feedbackLength = convertedFeedback.length;
    const feedforwardLength = convertedFeedforward.length;
    const minLength = Math.min(feedbackLength, feedforwardLength);
    if (feedbackLength === 0 || feedbackLength > 20) {
      throw createNotSupportedError();
    }
    if (convertedFeedback[0] === 0) {
      throw createInvalidStateError2();
    }
    if (feedforwardLength === 0 || feedforwardLength > 20) {
      throw createNotSupportedError();
    }
    if (convertedFeedforward[0] === 0) {
      throw createInvalidStateError2();
    }
    if (convertedFeedback[0] !== 1) {
      for (let i = 0;i < feedforwardLength; i += 1) {
        convertedFeedforward[i] /= convertedFeedback[0];
      }
      for (let i = 1;i < feedbackLength; i += 1) {
        convertedFeedback[i] /= convertedFeedback[0];
      }
    }
    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);
    scriptProcessorNode.channelCount = channelCount;
    scriptProcessorNode.channelCountMode = channelCountMode;
    scriptProcessorNode.channelInterpretation = channelInterpretation;
    const bufferLength = 32;
    const bufferIndexes = [];
    const xBuffers = [];
    const yBuffers = [];
    for (let i = 0;i < channelCount; i += 1) {
      bufferIndexes.push(0);
      const xBuffer = new Float32Array(bufferLength);
      const yBuffer = new Float32Array(bufferLength);
      xBuffer.fill(0);
      yBuffer.fill(0);
      xBuffers.push(xBuffer);
      yBuffers.push(yBuffer);
    }
    scriptProcessorNode.onaudioprocess = (event) => {
      const inputBuffer = event.inputBuffer;
      const outputBuffer = event.outputBuffer;
      const numberOfChannels = inputBuffer.numberOfChannels;
      for (let i = 0;i < numberOfChannels; i += 1) {
        const input = inputBuffer.getChannelData(i);
        const output = outputBuffer.getChannelData(i);
        bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);
      }
    };
    const nyquist = nativeContext.sampleRate / 2;
    const nativeIIRFilterNodeFaker = {
      get bufferSize() {
        return bufferSize;
      },
      get channelCount() {
        return scriptProcessorNode.channelCount;
      },
      set channelCount(value) {
        scriptProcessorNode.channelCount = value;
      },
      get channelCountMode() {
        return scriptProcessorNode.channelCountMode;
      },
      set channelCountMode(value) {
        scriptProcessorNode.channelCountMode = value;
      },
      get channelInterpretation() {
        return scriptProcessorNode.channelInterpretation;
      },
      set channelInterpretation(value) {
        scriptProcessorNode.channelInterpretation = value;
      },
      get context() {
        return scriptProcessorNode.context;
      },
      get inputs() {
        return [scriptProcessorNode];
      },
      get numberOfInputs() {
        return scriptProcessorNode.numberOfInputs;
      },
      get numberOfOutputs() {
        return scriptProcessorNode.numberOfOutputs;
      },
      addEventListener(...args) {
        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);
      },
      dispatchEvent(...args) {
        return scriptProcessorNode.dispatchEvent(args[0]);
      },
      getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
          throw createInvalidAccessError2();
        }
        const length = frequencyHz.length;
        for (let i = 0;i < length; i += 1) {
          const omega = -Math.PI * (frequencyHz[i] / nyquist);
          const z = [Math.cos(omega), Math.sin(omega)];
          const numerator = evaluatePolynomial(convertedFeedforward, z);
          const denominator = evaluatePolynomial(convertedFeedback, z);
          const response = divide(numerator, denominator);
          magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);
          phaseResponse[i] = Math.atan2(response[1], response[0]);
        }
      },
      removeEventListener(...args) {
        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);
      }
    };
    return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js
var createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {
  return nativeAudioContext.createMediaElementSource(options.mediaElement);
};

// node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js
var createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {
  const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();
  assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);
  if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {
    Object.defineProperty(nativeMediaStreamAudioDestinationNode, "numberOfOutputs", { get: () => 0 });
  }
  return nativeMediaStreamAudioDestinationNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js
var createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {
  const audioStreamTracks = mediaStream.getAudioTracks();
  audioStreamTracks.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0);
  const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);
  const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));
  Object.defineProperty(nativeMediaStreamAudioSourceNode, "mediaStream", { value: mediaStream });
  return nativeMediaStreamAudioSourceNode;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js
var createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError2, isNativeOfflineAudioContext) => {
  return (nativeAudioContext, { mediaStreamTrack }) => {
    if (typeof nativeAudioContext.createMediaStreamTrackSource === "function") {
      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);
    }
    const mediaStream = new MediaStream([mediaStreamTrack]);
    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);
    if (mediaStreamTrack.kind !== "audio") {
      throw createInvalidStateError2();
    }
    if (isNativeOfflineAudioContext(nativeAudioContext)) {
      throw new TypeError;
    }
    return nativeMediaStreamAudioSourceNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js
var createNativeOfflineAudioContextConstructor = (window2) => {
  if (window2 === null) {
    return null;
  }
  if (window2.hasOwnProperty("OfflineAudioContext")) {
    return window2.OfflineAudioContext;
  }
  return window2.hasOwnProperty("webkitOfflineAudioContext") ? window2.webkitOfflineAudioContext : null;
};

// node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js
var createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {
  return (nativeContext, options) => {
    const nativeOscillatorNode = nativeContext.createOscillator();
    assignNativeAudioNodeOptions(nativeOscillatorNode, options);
    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, "detune");
    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, "frequency");
    if (options.periodicWave !== undefined) {
      nativeOscillatorNode.setPeriodicWave(options.periodicWave);
    } else {
      assignNativeAudioNodeOption(nativeOscillatorNode, options, "type");
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);
    }
    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {
      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);
    }
    addSilentConnection(nativeContext, nativeOscillatorNode);
    return nativeOscillatorNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js
var createNativePannerNodeFactory = (createNativePannerNodeFaker) => {
  return (nativeContext, options) => {
    const nativePannerNode = nativeContext.createPanner();
    if (nativePannerNode.orientationX === undefined) {
      return createNativePannerNodeFaker(nativeContext, options);
    }
    assignNativeAudioNodeOptions(nativePannerNode, options);
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "orientationX");
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "orientationY");
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "orientationZ");
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "positionX");
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "positionY");
    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, "positionZ");
    assignNativeAudioNodeOption(nativePannerNode, options, "coneInnerAngle");
    assignNativeAudioNodeOption(nativePannerNode, options, "coneOuterAngle");
    assignNativeAudioNodeOption(nativePannerNode, options, "coneOuterGain");
    assignNativeAudioNodeOption(nativePannerNode, options, "distanceModel");
    assignNativeAudioNodeOption(nativePannerNode, options, "maxDistance");
    assignNativeAudioNodeOption(nativePannerNode, options, "panningModel");
    assignNativeAudioNodeOption(nativePannerNode, options, "refDistance");
    assignNativeAudioNodeOption(nativePannerNode, options, "rolloffFactor");
    return nativePannerNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js
var createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode2, createInvalidStateError2, createNativeChannelMergerNode, createNativeGainNode2, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode2, getFirstSample, monitorConnections) => {
  return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {
    const pannerNode = nativeContext.createPanner();
    if (audioNodeOptions.channelCount > 2) {
      throw createNotSupportedError();
    }
    if (audioNodeOptions.channelCountMode === "max") {
      throw createNotSupportedError();
    }
    assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);
    const SINGLE_CHANNEL_OPTIONS = {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "discrete"
    };
    const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
      ...SINGLE_CHANNEL_OPTIONS,
      channelInterpretation: "speakers",
      numberOfInputs: 6
    });
    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });
    const orientationXGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });
    const orientationYGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const orientationZGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const positionXGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const positionYGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const positionZGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);
    const waveShaperNode = createNativeWaveShaperNode(nativeContext, {
      ...SINGLE_CHANNEL_OPTIONS,
      curve: new Float32Array([1, 1]),
      oversample: "none"
    });
    let lastOrientation = [orientationX, orientationY, orientationZ];
    let lastPosition = [positionX, positionY, positionZ];
    const buffer = new Float32Array(1);
    scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {
      const orientation = [
        getFirstSample(inputBuffer, buffer, 0),
        getFirstSample(inputBuffer, buffer, 1),
        getFirstSample(inputBuffer, buffer, 2)
      ];
      if (orientation.some((value, index) => value !== lastOrientation[index])) {
        pannerNode.setOrientation(...orientation);
        lastOrientation = orientation;
      }
      const positon = [
        getFirstSample(inputBuffer, buffer, 3),
        getFirstSample(inputBuffer, buffer, 4),
        getFirstSample(inputBuffer, buffer, 5)
      ];
      if (positon.some((value, index) => value !== lastPosition[index])) {
        pannerNode.setPosition(...positon);
        lastPosition = positon;
      }
    };
    Object.defineProperty(orientationYGainNode.gain, "defaultValue", { get: () => 0 });
    Object.defineProperty(orientationZGainNode.gain, "defaultValue", { get: () => 0 });
    Object.defineProperty(positionXGainNode.gain, "defaultValue", { get: () => 0 });
    Object.defineProperty(positionYGainNode.gain, "defaultValue", { get: () => 0 });
    Object.defineProperty(positionZGainNode.gain, "defaultValue", { get: () => 0 });
    const nativePannerNodeFaker = {
      get bufferSize() {
        return;
      },
      get channelCount() {
        return pannerNode.channelCount;
      },
      set channelCount(value) {
        if (value > 2) {
          throw createNotSupportedError();
        }
        inputGainNode.channelCount = value;
        pannerNode.channelCount = value;
      },
      get channelCountMode() {
        return pannerNode.channelCountMode;
      },
      set channelCountMode(value) {
        if (value === "max") {
          throw createNotSupportedError();
        }
        inputGainNode.channelCountMode = value;
        pannerNode.channelCountMode = value;
      },
      get channelInterpretation() {
        return pannerNode.channelInterpretation;
      },
      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
        pannerNode.channelInterpretation = value;
      },
      get coneInnerAngle() {
        return pannerNode.coneInnerAngle;
      },
      set coneInnerAngle(value) {
        pannerNode.coneInnerAngle = value;
      },
      get coneOuterAngle() {
        return pannerNode.coneOuterAngle;
      },
      set coneOuterAngle(value) {
        pannerNode.coneOuterAngle = value;
      },
      get coneOuterGain() {
        return pannerNode.coneOuterGain;
      },
      set coneOuterGain(value) {
        if (value < 0 || value > 1) {
          throw createInvalidStateError2();
        }
        pannerNode.coneOuterGain = value;
      },
      get context() {
        return pannerNode.context;
      },
      get distanceModel() {
        return pannerNode.distanceModel;
      },
      set distanceModel(value) {
        pannerNode.distanceModel = value;
      },
      get inputs() {
        return [inputGainNode];
      },
      get maxDistance() {
        return pannerNode.maxDistance;
      },
      set maxDistance(value) {
        if (value < 0) {
          throw new RangeError;
        }
        pannerNode.maxDistance = value;
      },
      get numberOfInputs() {
        return pannerNode.numberOfInputs;
      },
      get numberOfOutputs() {
        return pannerNode.numberOfOutputs;
      },
      get orientationX() {
        return orientationXGainNode.gain;
      },
      get orientationY() {
        return orientationYGainNode.gain;
      },
      get orientationZ() {
        return orientationZGainNode.gain;
      },
      get panningModel() {
        return pannerNode.panningModel;
      },
      set panningModel(value) {
        pannerNode.panningModel = value;
      },
      get positionX() {
        return positionXGainNode.gain;
      },
      get positionY() {
        return positionYGainNode.gain;
      },
      get positionZ() {
        return positionZGainNode.gain;
      },
      get refDistance() {
        return pannerNode.refDistance;
      },
      set refDistance(value) {
        if (value < 0) {
          throw new RangeError;
        }
        pannerNode.refDistance = value;
      },
      get rolloffFactor() {
        return pannerNode.rolloffFactor;
      },
      set rolloffFactor(value) {
        if (value < 0) {
          throw new RangeError;
        }
        pannerNode.rolloffFactor = value;
      },
      addEventListener(...args) {
        return inputGainNode.addEventListener(args[0], args[1], args[2]);
      },
      dispatchEvent(...args) {
        return inputGainNode.dispatchEvent(args[0]);
      },
      removeEventListener(...args) {
        return inputGainNode.removeEventListener(args[0], args[1], args[2]);
      }
    };
    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {
      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;
    }
    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {
      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;
    }
    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {
      nativePannerNodeFaker.coneOuterGain = coneOuterGain;
    }
    if (distanceModel !== nativePannerNodeFaker.distanceModel) {
      nativePannerNodeFaker.distanceModel = distanceModel;
    }
    if (maxDistance !== nativePannerNodeFaker.maxDistance) {
      nativePannerNodeFaker.maxDistance = maxDistance;
    }
    if (orientationX !== nativePannerNodeFaker.orientationX.value) {
      nativePannerNodeFaker.orientationX.value = orientationX;
    }
    if (orientationY !== nativePannerNodeFaker.orientationY.value) {
      nativePannerNodeFaker.orientationY.value = orientationY;
    }
    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {
      nativePannerNodeFaker.orientationZ.value = orientationZ;
    }
    if (panningModel !== nativePannerNodeFaker.panningModel) {
      nativePannerNodeFaker.panningModel = panningModel;
    }
    if (positionX !== nativePannerNodeFaker.positionX.value) {
      nativePannerNodeFaker.positionX.value = positionX;
    }
    if (positionY !== nativePannerNodeFaker.positionY.value) {
      nativePannerNodeFaker.positionY.value = positionY;
    }
    if (positionZ !== nativePannerNodeFaker.positionZ.value) {
      nativePannerNodeFaker.positionZ.value = positionZ;
    }
    if (refDistance !== nativePannerNodeFaker.refDistance) {
      nativePannerNodeFaker.refDistance = refDistance;
    }
    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {
      nativePannerNodeFaker.rolloffFactor = rolloffFactor;
    }
    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {
      pannerNode.setOrientation(...lastOrientation);
    }
    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {
      pannerNode.setPosition(...lastPosition);
    }
    const whenConnected = () => {
      inputGainNode.connect(pannerNode);
      connectNativeAudioNodeToNativeAudioNode2(inputGainNode, waveShaperNode, 0, 0);
      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);
      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);
      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);
      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);
      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);
      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);
      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);
    };
    const whenDisconnected = () => {
      inputGainNode.disconnect(pannerNode);
      disconnectNativeAudioNodeFromNativeAudioNode2(inputGainNode, waveShaperNode, 0, 0);
      waveShaperNode.disconnect(orientationXGainNode);
      orientationXGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(orientationYGainNode);
      orientationYGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(orientationZGainNode);
      orientationZGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionXGainNode);
      positionXGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionYGainNode);
      positionYGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionZGainNode);
      positionZGainNode.disconnect(channelMergerNode);
      channelMergerNode.disconnect(scriptProcessorNode);
      scriptProcessorNode.disconnect(nativeContext.destination);
    };
    return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js
var createNativePeriodicWaveFactory = (createIndexSizeError2) => {
  return (nativeContext, { disableNormalization, imag, real }) => {
    const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);
    const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);
    const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });
    if (Array.from(imag).length < 2) {
      throw createIndexSizeError2();
    }
    return nativePeriodicWave;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js
var createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {
  return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
};

// node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js
var createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {
  return (nativeContext, options) => {
    const channelCountMode = options.channelCountMode;
    if (channelCountMode === "clamped-max") {
      throw createNotSupportedError();
    }
    if (nativeContext.createStereoPanner === undefined) {
      return createNativeStereoPannerNodeFaker(nativeContext, options);
    }
    const nativeStereoPannerNode = nativeContext.createStereoPanner();
    assignNativeAudioNodeOptions(nativeStereoPannerNode, options);
    assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, "pan");
    Object.defineProperty(nativeStereoPannerNode, "channelCountMode", {
      get: () => channelCountMode,
      set: (value) => {
        if (value !== channelCountMode) {
          throw createNotSupportedError();
        }
      }
    });
    return nativeStereoPannerNode;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js
var createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode2, createNativeGainNode2, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {
  const CURVE_SIZE = 16385;
  const DC_CURVE = new Float32Array([1, 1]);
  const HALF_PI = Math.PI / 2;
  const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: "explicit", channelInterpretation: "discrete" };
  const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: "none" };
  const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {
    const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);
    const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);
    for (let i = 0;i < CURVE_SIZE; i += 1) {
      const x = i / (CURVE_SIZE - 1) * HALF_PI;
      leftWaveShaperCurve[i] = Math.cos(x);
      rightWaveShaperCurve[i] = Math.sin(x);
    }
    const leftGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve });
    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });
    const rightGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve });
    return {
      connectGraph() {
        inputGainNode.connect(leftGainNode);
        inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        inputGainNode.connect(rightGainNode);
        panWaveShaperNode.connect(panGainNode);
        panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
        panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
        leftWaveShaperNode.connect(leftGainNode.gain);
        rightWaveShaperNode.connect(rightGainNode.gain);
        leftGainNode.connect(channelMergerNode, 0, 0);
        rightGainNode.connect(channelMergerNode, 0, 1);
      },
      disconnectGraph() {
        inputGainNode.disconnect(leftGainNode);
        inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        inputGainNode.disconnect(rightGainNode);
        panWaveShaperNode.disconnect(panGainNode);
        panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
        leftWaveShaperNode.disconnect(leftGainNode.gain);
        rightWaveShaperNode.disconnect(rightGainNode.gain);
        leftGainNode.disconnect(channelMergerNode, 0, 0);
        rightGainNode.disconnect(channelMergerNode, 0, 1);
      }
    };
  };
  const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {
    const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    const centerIndex = Math.floor(CURVE_SIZE / 2);
    for (let i = 0;i < CURVE_SIZE; i += 1) {
      if (i > centerIndex) {
        const x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
        leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
        leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
        rightInputForLeftOutputWaveShaperCurve[i] = 0;
        rightInputForRightOutputWaveShaperCurve[i] = 1;
      } else {
        const x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
        leftInputForLeftOutputWaveShaperCurve[i] = 1;
        leftInputForRightOutputWaveShaperCurve[i] = 0;
        rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
        rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
      }
    }
    const channelSplitterNode = createNativeChannelSplitterNode2(nativeContext, {
      channelCount: 2,
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      numberOfOutputs: 2
    });
    const leftInputForLeftOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
      curve: leftInputForLeftOutputWaveShaperCurve
    });
    const leftInputForRightOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
      curve: leftInputForRightOutputWaveShaperCurve
    });
    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });
    const rightInputForLeftOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
      curve: rightInputForLeftOutputWaveShaperCurve
    });
    const rightInputForRightOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });
    const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {
      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,
      curve: rightInputForRightOutputWaveShaperCurve
    });
    return {
      connectGraph() {
        inputGainNode.connect(channelSplitterNode);
        inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);
        channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);
        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);
        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);
        panWaveShaperNode.connect(panGainNode);
        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);
        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);
        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);
        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);
        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
      },
      disconnectGraph() {
        inputGainNode.disconnect(channelSplitterNode);
        inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);
        channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);
        channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);
        channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);
        panWaveShaperNode.disconnect(panGainNode);
        panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
        leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);
        leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);
        rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);
        rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);
        leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
        rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
        leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
        rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
      }
    };
  };
  const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {
    if (channelCount === 1) {
      return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);
    }
    if (channelCount === 2) {
      return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);
    }
    throw createNotSupportedError();
  };
  return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {
    if (channelCountMode === "max") {
      throw createNotSupportedError();
    }
    const channelMergerNode = createNativeChannelMergerNode(nativeContext, {
      ...audioNodeOptions,
      channelCount: 1,
      channelCountMode,
      numberOfInputs: 2
    });
    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });
    const panGainNode = createNativeGainNode2(nativeContext, {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      gain: pan
    });
    let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);
    Object.defineProperty(panGainNode.gain, "defaultValue", { get: () => 0 });
    Object.defineProperty(panGainNode.gain, "maxValue", { get: () => 1 });
    Object.defineProperty(panGainNode.gain, "minValue", { get: () => -1 });
    const nativeStereoPannerNodeFakerFactory = {
      get bufferSize() {
        return;
      },
      get channelCount() {
        return inputGainNode.channelCount;
      },
      set channelCount(value) {
        if (inputGainNode.channelCount !== value) {
          if (isConnected) {
            disconnectGraph();
          }
          ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));
          if (isConnected) {
            connectGraph();
          }
        }
        inputGainNode.channelCount = value;
      },
      get channelCountMode() {
        return inputGainNode.channelCountMode;
      },
      set channelCountMode(value) {
        if (value === "clamped-max" || value === "max") {
          throw createNotSupportedError();
        }
        inputGainNode.channelCountMode = value;
      },
      get channelInterpretation() {
        return inputGainNode.channelInterpretation;
      },
      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
      },
      get context() {
        return inputGainNode.context;
      },
      get inputs() {
        return [inputGainNode];
      },
      get numberOfInputs() {
        return inputGainNode.numberOfInputs;
      },
      get numberOfOutputs() {
        return inputGainNode.numberOfOutputs;
      },
      get pan() {
        return panGainNode.gain;
      },
      addEventListener(...args) {
        return inputGainNode.addEventListener(args[0], args[1], args[2]);
      },
      dispatchEvent(...args) {
        return inputGainNode.dispatchEvent(args[0]);
      },
      removeEventListener(...args) {
        return inputGainNode.removeEventListener(args[0], args[1], args[2]);
      }
    };
    let isConnected = false;
    const whenConnected = () => {
      connectGraph();
      isConnected = true;
    };
    const whenDisconnected = () => {
      disconnectGraph();
      isConnected = false;
    };
    return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js
var createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError2, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {
  return (nativeContext, options) => {
    const nativeWaveShaperNode = nativeContext.createWaveShaper();
    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === "webkitAudioContext" && nativeContext.createGain().gain.automationRate === undefined) {
      return createNativeWaveShaperNodeFaker(nativeContext, options);
    }
    assignNativeAudioNodeOptions(nativeWaveShaperNode, options);
    const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);
    if (curve !== null && curve.length < 2) {
      throw createInvalidStateError2();
    }
    assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, "curve");
    assignNativeAudioNodeOption(nativeWaveShaperNode, options, "oversample");
    let disconnectNativeAudioBufferSourceNode = null;
    let isConnected = false;
    overwriteAccessors(nativeWaveShaperNode, "curve", (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {
      set.call(nativeWaveShaperNode, value);
      if (isConnected) {
        if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {
          disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
        } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {
          disconnectNativeAudioBufferSourceNode();
          disconnectNativeAudioBufferSourceNode = null;
        }
      }
      return value;
    });
    const whenConnected = () => {
      isConnected = true;
      if (isDCCurve(nativeWaveShaperNode.curve)) {
        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
      }
    };
    const whenDisconnected = () => {
      isConnected = false;
      if (disconnectNativeAudioBufferSourceNode !== null) {
        disconnectNativeAudioBufferSourceNode();
        disconnectNativeAudioBufferSourceNode = null;
      }
    };
    return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js
var createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError2, createNativeGainNode2, isDCCurve, monitorConnections) => {
  return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {
    const negativeWaveShaperNode = nativeContext.createWaveShaper();
    const positiveWaveShaperNode = nativeContext.createWaveShaper();
    assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);
    assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);
    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });
    const invertGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: -1 });
    const outputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });
    const revertGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: -1 });
    let disconnectNativeAudioBufferSourceNode = null;
    let isConnected = false;
    let unmodifiedCurve = null;
    const nativeWaveShaperNodeFaker = {
      get bufferSize() {
        return;
      },
      get channelCount() {
        return negativeWaveShaperNode.channelCount;
      },
      set channelCount(value) {
        inputGainNode.channelCount = value;
        invertGainNode.channelCount = value;
        negativeWaveShaperNode.channelCount = value;
        outputGainNode.channelCount = value;
        positiveWaveShaperNode.channelCount = value;
        revertGainNode.channelCount = value;
      },
      get channelCountMode() {
        return negativeWaveShaperNode.channelCountMode;
      },
      set channelCountMode(value) {
        inputGainNode.channelCountMode = value;
        invertGainNode.channelCountMode = value;
        negativeWaveShaperNode.channelCountMode = value;
        outputGainNode.channelCountMode = value;
        positiveWaveShaperNode.channelCountMode = value;
        revertGainNode.channelCountMode = value;
      },
      get channelInterpretation() {
        return negativeWaveShaperNode.channelInterpretation;
      },
      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
        invertGainNode.channelInterpretation = value;
        negativeWaveShaperNode.channelInterpretation = value;
        outputGainNode.channelInterpretation = value;
        positiveWaveShaperNode.channelInterpretation = value;
        revertGainNode.channelInterpretation = value;
      },
      get context() {
        return negativeWaveShaperNode.context;
      },
      get curve() {
        return unmodifiedCurve;
      },
      set curve(value) {
        if (value !== null && value.length < 2) {
          throw createInvalidStateError2();
        }
        if (value === null) {
          negativeWaveShaperNode.curve = value;
          positiveWaveShaperNode.curve = value;
        } else {
          const curveLength = value.length;
          const negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);
          const positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);
          negativeCurve[0] = value[0];
          positiveCurve[0] = -value[curveLength - 1];
          const length = Math.ceil((curveLength + 1) / 2);
          const centerIndex = (curveLength + 1) / 2 - 1;
          for (let i = 1;i < length; i += 1) {
            const theoreticIndex = i / length * centerIndex;
            const lowerIndex = Math.floor(theoreticIndex);
            const upperIndex = Math.ceil(theoreticIndex);
            negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];
            positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];
          }
          negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;
          negativeWaveShaperNode.curve = negativeCurve;
          positiveWaveShaperNode.curve = positiveCurve;
        }
        unmodifiedCurve = value;
        if (isConnected) {
          if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {
            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
          } else if (disconnectNativeAudioBufferSourceNode !== null) {
            disconnectNativeAudioBufferSourceNode();
            disconnectNativeAudioBufferSourceNode = null;
          }
        }
      },
      get inputs() {
        return [inputGainNode];
      },
      get numberOfInputs() {
        return negativeWaveShaperNode.numberOfInputs;
      },
      get numberOfOutputs() {
        return negativeWaveShaperNode.numberOfOutputs;
      },
      get oversample() {
        return negativeWaveShaperNode.oversample;
      },
      set oversample(value) {
        negativeWaveShaperNode.oversample = value;
        positiveWaveShaperNode.oversample = value;
      },
      addEventListener(...args) {
        return inputGainNode.addEventListener(args[0], args[1], args[2]);
      },
      dispatchEvent(...args) {
        return inputGainNode.dispatchEvent(args[0]);
      },
      removeEventListener(...args) {
        return inputGainNode.removeEventListener(args[0], args[1], args[2]);
      }
    };
    if (curve !== null) {
      nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);
    }
    if (oversample !== nativeWaveShaperNodeFaker.oversample) {
      nativeWaveShaperNodeFaker.oversample = oversample;
    }
    const whenConnected = () => {
      inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);
      inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);
      isConnected = true;
      if (isDCCurve(unmodifiedCurve)) {
        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
      }
    };
    const whenDisconnected = () => {
      inputGainNode.disconnect(negativeWaveShaperNode);
      negativeWaveShaperNode.disconnect(outputGainNode);
      inputGainNode.disconnect(invertGainNode);
      invertGainNode.disconnect(positiveWaveShaperNode);
      positiveWaveShaperNode.disconnect(revertGainNode);
      revertGainNode.disconnect(outputGainNode);
      isConnected = false;
      if (disconnectNativeAudioBufferSourceNode !== null) {
        disconnectNativeAudioBufferSourceNode();
        disconnectNativeAudioBufferSourceNode = null;
      }
    };
    return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js
var createNotSupportedError = () => new DOMException("", "NotSupportedError");

// node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js
var DEFAULT_OPTIONS16 = {
  numberOfChannels: 1
};
var createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError2, createNativeOfflineAudioContext, startRendering) => {
  return class OfflineAudioContext extends baseAudioContextConstructor {
    constructor(a, b, c) {
      let options;
      if (typeof a === "number" && b !== undefined && c !== undefined) {
        options = { length: b, numberOfChannels: a, sampleRate: c };
      } else if (typeof a === "object") {
        options = a;
      } else {
        throw new Error("The given parameters are not valid.");
      }
      const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS16, ...options };
      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);
      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {
        nativeOfflineAudioContext.addEventListener("statechange", (() => {
          let i = 0;
          const delayStateChangeEvent = (event) => {
            if (this._state === "running") {
              if (i > 0) {
                nativeOfflineAudioContext.removeEventListener("statechange", delayStateChangeEvent);
                event.stopImmediatePropagation();
                this._waitForThePromiseToSettle(event);
              } else {
                i += 1;
              }
            }
          };
          return delayStateChangeEvent;
        })());
      }
      super(nativeOfflineAudioContext, numberOfChannels);
      this._length = length;
      this._nativeOfflineAudioContext = nativeOfflineAudioContext;
      this._state = null;
    }
    get length() {
      if (this._nativeOfflineAudioContext.length === undefined) {
        return this._length;
      }
      return this._nativeOfflineAudioContext.length;
    }
    get state() {
      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
    }
    startRendering() {
      if (this._state === "running") {
        return Promise.reject(createInvalidStateError2());
      }
      this._state = "running";
      return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {
        this._state = null;
        deactivateAudioGraph(this);
      });
    }
    _waitForThePromiseToSettle(event) {
      if (this._state === null) {
        this._nativeOfflineAudioContext.dispatchEvent(event);
      } else {
        setTimeout(() => this._waitForThePromiseToSettle(event));
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js
var DEFAULT_OPTIONS17 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  detune: 0,
  frequency: 440,
  periodicWave: undefined,
  type: "sine"
};
var createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {
  return class OscillatorNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS17, ...options };
      const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;
      const nyquist = context.sampleRate / 2;
      super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);
      this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);
      this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);
      this._nativeOscillatorNode = nativeOscillatorNode;
      this._onended = null;
      this._oscillatorNodeRenderer = oscillatorNodeRenderer;
      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {
        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;
      }
    }
    get detune() {
      return this._detune;
    }
    get frequency() {
      return this._frequency;
    }
    get onended() {
      return this._onended;
    }
    set onended(value) {
      const wrappedListener = typeof value === "function" ? wrapEventListener(this, value) : null;
      this._nativeOscillatorNode.onended = wrappedListener;
      const nativeOnEnded = this._nativeOscillatorNode.onended;
      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
    }
    get type() {
      return this._nativeOscillatorNode.type;
    }
    set type(value) {
      this._nativeOscillatorNode.type = value;
      if (this._oscillatorNodeRenderer !== null) {
        this._oscillatorNodeRenderer.periodicWave = null;
      }
    }
    setPeriodicWave(periodicWave) {
      this._nativeOscillatorNode.setPeriodicWave(periodicWave);
      if (this._oscillatorNodeRenderer !== null) {
        this._oscillatorNodeRenderer.periodicWave = periodicWave;
      }
    }
    start(when = 0) {
      this._nativeOscillatorNode.start(when);
      if (this._oscillatorNodeRenderer !== null) {
        this._oscillatorNodeRenderer.start = when;
      }
      if (this.context.state !== "closed") {
        setInternalStateToActive(this);
        const resetInternalStateToPassive = () => {
          this._nativeOscillatorNode.removeEventListener("ended", resetInternalStateToPassive);
          if (isActiveAudioNode(this)) {
            setInternalStateToPassive(this);
          }
        };
        this._nativeOscillatorNode.addEventListener("ended", resetInternalStateToPassive);
      }
    }
    stop(when = 0) {
      this._nativeOscillatorNode.stop(when);
      if (this._oscillatorNodeRenderer !== null) {
        this._oscillatorNodeRenderer.stop = when;
      }
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js
var createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeOscillatorNodes = new WeakMap;
    let periodicWave = null;
    let start = null;
    let stop = null;
    const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeOscillatorNode = getNativeAudioNode2(proxy);
      const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);
      if (!nativeOscillatorNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeOscillatorNode.channelCount,
          channelCountMode: nativeOscillatorNode.channelCountMode,
          channelInterpretation: nativeOscillatorNode.channelInterpretation,
          detune: nativeOscillatorNode.detune.value,
          frequency: nativeOscillatorNode.frequency.value,
          periodicWave: periodicWave === null ? undefined : periodicWave,
          type: nativeOscillatorNode.type
        };
        nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);
        if (start !== null) {
          nativeOscillatorNode.start(start);
        }
        if (stop !== null) {
          nativeOscillatorNode.stop(stop);
        }
      }
      renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);
      if (!nativeOscillatorNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);
        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);
        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);
      }
      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);
      return nativeOscillatorNode;
    };
    return {
      set periodicWave(value) {
        periodicWave = value;
      },
      set start(value) {
        start = value;
      },
      set stop(value) {
        stop = value;
      },
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);
        if (renderedNativeOscillatorNode !== undefined) {
          return Promise.resolve(renderedNativeOscillatorNode);
        }
        return createOscillatorNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js
var DEFAULT_OPTIONS18 = {
  channelCount: 2,
  channelCountMode: "clamped-max",
  channelInterpretation: "speakers",
  coneInnerAngle: 360,
  coneOuterAngle: 360,
  coneOuterGain: 0,
  distanceModel: "inverse",
  maxDistance: 1e4,
  orientationX: 1,
  orientationY: 0,
  orientationZ: 0,
  panningModel: "equalpower",
  positionX: 0,
  positionY: 0,
  positionZ: 0,
  refDistance: 1,
  rolloffFactor: 1
};
var createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class PannerNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS18, ...options };
      const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;
      super(context, false, nativePannerNode, pannerNodeRenderer);
      this._nativePannerNode = nativePannerNode;
      this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);
      setAudioNodeTailTime(this, 1);
    }
    get coneInnerAngle() {
      return this._nativePannerNode.coneInnerAngle;
    }
    set coneInnerAngle(value) {
      this._nativePannerNode.coneInnerAngle = value;
    }
    get coneOuterAngle() {
      return this._nativePannerNode.coneOuterAngle;
    }
    set coneOuterAngle(value) {
      this._nativePannerNode.coneOuterAngle = value;
    }
    get coneOuterGain() {
      return this._nativePannerNode.coneOuterGain;
    }
    set coneOuterGain(value) {
      this._nativePannerNode.coneOuterGain = value;
    }
    get distanceModel() {
      return this._nativePannerNode.distanceModel;
    }
    set distanceModel(value) {
      this._nativePannerNode.distanceModel = value;
    }
    get maxDistance() {
      return this._nativePannerNode.maxDistance;
    }
    set maxDistance(value) {
      this._nativePannerNode.maxDistance = value;
    }
    get orientationX() {
      return this._orientationX;
    }
    get orientationY() {
      return this._orientationY;
    }
    get orientationZ() {
      return this._orientationZ;
    }
    get panningModel() {
      return this._nativePannerNode.panningModel;
    }
    set panningModel(value) {
      this._nativePannerNode.panningModel = value;
    }
    get positionX() {
      return this._positionX;
    }
    get positionY() {
      return this._positionY;
    }
    get positionZ() {
      return this._positionZ;
    }
    get refDistance() {
      return this._nativePannerNode.refDistance;
    }
    set refDistance(value) {
      this._nativePannerNode.refDistance = value;
    }
    get rolloffFactor() {
      return this._nativePannerNode.rolloffFactor;
    }
    set rolloffFactor(value) {
      this._nativePannerNode.rolloffFactor = value;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js
var createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode2, createNativePannerNode, getNativeAudioNode2, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {
  return () => {
    const renderedNativeAudioNodes = new WeakMap;
    let renderedBufferPromise = null;
    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeGainNode = null;
      let nativePannerNode = getNativeAudioNode2(proxy);
      const commonAudioNodeOptions = {
        channelCount: nativePannerNode.channelCount,
        channelCountMode: nativePannerNode.channelCountMode,
        channelInterpretation: nativePannerNode.channelInterpretation
      };
      const commonNativePannerNodeOptions = {
        ...commonAudioNodeOptions,
        coneInnerAngle: nativePannerNode.coneInnerAngle,
        coneOuterAngle: nativePannerNode.coneOuterAngle,
        coneOuterGain: nativePannerNode.coneOuterGain,
        distanceModel: nativePannerNode.distanceModel,
        maxDistance: nativePannerNode.maxDistance,
        panningModel: nativePannerNode.panningModel,
        refDistance: nativePannerNode.refDistance,
        rolloffFactor: nativePannerNode.rolloffFactor
      };
      const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);
      if ("bufferSize" in nativePannerNode) {
        nativeGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
      } else if (!nativePannerNodeIsOwnedByContext) {
        const options = {
          ...commonNativePannerNodeOptions,
          orientationX: nativePannerNode.orientationX.value,
          orientationY: nativePannerNode.orientationY.value,
          orientationZ: nativePannerNode.orientationZ.value,
          positionX: nativePannerNode.positionX.value,
          positionY: nativePannerNode.positionY.value,
          positionZ: nativePannerNode.positionZ.value
        };
        nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);
      }
      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);
      if (nativeGainNode !== null) {
        if (renderedBufferPromise === null) {
          if (nativeOfflineAudioContextConstructor === null) {
            throw new Error("Missing the native OfflineAudioContext constructor.");
          }
          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, proxy.context.length, nativeOfflineAudioContext.sampleRate);
          const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "speakers",
            numberOfInputs: 6
          });
          nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);
          renderedBufferPromise = (async () => {
            const nativeConstantSourceNodes = await Promise.all([
              proxy.orientationX,
              proxy.orientationY,
              proxy.orientationZ,
              proxy.positionX,
              proxy.positionY,
              proxy.positionZ
            ].map(async (audioParam, index) => {
              const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                offset: index === 0 ? 1 : 0
              });
              await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);
              return nativeConstantSourceNode;
            }));
            for (let i = 0;i < 6; i += 1) {
              nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);
              nativeConstantSourceNodes[i].start(0);
            }
            return renderNativeOfflineAudioContext(partialOfflineAudioContext);
          })();
        }
        const renderedBuffer = await renderedBufferPromise;
        const inputGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);
        const channelDatas = [];
        for (let i = 0;i < renderedBuffer.numberOfChannels; i += 1) {
          channelDatas.push(renderedBuffer.getChannelData(i));
        }
        let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];
        let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];
        let gateGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });
        let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
          ...commonNativePannerNodeOptions,
          orientationX: lastOrientation[0],
          orientationY: lastOrientation[1],
          orientationZ: lastOrientation[2],
          positionX: lastPosition[0],
          positionY: lastPosition[1],
          positionZ: lastPosition[2]
        });
        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
        partialPannerNode.connect(nativeGainNode);
        for (let i = 128;i < renderedBuffer.length; i += 128) {
          const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];
          const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];
          if (orientation.some((value, index) => value !== lastOrientation[index]) || positon.some((value, index) => value !== lastPosition[index])) {
            lastOrientation = orientation;
            lastPosition = positon;
            const currentTime = i / nativeOfflineAudioContext.sampleRate;
            gateGainNode.gain.setValueAtTime(0, currentTime);
            gateGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });
            partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {
              ...commonNativePannerNodeOptions,
              orientationX: lastOrientation[0],
              orientationY: lastOrientation[1],
              orientationZ: lastOrientation[2],
              positionX: lastPosition[0],
              positionY: lastPosition[1],
              positionZ: lastPosition[2]
            });
            gateGainNode.gain.setValueAtTime(1, currentTime);
            inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
            partialPannerNode.connect(nativeGainNode);
          }
        }
        return nativeGainNode;
      }
      if (!nativePannerNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);
        await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);
        await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);
        await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);
        await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);
        await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);
        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);
        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);
        await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);
        await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);
        await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);
      }
      if (isNativeAudioNodeFaker(nativePannerNode)) {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);
      } else {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);
      }
      return nativePannerNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);
        if (renderedNativeGainNodeOrNativePannerNode !== undefined) {
          return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);
        }
        return createAudioNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js
var DEFAULT_OPTIONS19 = {
  disableNormalization: false
};
var createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {
  return class PeriodicWave {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS19, ...options });
      const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);
      periodicWaveStore.add(periodicWave);
      return periodicWave;
    }
    static [Symbol.hasInstance](instance) {
      return instance !== null && typeof instance === "object" && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/render-automation.js
var createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {
  return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {
    const audioParamRenderer = getAudioParamRenderer(audioParam);
    audioParamRenderer.replay(nativeAudioParam);
    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js
var createRenderInputsOfAudioNode = (getAudioNodeConnections2, getAudioNodeRenderer, isPartOfACycle2) => {
  return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {
    const audioNodeConnections = getAudioNodeConnections2(audioNode);
    await Promise.all(audioNodeConnections.activeInputs.map((connections, input) => Array.from(connections).map(async ([source, output]) => {
      const audioNodeRenderer = getAudioNodeRenderer(source);
      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);
      const destination = audioNode.context.destination;
      if (!isPartOfACycle2(source) && (audioNode !== destination || !isPartOfACycle2(audioNode))) {
        renderedNativeAudioNode.connect(nativeAudioNode, output, input);
      }
    })).reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js
var createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections2, isPartOfACycle2) => {
  return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {
    const audioParamConnections = getAudioParamConnections2(audioParam);
    await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {
      const audioNodeRenderer = getAudioNodeRenderer(source);
      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);
      if (!isPartOfACycle2(source)) {
        renderedNativeAudioNode.connect(nativeAudioParam, output);
      }
    }));
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js
var createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode2, createNativeScriptProcessorNode2, testOfflineAudioContextCurrentTimeSupport) => {
  return (nativeOfflineAudioContext) => {
    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {
      return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {
        if (!isOfflineAudioContextCurrentTimeSupported) {
          const scriptProcessorNode = createNativeScriptProcessorNode2(nativeOfflineAudioContext, 512, 0, 1);
          nativeOfflineAudioContext.oncomplete = () => {
            scriptProcessorNode.onaudioprocess = null;
            scriptProcessorNode.disconnect();
          };
          scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime;
          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);
        }
        return nativeOfflineAudioContext.startRendering();
      });
    }
    return new Promise((resolve) => {
      const gainNode = createNativeGainNode2(nativeOfflineAudioContext, {
        channelCount: 1,
        channelCountMode: "explicit",
        channelInterpretation: "discrete",
        gain: 0
      });
      nativeOfflineAudioContext.oncomplete = (event) => {
        gainNode.disconnect();
        resolve(event.renderedBuffer);
      };
      gainNode.connect(nativeOfflineAudioContext.destination);
      nativeOfflineAudioContext.startRendering();
    });
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js
var createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {
  return (nativeAudioWorkletNode, activeInputs) => {
    activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js
var createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {
  return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);
};

// node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js
var createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {
  return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext).then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)))).then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext)).then((audioBuffer) => {
    if (typeof audioBuffer.copyFromChannel !== "function") {
      wrapAudioBufferCopyChannelMethods(audioBuffer);
      wrapAudioBufferGetChannelDataMethod(audioBuffer);
    } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport2(audioBuffer))) {
      wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
    }
    audioBufferStore.add(audioBuffer);
    return audioBuffer;
  });
};

// node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js
var DEFAULT_OPTIONS20 = {
  channelCount: 2,
  channelCountMode: "explicit",
  channelInterpretation: "speakers",
  pan: 0
};
var createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {
  return class StereoPannerNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS20, ...options };
      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;
      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);
      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);
    }
    get pan() {
      return this._pan;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js
var createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode2, renderAutomation, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeStereoPannerNodes = new WeakMap;
    const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeStereoPannerNode = getNativeAudioNode2(proxy);
      const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);
      if (!nativeStereoPannerNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeStereoPannerNode.channelCount,
          channelCountMode: nativeStereoPannerNode.channelCountMode,
          channelInterpretation: nativeStereoPannerNode.channelInterpretation,
          pan: nativeStereoPannerNode.pan.value
        };
        nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);
      }
      renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);
      if (!nativeStereoPannerNodeIsOwnedByContext) {
        await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);
      } else {
        await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);
      }
      if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);
      } else {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);
      }
      return nativeStereoPannerNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);
        if (renderedNativeStereoPannerNode !== undefined) {
          return Promise.resolve(renderedNativeStereoPannerNode);
        }
        return createStereoPannerNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js
var createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {
  return () => {
    if (nativeAudioBufferConstructor === null) {
      return false;
    }
    try {
      new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 });
    } catch {
      return false;
    }
    return true;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js
var createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {
  return async () => {
    if (nativeAudioWorkletNodeConstructor === null) {
      return true;
    }
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }
    const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'], {
      type: "application/javascript; charset=utf-8"
    });
    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);
    const url = URL.createObjectURL(blob);
    let isEmittingMessageEvents = false;
    let isEmittingProcessorErrorEvents = false;
    try {
      await offlineAudioContext.audioWorklet.addModule(url);
      const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, "a", { numberOfOutputs: 0 });
      const oscillator = offlineAudioContext.createOscillator();
      audioWorkletNode.port.onmessage = () => isEmittingMessageEvents = true;
      audioWorkletNode.onprocessorerror = () => isEmittingProcessorErrorEvents = true;
      oscillator.connect(audioWorkletNode);
      oscillator.start(0);
      await offlineAudioContext.startRendering();
      await new Promise((resolve) => setTimeout(resolve));
    } catch {
    } finally {
      URL.revokeObjectURL(url);
    }
    return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js
var createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode2, nativeOfflineAudioContextConstructor) => {
  return () => {
    if (nativeOfflineAudioContextConstructor === null) {
      return Promise.resolve(false);
    }
    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    const gainNode = createNativeGainNode2(nativeOfflineAudioContext, {
      channelCount: 1,
      channelCountMode: "explicit",
      channelInterpretation: "discrete",
      gain: 0
    });
    return new Promise((resolve) => {
      nativeOfflineAudioContext.oncomplete = () => {
        gainNode.disconnect();
        resolve(nativeOfflineAudioContext.currentTime !== 0);
      };
      nativeOfflineAudioContext.startRendering();
    });
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js
var createUnknownError = () => new DOMException("", "UnknownError");

// node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js
var DEFAULT_OPTIONS21 = {
  channelCount: 2,
  channelCountMode: "max",
  channelInterpretation: "speakers",
  curve: null,
  oversample: "none"
};
var createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError2, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {
  return class WaveShaperNode extends audioNodeConstructor {
    constructor(context, options) {
      const nativeContext = getNativeContext(context);
      const mergedOptions = { ...DEFAULT_OPTIONS21, ...options };
      const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);
      const isOffline = isNativeOfflineAudioContext(nativeContext);
      const waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null;
      super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);
      this._isCurveNullified = false;
      this._nativeWaveShaperNode = nativeWaveShaperNode;
      setAudioNodeTailTime(this, 1);
    }
    get curve() {
      if (this._isCurveNullified) {
        return null;
      }
      return this._nativeWaveShaperNode.curve;
    }
    set curve(value) {
      if (value === null) {
        this._isCurveNullified = true;
        this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);
      } else {
        if (value.length < 2) {
          throw createInvalidStateError2();
        }
        this._isCurveNullified = false;
        this._nativeWaveShaperNode.curve = value;
      }
    }
    get oversample() {
      return this._nativeWaveShaperNode.oversample;
    }
    set oversample(value) {
      this._nativeWaveShaperNode.oversample = value;
    }
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js
var createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode2, renderInputsOfAudioNode) => {
  return () => {
    const renderedNativeWaveShaperNodes = new WeakMap;
    const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {
      let nativeWaveShaperNode = getNativeAudioNode2(proxy);
      const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);
      if (!nativeWaveShaperNodeIsOwnedByContext) {
        const options = {
          channelCount: nativeWaveShaperNode.channelCount,
          channelCountMode: nativeWaveShaperNode.channelCountMode,
          channelInterpretation: nativeWaveShaperNode.channelInterpretation,
          curve: nativeWaveShaperNode.curve,
          oversample: nativeWaveShaperNode.oversample
        };
        nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
      }
      renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);
      if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);
      } else {
        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);
      }
      return nativeWaveShaperNode;
    };
    return {
      render(proxy, nativeOfflineAudioContext) {
        const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);
        if (renderedNativeWaveShaperNode !== undefined) {
          return Promise.resolve(renderedNativeWaveShaperNode);
        }
        return createWaveShaperNode(proxy, nativeOfflineAudioContext);
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/window.js
var createWindow = () => typeof window === "undefined" ? null : window;

// node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js
var createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError2) => {
  return (audioBuffer) => {
    audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
      if (channelNumber >= audioBuffer.numberOfChannels) {
        throw createIndexSizeError2();
      }
      const audioBufferLength = audioBuffer.length;
      const channelData = audioBuffer.getChannelData(channelNumber);
      const destinationLength = destination.length;
      for (let i = bufferOffset < 0 ? -bufferOffset : 0;i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {
        destination[i] = channelData[i + bufferOffset];
      }
    };
    audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
      if (channelNumber >= audioBuffer.numberOfChannels) {
        throw createIndexSizeError2();
      }
      const audioBufferLength = audioBuffer.length;
      const channelData = audioBuffer.getChannelData(channelNumber);
      const sourceLength = source.length;
      for (let i = bufferOffset < 0 ? -bufferOffset : 0;i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {
        channelData[i + bufferOffset] = source[i];
      }
    };
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js
var createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {
  return (audioBuffer) => {
    audioBuffer.copyFromChannel = ((copyFromChannel2) => {
      return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
        if (bufferOffset < audioBuffer.length) {
          return copyFromChannel2.call(audioBuffer, destination, channelNumber, bufferOffset);
        }
      };
    })(audioBuffer.copyFromChannel);
    audioBuffer.copyToChannel = ((copyToChannel2) => {
      return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {
        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);
        if (bufferOffset < audioBuffer.length) {
          return copyToChannel2.call(audioBuffer, source, channelNumber, bufferOffset);
        }
      };
    })(audioBuffer.copyToChannel);
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js
var createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {
  return (nativeAudioBufferSourceNode, nativeContext) => {
    const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);
    if (nativeAudioBufferSourceNode.buffer === null) {
      nativeAudioBufferSourceNode.buffer = nullifiedBuffer;
    }
    overwriteAccessors(nativeAudioBufferSourceNode, "buffer", (get) => () => {
      const value = get.call(nativeAudioBufferSourceNode);
      return value === nullifiedBuffer ? null : value;
    }, (set) => (value) => {
      return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);
    });
  };
};

// node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js
var createWrapChannelMergerNode = (createInvalidStateError2, monitorConnections) => {
  return (nativeContext, channelMergerNode) => {
    channelMergerNode.channelCount = 1;
    channelMergerNode.channelCountMode = "explicit";
    Object.defineProperty(channelMergerNode, "channelCount", {
      get: () => 1,
      set: () => {
        throw createInvalidStateError2();
      }
    });
    Object.defineProperty(channelMergerNode, "channelCountMode", {
      get: () => "explicit",
      set: () => {
        throw createInvalidStateError2();
      }
    });
    const audioBufferSourceNode = nativeContext.createBufferSource();
    const whenConnected = () => {
      const length = channelMergerNode.numberOfInputs;
      for (let i = 0;i < length; i += 1) {
        audioBufferSourceNode.connect(channelMergerNode, 0, i);
      }
    };
    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);
    monitorConnections(channelMergerNode, whenConnected, whenDisconnected);
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js
var getFirstSample = (audioBuffer, buffer, channelNumber) => {
  if (audioBuffer.copyFromChannel === undefined) {
    return audioBuffer.getChannelData(channelNumber)[0];
  }
  audioBuffer.copyFromChannel(buffer, channelNumber);
  return buffer[0];
};

// node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js
var isDCCurve = (curve) => {
  if (curve === null) {
    return false;
  }
  const length = curve.length;
  if (length % 2 !== 0) {
    return curve[Math.floor(length / 2)] !== 0;
  }
  return curve[length / 2 - 1] + curve[length / 2] !== 0;
};

// node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js
var overwriteAccessors = (object, property, createGetter, createSetter) => {
  let prototype = object;
  while (!prototype.hasOwnProperty(property)) {
    prototype = Object.getPrototypeOf(prototype);
  }
  const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);
  Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });
};

// node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js
var sanitizeAudioWorkletNodeOptions = (options) => {
  return {
    ...options,
    outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ? [options.channelCount] : Array.from({ length: options.numberOfOutputs }, () => 1)
  };
};

// node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js
var sanitizeChannelSplitterOptions = (options) => {
  return { ...options, channelCount: options.numberOfOutputs };
};

// node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js
var sanitizePeriodicWaveOptions = (options) => {
  const { imag, real } = options;
  if (imag === undefined) {
    if (real === undefined) {
      return { ...options, imag: [0, 0], real: [0, 0] };
    }
    return { ...options, imag: Array.from(real, () => 0), real };
  }
  if (real === undefined) {
    return { ...options, imag, real: Array.from(imag, () => 0) };
  }
  return { ...options, imag, real };
};

// node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js
var setValueAtTimeUntilPossible = (audioParam, value, startTime) => {
  try {
    audioParam.setValueAtTime(value, startTime);
  } catch (err) {
    if (err.code !== 9) {
      throw err;
    }
    setValueAtTimeUntilPossible(audioParam, value, startTime + 0.0000001);
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js
var testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {
  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.start();
  try {
    nativeAudioBufferSourceNode.start();
  } catch {
    return true;
  }
  return false;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js
var testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {
  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
  try {
    nativeAudioBufferSourceNode.start(0, 1);
  } catch {
    return false;
  }
  return true;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js
var testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {
  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.start();
  try {
    nativeAudioBufferSourceNode.stop();
  } catch {
    return false;
  }
  return true;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js
var testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {
  const nativeAudioBufferSourceNode = nativeContext.createOscillator();
  try {
    nativeAudioBufferSourceNode.start(-1);
  } catch (err) {
    return err instanceof RangeError;
  }
  return false;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js
var testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {
  const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
  nativeAudioBufferSourceNode.start();
  nativeAudioBufferSourceNode.stop();
  try {
    nativeAudioBufferSourceNode.stop();
    return true;
  } catch {
    return false;
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js
var testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {
  const nativeAudioBufferSourceNode = nativeContext.createOscillator();
  try {
    nativeAudioBufferSourceNode.stop(-1);
  } catch (err) {
    return err instanceof RangeError;
  }
  return false;
};

// node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js
var testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {
  const { port1, port2 } = new MessageChannel;
  try {
    port1.postMessage(audioWorkletNodeOptions);
  } finally {
    port1.close();
    port2.close();
  }
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js
var wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {
  nativeAudioBufferSourceNode.start = ((start) => {
    return (when = 0, offset = 0, duration) => {
      const buffer = nativeAudioBufferSourceNode.buffer;
      const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);
      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {
        start.call(nativeAudioBufferSourceNode, when, 0, 0);
      } else {
        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);
      }
    };
  })(nativeAudioBufferSourceNode.start);
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js
var wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {
  const nativeGainNode = nativeContext.createGain();
  nativeAudioScheduledSourceNode.connect(nativeGainNode);
  const disconnectGainNode = ((disconnect) => {
    return () => {
      disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);
      nativeAudioScheduledSourceNode.removeEventListener("ended", disconnectGainNode);
    };
  })(nativeAudioScheduledSourceNode.disconnect);
  nativeAudioScheduledSourceNode.addEventListener("ended", disconnectGainNode);
  interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);
  nativeAudioScheduledSourceNode.stop = ((stop) => {
    let isStopped = false;
    return (when = 0) => {
      if (isStopped) {
        try {
          stop.call(nativeAudioScheduledSourceNode, when);
        } catch {
          nativeGainNode.gain.setValueAtTime(0, when);
        }
      } else {
        stop.call(nativeAudioScheduledSourceNode, when);
        isStopped = true;
      }
    };
  })(nativeAudioScheduledSourceNode.stop);
};

// node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js
var wrapEventListener = (target, eventListener) => {
  return (event) => {
    const descriptor = { value: target };
    Object.defineProperties(event, {
      currentTarget: descriptor,
      target: descriptor
    });
    if (typeof eventListener === "function") {
      return eventListener.call(target, event);
    }
    return eventListener.handleEvent.call(target, event);
  };
};
// node_modules/standardized-audio-context/build/es2019/module.js
var addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);
var addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);
var deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);
var audioNodeTailTimeStore = new WeakMap;
var getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);
var cacheTestResult = createCacheTestResult(new Map, new WeakMap);
var window4 = createWindow();
var createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);
var getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);
var renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);
var createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);
var getNativeContext = createGetNativeContext(CONTEXT_STORE);
var nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window4);
var isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);
var audioParamAudioNodeStore = new WeakMap;
var eventTargetConstructor = createEventTargetConstructor(wrapEventListener);
var nativeAudioContextConstructor = createNativeAudioContextConstructor(window4);
var isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);
var isNativeAudioNode2 = createIsNativeAudioNode(window4);
var isNativeAudioParam = createIsNativeAudioParam(window4);
var nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window4);
var audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode2, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);
var analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);
var audioBufferStore = new WeakSet;
var nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window4);
var convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));
var wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);
var wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);
var audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
var addSilentConnection = createAddSilentConnection(createNativeGainNode);
var renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);
var connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);
var createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
var renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);
var createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, import_automation_events2.createCancelAndHoldAutomationEvent, import_automation_events2.createCancelScheduledValuesAutomationEvent, import_automation_events2.createExponentialRampToValueAutomationEvent, import_automation_events2.createLinearRampToValueAutomationEvent, import_automation_events2.createSetTargetAutomationEvent, import_automation_events2.createSetValueAutomationEvent, import_automation_events2.createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);
var audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);
var audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);
var createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);
var biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode2);
var wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);
var createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);
var createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);
var channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);
var createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);
var channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);
var createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);
var createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);
var createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);
var createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);
var createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);
var convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);
var createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);
var createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);
var renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));
var createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);
var iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);
var unrenderedAudioWorkletNodeStore = new WeakMap;
var minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);
var createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
var createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);
var createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);
var createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);
var createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);
var createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);
var createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);
var createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);
var periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet, sanitizePeriodicWaveOptions);
var nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);
var createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);
var createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);
var stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
var createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);
var waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var isSecureContext = createIsSecureContext(window4);
var exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window4);
var backupOfflineAudioContextStore = new WeakMap;
var getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);
var addAudioWorkletModule = isSecureContext ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window4), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap, new WeakMap, createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), window4) : undefined;
var isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);
var decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
var baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);
var mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
var mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);
var mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
var createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);
var mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);
var audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);
var getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);
var addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);
var connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);
var deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);
var disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);
var activeAudioWorkletNodeInputsStore = new WeakMap;
var getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);
var createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);
var createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);
var createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);
var setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);
var audioWorkletNodeConstructor = isSecureContext ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) : undefined;
var minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);
var createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);
var startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
var minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);
var offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);
var isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);
var isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode2);
var isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);
var isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);

// node_modules/tone/build/esm/core/util/Debug.js
function assert(statement, error) {
  if (!statement) {
    throw new Error(error);
  }
}
function assertRange(value, gte, lte = Infinity) {
  if (!(gte <= value && value <= lte)) {
    throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);
  }
}
function assertContextRunning(context2) {
  if (!context2.isOffline && context2.state !== "running") {
    warn("The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.");
  }
}
function log(...args) {
  defaultLogger.log(...args);
}
function warn(...args) {
  defaultLogger.warn(...args);
}
var defaultLogger = console;

// node_modules/tone/build/esm/core/util/TypeCheck.js
function isUndef(arg) {
  return typeof arg === "undefined";
}
function isDefined(arg) {
  return !isUndef(arg);
}
function isFunction(arg) {
  return typeof arg === "function";
}
function isNumber(arg) {
  return typeof arg === "number";
}
function isObject(arg) {
  return Object.prototype.toString.call(arg) === "[object Object]" && arg.constructor === Object;
}
function isBoolean(arg) {
  return typeof arg === "boolean";
}
function isArray(arg) {
  return Array.isArray(arg);
}
function isString(arg) {
  return typeof arg === "string";
}
function isNote(arg) {
  return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
}

// node_modules/tone/build/esm/core/context/AudioContext.js
function createAudioContext(options) {
  return new audioContextConstructor(options);
}
function createOfflineAudioContext(channels, length, sampleRate) {
  return new offlineAudioContextConstructor(channels, length, sampleRate);
}
function createAudioWorkletNode(context2, name, options) {
  assert(isDefined(audioWorkletNodeConstructor), "This node only works in a secure context (https or localhost)");
  return new audioWorkletNodeConstructor(context2, name, options);
}
var theWindow = typeof self === "object" ? self : null;
var hasAudioContext = theWindow && (theWindow.hasOwnProperty("AudioContext") || theWindow.hasOwnProperty("webkitAudioContext"));

// node_modules/tslib/tslib.es6.mjs
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1;i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

// node_modules/tone/build/esm/core/clock/Ticker.js
class Ticker {
  constructor(callback, type, updateInterval) {
    this._callback = callback;
    this._type = type;
    this._updateInterval = updateInterval;
    this._createClock();
  }
  _createWorker() {
    const blob = new Blob([
      `
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`
    ], { type: "text/javascript" });
    const blobUrl = URL.createObjectURL(blob);
    const worker = new Worker(blobUrl);
    worker.onmessage = this._callback.bind(this);
    this._worker = worker;
  }
  _createTimeout() {
    this._timeout = setTimeout(() => {
      this._createTimeout();
      this._callback();
    }, this._updateInterval * 1000);
  }
  _createClock() {
    if (this._type === "worker") {
      try {
        this._createWorker();
      } catch (e2) {
        this._type = "timeout";
        this._createClock();
      }
    } else if (this._type === "timeout") {
      this._createTimeout();
    }
  }
  _disposeClock() {
    if (this._timeout) {
      clearTimeout(this._timeout);
      this._timeout = 0;
    }
    if (this._worker) {
      this._worker.terminate();
      this._worker.onmessage = null;
    }
  }
  get updateInterval() {
    return this._updateInterval;
  }
  set updateInterval(interval) {
    this._updateInterval = Math.max(interval, 128 / 44100);
    if (this._type === "worker") {
      this._worker.postMessage(Math.max(interval * 1000, 1));
    }
  }
  get type() {
    return this._type;
  }
  set type(type) {
    this._disposeClock();
    this._type = type;
    this._createClock();
  }
  dispose() {
    this._disposeClock();
  }
}

// node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js
function isAudioParam(arg) {
  return isAnyAudioParam(arg);
}
function isAudioNode2(arg) {
  return isAnyAudioNode(arg);
}
function isOfflineAudioContext(arg) {
  return isAnyOfflineAudioContext(arg);
}
function isAudioContext(arg) {
  return isAnyAudioContext(arg);
}
function isAudioBuffer(arg) {
  return arg instanceof AudioBuffer;
}

// node_modules/tone/build/esm/core/util/Defaults.js
var noCopy = function(key, arg) {
  return key === "value" || isAudioParam(arg) || isAudioNode2(arg) || isAudioBuffer(arg);
};
function deepMerge(target, ...sources) {
  if (!sources.length) {
    return target;
  }
  const source = sources.shift();
  if (isObject(target) && isObject(source)) {
    for (const key in source) {
      if (noCopy(key, source[key])) {
        target[key] = source[key];
      } else if (isObject(source[key])) {
        if (!target[key]) {
          Object.assign(target, { [key]: {} });
        }
        deepMerge(target[key], source[key]);
      } else {
        Object.assign(target, { [key]: source[key] });
      }
    }
  }
  return deepMerge(target, ...sources);
}
function deepEquals(arrayA, arrayB) {
  return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);
}
function optionsFromArguments(defaults, argsArray, keys = [], objKey) {
  const opts = {};
  const args = Array.from(argsArray);
  if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {
    const partOfDefaults = Object.keys(args[0]).some((key) => Reflect.has(defaults, key));
    if (!partOfDefaults) {
      deepMerge(opts, { [objKey]: args[0] });
      keys.splice(keys.indexOf(objKey), 1);
      args.shift();
    }
  }
  if (args.length === 1 && isObject(args[0])) {
    deepMerge(opts, args[0]);
  } else {
    for (let i = 0;i < keys.length; i++) {
      if (isDefined(args[i])) {
        opts[keys[i]] = args[i];
      }
    }
  }
  return deepMerge(defaults, opts);
}
function getDefaultsFromInstance(instance) {
  return instance.constructor.getDefaults();
}
function defaultArg(given, fallback) {
  if (isUndef(given)) {
    return fallback;
  } else {
    return given;
  }
}
function omitFromObject(obj, omit) {
  omit.forEach((prop) => {
    if (Reflect.has(obj, prop)) {
      delete obj[prop];
    }
  });
  return obj;
}

// node_modules/tone/build/esm/core/Tone.js
class Tone {
  constructor() {
    this.debug = false;
    this._wasDisposed = false;
  }
  static getDefaults() {
    return {};
  }
  log(...args) {
    if (this.debug || theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS) {
      log(this, ...args);
    }
  }
  dispose() {
    this._wasDisposed = true;
    return this;
  }
  get disposed() {
    return this._wasDisposed;
  }
  toString() {
    return this.name;
  }
}
Tone.version = version;

// node_modules/tone/build/esm/core/util/Math.js
function GT(a, b) {
  return a > b + EPSILON;
}
function GTE(a, b) {
  return GT(a, b) || EQ(a, b);
}
function LT(a, b) {
  return a + EPSILON < b;
}
function EQ(a, b) {
  return Math.abs(a - b) < EPSILON;
}
function clamp(value, min, max) {
  return Math.max(Math.min(value, max), min);
}
var EPSILON = 0.000001;

// node_modules/tone/build/esm/core/util/Timeline.js
class Timeline extends Tone {
  constructor() {
    super();
    this.name = "Timeline";
    this._timeline = [];
    const options = optionsFromArguments(Timeline.getDefaults(), arguments, ["memory"]);
    this.memory = options.memory;
    this.increasing = options.increasing;
  }
  static getDefaults() {
    return {
      memory: Infinity,
      increasing: false
    };
  }
  get length() {
    return this._timeline.length;
  }
  add(event) {
    assert(Reflect.has(event, "time"), "Timeline: events must have a time attribute");
    event.time = event.time.valueOf();
    if (this.increasing && this.length) {
      const lastValue = this._timeline[this.length - 1];
      assert(GTE(event.time, lastValue.time), "The time must be greater than or equal to the last scheduled time");
      this._timeline.push(event);
    } else {
      const index = this._search(event.time);
      this._timeline.splice(index + 1, 0, event);
    }
    if (this.length > this.memory) {
      const diff = this.length - this.memory;
      this._timeline.splice(0, diff);
    }
    return this;
  }
  remove(event) {
    const index = this._timeline.indexOf(event);
    if (index !== -1) {
      this._timeline.splice(index, 1);
    }
    return this;
  }
  get(time, param = "time") {
    const index = this._search(time, param);
    if (index !== -1) {
      return this._timeline[index];
    } else {
      return null;
    }
  }
  peek() {
    return this._timeline[0];
  }
  shift() {
    return this._timeline.shift();
  }
  getAfter(time, param = "time") {
    const index = this._search(time, param);
    if (index + 1 < this._timeline.length) {
      return this._timeline[index + 1];
    } else {
      return null;
    }
  }
  getBefore(time) {
    const len = this._timeline.length;
    if (len > 0 && this._timeline[len - 1].time < time) {
      return this._timeline[len - 1];
    }
    const index = this._search(time);
    if (index - 1 >= 0) {
      return this._timeline[index - 1];
    } else {
      return null;
    }
  }
  cancel(after) {
    if (this._timeline.length > 1) {
      let index = this._search(after);
      if (index >= 0) {
        if (EQ(this._timeline[index].time, after)) {
          for (let i = index;i >= 0; i--) {
            if (EQ(this._timeline[i].time, after)) {
              index = i;
            } else {
              break;
            }
          }
          this._timeline = this._timeline.slice(0, index);
        } else {
          this._timeline = this._timeline.slice(0, index + 1);
        }
      } else {
        this._timeline = [];
      }
    } else if (this._timeline.length === 1) {
      if (GTE(this._timeline[0].time, after)) {
        this._timeline = [];
      }
    }
    return this;
  }
  cancelBefore(time) {
    const index = this._search(time);
    if (index >= 0) {
      this._timeline = this._timeline.slice(index + 1);
    }
    return this;
  }
  previousEvent(event) {
    const index = this._timeline.indexOf(event);
    if (index > 0) {
      return this._timeline[index - 1];
    } else {
      return null;
    }
  }
  _search(time, param = "time") {
    if (this._timeline.length === 0) {
      return -1;
    }
    let beginning = 0;
    const len = this._timeline.length;
    let end = len;
    if (len > 0 && this._timeline[len - 1][param] <= time) {
      return len - 1;
    }
    while (beginning < end) {
      let midPoint = Math.floor(beginning + (end - beginning) / 2);
      const event = this._timeline[midPoint];
      const nextEvent = this._timeline[midPoint + 1];
      if (EQ(event[param], time)) {
        for (let i = midPoint;i < this._timeline.length; i++) {
          const testEvent = this._timeline[i];
          if (EQ(testEvent[param], time)) {
            midPoint = i;
          } else {
            break;
          }
        }
        return midPoint;
      } else if (LT(event[param], time) && GT(nextEvent[param], time)) {
        return midPoint;
      } else if (GT(event[param], time)) {
        end = midPoint;
      } else {
        beginning = midPoint + 1;
      }
    }
    return -1;
  }
  _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {
    this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);
  }
  forEach(callback) {
    this._iterate(callback);
    return this;
  }
  forEachBefore(time, callback) {
    const upperBound = this._search(time);
    if (upperBound !== -1) {
      this._iterate(callback, 0, upperBound);
    }
    return this;
  }
  forEachAfter(time, callback) {
    const lowerBound = this._search(time);
    this._iterate(callback, lowerBound + 1);
    return this;
  }
  forEachBetween(startTime, endTime, callback) {
    let lowerBound = this._search(startTime);
    let upperBound = this._search(endTime);
    if (lowerBound !== -1 && upperBound !== -1) {
      if (this._timeline[lowerBound].time !== startTime) {
        lowerBound += 1;
      }
      if (this._timeline[upperBound].time === endTime) {
        upperBound -= 1;
      }
      this._iterate(callback, lowerBound, upperBound);
    } else if (lowerBound === -1) {
      this._iterate(callback, 0, upperBound);
    }
    return this;
  }
  forEachFrom(time, callback) {
    let lowerBound = this._search(time);
    while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {
      lowerBound--;
    }
    this._iterate(callback, lowerBound + 1);
    return this;
  }
  forEachAtTime(time, callback) {
    const upperBound = this._search(time);
    if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {
      let lowerBound = upperBound;
      for (let i = upperBound;i >= 0; i--) {
        if (EQ(this._timeline[i].time, time)) {
          lowerBound = i;
        } else {
          break;
        }
      }
      this._iterate((event) => {
        callback(event);
      }, lowerBound, upperBound);
    }
    return this;
  }
  dispose() {
    super.dispose();
    this._timeline = [];
    return this;
  }
}

// node_modules/tone/build/esm/core/context/ContextInitialization.js
function onContextInit(cb) {
  notifyNewContext.push(cb);
}
function initializeContext(ctx) {
  notifyNewContext.forEach((cb) => cb(ctx));
}
function onContextClose(cb) {
  notifyCloseContext.push(cb);
}
function closeContext(ctx) {
  notifyCloseContext.forEach((cb) => cb(ctx));
}
var notifyNewContext = [];
var notifyCloseContext = [];

// node_modules/tone/build/esm/core/util/Emitter.js
class Emitter extends Tone {
  constructor() {
    super(...arguments);
    this.name = "Emitter";
  }
  on(event, callback) {
    const events = event.split(/\W+/);
    events.forEach((eventName) => {
      if (isUndef(this._events)) {
        this._events = {};
      }
      if (!this._events.hasOwnProperty(eventName)) {
        this._events[eventName] = [];
      }
      this._events[eventName].push(callback);
    });
    return this;
  }
  once(event, callback) {
    const boundCallback = (...args) => {
      callback(...args);
      this.off(event, boundCallback);
    };
    this.on(event, boundCallback);
    return this;
  }
  off(event, callback) {
    const events = event.split(/\W+/);
    events.forEach((eventName) => {
      if (isUndef(this._events)) {
        this._events = {};
      }
      if (this._events.hasOwnProperty(event)) {
        if (isUndef(callback)) {
          this._events[event] = [];
        } else {
          const eventList = this._events[event];
          for (let i = eventList.length - 1;i >= 0; i--) {
            if (eventList[i] === callback) {
              eventList.splice(i, 1);
            }
          }
        }
      }
    });
    return this;
  }
  emit(event, ...args) {
    if (this._events) {
      if (this._events.hasOwnProperty(event)) {
        const eventList = this._events[event].slice(0);
        for (let i = 0, len = eventList.length;i < len; i++) {
          eventList[i].apply(this, args);
        }
      }
    }
    return this;
  }
  static mixin(constr) {
    ["on", "once", "off", "emit"].forEach((name) => {
      const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);
      Object.defineProperty(constr.prototype, name, property);
    });
  }
  dispose() {
    super.dispose();
    this._events = undefined;
    return this;
  }
}

// node_modules/tone/build/esm/core/context/BaseContext.js
class BaseContext extends Emitter {
  constructor() {
    super(...arguments);
    this.isOffline = false;
  }
  toJSON() {
    return {};
  }
}

// node_modules/tone/build/esm/core/context/Context.js
class Context extends BaseContext {
  constructor() {
    super();
    this.name = "Context";
    this._constants = new Map;
    this._timeouts = new Timeline;
    this._timeoutIds = 0;
    this._initialized = false;
    this.isOffline = false;
    this._workletModules = new Map;
    const options = optionsFromArguments(Context.getDefaults(), arguments, [
      "context"
    ]);
    if (options.context) {
      this._context = options.context;
    } else {
      this._context = createAudioContext({
        latencyHint: options.latencyHint
      });
    }
    this._ticker = new Ticker(this.emit.bind(this, "tick"), options.clockSource, options.updateInterval);
    this.on("tick", this._timeoutLoop.bind(this));
    this._context.onstatechange = () => {
      this.emit("statechange", this.state);
    };
    this._setLatencyHint(options.latencyHint);
    this.lookAhead = options.lookAhead;
  }
  static getDefaults() {
    return {
      clockSource: "worker",
      latencyHint: "interactive",
      lookAhead: 0.1,
      updateInterval: 0.05
    };
  }
  initialize() {
    if (!this._initialized) {
      initializeContext(this);
      this._initialized = true;
    }
    return this;
  }
  createAnalyser() {
    return this._context.createAnalyser();
  }
  createOscillator() {
    return this._context.createOscillator();
  }
  createBufferSource() {
    return this._context.createBufferSource();
  }
  createBiquadFilter() {
    return this._context.createBiquadFilter();
  }
  createBuffer(numberOfChannels, length, sampleRate) {
    return this._context.createBuffer(numberOfChannels, length, sampleRate);
  }
  createChannelMerger(numberOfInputs) {
    return this._context.createChannelMerger(numberOfInputs);
  }
  createChannelSplitter(numberOfOutputs) {
    return this._context.createChannelSplitter(numberOfOutputs);
  }
  createConstantSource() {
    return this._context.createConstantSource();
  }
  createConvolver() {
    return this._context.createConvolver();
  }
  createDelay(maxDelayTime) {
    return this._context.createDelay(maxDelayTime);
  }
  createDynamicsCompressor() {
    return this._context.createDynamicsCompressor();
  }
  createGain() {
    return this._context.createGain();
  }
  createIIRFilter(feedForward, feedback) {
    return this._context.createIIRFilter(feedForward, feedback);
  }
  createPanner() {
    return this._context.createPanner();
  }
  createPeriodicWave(real, imag, constraints) {
    return this._context.createPeriodicWave(real, imag, constraints);
  }
  createStereoPanner() {
    return this._context.createStereoPanner();
  }
  createWaveShaper() {
    return this._context.createWaveShaper();
  }
  createMediaStreamSource(stream) {
    assert(isAudioContext(this._context), "Not available if OfflineAudioContext");
    const context2 = this._context;
    return context2.createMediaStreamSource(stream);
  }
  createMediaElementSource(element) {
    assert(isAudioContext(this._context), "Not available if OfflineAudioContext");
    const context2 = this._context;
    return context2.createMediaElementSource(element);
  }
  createMediaStreamDestination() {
    assert(isAudioContext(this._context), "Not available if OfflineAudioContext");
    const context2 = this._context;
    return context2.createMediaStreamDestination();
  }
  decodeAudioData(audioData) {
    return this._context.decodeAudioData(audioData);
  }
  get currentTime() {
    return this._context.currentTime;
  }
  get state() {
    return this._context.state;
  }
  get sampleRate() {
    return this._context.sampleRate;
  }
  get listener() {
    this.initialize();
    return this._listener;
  }
  set listener(l) {
    assert(!this._initialized, "The listener cannot be set after initialization.");
    this._listener = l;
  }
  get transport() {
    this.initialize();
    return this._transport;
  }
  set transport(t) {
    assert(!this._initialized, "The transport cannot be set after initialization.");
    this._transport = t;
  }
  get draw() {
    this.initialize();
    return this._draw;
  }
  set draw(d) {
    assert(!this._initialized, "Draw cannot be set after initialization.");
    this._draw = d;
  }
  get destination() {
    this.initialize();
    return this._destination;
  }
  set destination(d) {
    assert(!this._initialized, "The destination cannot be set after initialization.");
    this._destination = d;
  }
  createAudioWorkletNode(name, options) {
    return createAudioWorkletNode(this.rawContext, name, options);
  }
  addAudioWorkletModule(url, name) {
    return __awaiter(this, undefined, undefined, function* () {
      assert(isDefined(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)");
      if (!this._workletModules.has(name)) {
        this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));
      }
      yield this._workletModules.get(name);
    });
  }
  workletsAreReady() {
    return __awaiter(this, undefined, undefined, function* () {
      const promises = [];
      this._workletModules.forEach((promise) => promises.push(promise));
      yield Promise.all(promises);
    });
  }
  get updateInterval() {
    return this._ticker.updateInterval;
  }
  set updateInterval(interval) {
    this._ticker.updateInterval = interval;
  }
  get clockSource() {
    return this._ticker.type;
  }
  set clockSource(type) {
    this._ticker.type = type;
  }
  get latencyHint() {
    return this._latencyHint;
  }
  _setLatencyHint(hint) {
    let lookAheadValue = 0;
    this._latencyHint = hint;
    if (isString(hint)) {
      switch (hint) {
        case "interactive":
          lookAheadValue = 0.1;
          break;
        case "playback":
          lookAheadValue = 0.5;
          break;
        case "balanced":
          lookAheadValue = 0.25;
          break;
      }
    }
    this.lookAhead = lookAheadValue;
    this.updateInterval = lookAheadValue / 2;
  }
  get rawContext() {
    return this._context;
  }
  now() {
    return this._context.currentTime + this.lookAhead;
  }
  immediate() {
    return this._context.currentTime;
  }
  resume() {
    if (isAudioContext(this._context)) {
      return this._context.resume();
    } else {
      return Promise.resolve();
    }
  }
  close() {
    return __awaiter(this, undefined, undefined, function* () {
      if (isAudioContext(this._context)) {
        yield this._context.close();
      }
      if (this._initialized) {
        closeContext(this);
      }
    });
  }
  getConstant(val) {
    if (this._constants.has(val)) {
      return this._constants.get(val);
    } else {
      const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);
      const arr = buffer.getChannelData(0);
      for (let i = 0;i < arr.length; i++) {
        arr[i] = val;
      }
      const constant = this._context.createBufferSource();
      constant.channelCount = 1;
      constant.channelCountMode = "explicit";
      constant.buffer = buffer;
      constant.loop = true;
      constant.start(0);
      this._constants.set(val, constant);
      return constant;
    }
  }
  dispose() {
    super.dispose();
    this._ticker.dispose();
    this._timeouts.dispose();
    Object.keys(this._constants).map((val) => this._constants[val].disconnect());
    return this;
  }
  _timeoutLoop() {
    const now = this.now();
    let firstEvent = this._timeouts.peek();
    while (this._timeouts.length && firstEvent && firstEvent.time <= now) {
      firstEvent.callback();
      this._timeouts.shift();
      firstEvent = this._timeouts.peek();
    }
  }
  setTimeout(fn, timeout) {
    this._timeoutIds++;
    const now = this.now();
    this._timeouts.add({
      callback: fn,
      id: this._timeoutIds,
      time: now + timeout
    });
    return this._timeoutIds;
  }
  clearTimeout(id) {
    this._timeouts.forEach((event) => {
      if (event.id === id) {
        this._timeouts.remove(event);
      }
    });
    return this;
  }
  clearInterval(id) {
    return this.clearTimeout(id);
  }
  setInterval(fn, interval) {
    const id = ++this._timeoutIds;
    const intervalFn = () => {
      const now = this.now();
      this._timeouts.add({
        callback: () => {
          fn();
          intervalFn();
        },
        id,
        time: now + interval
      });
    };
    intervalFn();
    return id;
  }
}

// node_modules/tone/build/esm/core/context/DummyContext.js
class DummyContext extends BaseContext {
  constructor() {
    super(...arguments);
    this.lookAhead = 0;
    this.latencyHint = 0;
    this.isOffline = false;
  }
  createAnalyser() {
    return {};
  }
  createOscillator() {
    return {};
  }
  createBufferSource() {
    return {};
  }
  createBiquadFilter() {
    return {};
  }
  createBuffer(_numberOfChannels, _length, _sampleRate) {
    return {};
  }
  createChannelMerger(_numberOfInputs) {
    return {};
  }
  createChannelSplitter(_numberOfOutputs) {
    return {};
  }
  createConstantSource() {
    return {};
  }
  createConvolver() {
    return {};
  }
  createDelay(_maxDelayTime) {
    return {};
  }
  createDynamicsCompressor() {
    return {};
  }
  createGain() {
    return {};
  }
  createIIRFilter(_feedForward, _feedback) {
    return {};
  }
  createPanner() {
    return {};
  }
  createPeriodicWave(_real, _imag, _constraints) {
    return {};
  }
  createStereoPanner() {
    return {};
  }
  createWaveShaper() {
    return {};
  }
  createMediaStreamSource(_stream) {
    return {};
  }
  createMediaElementSource(_element) {
    return {};
  }
  createMediaStreamDestination() {
    return {};
  }
  decodeAudioData(_audioData) {
    return Promise.resolve({});
  }
  createAudioWorkletNode(_name, _options) {
    return {};
  }
  get rawContext() {
    return {};
  }
  addAudioWorkletModule(_url, _name) {
    return __awaiter(this, undefined, undefined, function* () {
      return Promise.resolve();
    });
  }
  resume() {
    return Promise.resolve();
  }
  setTimeout(_fn, _timeout) {
    return 0;
  }
  clearTimeout(_id) {
    return this;
  }
  setInterval(_fn, _interval) {
    return 0;
  }
  clearInterval(_id) {
    return this;
  }
  getConstant(_val) {
    return {};
  }
  get currentTime() {
    return 0;
  }
  get state() {
    return {};
  }
  get sampleRate() {
    return 0;
  }
  get listener() {
    return {};
  }
  get transport() {
    return {};
  }
  get draw() {
    return {};
  }
  set draw(_d) {
  }
  get destination() {
    return {};
  }
  set destination(_d) {
  }
  now() {
    return 0;
  }
  immediate() {
    return 0;
  }
}

// node_modules/tone/build/esm/core/util/Interface.js
function readOnly(target, property) {
  if (isArray(property)) {
    property.forEach((str) => readOnly(target, str));
  } else {
    Object.defineProperty(target, property, {
      enumerable: true,
      writable: false
    });
  }
}
function writable(target, property) {
  if (isArray(property)) {
    property.forEach((str) => writable(target, str));
  } else {
    Object.defineProperty(target, property, {
      writable: true
    });
  }
}
var noOp = () => {
};

// node_modules/tone/build/esm/core/context/ToneAudioBuffer.js
class ToneAudioBuffer extends Tone {
  constructor() {
    super();
    this.name = "ToneAudioBuffer";
    this.onload = noOp;
    const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, ["url", "onload", "onerror"]);
    this.reverse = options.reverse;
    this.onload = options.onload;
    if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {
      this.set(options.url);
    } else if (isString(options.url)) {
      this.load(options.url).catch(options.onerror);
    }
  }
  static getDefaults() {
    return {
      onerror: noOp,
      onload: noOp,
      reverse: false
    };
  }
  get sampleRate() {
    if (this._buffer) {
      return this._buffer.sampleRate;
    } else {
      return getContext().sampleRate;
    }
  }
  set(buffer) {
    if (buffer instanceof ToneAudioBuffer) {
      if (buffer.loaded) {
        this._buffer = buffer.get();
      } else {
        buffer.onload = () => {
          this.set(buffer);
          this.onload(this);
        };
      }
    } else {
      this._buffer = buffer;
    }
    if (this._reversed) {
      this._reverse();
    }
    return this;
  }
  get() {
    return this._buffer;
  }
  load(url) {
    return __awaiter(this, undefined, undefined, function* () {
      const doneLoading = ToneAudioBuffer.load(url).then((audioBuffer) => {
        this.set(audioBuffer);
        this.onload(this);
      });
      ToneAudioBuffer.downloads.push(doneLoading);
      try {
        yield doneLoading;
      } finally {
        const index = ToneAudioBuffer.downloads.indexOf(doneLoading);
        ToneAudioBuffer.downloads.splice(index, 1);
      }
      return this;
    });
  }
  dispose() {
    super.dispose();
    this._buffer = undefined;
    return this;
  }
  fromArray(array) {
    const isMultidimensional = isArray(array) && array[0].length > 0;
    const channels = isMultidimensional ? array.length : 1;
    const len = isMultidimensional ? array[0].length : array.length;
    const context2 = getContext();
    const buffer = context2.createBuffer(channels, len, context2.sampleRate);
    const multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;
    for (let c = 0;c < channels; c++) {
      buffer.copyToChannel(multiChannelArray[c], c);
    }
    this._buffer = buffer;
    return this;
  }
  toMono(chanNum) {
    if (isNumber(chanNum)) {
      this.fromArray(this.toArray(chanNum));
    } else {
      let outputArray = new Float32Array(this.length);
      const numChannels = this.numberOfChannels;
      for (let channel = 0;channel < numChannels; channel++) {
        const channelArray = this.toArray(channel);
        for (let i = 0;i < channelArray.length; i++) {
          outputArray[i] += channelArray[i];
        }
      }
      outputArray = outputArray.map((sample) => sample / numChannels);
      this.fromArray(outputArray);
    }
    return this;
  }
  toArray(channel) {
    if (isNumber(channel)) {
      return this.getChannelData(channel);
    } else if (this.numberOfChannels === 1) {
      return this.toArray(0);
    } else {
      const ret = [];
      for (let c = 0;c < this.numberOfChannels; c++) {
        ret[c] = this.getChannelData(c);
      }
      return ret;
    }
  }
  getChannelData(channel) {
    if (this._buffer) {
      return this._buffer.getChannelData(channel);
    } else {
      return new Float32Array(0);
    }
  }
  slice(start, end = this.duration) {
    const startSamples = Math.floor(start * this.sampleRate);
    const endSamples = Math.floor(end * this.sampleRate);
    assert(startSamples < endSamples, "The start time must be less than the end time");
    const length = endSamples - startSamples;
    const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);
    for (let channel = 0;channel < this.numberOfChannels; channel++) {
      retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);
    }
    return new ToneAudioBuffer(retBuffer);
  }
  _reverse() {
    if (this.loaded) {
      for (let i = 0;i < this.numberOfChannels; i++) {
        this.getChannelData(i).reverse();
      }
    }
    return this;
  }
  get loaded() {
    return this.length > 0;
  }
  get duration() {
    if (this._buffer) {
      return this._buffer.duration;
    } else {
      return 0;
    }
  }
  get length() {
    if (this._buffer) {
      return this._buffer.length;
    } else {
      return 0;
    }
  }
  get numberOfChannels() {
    if (this._buffer) {
      return this._buffer.numberOfChannels;
    } else {
      return 0;
    }
  }
  get reverse() {
    return this._reversed;
  }
  set reverse(rev) {
    if (this._reversed !== rev) {
      this._reversed = rev;
      this._reverse();
    }
  }
  static fromArray(array) {
    return new ToneAudioBuffer().fromArray(array);
  }
  static fromUrl(url) {
    return __awaiter(this, undefined, undefined, function* () {
      const buffer = new ToneAudioBuffer;
      return yield buffer.load(url);
    });
  }
  static load(url) {
    return __awaiter(this, undefined, undefined, function* () {
      const matches = url.match(/\[([^\]\[]+\|.+)\]$/);
      if (matches) {
        const extensions = matches[1].split("|");
        let extension = extensions[0];
        for (const ext of extensions) {
          if (ToneAudioBuffer.supportsType(ext)) {
            extension = ext;
            break;
          }
        }
        url = url.replace(matches[0], extension);
      }
      const baseUrl = ToneAudioBuffer.baseUrl === "" || ToneAudioBuffer.baseUrl.endsWith("/") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + "/";
      const response = yield fetch(baseUrl + url);
      if (!response.ok) {
        throw new Error(`could not load url: ${url}`);
      }
      const arrayBuffer = yield response.arrayBuffer();
      const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);
      return audioBuffer;
    });
  }
  static supportsType(url) {
    const extensions = url.split(".");
    const extension = extensions[extensions.length - 1];
    const response = document.createElement("audio").canPlayType("audio/" + extension);
    return response !== "";
  }
  static loaded() {
    return __awaiter(this, undefined, undefined, function* () {
      yield Promise.resolve();
      while (ToneAudioBuffer.downloads.length) {
        yield ToneAudioBuffer.downloads[0];
      }
    });
  }
}
ToneAudioBuffer.baseUrl = "";
ToneAudioBuffer.downloads = [];

// node_modules/tone/build/esm/core/context/OfflineContext.js
class OfflineContext extends Context {
  constructor() {
    super({
      clockSource: "offline",
      context: isOfflineAudioContext(arguments[0]) ? arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),
      lookAhead: 0,
      updateInterval: isOfflineAudioContext(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
    });
    this.name = "OfflineContext";
    this._currentTime = 0;
    this.isOffline = true;
    this._duration = isOfflineAudioContext(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];
  }
  now() {
    return this._currentTime;
  }
  get currentTime() {
    return this._currentTime;
  }
  _renderClock(asynchronous) {
    return __awaiter(this, undefined, undefined, function* () {
      let index = 0;
      while (this._duration - this._currentTime >= 0) {
        this.emit("tick");
        this._currentTime += 128 / this.sampleRate;
        index++;
        const yieldEvery = Math.floor(this.sampleRate / 128);
        if (asynchronous && index % yieldEvery === 0) {
          yield new Promise((done) => setTimeout(done, 1));
        }
      }
    });
  }
  render(asynchronous = true) {
    return __awaiter(this, undefined, undefined, function* () {
      yield this.workletsAreReady();
      yield this._renderClock(asynchronous);
      const buffer = yield this._context.startRendering();
      return new ToneAudioBuffer(buffer);
    });
  }
  close() {
    return Promise.resolve();
  }
}

// node_modules/tone/build/esm/core/Global.js
function getContext() {
  if (globalContext === dummyContext && hasAudioContext) {
    setContext(new Context);
  }
  return globalContext;
}
function setContext(context2) {
  if (isAudioContext(context2)) {
    globalContext = new Context(context2);
  } else if (isOfflineAudioContext(context2)) {
    globalContext = new OfflineContext(context2);
  } else {
    globalContext = context2;
  }
}
var dummyContext = new DummyContext;
var globalContext = dummyContext;
if (theWindow && !theWindow.TONE_SILENCE_LOGGING) {
  let prefix = "v";
  if (version === "dev") {
    prefix = "";
  }
  const printString = ` * Tone.js ${prefix}${version} * `;
  console.log(`%c${printString}`, "background: #000; color: #fff");
}
// node_modules/tone/build/esm/core/type/Conversions.js
function dbToGain(db) {
  return Math.pow(10, db / 20);
}
function gainToDb(gain) {
  return 20 * (Math.log(gain) / Math.LN10);
}
function intervalToFrequencyRatio(interval) {
  return Math.pow(2, interval / 12);
}
function getA4() {
  return A4;
}
function setA4(freq) {
  A4 = freq;
}
function ftom(frequency) {
  return Math.round(ftomf(frequency));
}
function ftomf(frequency) {
  return 69 + 12 * Math.log2(frequency / A4);
}
function mtof(midi) {
  return A4 * Math.pow(2, (midi - 69) / 12);
}
var A4 = 440;

// node_modules/tone/build/esm/core/type/TimeBase.js
class TimeBaseClass extends Tone {
  constructor(context2, value, units) {
    super();
    this.defaultUnits = "s";
    this._val = value;
    this._units = units;
    this.context = context2;
    this._expressions = this._getExpressions();
  }
  _getExpressions() {
    return {
      hz: {
        method: (value) => {
          return this._frequencyToUnits(parseFloat(value));
        },
        regexp: /^(\d+(?:\.\d+)?)hz$/i
      },
      i: {
        method: (value) => {
          return this._ticksToUnits(parseInt(value, 10));
        },
        regexp: /^(\d+)i$/i
      },
      m: {
        method: (value) => {
          return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());
        },
        regexp: /^(\d+)m$/i
      },
      n: {
        method: (value, dot) => {
          const numericValue = parseInt(value, 10);
          const scalar = dot === "." ? 1.5 : 1;
          if (numericValue === 1) {
            return this._beatsToUnits(this._getTimeSignature()) * scalar;
          } else {
            return this._beatsToUnits(4 / numericValue) * scalar;
          }
        },
        regexp: /^(\d+)n(\.?)$/i
      },
      number: {
        method: (value) => {
          return this._expressions[this.defaultUnits].method.call(this, value);
        },
        regexp: /^(\d+(?:\.\d+)?)$/
      },
      s: {
        method: (value) => {
          return this._secondsToUnits(parseFloat(value));
        },
        regexp: /^(\d+(?:\.\d+)?)s$/
      },
      samples: {
        method: (value) => {
          return parseInt(value, 10) / this.context.sampleRate;
        },
        regexp: /^(\d+)samples$/
      },
      t: {
        method: (value) => {
          const numericValue = parseInt(value, 10);
          return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));
        },
        regexp: /^(\d+)t$/i
      },
      tr: {
        method: (m, q, s) => {
          let total = 0;
          if (m && m !== "0") {
            total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
          }
          if (q && q !== "0") {
            total += this._beatsToUnits(parseFloat(q));
          }
          if (s && s !== "0") {
            total += this._beatsToUnits(parseFloat(s) / 4);
          }
          return total;
        },
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
      }
    };
  }
  valueOf() {
    if (this._val instanceof TimeBaseClass) {
      this.fromType(this._val);
    }
    if (isUndef(this._val)) {
      return this._noArg();
    } else if (isString(this._val) && isUndef(this._units)) {
      for (const units in this._expressions) {
        if (this._expressions[units].regexp.test(this._val.trim())) {
          this._units = units;
          break;
        }
      }
    } else if (isObject(this._val)) {
      let total = 0;
      for (const typeName in this._val) {
        if (isDefined(this._val[typeName])) {
          const quantity = this._val[typeName];
          const time = new this.constructor(this.context, typeName).valueOf() * quantity;
          total += time;
        }
      }
      return total;
    }
    if (isDefined(this._units)) {
      const expr = this._expressions[this._units];
      const matching = this._val.toString().trim().match(expr.regexp);
      if (matching) {
        return expr.method.apply(this, matching.slice(1));
      } else {
        return expr.method.call(this, this._val);
      }
    } else if (isString(this._val)) {
      return parseFloat(this._val);
    } else {
      return this._val;
    }
  }
  _frequencyToUnits(freq) {
    return 1 / freq;
  }
  _beatsToUnits(beats) {
    return 60 / this._getBpm() * beats;
  }
  _secondsToUnits(seconds) {
    return seconds;
  }
  _ticksToUnits(ticks) {
    return ticks * this._beatsToUnits(1) / this._getPPQ();
  }
  _noArg() {
    return this._now();
  }
  _getBpm() {
    return this.context.transport.bpm.value;
  }
  _getTimeSignature() {
    return this.context.transport.timeSignature;
  }
  _getPPQ() {
    return this.context.transport.PPQ;
  }
  fromType(type) {
    this._units = undefined;
    switch (this.defaultUnits) {
      case "s":
        this._val = type.toSeconds();
        break;
      case "i":
        this._val = type.toTicks();
        break;
      case "hz":
        this._val = type.toFrequency();
        break;
      case "midi":
        this._val = type.toMidi();
        break;
    }
    return this;
  }
  toFrequency() {
    return 1 / this.toSeconds();
  }
  toSamples() {
    return this.toSeconds() * this.context.sampleRate;
  }
  toMilliseconds() {
    return this.toSeconds() * 1000;
  }
}

// node_modules/tone/build/esm/core/type/Time.js
class TimeClass extends TimeBaseClass {
  constructor() {
    super(...arguments);
    this.name = "TimeClass";
  }
  _getExpressions() {
    return Object.assign(super._getExpressions(), {
      now: {
        method: (capture) => {
          return this._now() + new this.constructor(this.context, capture).valueOf();
        },
        regexp: /^\+(.+)/
      },
      quantize: {
        method: (capture) => {
          const quantTo = new TimeClass(this.context, capture).valueOf();
          return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));
        },
        regexp: /^@(.+)/
      }
    });
  }
  quantize(subdiv, percent = 1) {
    const subdivision = new this.constructor(this.context, subdiv).valueOf();
    const value = this.valueOf();
    const multiple = Math.round(value / subdivision);
    const ideal = multiple * subdivision;
    const diff = ideal - value;
    return value + diff * percent;
  }
  toNotation() {
    const time = this.toSeconds();
    const testNotations = ["1m"];
    for (let power = 1;power < 9; power++) {
      const subdiv = Math.pow(2, power);
      testNotations.push(subdiv + "n.");
      testNotations.push(subdiv + "n");
      testNotations.push(subdiv + "t");
    }
    testNotations.push("0");
    let closest = testNotations[0];
    let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();
    testNotations.forEach((notation) => {
      const notationSeconds = new TimeClass(this.context, notation).toSeconds();
      if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
        closest = notation;
        closestSeconds = notationSeconds;
      }
    });
    return closest;
  }
  toBarsBeatsSixteenths() {
    const quarterTime = this._beatsToUnits(1);
    let quarters = this.valueOf() / quarterTime;
    quarters = parseFloat(quarters.toFixed(4));
    const measures = Math.floor(quarters / this._getTimeSignature());
    let sixteenths = quarters % 1 * 4;
    quarters = Math.floor(quarters) % this._getTimeSignature();
    const sixteenthString = sixteenths.toString();
    if (sixteenthString.length > 3) {
      sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));
    }
    const progress = [measures, quarters, sixteenths];
    return progress.join(":");
  }
  toTicks() {
    const quarterTime = this._beatsToUnits(1);
    const quarters = this.valueOf() / quarterTime;
    return Math.round(quarters * this._getPPQ());
  }
  toSeconds() {
    return this.valueOf();
  }
  toMidi() {
    return ftom(this.toFrequency());
  }
  _now() {
    return this.context.now();
  }
}

// node_modules/tone/build/esm/core/type/Frequency.js
class FrequencyClass extends TimeClass {
  constructor() {
    super(...arguments);
    this.name = "Frequency";
    this.defaultUnits = "hz";
  }
  static get A4() {
    return getA4();
  }
  static set A4(freq) {
    setA4(freq);
  }
  _getExpressions() {
    return Object.assign({}, super._getExpressions(), {
      midi: {
        regexp: /^(\d+(?:\.\d+)?midi)/,
        method(value) {
          if (this.defaultUnits === "midi") {
            return value;
          } else {
            return FrequencyClass.mtof(value);
          }
        }
      },
      note: {
        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
        method(pitch, octave) {
          const index = noteToScaleIndex[pitch.toLowerCase()];
          const noteNumber = index + (parseInt(octave, 10) + 1) * 12;
          if (this.defaultUnits === "midi") {
            return noteNumber;
          } else {
            return FrequencyClass.mtof(noteNumber);
          }
        }
      },
      tr: {
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
        method(m, q, s) {
          let total = 1;
          if (m && m !== "0") {
            total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
          }
          if (q && q !== "0") {
            total *= this._beatsToUnits(parseFloat(q));
          }
          if (s && s !== "0") {
            total *= this._beatsToUnits(parseFloat(s) / 4);
          }
          return total;
        }
      }
    });
  }
  transpose(interval) {
    return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));
  }
  harmonize(intervals) {
    return intervals.map((interval) => {
      return this.transpose(interval);
    });
  }
  toMidi() {
    return ftom(this.valueOf());
  }
  toNote() {
    const freq = this.toFrequency();
    const log2 = Math.log2(freq / FrequencyClass.A4);
    let noteNumber = Math.round(12 * log2) + 57;
    const octave = Math.floor(noteNumber / 12);
    if (octave < 0) {
      noteNumber += -12 * octave;
    }
    const noteName = scaleIndexToNote[noteNumber % 12];
    return noteName + octave.toString();
  }
  toSeconds() {
    return 1 / super.toSeconds();
  }
  toTicks() {
    const quarterTime = this._beatsToUnits(1);
    const quarters = this.valueOf() / quarterTime;
    return Math.floor(quarters * this._getPPQ());
  }
  _noArg() {
    return 0;
  }
  _frequencyToUnits(freq) {
    return freq;
  }
  _ticksToUnits(ticks) {
    return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));
  }
  _beatsToUnits(beats) {
    return 1 / super._beatsToUnits(beats);
  }
  _secondsToUnits(seconds) {
    return 1 / seconds;
  }
  static mtof(midi) {
    return mtof(midi);
  }
  static ftom(frequency) {
    return ftom(frequency);
  }
}
var noteToScaleIndex = {
  cbb: -2,
  cb: -1,
  c: 0,
  "c#": 1,
  cx: 2,
  dbb: 0,
  db: 1,
  d: 2,
  "d#": 3,
  dx: 4,
  ebb: 2,
  eb: 3,
  e: 4,
  "e#": 5,
  ex: 6,
  fbb: 3,
  fb: 4,
  f: 5,
  "f#": 6,
  fx: 7,
  gbb: 5,
  gb: 6,
  g: 7,
  "g#": 8,
  gx: 9,
  abb: 7,
  ab: 8,
  a: 9,
  "a#": 10,
  ax: 11,
  bbb: 9,
  bb: 10,
  b: 11,
  "b#": 12,
  bx: 13
};
var scaleIndexToNote = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];

// node_modules/tone/build/esm/core/type/TransportTime.js
class TransportTimeClass extends TimeClass {
  constructor() {
    super(...arguments);
    this.name = "TransportTime";
  }
  _now() {
    return this.context.transport.seconds;
  }
}

// node_modules/tone/build/esm/core/context/ToneWithContext.js
class ToneWithContext extends Tone {
  constructor() {
    super();
    const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, ["context"]);
    if (this.defaultContext) {
      this.context = this.defaultContext;
    } else {
      this.context = options.context;
    }
  }
  static getDefaults() {
    return {
      context: getContext()
    };
  }
  now() {
    return this.context.currentTime + this.context.lookAhead;
  }
  immediate() {
    return this.context.currentTime;
  }
  get sampleTime() {
    return 1 / this.context.sampleRate;
  }
  get blockTime() {
    return 128 / this.context.sampleRate;
  }
  toSeconds(time) {
    return new TimeClass(this.context, time).toSeconds();
  }
  toFrequency(freq) {
    return new FrequencyClass(this.context, freq).toFrequency();
  }
  toTicks(time) {
    return new TransportTimeClass(this.context, time).toTicks();
  }
  _getPartialProperties(props) {
    const options = this.get();
    Object.keys(options).forEach((name) => {
      if (isUndef(props[name])) {
        delete options[name];
      }
    });
    return options;
  }
  get() {
    const defaults = getDefaultsFromInstance(this);
    Object.keys(defaults).forEach((attribute) => {
      if (Reflect.has(this, attribute)) {
        const member = this[attribute];
        if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {
          defaults[attribute] = member.value;
        } else if (member instanceof ToneWithContext) {
          defaults[attribute] = member._getPartialProperties(defaults[attribute]);
        } else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {
          defaults[attribute] = member;
        } else {
          delete defaults[attribute];
        }
      }
    });
    return defaults;
  }
  set(props) {
    Object.keys(props).forEach((attribute) => {
      if (Reflect.has(this, attribute) && isDefined(this[attribute])) {
        if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {
          if (this[attribute].value !== props[attribute]) {
            this[attribute].value = props[attribute];
          }
        } else if (this[attribute] instanceof ToneWithContext) {
          this[attribute].set(props[attribute]);
        } else {
          this[attribute] = props[attribute];
        }
      }
    });
    return this;
  }
}

// node_modules/tone/build/esm/core/util/StateTimeline.js
class StateTimeline extends Timeline {
  constructor(initial = "stopped") {
    super();
    this.name = "StateTimeline";
    this._initial = initial;
    this.setStateAtTime(this._initial, 0);
  }
  getValueAtTime(time) {
    const event = this.get(time);
    if (event !== null) {
      return event.state;
    } else {
      return this._initial;
    }
  }
  setStateAtTime(state, time, options) {
    assertRange(time, 0);
    this.add(Object.assign({}, options, {
      state,
      time
    }));
    return this;
  }
  getLastState(state, time) {
    const index = this._search(time);
    for (let i = index;i >= 0; i--) {
      const event = this._timeline[i];
      if (event.state === state) {
        return event;
      }
    }
  }
  getNextState(state, time) {
    const index = this._search(time);
    if (index !== -1) {
      for (let i = index;i < this._timeline.length; i++) {
        const event = this._timeline[i];
        if (event.state === state) {
          return event;
        }
      }
    }
  }
}

// node_modules/tone/build/esm/core/context/Param.js
class Param extends ToneWithContext {
  constructor() {
    super(optionsFromArguments(Param.getDefaults(), arguments, ["param", "units", "convert"]));
    this.name = "Param";
    this.overridden = false;
    this._minOutput = 0.0000001;
    const options = optionsFromArguments(Param.getDefaults(), arguments, ["param", "units", "convert"]);
    assert(isDefined(options.param) && (isAudioParam(options.param) || options.param instanceof Param), "param must be an AudioParam");
    while (!isAudioParam(options.param)) {
      options.param = options.param._param;
    }
    this._swappable = isDefined(options.swappable) ? options.swappable : false;
    if (this._swappable) {
      this.input = this.context.createGain();
      this._param = options.param;
      this.input.connect(this._param);
    } else {
      this._param = this.input = options.param;
    }
    this._events = new Timeline(1000);
    this._initialValue = this._param.defaultValue;
    this.units = options.units;
    this.convert = options.convert;
    this._minValue = options.minValue;
    this._maxValue = options.maxValue;
    if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {
      this.setValueAtTime(options.value, 0);
    }
  }
  static getDefaults() {
    return Object.assign(ToneWithContext.getDefaults(), {
      convert: true,
      units: "number"
    });
  }
  get value() {
    const now = this.now();
    return this.getValueAtTime(now);
  }
  set value(value) {
    this.cancelScheduledValues(this.now());
    this.setValueAtTime(value, this.now());
  }
  get minValue() {
    if (isDefined(this._minValue)) {
      return this._minValue;
    } else if (this.units === "time" || this.units === "frequency" || this.units === "normalRange" || this.units === "positive" || this.units === "transportTime" || this.units === "ticks" || this.units === "bpm" || this.units === "hertz" || this.units === "samples") {
      return 0;
    } else if (this.units === "audioRange") {
      return -1;
    } else if (this.units === "decibels") {
      return (-Infinity);
    } else {
      return this._param.minValue;
    }
  }
  get maxValue() {
    if (isDefined(this._maxValue)) {
      return this._maxValue;
    } else if (this.units === "normalRange" || this.units === "audioRange") {
      return 1;
    } else {
      return this._param.maxValue;
    }
  }
  _is(arg, type) {
    return this.units === type;
  }
  _assertRange(value) {
    if (isDefined(this.maxValue) && isDefined(this.minValue)) {
      assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));
    }
    return value;
  }
  _fromType(val) {
    if (this.convert && !this.overridden) {
      if (this._is(val, "time")) {
        return this.toSeconds(val);
      } else if (this._is(val, "decibels")) {
        return dbToGain(val);
      } else if (this._is(val, "frequency")) {
        return this.toFrequency(val);
      } else {
        return val;
      }
    } else if (this.overridden) {
      return 0;
    } else {
      return val;
    }
  }
  _toType(val) {
    if (this.convert && this.units === "decibels") {
      return gainToDb(val);
    } else {
      return val;
    }
  }
  setValueAtTime(value, time) {
    const computedTime = this.toSeconds(time);
    const numericValue = this._fromType(value);
    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);
    this._assertRange(numericValue);
    this.log(this.units, "setValueAtTime", value, computedTime);
    this._events.add({
      time: computedTime,
      type: "setValueAtTime",
      value: numericValue
    });
    this._param.setValueAtTime(numericValue, computedTime);
    return this;
  }
  getValueAtTime(time) {
    const computedTime = Math.max(this.toSeconds(time), 0);
    const after = this._events.getAfter(computedTime);
    const before = this._events.get(computedTime);
    let value = this._initialValue;
    if (before === null) {
      value = this._initialValue;
    } else if (before.type === "setTargetAtTime" && (after === null || after.type === "setValueAtTime")) {
      const previous = this._events.getBefore(before.time);
      let previousVal;
      if (previous === null) {
        previousVal = this._initialValue;
      } else {
        previousVal = previous.value;
      }
      if (before.type === "setTargetAtTime") {
        value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);
      }
    } else if (after === null) {
      value = before.value;
    } else if (after.type === "linearRampToValueAtTime" || after.type === "exponentialRampToValueAtTime") {
      let beforeValue = before.value;
      if (before.type === "setTargetAtTime") {
        const previous = this._events.getBefore(before.time);
        if (previous === null) {
          beforeValue = this._initialValue;
        } else {
          beforeValue = previous.value;
        }
      }
      if (after.type === "linearRampToValueAtTime") {
        value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
      } else {
        value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
      }
    } else {
      value = before.value;
    }
    return this._toType(value);
  }
  setRampPoint(time) {
    time = this.toSeconds(time);
    let currentVal = this.getValueAtTime(time);
    this.cancelAndHoldAtTime(time);
    if (this._fromType(currentVal) === 0) {
      currentVal = this._toType(this._minOutput);
    }
    this.setValueAtTime(currentVal, time);
    return this;
  }
  linearRampToValueAtTime(value, endTime) {
    const numericValue = this._fromType(value);
    const computedTime = this.toSeconds(endTime);
    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
    this._assertRange(numericValue);
    this._events.add({
      time: computedTime,
      type: "linearRampToValueAtTime",
      value: numericValue
    });
    this.log(this.units, "linearRampToValueAtTime", value, computedTime);
    this._param.linearRampToValueAtTime(numericValue, computedTime);
    return this;
  }
  exponentialRampToValueAtTime(value, endTime) {
    let numericValue = this._fromType(value);
    numericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;
    this._assertRange(numericValue);
    const computedTime = this.toSeconds(endTime);
    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);
    this._events.add({
      time: computedTime,
      type: "exponentialRampToValueAtTime",
      value: numericValue
    });
    this.log(this.units, "exponentialRampToValueAtTime", value, computedTime);
    this._param.exponentialRampToValueAtTime(numericValue, computedTime);
    return this;
  }
  exponentialRampTo(value, rampTime, startTime) {
    startTime = this.toSeconds(startTime);
    this.setRampPoint(startTime);
    this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
    return this;
  }
  linearRampTo(value, rampTime, startTime) {
    startTime = this.toSeconds(startTime);
    this.setRampPoint(startTime);
    this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
    return this;
  }
  targetRampTo(value, rampTime, startTime) {
    startTime = this.toSeconds(startTime);
    this.setRampPoint(startTime);
    this.exponentialApproachValueAtTime(value, startTime, rampTime);
    return this;
  }
  exponentialApproachValueAtTime(value, time, rampTime) {
    time = this.toSeconds(time);
    rampTime = this.toSeconds(rampTime);
    const timeConstant = Math.log(rampTime + 1) / Math.log(200);
    this.setTargetAtTime(value, time, timeConstant);
    this.cancelAndHoldAtTime(time + rampTime * 0.9);
    this.linearRampToValueAtTime(value, time + rampTime);
    return this;
  }
  setTargetAtTime(value, startTime, timeConstant) {
    const numericValue = this._fromType(value);
    assert(isFinite(timeConstant) && timeConstant > 0, "timeConstant must be a number greater than 0");
    const computedTime = this.toSeconds(startTime);
    this._assertRange(numericValue);
    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);
    this._events.add({
      constant: timeConstant,
      time: computedTime,
      type: "setTargetAtTime",
      value: numericValue
    });
    this.log(this.units, "setTargetAtTime", value, computedTime, timeConstant);
    this._param.setTargetAtTime(numericValue, computedTime, timeConstant);
    return this;
  }
  setValueCurveAtTime(values, startTime, duration, scaling = 1) {
    duration = this.toSeconds(duration);
    startTime = this.toSeconds(startTime);
    const startingValue = this._fromType(values[0]) * scaling;
    this.setValueAtTime(this._toType(startingValue), startTime);
    const segTime = duration / (values.length - 1);
    for (let i = 1;i < values.length; i++) {
      const numericValue = this._fromType(values[i]) * scaling;
      this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);
    }
    return this;
  }
  cancelScheduledValues(time) {
    const computedTime = this.toSeconds(time);
    assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);
    this._events.cancel(computedTime);
    this._param.cancelScheduledValues(computedTime);
    this.log(this.units, "cancelScheduledValues", computedTime);
    return this;
  }
  cancelAndHoldAtTime(time) {
    const computedTime = this.toSeconds(time);
    const valueAtTime = this._fromType(this.getValueAtTime(computedTime));
    assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);
    this.log(this.units, "cancelAndHoldAtTime", computedTime, "value=" + valueAtTime);
    const before = this._events.get(computedTime);
    const after = this._events.getAfter(computedTime);
    if (before && EQ(before.time, computedTime)) {
      if (after) {
        this._param.cancelScheduledValues(after.time);
        this._events.cancel(after.time);
      } else {
        this._param.cancelAndHoldAtTime(computedTime);
        this._events.cancel(computedTime + this.sampleTime);
      }
    } else if (after) {
      this._param.cancelScheduledValues(after.time);
      this._events.cancel(after.time);
      if (after.type === "linearRampToValueAtTime") {
        this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);
      } else if (after.type === "exponentialRampToValueAtTime") {
        this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);
      }
    }
    this._events.add({
      time: computedTime,
      type: "setValueAtTime",
      value: valueAtTime
    });
    this._param.setValueAtTime(valueAtTime, computedTime);
    return this;
  }
  rampTo(value, rampTime = 0.1, startTime) {
    if (this.units === "frequency" || this.units === "bpm" || this.units === "decibels") {
      this.exponentialRampTo(value, rampTime, startTime);
    } else {
      this.linearRampTo(value, rampTime, startTime);
    }
    return this;
  }
  apply(param) {
    const now = this.context.currentTime;
    param.setValueAtTime(this.getValueAtTime(now), now);
    const previousEvent = this._events.get(now);
    if (previousEvent && previousEvent.type === "setTargetAtTime") {
      const nextEvent = this._events.getAfter(previousEvent.time);
      const endTime = nextEvent ? nextEvent.time : now + 2;
      const subdivisions = (endTime - now) / 10;
      for (let i = now;i < endTime; i += subdivisions) {
        param.linearRampToValueAtTime(this.getValueAtTime(i), i);
      }
    }
    this._events.forEachAfter(this.context.currentTime, (event) => {
      if (event.type === "cancelScheduledValues") {
        param.cancelScheduledValues(event.time);
      } else if (event.type === "setTargetAtTime") {
        param.setTargetAtTime(event.value, event.time, event.constant);
      } else {
        param[event.type](event.value, event.time);
      }
    });
    return this;
  }
  setParam(param) {
    assert(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
    const input = this.input;
    input.disconnect(this._param);
    this.apply(param);
    this._param = param;
    input.connect(this._param);
    return this;
  }
  dispose() {
    super.dispose();
    this._events.dispose();
    return this;
  }
  get defaultValue() {
    return this._toType(this._param.defaultValue);
  }
  _exponentialApproach(t0, v0, v1, timeConstant, t) {
    return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
  }
  _linearInterpolate(t0, v0, t1, v1, t) {
    return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
  }
  _exponentialInterpolate(t0, v0, t1, v1, t) {
    return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
  }
}

// node_modules/tone/build/esm/core/context/ToneAudioNode.js
function connectSeries(...nodes) {
  const first = nodes.shift();
  nodes.reduce((prev, current) => {
    if (prev instanceof ToneAudioNode) {
      prev.connect(current);
    } else if (isAudioNode2(prev)) {
      connect(prev, current);
    }
    return current;
  }, first);
}
function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
  assert(isDefined(srcNode), "Cannot connect from undefined node");
  assert(isDefined(dstNode), "Cannot connect to undefined node");
  if (dstNode instanceof ToneAudioNode || isAudioNode2(dstNode)) {
    assert(dstNode.numberOfInputs > 0, "Cannot connect to node with no inputs");
  }
  assert(srcNode.numberOfOutputs > 0, "Cannot connect from node with no outputs");
  while (dstNode instanceof ToneAudioNode || dstNode instanceof Param) {
    if (isDefined(dstNode.input)) {
      dstNode = dstNode.input;
    }
  }
  while (srcNode instanceof ToneAudioNode) {
    if (isDefined(srcNode.output)) {
      srcNode = srcNode.output;
    }
  }
  if (isAudioParam(dstNode)) {
    srcNode.connect(dstNode, outputNumber);
  } else {
    srcNode.connect(dstNode, outputNumber, inputNumber);
  }
}
function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {
  if (isDefined(dstNode)) {
    while (dstNode instanceof ToneAudioNode) {
      dstNode = dstNode.input;
    }
  }
  while (!isAudioNode2(srcNode)) {
    if (isDefined(srcNode.output)) {
      srcNode = srcNode.output;
    }
  }
  if (isAudioParam(dstNode)) {
    srcNode.disconnect(dstNode, outputNumber);
  } else if (isAudioNode2(dstNode)) {
    srcNode.disconnect(dstNode, outputNumber, inputNumber);
  } else {
    srcNode.disconnect();
  }
}

class ToneAudioNode extends ToneWithContext {
  constructor() {
    super(...arguments);
    this.name = "ToneAudioNode";
    this._internalChannels = [];
  }
  get numberOfInputs() {
    if (isDefined(this.input)) {
      if (isAudioParam(this.input) || this.input instanceof Param) {
        return 1;
      } else {
        return this.input.numberOfInputs;
      }
    } else {
      return 0;
    }
  }
  get numberOfOutputs() {
    if (isDefined(this.output)) {
      return this.output.numberOfOutputs;
    } else {
      return 0;
    }
  }
  _isAudioNode(node) {
    return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode2(node));
  }
  _getInternalNodes() {
    const nodeList = this._internalChannels.slice(0);
    if (this._isAudioNode(this.input)) {
      nodeList.push(this.input);
    }
    if (this._isAudioNode(this.output)) {
      if (this.input !== this.output) {
        nodeList.push(this.output);
      }
    }
    return nodeList;
  }
  _setChannelProperties(options) {
    const nodeList = this._getInternalNodes();
    nodeList.forEach((node) => {
      node.channelCount = options.channelCount;
      node.channelCountMode = options.channelCountMode;
      node.channelInterpretation = options.channelInterpretation;
    });
  }
  _getChannelProperties() {
    const nodeList = this._getInternalNodes();
    assert(nodeList.length > 0, "ToneAudioNode does not have any internal nodes");
    const node = nodeList[0];
    return {
      channelCount: node.channelCount,
      channelCountMode: node.channelCountMode,
      channelInterpretation: node.channelInterpretation
    };
  }
  get channelCount() {
    return this._getChannelProperties().channelCount;
  }
  set channelCount(channelCount) {
    const props = this._getChannelProperties();
    this._setChannelProperties(Object.assign(props, { channelCount }));
  }
  get channelCountMode() {
    return this._getChannelProperties().channelCountMode;
  }
  set channelCountMode(channelCountMode) {
    const props = this._getChannelProperties();
    this._setChannelProperties(Object.assign(props, { channelCountMode }));
  }
  get channelInterpretation() {
    return this._getChannelProperties().channelInterpretation;
  }
  set channelInterpretation(channelInterpretation) {
    const props = this._getChannelProperties();
    this._setChannelProperties(Object.assign(props, { channelInterpretation }));
  }
  connect(destination, outputNum = 0, inputNum = 0) {
    connect(this, destination, outputNum, inputNum);
    return this;
  }
  toDestination() {
    this.connect(this.context.destination);
    return this;
  }
  toMaster() {
    warn("toMaster() has been renamed toDestination()");
    return this.toDestination();
  }
  disconnect(destination, outputNum = 0, inputNum = 0) {
    disconnect(this, destination, outputNum, inputNum);
    return this;
  }
  chain(...nodes) {
    connectSeries(this, ...nodes);
    return this;
  }
  fan(...nodes) {
    nodes.forEach((node) => this.connect(node));
    return this;
  }
  dispose() {
    super.dispose();
    if (isDefined(this.input)) {
      if (this.input instanceof ToneAudioNode) {
        this.input.dispose();
      } else if (isAudioNode2(this.input)) {
        this.input.disconnect();
      }
    }
    if (isDefined(this.output)) {
      if (this.output instanceof ToneAudioNode) {
        this.output.dispose();
      } else if (isAudioNode2(this.output)) {
        this.output.disconnect();
      }
    }
    this._internalChannels = [];
    return this;
  }
}

// node_modules/tone/build/esm/core/context/Gain.js
class Gain extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Gain.getDefaults(), arguments, ["gain", "units"]));
    this.name = "Gain";
    this._gainNode = this.context.createGain();
    this.input = this._gainNode;
    this.output = this._gainNode;
    const options = optionsFromArguments(Gain.getDefaults(), arguments, ["gain", "units"]);
    this.gain = new Param({
      context: this.context,
      convert: options.convert,
      param: this._gainNode.gain,
      units: options.units,
      value: options.gain,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    readOnly(this, "gain");
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      convert: true,
      gain: 1,
      units: "gain"
    });
  }
  dispose() {
    super.dispose();
    this._gainNode.disconnect();
    this.gain.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/source/OneShotSource.js
class OneShotSource extends ToneAudioNode {
  constructor(options) {
    super(options);
    this.onended = noOp;
    this._startTime = -1;
    this._stopTime = -1;
    this._timeout = -1;
    this.output = new Gain({
      context: this.context,
      gain: 0
    });
    this._gainNode = this.output;
    this.getStateAtTime = function(time) {
      const computedTime = this.toSeconds(time);
      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {
        return "started";
      } else {
        return "stopped";
      }
    };
    this._fadeIn = options.fadeIn;
    this._fadeOut = options.fadeOut;
    this._curve = options.curve;
    this.onended = options.onended;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      curve: "linear",
      fadeIn: 0,
      fadeOut: 0,
      onended: noOp
    });
  }
  _startGain(time, gain = 1) {
    assert(this._startTime === -1, "Source cannot be started more than once");
    const fadeInTime = this.toSeconds(this._fadeIn);
    this._startTime = time + fadeInTime;
    this._startTime = Math.max(this._startTime, this.context.currentTime);
    if (fadeInTime > 0) {
      this._gainNode.gain.setValueAtTime(0, time);
      if (this._curve === "linear") {
        this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);
      } else {
        this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);
      }
    } else {
      this._gainNode.gain.setValueAtTime(gain, time);
    }
    return this;
  }
  stop(time) {
    this.log("stop", time);
    this._stopGain(this.toSeconds(time));
    return this;
  }
  _stopGain(time) {
    assert(this._startTime !== -1, "'start' must be called before 'stop'");
    this.cancelStop();
    const fadeOutTime = this.toSeconds(this._fadeOut);
    this._stopTime = this.toSeconds(time) + fadeOutTime;
    this._stopTime = Math.max(this._stopTime, this.context.currentTime);
    if (fadeOutTime > 0) {
      if (this._curve === "linear") {
        this._gainNode.gain.linearRampTo(0, fadeOutTime, time);
      } else {
        this._gainNode.gain.targetRampTo(0, fadeOutTime, time);
      }
    } else {
      this._gainNode.gain.cancelAndHoldAtTime(time);
      this._gainNode.gain.setValueAtTime(0, time);
    }
    this.context.clearTimeout(this._timeout);
    this._timeout = this.context.setTimeout(() => {
      const additionalTail = this._curve === "exponential" ? fadeOutTime * 2 : 0;
      this._stopSource(this.now() + additionalTail);
      this._onended();
    }, this._stopTime - this.context.currentTime);
    return this;
  }
  _onended() {
    if (this.onended !== noOp) {
      this.onended(this);
      this.onended = noOp;
      if (!this.context.isOffline) {
        const disposeCallback = () => this.dispose();
        if (typeof window.requestIdleCallback !== "undefined") {
          window.requestIdleCallback(disposeCallback);
        } else {
          setTimeout(disposeCallback, 1000);
        }
      }
    }
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  cancelStop() {
    this.log("cancelStop");
    assert(this._startTime !== -1, "Source is not started");
    this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);
    this.context.clearTimeout(this._timeout);
    this._stopTime = -1;
    return this;
  }
  dispose() {
    super.dispose();
    this._gainNode.disconnect();
    return this;
  }
}

// node_modules/tone/build/esm/signal/ToneConstantSource.js
class ToneConstantSource extends OneShotSource {
  constructor() {
    super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, ["offset"]));
    this.name = "ToneConstantSource";
    this._source = this.context.createConstantSource();
    const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, ["offset"]);
    connect(this._source, this._gainNode);
    this.offset = new Param({
      context: this.context,
      convert: options.convert,
      param: this._source.offset,
      units: options.units,
      value: options.offset,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
  }
  static getDefaults() {
    return Object.assign(OneShotSource.getDefaults(), {
      convert: true,
      offset: 1,
      units: "number"
    });
  }
  start(time) {
    const computedTime = this.toSeconds(time);
    this.log("start", computedTime);
    this._startGain(computedTime);
    this._source.start(computedTime);
    return this;
  }
  _stopSource(time) {
    this._source.stop(time);
  }
  dispose() {
    super.dispose();
    if (this.state === "started") {
      this.stop();
    }
    this._source.disconnect();
    this.offset.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/signal/Signal.js
function connectSignal(signal, destination, outputNum, inputNum) {
  if (destination instanceof Param || isAudioParam(destination) || destination instanceof Signal && destination.override) {
    destination.cancelScheduledValues(0);
    destination.setValueAtTime(0, 0);
    if (destination instanceof Signal) {
      destination.overridden = true;
    }
  }
  connect(signal, destination, outputNum, inputNum);
}

class Signal extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Signal.getDefaults(), arguments, ["value", "units"]));
    this.name = "Signal";
    this.override = true;
    const options = optionsFromArguments(Signal.getDefaults(), arguments, ["value", "units"]);
    this.output = this._constantSource = new ToneConstantSource({
      context: this.context,
      convert: options.convert,
      offset: options.value,
      units: options.units,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    this._constantSource.start(0);
    this.input = this._param = this._constantSource.offset;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      convert: true,
      units: "number",
      value: 0
    });
  }
  connect(destination, outputNum = 0, inputNum = 0) {
    connectSignal(this, destination, outputNum, inputNum);
    return this;
  }
  dispose() {
    super.dispose();
    this._param.dispose();
    this._constantSource.dispose();
    return this;
  }
  setValueAtTime(value, time) {
    this._param.setValueAtTime(value, time);
    return this;
  }
  getValueAtTime(time) {
    return this._param.getValueAtTime(time);
  }
  setRampPoint(time) {
    this._param.setRampPoint(time);
    return this;
  }
  linearRampToValueAtTime(value, time) {
    this._param.linearRampToValueAtTime(value, time);
    return this;
  }
  exponentialRampToValueAtTime(value, time) {
    this._param.exponentialRampToValueAtTime(value, time);
    return this;
  }
  exponentialRampTo(value, rampTime, startTime) {
    this._param.exponentialRampTo(value, rampTime, startTime);
    return this;
  }
  linearRampTo(value, rampTime, startTime) {
    this._param.linearRampTo(value, rampTime, startTime);
    return this;
  }
  targetRampTo(value, rampTime, startTime) {
    this._param.targetRampTo(value, rampTime, startTime);
    return this;
  }
  exponentialApproachValueAtTime(value, time, rampTime) {
    this._param.exponentialApproachValueAtTime(value, time, rampTime);
    return this;
  }
  setTargetAtTime(value, startTime, timeConstant) {
    this._param.setTargetAtTime(value, startTime, timeConstant);
    return this;
  }
  setValueCurveAtTime(values, startTime, duration, scaling) {
    this._param.setValueCurveAtTime(values, startTime, duration, scaling);
    return this;
  }
  cancelScheduledValues(time) {
    this._param.cancelScheduledValues(time);
    return this;
  }
  cancelAndHoldAtTime(time) {
    this._param.cancelAndHoldAtTime(time);
    return this;
  }
  rampTo(value, rampTime, startTime) {
    this._param.rampTo(value, rampTime, startTime);
    return this;
  }
  get value() {
    return this._param.value;
  }
  set value(value) {
    this._param.value = value;
  }
  get convert() {
    return this._param.convert;
  }
  set convert(convert) {
    this._param.convert = convert;
  }
  get units() {
    return this._param.units;
  }
  get overridden() {
    return this._param.overridden;
  }
  set overridden(overridden) {
    this._param.overridden = overridden;
  }
  get maxValue() {
    return this._param.maxValue;
  }
  get minValue() {
    return this._param.minValue;
  }
  apply(param) {
    this._param.apply(param);
    return this;
  }
}

// node_modules/tone/build/esm/core/clock/TickParam.js
class TickParam extends Param {
  constructor() {
    super(optionsFromArguments(TickParam.getDefaults(), arguments, ["value"]));
    this.name = "TickParam";
    this._events = new Timeline(Infinity);
    this._multiplier = 1;
    const options = optionsFromArguments(TickParam.getDefaults(), arguments, ["value"]);
    this._multiplier = options.multiplier;
    this._events.cancel(0);
    this._events.add({
      ticks: 0,
      time: 0,
      type: "setValueAtTime",
      value: this._fromType(options.value)
    });
    this.setValueAtTime(options.value, 0);
  }
  static getDefaults() {
    return Object.assign(Param.getDefaults(), {
      multiplier: 1,
      units: "hertz",
      value: 1
    });
  }
  setTargetAtTime(value, time, constant) {
    time = this.toSeconds(time);
    this.setRampPoint(time);
    const computedValue = this._fromType(value);
    const prevEvent = this._events.get(time);
    const segments = Math.round(Math.max(1 / constant, 1));
    for (let i = 0;i <= segments; i++) {
      const segTime = constant * i + time;
      const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);
      this.linearRampToValueAtTime(this._toType(rampVal), segTime);
    }
    return this;
  }
  setValueAtTime(value, time) {
    const computedTime = this.toSeconds(time);
    super.setValueAtTime(value, time);
    const event = this._events.get(computedTime);
    const previousEvent = this._events.previousEvent(event);
    const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
    event.ticks = Math.max(ticksUntilTime, 0);
    return this;
  }
  linearRampToValueAtTime(value, time) {
    const computedTime = this.toSeconds(time);
    super.linearRampToValueAtTime(value, time);
    const event = this._events.get(computedTime);
    const previousEvent = this._events.previousEvent(event);
    const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);
    event.ticks = Math.max(ticksUntilTime, 0);
    return this;
  }
  exponentialRampToValueAtTime(value, time) {
    time = this.toSeconds(time);
    const computedVal = this._fromType(value);
    const prevEvent = this._events.get(time);
    const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
    const segmentDur = (time - prevEvent.time) / segments;
    for (let i = 0;i <= segments; i++) {
      const segTime = segmentDur * i + prevEvent.time;
      const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);
      this.linearRampToValueAtTime(this._toType(rampVal), segTime);
    }
    return this;
  }
  _getTicksUntilEvent(event, time) {
    if (event === null) {
      event = {
        ticks: 0,
        time: 0,
        type: "setValueAtTime",
        value: 0
      };
    } else if (isUndef(event.ticks)) {
      const previousEvent = this._events.previousEvent(event);
      event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
    }
    const val0 = this._fromType(this.getValueAtTime(event.time));
    let val1 = this._fromType(this.getValueAtTime(time));
    const onTheLineEvent = this._events.get(time);
    if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === "setValueAtTime") {
      val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));
    }
    return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
  }
  getTicksAtTime(time) {
    const computedTime = this.toSeconds(time);
    const event = this._events.get(computedTime);
    return Math.max(this._getTicksUntilEvent(event, computedTime), 0);
  }
  getDurationOfTicks(ticks, time) {
    const computedTime = this.toSeconds(time);
    const currentTick = this.getTicksAtTime(time);
    return this.getTimeOfTick(currentTick + ticks) - computedTime;
  }
  getTimeOfTick(tick) {
    const before = this._events.get(tick, "ticks");
    const after = this._events.getAfter(tick, "ticks");
    if (before && before.ticks === tick) {
      return before.time;
    } else if (before && after && after.type === "linearRampToValueAtTime" && before.value !== after.value) {
      const val0 = this._fromType(this.getValueAtTime(before.time));
      const val1 = this._fromType(this.getValueAtTime(after.time));
      const delta = (val1 - val0) / (after.time - before.time);
      const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
      const sol1 = (-val0 + k) / delta;
      const sol2 = (-val0 - k) / delta;
      return (sol1 > 0 ? sol1 : sol2) + before.time;
    } else if (before) {
      if (before.value === 0) {
        return Infinity;
      } else {
        return before.time + (tick - before.ticks) / before.value;
      }
    } else {
      return tick / this._initialValue;
    }
  }
  ticksToTime(ticks, when) {
    return this.getDurationOfTicks(ticks, when);
  }
  timeToTicks(duration, when) {
    const computedTime = this.toSeconds(when);
    const computedDuration = this.toSeconds(duration);
    const startTicks = this.getTicksAtTime(computedTime);
    const endTicks = this.getTicksAtTime(computedTime + computedDuration);
    return endTicks - startTicks;
  }
  _fromType(val) {
    if (this.units === "bpm" && this.multiplier) {
      return 1 / (60 / val / this.multiplier);
    } else {
      return super._fromType(val);
    }
  }
  _toType(val) {
    if (this.units === "bpm" && this.multiplier) {
      return val / this.multiplier * 60;
    } else {
      return super._toType(val);
    }
  }
  get multiplier() {
    return this._multiplier;
  }
  set multiplier(m) {
    const currentVal = this.value;
    this._multiplier = m;
    this.cancelScheduledValues(0);
    this.setValueAtTime(currentVal, 0);
  }
}

// node_modules/tone/build/esm/core/clock/TickSignal.js
class TickSignal extends Signal {
  constructor() {
    super(optionsFromArguments(TickSignal.getDefaults(), arguments, ["value"]));
    this.name = "TickSignal";
    const options = optionsFromArguments(TickSignal.getDefaults(), arguments, ["value"]);
    this.input = this._param = new TickParam({
      context: this.context,
      convert: options.convert,
      multiplier: options.multiplier,
      param: this._constantSource.offset,
      units: options.units,
      value: options.value
    });
  }
  static getDefaults() {
    return Object.assign(Signal.getDefaults(), {
      multiplier: 1,
      units: "hertz",
      value: 1
    });
  }
  ticksToTime(ticks, when) {
    return this._param.ticksToTime(ticks, when);
  }
  timeToTicks(duration, when) {
    return this._param.timeToTicks(duration, when);
  }
  getTimeOfTick(tick) {
    return this._param.getTimeOfTick(tick);
  }
  getDurationOfTicks(ticks, time) {
    return this._param.getDurationOfTicks(ticks, time);
  }
  getTicksAtTime(time) {
    return this._param.getTicksAtTime(time);
  }
  get multiplier() {
    return this._param.multiplier;
  }
  set multiplier(m) {
    this._param.multiplier = m;
  }
  dispose() {
    super.dispose();
    this._param.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/core/clock/TickSource.js
class TickSource extends ToneWithContext {
  constructor() {
    super(optionsFromArguments(TickSource.getDefaults(), arguments, ["frequency"]));
    this.name = "TickSource";
    this._state = new StateTimeline;
    this._tickOffset = new Timeline;
    const options = optionsFromArguments(TickSource.getDefaults(), arguments, ["frequency"]);
    this.frequency = new TickSignal({
      context: this.context,
      units: options.units,
      value: options.frequency
    });
    readOnly(this, "frequency");
    this._state.setStateAtTime("stopped", 0);
    this.setTicksAtTime(0, 0);
  }
  static getDefaults() {
    return Object.assign({
      frequency: 1,
      units: "hertz"
    }, ToneWithContext.getDefaults());
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  start(time, offset) {
    const computedTime = this.toSeconds(time);
    if (this._state.getValueAtTime(computedTime) !== "started") {
      this._state.setStateAtTime("started", computedTime);
      if (isDefined(offset)) {
        this.setTicksAtTime(offset, computedTime);
      }
    }
    return this;
  }
  stop(time) {
    const computedTime = this.toSeconds(time);
    if (this._state.getValueAtTime(computedTime) === "stopped") {
      const event = this._state.get(computedTime);
      if (event && event.time > 0) {
        this._tickOffset.cancel(event.time);
        this._state.cancel(event.time);
      }
    }
    this._state.cancel(computedTime);
    this._state.setStateAtTime("stopped", computedTime);
    this.setTicksAtTime(0, computedTime);
    return this;
  }
  pause(time) {
    const computedTime = this.toSeconds(time);
    if (this._state.getValueAtTime(computedTime) === "started") {
      this._state.setStateAtTime("paused", computedTime);
    }
    return this;
  }
  cancel(time) {
    time = this.toSeconds(time);
    this._state.cancel(time);
    this._tickOffset.cancel(time);
    return this;
  }
  getTicksAtTime(time) {
    const computedTime = this.toSeconds(time);
    const stopEvent = this._state.getLastState("stopped", computedTime);
    const tmpEvent = { state: "paused", time: computedTime };
    this._state.add(tmpEvent);
    let lastState = stopEvent;
    let elapsedTicks = 0;
    this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, (e2) => {
      let periodStartTime = lastState.time;
      const offsetEvent = this._tickOffset.get(e2.time);
      if (offsetEvent && offsetEvent.time >= lastState.time) {
        elapsedTicks = offsetEvent.ticks;
        periodStartTime = offsetEvent.time;
      }
      if (lastState.state === "started" && e2.state !== "started") {
        elapsedTicks += this.frequency.getTicksAtTime(e2.time) - this.frequency.getTicksAtTime(periodStartTime);
      }
      lastState = e2;
    });
    this._state.remove(tmpEvent);
    return elapsedTicks;
  }
  get ticks() {
    return this.getTicksAtTime(this.now());
  }
  set ticks(t) {
    this.setTicksAtTime(t, this.now());
  }
  get seconds() {
    return this.getSecondsAtTime(this.now());
  }
  set seconds(s) {
    const now = this.now();
    const ticks = this.frequency.timeToTicks(s, now);
    this.setTicksAtTime(ticks, now);
  }
  getSecondsAtTime(time) {
    time = this.toSeconds(time);
    const stopEvent = this._state.getLastState("stopped", time);
    const tmpEvent = { state: "paused", time };
    this._state.add(tmpEvent);
    let lastState = stopEvent;
    let elapsedSeconds = 0;
    this._state.forEachBetween(stopEvent.time, time + this.sampleTime, (e2) => {
      let periodStartTime = lastState.time;
      const offsetEvent = this._tickOffset.get(e2.time);
      if (offsetEvent && offsetEvent.time >= lastState.time) {
        elapsedSeconds = offsetEvent.seconds;
        periodStartTime = offsetEvent.time;
      }
      if (lastState.state === "started" && e2.state !== "started") {
        elapsedSeconds += e2.time - periodStartTime;
      }
      lastState = e2;
    });
    this._state.remove(tmpEvent);
    return elapsedSeconds;
  }
  setTicksAtTime(ticks, time) {
    time = this.toSeconds(time);
    this._tickOffset.cancel(time);
    this._tickOffset.add({
      seconds: this.frequency.getDurationOfTicks(ticks, time),
      ticks,
      time
    });
    return this;
  }
  getStateAtTime(time) {
    time = this.toSeconds(time);
    return this._state.getValueAtTime(time);
  }
  getTimeOfTick(tick, before = this.now()) {
    const offset = this._tickOffset.get(before);
    const event = this._state.get(before);
    const startTime = Math.max(offset.time, event.time);
    const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
    return this.frequency.getTimeOfTick(absoluteTicks);
  }
  forEachTickBetween(startTime, endTime, callback) {
    let lastStateEvent = this._state.get(startTime);
    this._state.forEachBetween(startTime, endTime, (event) => {
      if (lastStateEvent && lastStateEvent.state === "started" && event.state !== "started") {
        this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);
      }
      lastStateEvent = event;
    });
    let error = null;
    if (lastStateEvent && lastStateEvent.state === "started") {
      const maxStartTime = Math.max(lastStateEvent.time, startTime);
      const startTicks = this.frequency.getTicksAtTime(maxStartTime);
      const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
      const diff = startTicks - ticksAtStart;
      let offset = Math.ceil(diff) - diff;
      offset = EQ(offset, 1) ? 0 : offset;
      let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);
      while (nextTickTime < endTime) {
        try {
          callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
        } catch (e2) {
          error = e2;
          break;
        }
        nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
      }
    }
    if (error) {
      throw error;
    }
    return this;
  }
  dispose() {
    super.dispose();
    this._state.dispose();
    this._tickOffset.dispose();
    this.frequency.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/core/clock/Clock.js
class Clock extends ToneWithContext {
  constructor() {
    super(optionsFromArguments(Clock.getDefaults(), arguments, ["callback", "frequency"]));
    this.name = "Clock";
    this.callback = noOp;
    this._lastUpdate = 0;
    this._state = new StateTimeline("stopped");
    this._boundLoop = this._loop.bind(this);
    const options = optionsFromArguments(Clock.getDefaults(), arguments, ["callback", "frequency"]);
    this.callback = options.callback;
    this._tickSource = new TickSource({
      context: this.context,
      frequency: options.frequency,
      units: options.units
    });
    this._lastUpdate = 0;
    this.frequency = this._tickSource.frequency;
    readOnly(this, "frequency");
    this._state.setStateAtTime("stopped", 0);
    this.context.on("tick", this._boundLoop);
  }
  static getDefaults() {
    return Object.assign(ToneWithContext.getDefaults(), {
      callback: noOp,
      frequency: 1,
      units: "hertz"
    });
  }
  get state() {
    return this._state.getValueAtTime(this.now());
  }
  start(time, offset) {
    assertContextRunning(this.context);
    const computedTime = this.toSeconds(time);
    this.log("start", computedTime);
    if (this._state.getValueAtTime(computedTime) !== "started") {
      this._state.setStateAtTime("started", computedTime);
      this._tickSource.start(computedTime, offset);
      if (computedTime < this._lastUpdate) {
        this.emit("start", computedTime, offset);
      }
    }
    return this;
  }
  stop(time) {
    const computedTime = this.toSeconds(time);
    this.log("stop", computedTime);
    this._state.cancel(computedTime);
    this._state.setStateAtTime("stopped", computedTime);
    this._tickSource.stop(computedTime);
    if (computedTime < this._lastUpdate) {
      this.emit("stop", computedTime);
    }
    return this;
  }
  pause(time) {
    const computedTime = this.toSeconds(time);
    if (this._state.getValueAtTime(computedTime) === "started") {
      this._state.setStateAtTime("paused", computedTime);
      this._tickSource.pause(computedTime);
      if (computedTime < this._lastUpdate) {
        this.emit("pause", computedTime);
      }
    }
    return this;
  }
  get ticks() {
    return Math.ceil(this.getTicksAtTime(this.now()));
  }
  set ticks(t) {
    this._tickSource.ticks = t;
  }
  get seconds() {
    return this._tickSource.seconds;
  }
  set seconds(s) {
    this._tickSource.seconds = s;
  }
  getSecondsAtTime(time) {
    return this._tickSource.getSecondsAtTime(time);
  }
  setTicksAtTime(ticks, time) {
    this._tickSource.setTicksAtTime(ticks, time);
    return this;
  }
  getTimeOfTick(tick, before = this.now()) {
    return this._tickSource.getTimeOfTick(tick, before);
  }
  getTicksAtTime(time) {
    return this._tickSource.getTicksAtTime(time);
  }
  nextTickTime(offset, when) {
    const computedTime = this.toSeconds(when);
    const currentTick = this.getTicksAtTime(computedTime);
    return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);
  }
  _loop() {
    const startTime = this._lastUpdate;
    const endTime = this.now();
    this._lastUpdate = endTime;
    this.log("loop", startTime, endTime);
    if (startTime !== endTime) {
      this._state.forEachBetween(startTime, endTime, (e2) => {
        switch (e2.state) {
          case "started":
            const offset = this._tickSource.getTicksAtTime(e2.time);
            this.emit("start", e2.time, offset);
            break;
          case "stopped":
            if (e2.time !== 0) {
              this.emit("stop", e2.time);
            }
            break;
          case "paused":
            this.emit("pause", e2.time);
            break;
        }
      });
      this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {
        this.callback(time, ticks);
      });
    }
  }
  getStateAtTime(time) {
    const computedTime = this.toSeconds(time);
    return this._state.getValueAtTime(computedTime);
  }
  dispose() {
    super.dispose();
    this.context.off("tick", this._boundLoop);
    this._tickSource.dispose();
    this._state.dispose();
    return this;
  }
}
Emitter.mixin(Clock);
// node_modules/tone/build/esm/core/context/ToneAudioBuffers.js
class ToneAudioBuffers extends Tone {
  constructor() {
    super();
    this.name = "ToneAudioBuffers";
    this._buffers = new Map;
    this._loadingCount = 0;
    const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
    this.baseUrl = options.baseUrl;
    Object.keys(options.urls).forEach((name) => {
      this._loadingCount++;
      const url = options.urls[name];
      this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);
    });
  }
  static getDefaults() {
    return {
      baseUrl: "",
      onerror: noOp,
      onload: noOp,
      urls: {}
    };
  }
  has(name) {
    return this._buffers.has(name.toString());
  }
  get(name) {
    assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);
    return this._buffers.get(name.toString());
  }
  _bufferLoaded(callback) {
    this._loadingCount--;
    if (this._loadingCount === 0 && callback) {
      callback();
    }
  }
  get loaded() {
    return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);
  }
  add(name, url, callback = noOp, onerror = noOp) {
    if (isString(url)) {
      this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));
    } else {
      this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));
    }
    return this;
  }
  dispose() {
    super.dispose();
    this._buffers.forEach((buffer) => buffer.dispose());
    this._buffers.clear();
    return this;
  }
}
// node_modules/tone/build/esm/core/type/Ticks.js
class TicksClass extends TransportTimeClass {
  constructor() {
    super(...arguments);
    this.name = "Ticks";
    this.defaultUnits = "i";
  }
  _now() {
    return this.context.transport.ticks;
  }
  _beatsToUnits(beats) {
    return this._getPPQ() * beats;
  }
  _secondsToUnits(seconds) {
    return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());
  }
  _ticksToUnits(ticks) {
    return ticks;
  }
  toTicks() {
    return this.valueOf();
  }
  toSeconds() {
    return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
  }
}
// node_modules/tone/build/esm/core/util/Draw.js
class Draw extends ToneWithContext {
  constructor() {
    super(...arguments);
    this.name = "Draw";
    this.expiration = 0.25;
    this.anticipation = 0.008;
    this._events = new Timeline;
    this._boundDrawLoop = this._drawLoop.bind(this);
    this._animationFrame = -1;
  }
  schedule(callback, time) {
    this._events.add({
      callback,
      time: this.toSeconds(time)
    });
    if (this._events.length === 1) {
      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
    }
    return this;
  }
  cancel(after) {
    this._events.cancel(this.toSeconds(after));
    return this;
  }
  _drawLoop() {
    const now = this.context.currentTime;
    while (this._events.length && this._events.peek().time - this.anticipation <= now) {
      const event = this._events.shift();
      if (event && now - event.time <= this.expiration) {
        event.callback();
      }
    }
    if (this._events.length > 0) {
      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
    }
  }
  dispose() {
    super.dispose();
    this._events.dispose();
    cancelAnimationFrame(this._animationFrame);
    return this;
  }
}
onContextInit((context2) => {
  context2.draw = new Draw({ context: context2 });
});
onContextClose((context2) => {
  context2.draw.dispose();
});
// node_modules/tone/build/esm/core/util/IntervalTimeline.js
class IntervalTimeline extends Tone {
  constructor() {
    super(...arguments);
    this.name = "IntervalTimeline";
    this._root = null;
    this._length = 0;
  }
  add(event) {
    assert(isDefined(event.time), "Events must have a time property");
    assert(isDefined(event.duration), "Events must have a duration parameter");
    event.time = event.time.valueOf();
    let node = new IntervalNode(event.time, event.time + event.duration, event);
    if (this._root === null) {
      this._root = node;
    } else {
      this._root.insert(node);
    }
    this._length++;
    while (node !== null) {
      node.updateHeight();
      node.updateMax();
      this._rebalance(node);
      node = node.parent;
    }
    return this;
  }
  remove(event) {
    if (this._root !== null) {
      const results = [];
      this._root.search(event.time, results);
      for (const node of results) {
        if (node.event === event) {
          this._removeNode(node);
          this._length--;
          break;
        }
      }
    }
    return this;
  }
  get length() {
    return this._length;
  }
  cancel(after) {
    this.forEachFrom(after, (event) => this.remove(event));
    return this;
  }
  _setRoot(node) {
    this._root = node;
    if (this._root !== null) {
      this._root.parent = null;
    }
  }
  _replaceNodeInParent(node, replacement) {
    if (node.parent !== null) {
      if (node.isLeftChild()) {
        node.parent.left = replacement;
      } else {
        node.parent.right = replacement;
      }
      this._rebalance(node.parent);
    } else {
      this._setRoot(replacement);
    }
  }
  _removeNode(node) {
    if (node.left === null && node.right === null) {
      this._replaceNodeInParent(node, null);
    } else if (node.right === null) {
      this._replaceNodeInParent(node, node.left);
    } else if (node.left === null) {
      this._replaceNodeInParent(node, node.right);
    } else {
      const balance = node.getBalance();
      let replacement;
      let temp = null;
      if (balance > 0) {
        if (node.left.right === null) {
          replacement = node.left;
          replacement.right = node.right;
          temp = replacement;
        } else {
          replacement = node.left.right;
          while (replacement.right !== null) {
            replacement = replacement.right;
          }
          if (replacement.parent) {
            replacement.parent.right = replacement.left;
            temp = replacement.parent;
            replacement.left = node.left;
            replacement.right = node.right;
          }
        }
      } else if (node.right.left === null) {
        replacement = node.right;
        replacement.left = node.left;
        temp = replacement;
      } else {
        replacement = node.right.left;
        while (replacement.left !== null) {
          replacement = replacement.left;
        }
        if (replacement.parent) {
          replacement.parent.left = replacement.right;
          temp = replacement.parent;
          replacement.left = node.left;
          replacement.right = node.right;
        }
      }
      if (node.parent !== null) {
        if (node.isLeftChild()) {
          node.parent.left = replacement;
        } else {
          node.parent.right = replacement;
        }
      } else {
        this._setRoot(replacement);
      }
      if (temp) {
        this._rebalance(temp);
      }
    }
    node.dispose();
  }
  _rotateLeft(node) {
    const parent = node.parent;
    const isLeftChild = node.isLeftChild();
    const pivotNode = node.right;
    if (pivotNode) {
      node.right = pivotNode.left;
      pivotNode.left = node;
    }
    if (parent !== null) {
      if (isLeftChild) {
        parent.left = pivotNode;
      } else {
        parent.right = pivotNode;
      }
    } else {
      this._setRoot(pivotNode);
    }
  }
  _rotateRight(node) {
    const parent = node.parent;
    const isLeftChild = node.isLeftChild();
    const pivotNode = node.left;
    if (pivotNode) {
      node.left = pivotNode.right;
      pivotNode.right = node;
    }
    if (parent !== null) {
      if (isLeftChild) {
        parent.left = pivotNode;
      } else {
        parent.right = pivotNode;
      }
    } else {
      this._setRoot(pivotNode);
    }
  }
  _rebalance(node) {
    const balance = node.getBalance();
    if (balance > 1 && node.left) {
      if (node.left.getBalance() < 0) {
        this._rotateLeft(node.left);
      } else {
        this._rotateRight(node);
      }
    } else if (balance < -1 && node.right) {
      if (node.right.getBalance() > 0) {
        this._rotateRight(node.right);
      } else {
        this._rotateLeft(node);
      }
    }
  }
  get(time) {
    if (this._root !== null) {
      const results = [];
      this._root.search(time, results);
      if (results.length > 0) {
        let max = results[0];
        for (let i = 1;i < results.length; i++) {
          if (results[i].low > max.low) {
            max = results[i];
          }
        }
        return max.event;
      }
    }
    return null;
  }
  forEach(callback) {
    if (this._root !== null) {
      const allNodes = [];
      this._root.traverse((node) => allNodes.push(node));
      allNodes.forEach((node) => {
        if (node.event) {
          callback(node.event);
        }
      });
    }
    return this;
  }
  forEachAtTime(time, callback) {
    if (this._root !== null) {
      const results = [];
      this._root.search(time, results);
      results.forEach((node) => {
        if (node.event) {
          callback(node.event);
        }
      });
    }
    return this;
  }
  forEachFrom(time, callback) {
    if (this._root !== null) {
      const results = [];
      this._root.searchAfter(time, results);
      results.forEach((node) => {
        if (node.event) {
          callback(node.event);
        }
      });
    }
    return this;
  }
  dispose() {
    super.dispose();
    if (this._root !== null) {
      this._root.traverse((node) => node.dispose());
    }
    this._root = null;
    return this;
  }
}

class IntervalNode {
  constructor(low, high, event) {
    this._left = null;
    this._right = null;
    this.parent = null;
    this.height = 0;
    this.event = event;
    this.low = low;
    this.high = high;
    this.max = this.high;
  }
  insert(node) {
    if (node.low <= this.low) {
      if (this.left === null) {
        this.left = node;
      } else {
        this.left.insert(node);
      }
    } else if (this.right === null) {
      this.right = node;
    } else {
      this.right.insert(node);
    }
  }
  search(point, results) {
    if (point > this.max) {
      return;
    }
    if (this.left !== null) {
      this.left.search(point, results);
    }
    if (this.low <= point && this.high > point) {
      results.push(this);
    }
    if (this.low > point) {
      return;
    }
    if (this.right !== null) {
      this.right.search(point, results);
    }
  }
  searchAfter(point, results) {
    if (this.low >= point) {
      results.push(this);
      if (this.left !== null) {
        this.left.searchAfter(point, results);
      }
    }
    if (this.right !== null) {
      this.right.searchAfter(point, results);
    }
  }
  traverse(callback) {
    callback(this);
    if (this.left !== null) {
      this.left.traverse(callback);
    }
    if (this.right !== null) {
      this.right.traverse(callback);
    }
  }
  updateHeight() {
    if (this.left !== null && this.right !== null) {
      this.height = Math.max(this.left.height, this.right.height) + 1;
    } else if (this.right !== null) {
      this.height = this.right.height + 1;
    } else if (this.left !== null) {
      this.height = this.left.height + 1;
    } else {
      this.height = 0;
    }
  }
  updateMax() {
    this.max = this.high;
    if (this.left !== null) {
      this.max = Math.max(this.max, this.left.max);
    }
    if (this.right !== null) {
      this.max = Math.max(this.max, this.right.max);
    }
  }
  getBalance() {
    let balance = 0;
    if (this.left !== null && this.right !== null) {
      balance = this.left.height - this.right.height;
    } else if (this.left !== null) {
      balance = this.left.height + 1;
    } else if (this.right !== null) {
      balance = -(this.right.height + 1);
    }
    return balance;
  }
  isLeftChild() {
    return this.parent !== null && this.parent.left === this;
  }
  get left() {
    return this._left;
  }
  set left(node) {
    this._left = node;
    if (node !== null) {
      node.parent = this;
    }
    this.updateHeight();
    this.updateMax();
  }
  get right() {
    return this._right;
  }
  set right(node) {
    this._right = node;
    if (node !== null) {
      node.parent = this;
    }
    this.updateHeight();
    this.updateMax();
  }
  dispose() {
    this.parent = null;
    this._left = null;
    this._right = null;
    this.event = null;
  }
}
// node_modules/tone/build/esm/component/channel/Volume.js
class Volume extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Volume.getDefaults(), arguments, ["volume"]));
    this.name = "Volume";
    const options = optionsFromArguments(Volume.getDefaults(), arguments, ["volume"]);
    this.input = this.output = new Gain({
      context: this.context,
      gain: options.volume,
      units: "decibels"
    });
    this.volume = this.output.gain;
    readOnly(this, "volume");
    this._unmutedVolume = options.volume;
    this.mute = options.mute;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      mute: false,
      volume: 0
    });
  }
  get mute() {
    return this.volume.value === (-Infinity);
  }
  set mute(mute) {
    if (!this.mute && mute) {
      this._unmutedVolume = this.volume.value;
      this.volume.value = (-Infinity);
    } else if (this.mute && !mute) {
      this.volume.value = this._unmutedVolume;
    }
  }
  dispose() {
    super.dispose();
    this.input.dispose();
    this.volume.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/core/context/Destination.js
class Destination extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Destination.getDefaults(), arguments));
    this.name = "Destination";
    this.input = new Volume({ context: this.context });
    this.output = new Gain({ context: this.context });
    this.volume = this.input.volume;
    const options = optionsFromArguments(Destination.getDefaults(), arguments);
    connectSeries(this.input, this.output, this.context.rawContext.destination);
    this.mute = options.mute;
    this._internalChannels = [this.input, this.context.rawContext.destination, this.output];
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      mute: false,
      volume: 0
    });
  }
  get mute() {
    return this.input.mute;
  }
  set mute(mute) {
    this.input.mute = mute;
  }
  chain(...args) {
    this.input.disconnect();
    args.unshift(this.input);
    args.push(this.output);
    connectSeries(...args);
    return this;
  }
  get maxChannelCount() {
    return this.context.rawContext.destination.maxChannelCount;
  }
  dispose() {
    super.dispose();
    this.volume.dispose();
    return this;
  }
}
onContextInit((context2) => {
  context2.destination = new Destination({ context: context2 });
});
onContextClose((context2) => {
  context2.destination.dispose();
});

// node_modules/tone/build/esm/core/util/TimelineValue.js
class TimelineValue extends Tone {
  constructor(initialValue) {
    super();
    this.name = "TimelineValue";
    this._timeline = new Timeline({ memory: 10 });
    this._initialValue = initialValue;
  }
  set(value, time) {
    this._timeline.add({
      value,
      time
    });
    return this;
  }
  get(time) {
    const event = this._timeline.get(time);
    if (event) {
      return event.value;
    } else {
      return this._initialValue;
    }
  }
}

// node_modules/tone/build/esm/core/clock/TransportEvent.js
class TransportEvent {
  constructor(transport, opts) {
    this.id = TransportEvent._eventId++;
    const options = Object.assign(TransportEvent.getDefaults(), opts);
    this.transport = transport;
    this.callback = options.callback;
    this._once = options.once;
    this.time = options.time;
  }
  static getDefaults() {
    return {
      callback: noOp,
      once: false,
      time: 0
    };
  }
  invoke(time) {
    if (this.callback) {
      this.callback(time);
      if (this._once) {
        this.transport.clear(this.id);
      }
    }
  }
  dispose() {
    this.callback = undefined;
    return this;
  }
}
TransportEvent._eventId = 0;

// node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js
class TransportRepeatEvent extends TransportEvent {
  constructor(transport, opts) {
    super(transport, opts);
    this._currentId = -1;
    this._nextId = -1;
    this._nextTick = this.time;
    this._boundRestart = this._restart.bind(this);
    const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);
    this.duration = new TicksClass(transport.context, options.duration).valueOf();
    this._interval = new TicksClass(transport.context, options.interval).valueOf();
    this._nextTick = options.time;
    this.transport.on("start", this._boundRestart);
    this.transport.on("loopStart", this._boundRestart);
    this.context = this.transport.context;
    this._restart();
  }
  static getDefaults() {
    return Object.assign({}, TransportEvent.getDefaults(), {
      duration: Infinity,
      interval: 1,
      once: false
    });
  }
  invoke(time) {
    this._createEvents(time);
    super.invoke(time);
  }
  _createEvents(time) {
    const ticks = this.transport.getTicksAtTime(time);
    if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
      this._nextTick += this._interval;
      this._currentId = this._nextId;
      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());
    }
  }
  _restart(time) {
    this.transport.clear(this._currentId);
    this.transport.clear(this._nextId);
    this._nextTick = this.time;
    const ticks = this.transport.getTicksAtTime(time);
    if (ticks > this.time) {
      this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
    }
    this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());
    this._nextTick += this._interval;
    this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());
  }
  dispose() {
    super.dispose();
    this.transport.clear(this._currentId);
    this.transport.clear(this._nextId);
    this.transport.off("start", this._boundRestart);
    this.transport.off("loopStart", this._boundRestart);
    return this;
  }
}

// node_modules/tone/build/esm/core/clock/Transport.js
class Transport extends ToneWithContext {
  constructor() {
    super(optionsFromArguments(Transport.getDefaults(), arguments));
    this.name = "Transport";
    this._loop = new TimelineValue(false);
    this._loopStart = 0;
    this._loopEnd = 0;
    this._scheduledEvents = {};
    this._timeline = new Timeline;
    this._repeatedEvents = new IntervalTimeline;
    this._syncedSignals = [];
    this._swingAmount = 0;
    const options = optionsFromArguments(Transport.getDefaults(), arguments);
    this._ppq = options.ppq;
    this._clock = new Clock({
      callback: this._processTick.bind(this),
      context: this.context,
      frequency: 0,
      units: "bpm"
    });
    this._bindClockEvents();
    this.bpm = this._clock.frequency;
    this._clock.frequency.multiplier = options.ppq;
    this.bpm.setValueAtTime(options.bpm, 0);
    readOnly(this, "bpm");
    this._timeSignature = options.timeSignature;
    this._swingTicks = options.ppq / 2;
  }
  static getDefaults() {
    return Object.assign(ToneWithContext.getDefaults(), {
      bpm: 120,
      loopEnd: "4m",
      loopStart: 0,
      ppq: 192,
      swing: 0,
      swingSubdivision: "8n",
      timeSignature: 4
    });
  }
  _processTick(tickTime, ticks) {
    if (this._loop.get(tickTime)) {
      if (ticks >= this._loopEnd) {
        this.emit("loopEnd", tickTime);
        this._clock.setTicksAtTime(this._loopStart, tickTime);
        ticks = this._loopStart;
        this.emit("loopStart", tickTime, this._clock.getSecondsAtTime(tickTime));
        this.emit("loop", tickTime);
      }
    }
    if (this._swingAmount > 0 && ticks % this._ppq !== 0 && ticks % (this._swingTicks * 2) !== 0) {
      const progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);
      const amount = Math.sin(progress * Math.PI) * this._swingAmount;
      tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;
    }
    this._timeline.forEachAtTime(ticks, (event) => event.invoke(tickTime));
  }
  schedule(callback, time) {
    const event = new TransportEvent(this, {
      callback,
      time: new TransportTimeClass(this.context, time).toTicks()
    });
    return this._addEvent(event, this._timeline);
  }
  scheduleRepeat(callback, interval, startTime, duration = Infinity) {
    const event = new TransportRepeatEvent(this, {
      callback,
      duration: new TimeClass(this.context, duration).toTicks(),
      interval: new TimeClass(this.context, interval).toTicks(),
      time: new TransportTimeClass(this.context, startTime).toTicks()
    });
    return this._addEvent(event, this._repeatedEvents);
  }
  scheduleOnce(callback, time) {
    const event = new TransportEvent(this, {
      callback,
      once: true,
      time: new TransportTimeClass(this.context, time).toTicks()
    });
    return this._addEvent(event, this._timeline);
  }
  clear(eventId) {
    if (this._scheduledEvents.hasOwnProperty(eventId)) {
      const item = this._scheduledEvents[eventId.toString()];
      item.timeline.remove(item.event);
      item.event.dispose();
      delete this._scheduledEvents[eventId.toString()];
    }
    return this;
  }
  _addEvent(event, timeline) {
    this._scheduledEvents[event.id.toString()] = {
      event,
      timeline
    };
    timeline.add(event);
    return event.id;
  }
  cancel(after = 0) {
    const computedAfter = this.toTicks(after);
    this._timeline.forEachFrom(computedAfter, (event) => this.clear(event.id));
    this._repeatedEvents.forEachFrom(computedAfter, (event) => this.clear(event.id));
    return this;
  }
  _bindClockEvents() {
    this._clock.on("start", (time, offset) => {
      offset = new TicksClass(this.context, offset).toSeconds();
      this.emit("start", time, offset);
    });
    this._clock.on("stop", (time) => {
      this.emit("stop", time);
    });
    this._clock.on("pause", (time) => {
      this.emit("pause", time);
    });
  }
  get state() {
    return this._clock.getStateAtTime(this.now());
  }
  start(time, offset) {
    let offsetTicks;
    if (isDefined(offset)) {
      offsetTicks = this.toTicks(offset);
    }
    this._clock.start(time, offsetTicks);
    return this;
  }
  stop(time) {
    this._clock.stop(time);
    return this;
  }
  pause(time) {
    this._clock.pause(time);
    return this;
  }
  toggle(time) {
    time = this.toSeconds(time);
    if (this._clock.getStateAtTime(time) !== "started") {
      this.start(time);
    } else {
      this.stop(time);
    }
    return this;
  }
  get timeSignature() {
    return this._timeSignature;
  }
  set timeSignature(timeSig) {
    if (isArray(timeSig)) {
      timeSig = timeSig[0] / timeSig[1] * 4;
    }
    this._timeSignature = timeSig;
  }
  get loopStart() {
    return new TimeClass(this.context, this._loopStart, "i").toSeconds();
  }
  set loopStart(startPosition) {
    this._loopStart = this.toTicks(startPosition);
  }
  get loopEnd() {
    return new TimeClass(this.context, this._loopEnd, "i").toSeconds();
  }
  set loopEnd(endPosition) {
    this._loopEnd = this.toTicks(endPosition);
  }
  get loop() {
    return this._loop.get(this.now());
  }
  set loop(loop) {
    this._loop.set(loop, this.now());
  }
  setLoopPoints(startPosition, endPosition) {
    this.loopStart = startPosition;
    this.loopEnd = endPosition;
    return this;
  }
  get swing() {
    return this._swingAmount;
  }
  set swing(amount) {
    this._swingAmount = amount;
  }
  get swingSubdivision() {
    return new TicksClass(this.context, this._swingTicks).toNotation();
  }
  set swingSubdivision(subdivision) {
    this._swingTicks = this.toTicks(subdivision);
  }
  get position() {
    const now = this.now();
    const ticks = this._clock.getTicksAtTime(now);
    return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();
  }
  set position(progress) {
    const ticks = this.toTicks(progress);
    this.ticks = ticks;
  }
  get seconds() {
    return this._clock.seconds;
  }
  set seconds(s) {
    const now = this.now();
    const ticks = this._clock.frequency.timeToTicks(s, now);
    this.ticks = ticks;
  }
  get progress() {
    if (this.loop) {
      const now = this.now();
      const ticks = this._clock.getTicksAtTime(now);
      return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
    } else {
      return 0;
    }
  }
  get ticks() {
    return this._clock.ticks;
  }
  set ticks(t) {
    if (this._clock.ticks !== t) {
      const now = this.now();
      if (this.state === "started") {
        const ticks = this._clock.getTicksAtTime(now);
        const remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);
        const time = now + remainingTick;
        this.emit("stop", time);
        this._clock.setTicksAtTime(t, time);
        this.emit("start", time, this._clock.getSecondsAtTime(time));
      } else {
        this._clock.setTicksAtTime(t, now);
      }
    }
  }
  getTicksAtTime(time) {
    return Math.round(this._clock.getTicksAtTime(time));
  }
  getSecondsAtTime(time) {
    return this._clock.getSecondsAtTime(time);
  }
  get PPQ() {
    return this._clock.frequency.multiplier;
  }
  set PPQ(ppq) {
    this._clock.frequency.multiplier = ppq;
  }
  nextSubdivision(subdivision) {
    subdivision = this.toTicks(subdivision);
    if (this.state !== "started") {
      return 0;
    } else {
      const now = this.now();
      const transportPos = this.getTicksAtTime(now);
      const remainingTicks = subdivision - transportPos % subdivision;
      return this._clock.nextTickTime(remainingTicks, now);
    }
  }
  syncSignal(signal, ratio) {
    if (!ratio) {
      const now = this.now();
      if (signal.getValueAtTime(now) !== 0) {
        const bpm = this.bpm.getValueAtTime(now);
        const computedFreq = 1 / (60 / bpm / this.PPQ);
        ratio = signal.getValueAtTime(now) / computedFreq;
      } else {
        ratio = 0;
      }
    }
    const ratioSignal = new Gain(ratio);
    this.bpm.connect(ratioSignal);
    ratioSignal.connect(signal._param);
    this._syncedSignals.push({
      initial: signal.value,
      ratio: ratioSignal,
      signal
    });
    signal.value = 0;
    return this;
  }
  unsyncSignal(signal) {
    for (let i = this._syncedSignals.length - 1;i >= 0; i--) {
      const syncedSignal = this._syncedSignals[i];
      if (syncedSignal.signal === signal) {
        syncedSignal.ratio.dispose();
        syncedSignal.signal.value = syncedSignal.initial;
        this._syncedSignals.splice(i, 1);
      }
    }
    return this;
  }
  dispose() {
    super.dispose();
    this._clock.dispose();
    writable(this, "bpm");
    this._timeline.dispose();
    this._repeatedEvents.dispose();
    return this;
  }
}
Emitter.mixin(Transport);
onContextInit((context2) => {
  context2.transport = new Transport({ context: context2 });
});
onContextClose((context2) => {
  context2.transport.dispose();
});

// node_modules/tone/build/esm/source/Source.js
class Source extends ToneAudioNode {
  constructor(options) {
    super(options);
    this.input = undefined;
    this._state = new StateTimeline("stopped");
    this._synced = false;
    this._scheduled = [];
    this._syncedStart = noOp;
    this._syncedStop = noOp;
    this._state.memory = 100;
    this._state.increasing = true;
    this._volume = this.output = new Volume({
      context: this.context,
      mute: options.mute,
      volume: options.volume
    });
    this.volume = this._volume.volume;
    readOnly(this, "volume");
    this.onstop = options.onstop;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      mute: false,
      onstop: noOp,
      volume: 0
    });
  }
  get state() {
    if (this._synced) {
      if (this.context.transport.state === "started") {
        return this._state.getValueAtTime(this.context.transport.seconds);
      } else {
        return "stopped";
      }
    } else {
      return this._state.getValueAtTime(this.now());
    }
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(mute) {
    this._volume.mute = mute;
  }
  _clampToCurrentTime(time) {
    if (this._synced) {
      return time;
    } else {
      return Math.max(time, this.context.currentTime);
    }
  }
  start(time, offset, duration) {
    let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
    computedTime = this._clampToCurrentTime(computedTime);
    if (!this._synced && this._state.getValueAtTime(computedTime) === "started") {
      assert(GT(computedTime, this._state.get(computedTime).time), "Start time must be strictly greater than previous start time");
      this._state.cancel(computedTime);
      this._state.setStateAtTime("started", computedTime);
      this.log("restart", computedTime);
      this.restart(computedTime, offset, duration);
    } else {
      this.log("start", computedTime);
      this._state.setStateAtTime("started", computedTime);
      if (this._synced) {
        const event = this._state.get(computedTime);
        if (event) {
          event.offset = this.toSeconds(defaultArg(offset, 0));
          event.duration = duration ? this.toSeconds(duration) : undefined;
        }
        const sched = this.context.transport.schedule((t) => {
          this._start(t, offset, duration);
        }, computedTime);
        this._scheduled.push(sched);
        if (this.context.transport.state === "started" && this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {
          this._syncedStart(this.now(), this.context.transport.seconds);
        }
      } else {
        assertContextRunning(this.context);
        this._start(computedTime, offset, duration);
      }
    }
    return this;
  }
  stop(time) {
    let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
    computedTime = this._clampToCurrentTime(computedTime);
    if (this._state.getValueAtTime(computedTime) === "started" || isDefined(this._state.getNextState("started", computedTime))) {
      this.log("stop", computedTime);
      if (!this._synced) {
        this._stop(computedTime);
      } else {
        const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);
        this._scheduled.push(sched);
      }
      this._state.cancel(computedTime);
      this._state.setStateAtTime("stopped", computedTime);
    }
    return this;
  }
  restart(time, offset, duration) {
    time = this.toSeconds(time);
    if (this._state.getValueAtTime(time) === "started") {
      this._state.cancel(time);
      this._restart(time, offset, duration);
    }
    return this;
  }
  sync() {
    if (!this._synced) {
      this._synced = true;
      this._syncedStart = (time, offset) => {
        if (offset > 0) {
          const stateEvent = this._state.get(offset);
          if (stateEvent && stateEvent.state === "started" && stateEvent.time !== offset) {
            const startOffset = offset - this.toSeconds(stateEvent.time);
            let duration;
            if (stateEvent.duration) {
              duration = this.toSeconds(stateEvent.duration) - startOffset;
            }
            this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);
          }
        }
      };
      this._syncedStop = (time) => {
        const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));
        if (this._state.getValueAtTime(seconds) === "started") {
          this._stop(time);
        }
      };
      this.context.transport.on("start", this._syncedStart);
      this.context.transport.on("loopStart", this._syncedStart);
      this.context.transport.on("stop", this._syncedStop);
      this.context.transport.on("pause", this._syncedStop);
      this.context.transport.on("loopEnd", this._syncedStop);
    }
    return this;
  }
  unsync() {
    if (this._synced) {
      this.context.transport.off("stop", this._syncedStop);
      this.context.transport.off("pause", this._syncedStop);
      this.context.transport.off("loopEnd", this._syncedStop);
      this.context.transport.off("start", this._syncedStart);
      this.context.transport.off("loopStart", this._syncedStart);
    }
    this._synced = false;
    this._scheduled.forEach((id) => this.context.transport.clear(id));
    this._scheduled = [];
    this._state.cancel(0);
    this._stop(0);
    return this;
  }
  dispose() {
    super.dispose();
    this.onstop = noOp;
    this.unsync();
    this._volume.dispose();
    this._state.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/source/buffer/ToneBufferSource.js
class ToneBufferSource extends OneShotSource {
  constructor() {
    super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]));
    this.name = "ToneBufferSource";
    this._source = this.context.createBufferSource();
    this._internalChannels = [this._source];
    this._sourceStarted = false;
    this._sourceStopped = false;
    const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]);
    connect(this._source, this._gainNode);
    this._source.onended = () => this._stopSource();
    this.playbackRate = new Param({
      context: this.context,
      param: this._source.playbackRate,
      units: "positive",
      value: options.playbackRate
    });
    this.loop = options.loop;
    this.loopStart = options.loopStart;
    this.loopEnd = options.loopEnd;
    this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);
    this._internalChannels.push(this._source);
  }
  static getDefaults() {
    return Object.assign(OneShotSource.getDefaults(), {
      url: new ToneAudioBuffer,
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      onload: noOp,
      onerror: noOp,
      playbackRate: 1
    });
  }
  get fadeIn() {
    return this._fadeIn;
  }
  set fadeIn(t) {
    this._fadeIn = t;
  }
  get fadeOut() {
    return this._fadeOut;
  }
  set fadeOut(t) {
    this._fadeOut = t;
  }
  get curve() {
    return this._curve;
  }
  set curve(t) {
    this._curve = t;
  }
  start(time, offset, duration, gain = 1) {
    assert(this.buffer.loaded, "buffer is either not set or not loaded");
    const computedTime = this.toSeconds(time);
    this._startGain(computedTime, gain);
    if (this.loop) {
      offset = defaultArg(offset, this.loopStart);
    } else {
      offset = defaultArg(offset, 0);
    }
    let computedOffset = Math.max(this.toSeconds(offset), 0);
    if (this.loop) {
      const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
      const loopStart = this.toSeconds(this.loopStart);
      const loopDuration = loopEnd - loopStart;
      if (GTE(computedOffset, loopEnd)) {
        computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;
      }
      if (EQ(computedOffset, this.buffer.duration)) {
        computedOffset = 0;
      }
    }
    this._source.buffer = this.buffer.get();
    this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
    if (LT(computedOffset, this.buffer.duration)) {
      this._sourceStarted = true;
      this._source.start(computedTime, computedOffset);
    }
    if (isDefined(duration)) {
      let computedDur = this.toSeconds(duration);
      computedDur = Math.max(computedDur, 0);
      this.stop(computedTime + computedDur);
    }
    return this;
  }
  _stopSource(time) {
    if (!this._sourceStopped && this._sourceStarted) {
      this._sourceStopped = true;
      this._source.stop(this.toSeconds(time));
      this._onended();
    }
  }
  get loopStart() {
    return this._source.loopStart;
  }
  set loopStart(loopStart) {
    this._source.loopStart = this.toSeconds(loopStart);
  }
  get loopEnd() {
    return this._source.loopEnd;
  }
  set loopEnd(loopEnd) {
    this._source.loopEnd = this.toSeconds(loopEnd);
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(buffer) {
    this._buffer.set(buffer);
  }
  get loop() {
    return this._source.loop;
  }
  set loop(loop) {
    this._source.loop = loop;
    if (this._sourceStarted) {
      this.cancelStop();
    }
  }
  dispose() {
    super.dispose();
    this._source.onended = null;
    this._source.disconnect();
    this._buffer.dispose();
    this.playbackRate.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/source/Noise.js
var BUFFER_LENGTH = 44100 * 5;
// node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js
function generateWaveform(instance, length) {
  return __awaiter(this, undefined, undefined, function* () {
    const duration = length / instance.context.sampleRate;
    const context2 = new OfflineContext(1, duration, instance.context.sampleRate);
    const clone = new instance.constructor(Object.assign(instance.get(), {
      frequency: 2 / duration,
      detune: 0,
      context: context2
    })).toDestination();
    clone.start(0);
    const buffer = yield context2.render();
    return buffer.getChannelData(0);
  });
}

// node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js
class ToneOscillatorNode extends OneShotSource {
  constructor() {
    super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]));
    this.name = "ToneOscillatorNode";
    this._oscillator = this.context.createOscillator();
    this._internalChannels = [this._oscillator];
    const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]);
    connect(this._oscillator, this._gainNode);
    this.type = options.type;
    this.frequency = new Param({
      context: this.context,
      param: this._oscillator.frequency,
      units: "frequency",
      value: options.frequency
    });
    this.detune = new Param({
      context: this.context,
      param: this._oscillator.detune,
      units: "cents",
      value: options.detune
    });
    readOnly(this, ["frequency", "detune"]);
  }
  static getDefaults() {
    return Object.assign(OneShotSource.getDefaults(), {
      detune: 0,
      frequency: 440,
      type: "sine"
    });
  }
  start(time) {
    const computedTime = this.toSeconds(time);
    this.log("start", computedTime);
    this._startGain(computedTime);
    this._oscillator.start(computedTime);
    return this;
  }
  _stopSource(time) {
    this._oscillator.stop(time);
  }
  setPeriodicWave(periodicWave) {
    this._oscillator.setPeriodicWave(periodicWave);
    return this;
  }
  get type() {
    return this._oscillator.type;
  }
  set type(type) {
    this._oscillator.type = type;
  }
  dispose() {
    super.dispose();
    if (this.state === "started") {
      this.stop();
    }
    this._oscillator.disconnect();
    this.frequency.dispose();
    this.detune.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/source/oscillator/Oscillator.js
class Oscillator extends Source {
  constructor() {
    super(optionsFromArguments(Oscillator.getDefaults(), arguments, ["frequency", "type"]));
    this.name = "Oscillator";
    this._oscillator = null;
    const options = optionsFromArguments(Oscillator.getDefaults(), arguments, ["frequency", "type"]);
    this.frequency = new Signal({
      context: this.context,
      units: "frequency",
      value: options.frequency
    });
    readOnly(this, "frequency");
    this.detune = new Signal({
      context: this.context,
      units: "cents",
      value: options.detune
    });
    readOnly(this, "detune");
    this._partials = options.partials;
    this._partialCount = options.partialCount;
    this._type = options.type;
    if (options.partialCount && options.type !== "custom") {
      this._type = this.baseType + options.partialCount.toString();
    }
    this.phase = options.phase;
  }
  static getDefaults() {
    return Object.assign(Source.getDefaults(), {
      detune: 0,
      frequency: 440,
      partialCount: 0,
      partials: [],
      phase: 0,
      type: "sine"
    });
  }
  _start(time) {
    const computedTime = this.toSeconds(time);
    const oscillator = new ToneOscillatorNode({
      context: this.context,
      onended: () => this.onstop(this)
    });
    this._oscillator = oscillator;
    if (this._wave) {
      this._oscillator.setPeriodicWave(this._wave);
    } else {
      this._oscillator.type = this._type;
    }
    this._oscillator.connect(this.output);
    this.frequency.connect(this._oscillator.frequency);
    this.detune.connect(this._oscillator.detune);
    this._oscillator.start(computedTime);
  }
  _stop(time) {
    const computedTime = this.toSeconds(time);
    if (this._oscillator) {
      this._oscillator.stop(computedTime);
    }
  }
  _restart(time) {
    const computedTime = this.toSeconds(time);
    this.log("restart", computedTime);
    if (this._oscillator) {
      this._oscillator.cancelStop();
    }
    this._state.cancel(computedTime);
    return this;
  }
  syncFrequency() {
    this.context.transport.syncSignal(this.frequency);
    return this;
  }
  unsyncFrequency() {
    this.context.transport.unsyncSignal(this.frequency);
    return this;
  }
  _getCachedPeriodicWave() {
    if (this._type === "custom") {
      const oscProps = Oscillator._periodicWaveCache.find((description) => {
        return description.phase === this._phase && deepEquals(description.partials, this._partials);
      });
      return oscProps;
    } else {
      const oscProps = Oscillator._periodicWaveCache.find((description) => {
        return description.type === this._type && description.phase === this._phase;
      });
      this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;
      return oscProps;
    }
  }
  get type() {
    return this._type;
  }
  set type(type) {
    this._type = type;
    const isBasicType = ["sine", "square", "sawtooth", "triangle"].indexOf(type) !== -1;
    if (this._phase === 0 && isBasicType) {
      this._wave = undefined;
      this._partialCount = 0;
      if (this._oscillator !== null) {
        this._oscillator.type = type;
      }
    } else {
      const cache = this._getCachedPeriodicWave();
      if (isDefined(cache)) {
        const { partials, wave } = cache;
        this._wave = wave;
        this._partials = partials;
        if (this._oscillator !== null) {
          this._oscillator.setPeriodicWave(this._wave);
        }
      } else {
        const [real, imag] = this._getRealImaginary(type, this._phase);
        const periodicWave = this.context.createPeriodicWave(real, imag);
        this._wave = periodicWave;
        if (this._oscillator !== null) {
          this._oscillator.setPeriodicWave(this._wave);
        }
        Oscillator._periodicWaveCache.push({
          imag,
          partialCount: this._partialCount,
          partials: this._partials,
          phase: this._phase,
          real,
          type: this._type,
          wave: this._wave
        });
        if (Oscillator._periodicWaveCache.length > 100) {
          Oscillator._periodicWaveCache.shift();
        }
      }
    }
  }
  get baseType() {
    return this._type.replace(this.partialCount.toString(), "");
  }
  set baseType(baseType) {
    if (this.partialCount && this._type !== "custom" && baseType !== "custom") {
      this.type = baseType + this.partialCount;
    } else {
      this.type = baseType;
    }
  }
  get partialCount() {
    return this._partialCount;
  }
  set partialCount(p) {
    assertRange(p, 0);
    let type = this._type;
    const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
    if (partial) {
      type = partial[1];
    }
    if (this._type !== "custom") {
      if (p === 0) {
        this.type = type;
      } else {
        this.type = type + p.toString();
      }
    } else {
      const fullPartials = new Float32Array(p);
      this._partials.forEach((v, i) => fullPartials[i] = v);
      this._partials = Array.from(fullPartials);
      this.type = this._type;
    }
  }
  _getRealImaginary(type, phase) {
    const fftSize = 4096;
    let periodicWaveSize = fftSize / 2;
    const real = new Float32Array(periodicWaveSize);
    const imag = new Float32Array(periodicWaveSize);
    let partialCount = 1;
    if (type === "custom") {
      partialCount = this._partials.length + 1;
      this._partialCount = this._partials.length;
      periodicWaveSize = partialCount;
      if (this._partials.length === 0) {
        return [real, imag];
      }
    } else {
      const partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);
      if (partial) {
        partialCount = parseInt(partial[2], 10) + 1;
        this._partialCount = parseInt(partial[2], 10);
        type = partial[1];
        partialCount = Math.max(partialCount, 2);
        periodicWaveSize = partialCount;
      } else {
        this._partialCount = 0;
      }
      this._partials = [];
    }
    for (let n = 1;n < periodicWaveSize; ++n) {
      const piFactor = 2 / (n * Math.PI);
      let b;
      switch (type) {
        case "sine":
          b = n <= partialCount ? 1 : 0;
          this._partials[n - 1] = b;
          break;
        case "square":
          b = n & 1 ? 2 * piFactor : 0;
          this._partials[n - 1] = b;
          break;
        case "sawtooth":
          b = piFactor * (n & 1 ? 1 : -1);
          this._partials[n - 1] = b;
          break;
        case "triangle":
          if (n & 1) {
            b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);
          } else {
            b = 0;
          }
          this._partials[n - 1] = b;
          break;
        case "custom":
          b = this._partials[n - 1];
          break;
        default:
          throw new TypeError("Oscillator: invalid type: " + type);
      }
      if (b !== 0) {
        real[n] = -b * Math.sin(phase * n);
        imag[n] = b * Math.cos(phase * n);
      } else {
        real[n] = 0;
        imag[n] = 0;
      }
    }
    return [real, imag];
  }
  _inverseFFT(real, imag, phase) {
    let sum = 0;
    const len = real.length;
    for (let i = 0;i < len; i++) {
      sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
    }
    return sum;
  }
  getInitialValue() {
    const [real, imag] = this._getRealImaginary(this._type, 0);
    let maxValue = 0;
    const twoPi = Math.PI * 2;
    const testPositions = 32;
    for (let i = 0;i < testPositions; i++) {
      maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);
    }
    return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);
  }
  get partials() {
    return this._partials.slice(0, this.partialCount);
  }
  set partials(partials) {
    this._partials = partials;
    this._partialCount = this._partials.length;
    if (partials.length) {
      this.type = "custom";
    }
  }
  get phase() {
    return this._phase * (180 / Math.PI);
  }
  set phase(phase) {
    this._phase = phase * Math.PI / 180;
    this.type = this._type;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    if (this._oscillator !== null) {
      this._oscillator.dispose();
    }
    this._wave = undefined;
    this.frequency.dispose();
    this.detune.dispose();
    return this;
  }
}
Oscillator._periodicWaveCache = [];
// node_modules/tone/build/esm/signal/SignalOperator.js
class SignalOperator extends ToneAudioNode {
  constructor() {
    super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, ["context"])));
  }
  connect(destination, outputNum = 0, inputNum = 0) {
    connectSignal(this, destination, outputNum, inputNum);
    return this;
  }
}

// node_modules/tone/build/esm/signal/WaveShaper.js
class WaveShaper extends SignalOperator {
  constructor() {
    super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, ["mapping", "length"])));
    this.name = "WaveShaper";
    this._shaper = this.context.createWaveShaper();
    this.input = this._shaper;
    this.output = this._shaper;
    const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, ["mapping", "length"]);
    if (isArray(options.mapping) || options.mapping instanceof Float32Array) {
      this.curve = Float32Array.from(options.mapping);
    } else if (isFunction(options.mapping)) {
      this.setMap(options.mapping, options.length);
    }
  }
  static getDefaults() {
    return Object.assign(Signal.getDefaults(), {
      length: 1024
    });
  }
  setMap(mapping, length = 1024) {
    const array = new Float32Array(length);
    for (let i = 0, len = length;i < len; i++) {
      const normalized = i / (len - 1) * 2 - 1;
      array[i] = mapping(normalized, i);
    }
    this.curve = array;
    return this;
  }
  get curve() {
    return this._shaper.curve;
  }
  set curve(mapping) {
    this._shaper.curve = mapping;
  }
  get oversample() {
    return this._shaper.oversample;
  }
  set oversample(oversampling) {
    const isOverSampleType = ["none", "2x", "4x"].some((str) => str.includes(oversampling));
    assert(isOverSampleType, "oversampling must be either 'none', '2x', or '4x'");
    this._shaper.oversample = oversampling;
  }
  dispose() {
    super.dispose();
    this._shaper.disconnect();
    return this;
  }
}

// node_modules/tone/build/esm/signal/AudioToGain.js
class AudioToGain extends SignalOperator {
  constructor() {
    super(...arguments);
    this.name = "AudioToGain";
    this._norm = new WaveShaper({
      context: this.context,
      mapping: (x) => (x + 1) / 2
    });
    this.input = this._norm;
    this.output = this._norm;
  }
  dispose() {
    super.dispose();
    this._norm.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/signal/Multiply.js
class Multiply extends Signal {
  constructor() {
    super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, ["value"])));
    this.name = "Multiply";
    this.override = false;
    const options = optionsFromArguments(Multiply.getDefaults(), arguments, ["value"]);
    this._mult = this.input = this.output = new Gain({
      context: this.context,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    this.factor = this._param = this._mult.gain;
    this.factor.setValueAtTime(options.value, 0);
  }
  static getDefaults() {
    return Object.assign(Signal.getDefaults(), {
      value: 0
    });
  }
  dispose() {
    super.dispose();
    this._mult.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/source/oscillator/AMOscillator.js
class AMOscillator extends Source {
  constructor() {
    super(optionsFromArguments(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
    this.name = "AMOscillator";
    this._modulationScale = new AudioToGain({ context: this.context });
    this._modulationNode = new Gain({
      context: this.context
    });
    const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
    this._carrier = new Oscillator({
      context: this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: () => this.onstop(this),
      phase: options.phase,
      type: options.type
    });
    this.frequency = this._carrier.frequency, this.detune = this._carrier.detune;
    this._modulator = new Oscillator({
      context: this.context,
      phase: options.phase,
      type: options.modulationType
    });
    this.harmonicity = new Multiply({
      context: this.context,
      units: "positive",
      value: options.harmonicity
    });
    this.frequency.chain(this.harmonicity, this._modulator.frequency);
    this._modulator.chain(this._modulationScale, this._modulationNode.gain);
    this._carrier.chain(this._modulationNode, this.output);
    readOnly(this, ["frequency", "detune", "harmonicity"]);
  }
  static getDefaults() {
    return Object.assign(Oscillator.getDefaults(), {
      harmonicity: 1,
      modulationType: "square"
    });
  }
  _start(time) {
    this._modulator.start(time);
    this._carrier.start(time);
  }
  _stop(time) {
    this._modulator.stop(time);
    this._carrier.stop(time);
  }
  _restart(time) {
    this._modulator.restart(time);
    this._carrier.restart(time);
  }
  get type() {
    return this._carrier.type;
  }
  set type(type) {
    this._carrier.type = type;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(baseType) {
    this._carrier.baseType = baseType;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(partialCount) {
    this._carrier.partialCount = partialCount;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(type) {
    this._modulator.type = type;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(phase) {
    this._carrier.phase = phase;
    this._modulator.phase = phase;
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(partials) {
    this._carrier.partials = partials;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this.frequency.dispose();
    this.detune.dispose();
    this.harmonicity.dispose();
    this._carrier.dispose();
    this._modulator.dispose();
    this._modulationNode.dispose();
    this._modulationScale.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/source/oscillator/FMOscillator.js
class FMOscillator extends Source {
  constructor() {
    super(optionsFromArguments(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
    this.name = "FMOscillator";
    this._modulationNode = new Gain({
      context: this.context,
      gain: 0
    });
    const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
    this._carrier = new Oscillator({
      context: this.context,
      detune: options.detune,
      frequency: 0,
      onstop: () => this.onstop(this),
      phase: options.phase,
      type: options.type
    });
    this.detune = this._carrier.detune;
    this.frequency = new Signal({
      context: this.context,
      units: "frequency",
      value: options.frequency
    });
    this._modulator = new Oscillator({
      context: this.context,
      phase: options.phase,
      type: options.modulationType
    });
    this.harmonicity = new Multiply({
      context: this.context,
      units: "positive",
      value: options.harmonicity
    });
    this.modulationIndex = new Multiply({
      context: this.context,
      units: "positive",
      value: options.modulationIndex
    });
    this.frequency.connect(this._carrier.frequency);
    this.frequency.chain(this.harmonicity, this._modulator.frequency);
    this.frequency.chain(this.modulationIndex, this._modulationNode);
    this._modulator.connect(this._modulationNode.gain);
    this._modulationNode.connect(this._carrier.frequency);
    this._carrier.connect(this.output);
    this.detune.connect(this._modulator.detune);
    readOnly(this, ["modulationIndex", "frequency", "detune", "harmonicity"]);
  }
  static getDefaults() {
    return Object.assign(Oscillator.getDefaults(), {
      harmonicity: 1,
      modulationIndex: 2,
      modulationType: "square"
    });
  }
  _start(time) {
    this._modulator.start(time);
    this._carrier.start(time);
  }
  _stop(time) {
    this._modulator.stop(time);
    this._carrier.stop(time);
  }
  _restart(time) {
    this._modulator.restart(time);
    this._carrier.restart(time);
    return this;
  }
  get type() {
    return this._carrier.type;
  }
  set type(type) {
    this._carrier.type = type;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(baseType) {
    this._carrier.baseType = baseType;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(partialCount) {
    this._carrier.partialCount = partialCount;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(type) {
    this._modulator.type = type;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(phase) {
    this._carrier.phase = phase;
    this._modulator.phase = phase;
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(partials) {
    this._carrier.partials = partials;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this.frequency.dispose();
    this.harmonicity.dispose();
    this._carrier.dispose();
    this._modulator.dispose();
    this._modulationNode.dispose();
    this.modulationIndex.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/source/oscillator/PulseOscillator.js
class PulseOscillator extends Source {
  constructor() {
    super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]));
    this.name = "PulseOscillator";
    this._widthGate = new Gain({
      context: this.context,
      gain: 0
    });
    this._thresh = new WaveShaper({
      context: this.context,
      mapping: (val) => val <= 0 ? -1 : 1
    });
    const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]);
    this.width = new Signal({
      context: this.context,
      units: "audioRange",
      value: options.width
    });
    this._triangle = new Oscillator({
      context: this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: () => this.onstop(this),
      phase: options.phase,
      type: "triangle"
    });
    this.frequency = this._triangle.frequency;
    this.detune = this._triangle.detune;
    this._triangle.chain(this._thresh, this.output);
    this.width.chain(this._widthGate, this._thresh);
    readOnly(this, ["width", "frequency", "detune"]);
  }
  static getDefaults() {
    return Object.assign(Source.getDefaults(), {
      detune: 0,
      frequency: 440,
      phase: 0,
      type: "pulse",
      width: 0.2
    });
  }
  _start(time) {
    time = this.toSeconds(time);
    this._triangle.start(time);
    this._widthGate.gain.setValueAtTime(1, time);
  }
  _stop(time) {
    time = this.toSeconds(time);
    this._triangle.stop(time);
    this._widthGate.gain.cancelScheduledValues(time);
    this._widthGate.gain.setValueAtTime(0, time);
  }
  _restart(time) {
    this._triangle.restart(time);
    this._widthGate.gain.cancelScheduledValues(time);
    this._widthGate.gain.setValueAtTime(1, time);
  }
  get phase() {
    return this._triangle.phase;
  }
  set phase(phase) {
    this._triangle.phase = phase;
  }
  get type() {
    return "pulse";
  }
  get baseType() {
    return "pulse";
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  set carrierType(type) {
    this._triangle.type = type;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this._triangle.dispose();
    this.width.dispose();
    this._widthGate.dispose();
    this._thresh.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/source/oscillator/FatOscillator.js
class FatOscillator extends Source {
  constructor() {
    super(optionsFromArguments(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]));
    this.name = "FatOscillator";
    this._oscillators = [];
    const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]);
    this.frequency = new Signal({
      context: this.context,
      units: "frequency",
      value: options.frequency
    });
    this.detune = new Signal({
      context: this.context,
      units: "cents",
      value: options.detune
    });
    this._spread = options.spread;
    this._type = options.type;
    this._phase = options.phase;
    this._partials = options.partials;
    this._partialCount = options.partialCount;
    this.count = options.count;
    readOnly(this, ["frequency", "detune"]);
  }
  static getDefaults() {
    return Object.assign(Oscillator.getDefaults(), {
      count: 3,
      spread: 20,
      type: "sawtooth"
    });
  }
  _start(time) {
    time = this.toSeconds(time);
    this._forEach((osc) => osc.start(time));
  }
  _stop(time) {
    time = this.toSeconds(time);
    this._forEach((osc) => osc.stop(time));
  }
  _restart(time) {
    this._forEach((osc) => osc.restart(time));
  }
  _forEach(iterator) {
    for (let i = 0;i < this._oscillators.length; i++) {
      iterator(this._oscillators[i], i);
    }
  }
  get type() {
    return this._type;
  }
  set type(type) {
    this._type = type;
    this._forEach((osc) => osc.type = type);
  }
  get spread() {
    return this._spread;
  }
  set spread(spread) {
    this._spread = spread;
    if (this._oscillators.length > 1) {
      const start = -spread / 2;
      const step = spread / (this._oscillators.length - 1);
      this._forEach((osc, i) => osc.detune.value = start + step * i);
    }
  }
  get count() {
    return this._oscillators.length;
  }
  set count(count) {
    assertRange(count, 1);
    if (this._oscillators.length !== count) {
      this._forEach((osc) => osc.dispose());
      this._oscillators = [];
      for (let i = 0;i < count; i++) {
        const osc = new Oscillator({
          context: this.context,
          volume: -6 - count * 1.1,
          type: this._type,
          phase: this._phase + i / count * 360,
          partialCount: this._partialCount,
          onstop: i === 0 ? () => this.onstop(this) : noOp
        });
        if (this.type === "custom") {
          osc.partials = this._partials;
        }
        this.frequency.connect(osc.frequency);
        this.detune.connect(osc.detune);
        osc.detune.overridden = false;
        osc.connect(this.output);
        this._oscillators[i] = osc;
      }
      this.spread = this._spread;
      if (this.state === "started") {
        this._forEach((osc) => osc.start());
      }
    }
  }
  get phase() {
    return this._phase;
  }
  set phase(phase) {
    this._phase = phase;
    this._forEach((osc, i) => osc.phase = this._phase + i / this.count * 360);
  }
  get baseType() {
    return this._oscillators[0].baseType;
  }
  set baseType(baseType) {
    this._forEach((osc) => osc.baseType = baseType);
    this._type = this._oscillators[0].type;
  }
  get partials() {
    return this._oscillators[0].partials;
  }
  set partials(partials) {
    this._partials = partials;
    this._partialCount = this._partials.length;
    if (partials.length) {
      this._type = "custom";
      this._forEach((osc) => osc.partials = partials);
    }
  }
  get partialCount() {
    return this._oscillators[0].partialCount;
  }
  set partialCount(partialCount) {
    this._partialCount = partialCount;
    this._forEach((osc) => osc.partialCount = partialCount);
    this._type = this._oscillators[0].type;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this.frequency.dispose();
    this.detune.dispose();
    this._forEach((osc) => osc.dispose());
    return this;
  }
}
// node_modules/tone/build/esm/source/oscillator/PWMOscillator.js
class PWMOscillator extends Source {
  constructor() {
    super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]));
    this.name = "PWMOscillator";
    this.sourceType = "pwm";
    this._scale = new Multiply({
      context: this.context,
      value: 2
    });
    const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]);
    this._pulse = new PulseOscillator({
      context: this.context,
      frequency: options.modulationFrequency
    });
    this._pulse.carrierType = "sine";
    this.modulationFrequency = this._pulse.frequency;
    this._modulator = new Oscillator({
      context: this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: () => this.onstop(this),
      phase: options.phase
    });
    this.frequency = this._modulator.frequency;
    this.detune = this._modulator.detune;
    this._modulator.chain(this._scale, this._pulse.width);
    this._pulse.connect(this.output);
    readOnly(this, ["modulationFrequency", "frequency", "detune"]);
  }
  static getDefaults() {
    return Object.assign(Source.getDefaults(), {
      detune: 0,
      frequency: 440,
      modulationFrequency: 0.4,
      phase: 0,
      type: "pwm"
    });
  }
  _start(time) {
    time = this.toSeconds(time);
    this._modulator.start(time);
    this._pulse.start(time);
  }
  _stop(time) {
    time = this.toSeconds(time);
    this._modulator.stop(time);
    this._pulse.stop(time);
  }
  _restart(time) {
    this._modulator.restart(time);
    this._pulse.restart(time);
  }
  get type() {
    return "pwm";
  }
  get baseType() {
    return "pwm";
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  get phase() {
    return this._modulator.phase;
  }
  set phase(phase) {
    this._modulator.phase = phase;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this._pulse.dispose();
    this._scale.dispose();
    this._modulator.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/source/oscillator/OmniOscillator.js
var OmniOscillatorSourceMap = {
  am: AMOscillator,
  fat: FatOscillator,
  fm: FMOscillator,
  oscillator: Oscillator,
  pulse: PulseOscillator,
  pwm: PWMOscillator
};

class OmniOscillator extends Source {
  constructor() {
    super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]));
    this.name = "OmniOscillator";
    const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]);
    this.frequency = new Signal({
      context: this.context,
      units: "frequency",
      value: options.frequency
    });
    this.detune = new Signal({
      context: this.context,
      units: "cents",
      value: options.detune
    });
    readOnly(this, ["frequency", "detune"]);
    this.set(options);
  }
  static getDefaults() {
    return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());
  }
  _start(time) {
    this._oscillator.start(time);
  }
  _stop(time) {
    this._oscillator.stop(time);
  }
  _restart(time) {
    this._oscillator.restart(time);
    return this;
  }
  get type() {
    let prefix = "";
    if (["am", "fm", "fat"].some((p) => this._sourceType === p)) {
      prefix = this._sourceType;
    }
    return prefix + this._oscillator.type;
  }
  set type(type) {
    if (type.substr(0, 2) === "fm") {
      this._createNewOscillator("fm");
      this._oscillator = this._oscillator;
      this._oscillator.type = type.substr(2);
    } else if (type.substr(0, 2) === "am") {
      this._createNewOscillator("am");
      this._oscillator = this._oscillator;
      this._oscillator.type = type.substr(2);
    } else if (type.substr(0, 3) === "fat") {
      this._createNewOscillator("fat");
      this._oscillator = this._oscillator;
      this._oscillator.type = type.substr(3);
    } else if (type === "pwm") {
      this._createNewOscillator("pwm");
      this._oscillator = this._oscillator;
    } else if (type === "pulse") {
      this._createNewOscillator("pulse");
    } else {
      this._createNewOscillator("oscillator");
      this._oscillator = this._oscillator;
      this._oscillator.type = type;
    }
  }
  get partials() {
    return this._oscillator.partials;
  }
  set partials(partials) {
    if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
      this._oscillator.partials = partials;
    }
  }
  get partialCount() {
    return this._oscillator.partialCount;
  }
  set partialCount(partialCount) {
    if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
      this._oscillator.partialCount = partialCount;
    }
  }
  set(props) {
    if (Reflect.has(props, "type") && props.type) {
      this.type = props.type;
    }
    super.set(props);
    return this;
  }
  _createNewOscillator(oscType) {
    if (oscType !== this._sourceType) {
      this._sourceType = oscType;
      const OscConstructor = OmniOscillatorSourceMap[oscType];
      const now = this.now();
      if (this._oscillator) {
        const oldOsc = this._oscillator;
        oldOsc.stop(now);
        this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);
      }
      this._oscillator = new OscConstructor({
        context: this.context
      });
      this.frequency.connect(this._oscillator.frequency);
      this.detune.connect(this._oscillator.detune);
      this._oscillator.connect(this.output);
      this._oscillator.onstop = () => this.onstop(this);
      if (this.state === "started") {
        this._oscillator.start(now);
      }
    }
  }
  get phase() {
    return this._oscillator.phase;
  }
  set phase(phase) {
    this._oscillator.phase = phase;
  }
  get sourceType() {
    return this._sourceType;
  }
  set sourceType(sType) {
    let baseType = "sine";
    if (this._oscillator.type !== "pwm" && this._oscillator.type !== "pulse") {
      baseType = this._oscillator.type;
    }
    if (sType === "fm") {
      this.type = "fm" + baseType;
    } else if (sType === "am") {
      this.type = "am" + baseType;
    } else if (sType === "fat") {
      this.type = "fat" + baseType;
    } else if (sType === "oscillator") {
      this.type = baseType;
    } else if (sType === "pulse") {
      this.type = "pulse";
    } else if (sType === "pwm") {
      this.type = "pwm";
    }
  }
  _getOscType(osc, sourceType) {
    return osc instanceof OmniOscillatorSourceMap[sourceType];
  }
  get baseType() {
    return this._oscillator.baseType;
  }
  set baseType(baseType) {
    if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm") && baseType !== "pulse" && baseType !== "pwm") {
      this._oscillator.baseType = baseType;
    }
  }
  get width() {
    if (this._getOscType(this._oscillator, "pulse")) {
      return this._oscillator.width;
    } else {
      return;
    }
  }
  get count() {
    if (this._getOscType(this._oscillator, "fat")) {
      return this._oscillator.count;
    } else {
      return;
    }
  }
  set count(count) {
    if (this._getOscType(this._oscillator, "fat") && isNumber(count)) {
      this._oscillator.count = count;
    }
  }
  get spread() {
    if (this._getOscType(this._oscillator, "fat")) {
      return this._oscillator.spread;
    } else {
      return;
    }
  }
  set spread(spread) {
    if (this._getOscType(this._oscillator, "fat") && isNumber(spread)) {
      this._oscillator.spread = spread;
    }
  }
  get modulationType() {
    if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
      return this._oscillator.modulationType;
    } else {
      return;
    }
  }
  set modulationType(mType) {
    if ((this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && isString(mType)) {
      this._oscillator.modulationType = mType;
    }
  }
  get modulationIndex() {
    if (this._getOscType(this._oscillator, "fm")) {
      return this._oscillator.modulationIndex;
    } else {
      return;
    }
  }
  get harmonicity() {
    if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
      return this._oscillator.harmonicity;
    } else {
      return;
    }
  }
  get modulationFrequency() {
    if (this._getOscType(this._oscillator, "pwm")) {
      return this._oscillator.modulationFrequency;
    } else {
      return;
    }
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      return generateWaveform(this, length);
    });
  }
  dispose() {
    super.dispose();
    this.detune.dispose();
    this.frequency.dispose();
    this._oscillator.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/core/util/Decorator.js
function range(min, max = Infinity) {
  const valueMap = new WeakMap;
  return function(target, propertyKey) {
    Reflect.defineProperty(target, propertyKey, {
      configurable: true,
      enumerable: true,
      get: function() {
        return valueMap.get(this);
      },
      set: function(newValue) {
        assertRange(newValue, min, max);
        valueMap.set(this, newValue);
      }
    });
  };
}
function timeRange(min, max = Infinity) {
  const valueMap = new WeakMap;
  return function(target, propertyKey) {
    Reflect.defineProperty(target, propertyKey, {
      configurable: true,
      enumerable: true,
      get: function() {
        return valueMap.get(this);
      },
      set: function(newValue) {
        assertRange(this.toSeconds(newValue), min, max);
        valueMap.set(this, newValue);
      }
    });
  };
}

// node_modules/tone/build/esm/source/buffer/Player.js
class Player extends Source {
  constructor() {
    super(optionsFromArguments(Player.getDefaults(), arguments, ["url", "onload"]));
    this.name = "Player";
    this._activeSources = new Set;
    const options = optionsFromArguments(Player.getDefaults(), arguments, ["url", "onload"]);
    this._buffer = new ToneAudioBuffer({
      onload: this._onload.bind(this, options.onload),
      onerror: options.onerror,
      reverse: options.reverse,
      url: options.url
    });
    this.autostart = options.autostart;
    this._loop = options.loop;
    this._loopStart = options.loopStart;
    this._loopEnd = options.loopEnd;
    this._playbackRate = options.playbackRate;
    this.fadeIn = options.fadeIn;
    this.fadeOut = options.fadeOut;
  }
  static getDefaults() {
    return Object.assign(Source.getDefaults(), {
      autostart: false,
      fadeIn: 0,
      fadeOut: 0,
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      onload: noOp,
      onerror: noOp,
      playbackRate: 1,
      reverse: false
    });
  }
  load(url) {
    return __awaiter(this, undefined, undefined, function* () {
      yield this._buffer.load(url);
      this._onload();
      return this;
    });
  }
  _onload(callback = noOp) {
    callback();
    if (this.autostart) {
      this.start();
    }
  }
  _onSourceEnd(source) {
    this.onstop(this);
    this._activeSources.delete(source);
    if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === "started") {
      this._state.cancel(this.now());
      this._state.setStateAtTime("stopped", this.now());
    }
  }
  start(time, offset, duration) {
    super.start(time, offset, duration);
    return this;
  }
  _start(startTime, offset, duration) {
    if (this._loop) {
      offset = defaultArg(offset, this._loopStart);
    } else {
      offset = defaultArg(offset, 0);
    }
    const computedOffset = this.toSeconds(offset);
    const origDuration = duration;
    duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));
    let computedDuration = this.toSeconds(duration);
    computedDuration = computedDuration / this._playbackRate;
    startTime = this.toSeconds(startTime);
    const source = new ToneBufferSource({
      url: this._buffer,
      context: this.context,
      fadeIn: this.fadeIn,
      fadeOut: this.fadeOut,
      loop: this._loop,
      loopEnd: this._loopEnd,
      loopStart: this._loopStart,
      onended: this._onSourceEnd.bind(this),
      playbackRate: this._playbackRate
    }).connect(this.output);
    if (!this._loop && !this._synced) {
      this._state.cancel(startTime + computedDuration);
      this._state.setStateAtTime("stopped", startTime + computedDuration, {
        implicitEnd: true
      });
    }
    this._activeSources.add(source);
    if (this._loop && isUndef(origDuration)) {
      source.start(startTime, computedOffset);
    } else {
      source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));
    }
  }
  _stop(time) {
    const computedTime = this.toSeconds(time);
    this._activeSources.forEach((source) => source.stop(computedTime));
  }
  restart(time, offset, duration) {
    super.restart(time, offset, duration);
    return this;
  }
  _restart(time, offset, duration) {
    this._stop(time);
    this._start(time, offset, duration);
  }
  seek(offset, when) {
    const computedTime = this.toSeconds(when);
    if (this._state.getValueAtTime(computedTime) === "started") {
      const computedOffset = this.toSeconds(offset);
      this._stop(computedTime);
      this._start(computedTime, computedOffset);
    }
    return this;
  }
  setLoopPoints(loopStart, loopEnd) {
    this.loopStart = loopStart;
    this.loopEnd = loopEnd;
    return this;
  }
  get loopStart() {
    return this._loopStart;
  }
  set loopStart(loopStart) {
    this._loopStart = loopStart;
    if (this.buffer.loaded) {
      assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);
    }
    this._activeSources.forEach((source) => {
      source.loopStart = loopStart;
    });
  }
  get loopEnd() {
    return this._loopEnd;
  }
  set loopEnd(loopEnd) {
    this._loopEnd = loopEnd;
    if (this.buffer.loaded) {
      assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);
    }
    this._activeSources.forEach((source) => {
      source.loopEnd = loopEnd;
    });
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(buffer) {
    this._buffer.set(buffer);
  }
  get loop() {
    return this._loop;
  }
  set loop(loop) {
    if (this._loop === loop) {
      return;
    }
    this._loop = loop;
    this._activeSources.forEach((source) => {
      source.loop = loop;
    });
    if (loop) {
      const stopEvent = this._state.getNextState("stopped", this.now());
      if (stopEvent) {
        this._state.cancel(stopEvent.time);
      }
    }
  }
  get playbackRate() {
    return this._playbackRate;
  }
  set playbackRate(rate) {
    this._playbackRate = rate;
    const now = this.now();
    const stopEvent = this._state.getNextState("stopped", now);
    if (stopEvent && stopEvent.implicitEnd) {
      this._state.cancel(stopEvent.time);
      this._activeSources.forEach((source) => source.cancelStop());
    }
    this._activeSources.forEach((source) => {
      source.playbackRate.setValueAtTime(rate, now);
    });
  }
  get reverse() {
    return this._buffer.reverse;
  }
  set reverse(rev) {
    this._buffer.reverse = rev;
  }
  get loaded() {
    return this._buffer.loaded;
  }
  dispose() {
    super.dispose();
    this._activeSources.forEach((source) => source.dispose());
    this._activeSources.clear();
    this._buffer.dispose();
    return this;
  }
}
__decorate([
  timeRange(0)
], Player.prototype, "fadeIn", undefined);
__decorate([
  timeRange(0)
], Player.prototype, "fadeOut", undefined);
// node_modules/tone/build/esm/component/envelope/Envelope.js
class Envelope extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
    this.name = "Envelope";
    this._sig = new Signal({
      context: this.context,
      value: 0
    });
    this.output = this._sig;
    this.input = undefined;
    const options = optionsFromArguments(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
    this.attack = options.attack;
    this.decay = options.decay;
    this.sustain = options.sustain;
    this.release = options.release;
    this.attackCurve = options.attackCurve;
    this.releaseCurve = options.releaseCurve;
    this.decayCurve = options.decayCurve;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      attack: 0.01,
      attackCurve: "linear",
      decay: 0.1,
      decayCurve: "exponential",
      release: 1,
      releaseCurve: "exponential",
      sustain: 0.5
    });
  }
  get value() {
    return this.getValueAtTime(this.now());
  }
  _getCurve(curve, direction) {
    if (isString(curve)) {
      return curve;
    } else {
      let curveName;
      for (curveName in EnvelopeCurves) {
        if (EnvelopeCurves[curveName][direction] === curve) {
          return curveName;
        }
      }
      return curve;
    }
  }
  _setCurve(name, direction, curve) {
    if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {
      const curveDef = EnvelopeCurves[curve];
      if (isObject(curveDef)) {
        if (name !== "_decayCurve") {
          this[name] = curveDef[direction];
        }
      } else {
        this[name] = curveDef;
      }
    } else if (isArray(curve) && name !== "_decayCurve") {
      this[name] = curve;
    } else {
      throw new Error("Envelope: invalid curve: " + curve);
    }
  }
  get attackCurve() {
    return this._getCurve(this._attackCurve, "In");
  }
  set attackCurve(curve) {
    this._setCurve("_attackCurve", "In", curve);
  }
  get releaseCurve() {
    return this._getCurve(this._releaseCurve, "Out");
  }
  set releaseCurve(curve) {
    this._setCurve("_releaseCurve", "Out", curve);
  }
  get decayCurve() {
    return this._decayCurve;
  }
  set decayCurve(curve) {
    assert(["linear", "exponential"].some((c) => c === curve), `Invalid envelope curve: ${curve}`);
    this._decayCurve = curve;
  }
  triggerAttack(time, velocity = 1) {
    this.log("triggerAttack", time, velocity);
    time = this.toSeconds(time);
    const originalAttack = this.toSeconds(this.attack);
    let attack = originalAttack;
    const decay = this.toSeconds(this.decay);
    const currentValue = this.getValueAtTime(time);
    if (currentValue > 0) {
      const attackRate = 1 / attack;
      const remainingDistance = 1 - currentValue;
      attack = remainingDistance / attackRate;
    }
    if (attack < this.sampleTime) {
      this._sig.cancelScheduledValues(time);
      this._sig.setValueAtTime(velocity, time);
    } else if (this._attackCurve === "linear") {
      this._sig.linearRampTo(velocity, attack, time);
    } else if (this._attackCurve === "exponential") {
      this._sig.targetRampTo(velocity, attack, time);
    } else {
      this._sig.cancelAndHoldAtTime(time);
      let curve = this._attackCurve;
      for (let i = 1;i < curve.length; i++) {
        if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {
          curve = this._attackCurve.slice(i);
          curve[0] = currentValue;
          break;
        }
      }
      this._sig.setValueCurveAtTime(curve, time, attack, velocity);
    }
    if (decay && this.sustain < 1) {
      const decayValue = velocity * this.sustain;
      const decayStart = time + attack;
      this.log("decay", decayStart);
      if (this._decayCurve === "linear") {
        this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);
      } else {
        this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);
      }
    }
    return this;
  }
  triggerRelease(time) {
    this.log("triggerRelease", time);
    time = this.toSeconds(time);
    const currentValue = this.getValueAtTime(time);
    if (currentValue > 0) {
      const release = this.toSeconds(this.release);
      if (release < this.sampleTime) {
        this._sig.setValueAtTime(0, time);
      } else if (this._releaseCurve === "linear") {
        this._sig.linearRampTo(0, release, time);
      } else if (this._releaseCurve === "exponential") {
        this._sig.targetRampTo(0, release, time);
      } else {
        assert(isArray(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array");
        this._sig.cancelAndHoldAtTime(time);
        this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);
      }
    }
    return this;
  }
  getValueAtTime(time) {
    return this._sig.getValueAtTime(time);
  }
  triggerAttackRelease(duration, time, velocity = 1) {
    time = this.toSeconds(time);
    this.triggerAttack(time, velocity);
    this.triggerRelease(time + this.toSeconds(duration));
    return this;
  }
  cancel(after) {
    this._sig.cancelScheduledValues(this.toSeconds(after));
    return this;
  }
  connect(destination, outputNumber = 0, inputNumber = 0) {
    connectSignal(this, destination, outputNumber, inputNumber);
    return this;
  }
  asArray(length = 1024) {
    return __awaiter(this, undefined, undefined, function* () {
      const duration = length / this.context.sampleRate;
      const context2 = new OfflineContext(1, duration, this.context.sampleRate);
      const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);
      const envelopeDuration = attackPortion + this.toSeconds(this.release);
      const sustainTime = envelopeDuration * 0.1;
      const totalDuration = envelopeDuration + sustainTime;
      const clone = new this.constructor(Object.assign(this.get(), {
        attack: duration * this.toSeconds(this.attack) / totalDuration,
        decay: duration * this.toSeconds(this.decay) / totalDuration,
        release: duration * this.toSeconds(this.release) / totalDuration,
        context: context2
      }));
      clone._sig.toDestination();
      clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);
      const buffer = yield context2.render();
      return buffer.getChannelData(0);
    });
  }
  dispose() {
    super.dispose();
    this._sig.dispose();
    return this;
  }
}
__decorate([
  timeRange(0)
], Envelope.prototype, "attack", undefined);
__decorate([
  timeRange(0)
], Envelope.prototype, "decay", undefined);
__decorate([
  range(0, 1)
], Envelope.prototype, "sustain", undefined);
__decorate([
  timeRange(0)
], Envelope.prototype, "release", undefined);
var EnvelopeCurves = (() => {
  const curveLen = 128;
  let i;
  let k;
  const cosineCurve = [];
  for (i = 0;i < curveLen; i++) {
    cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));
  }
  const rippleCurve = [];
  const rippleCurveFreq = 6.4;
  for (i = 0;i < curveLen - 1; i++) {
    k = i / (curveLen - 1);
    const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
    rippleCurve[i] = sineWave / 10 + k * 0.83;
  }
  rippleCurve[curveLen - 1] = 1;
  const stairsCurve = [];
  const steps = 5;
  for (i = 0;i < curveLen; i++) {
    stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;
  }
  const sineCurve = [];
  for (i = 0;i < curveLen; i++) {
    k = i / (curveLen - 1);
    sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
  }
  const bounceCurve = [];
  for (i = 0;i < curveLen; i++) {
    k = i / (curveLen - 1);
    const freq = Math.pow(k, 3) * 4 + 0.2;
    const val = Math.cos(freq * Math.PI * 2 * k);
    bounceCurve[i] = Math.abs(val * (1 - k));
  }
  function invertCurve(curve) {
    const out = new Array(curve.length);
    for (let j = 0;j < curve.length; j++) {
      out[j] = 1 - curve[j];
    }
    return out;
  }
  function reverseCurve(curve) {
    return curve.slice(0).reverse();
  }
  return {
    bounce: {
      In: invertCurve(bounceCurve),
      Out: bounceCurve
    },
    cosine: {
      In: cosineCurve,
      Out: reverseCurve(cosineCurve)
    },
    exponential: "exponential",
    linear: "linear",
    ripple: {
      In: rippleCurve,
      Out: invertCurve(rippleCurve)
    },
    sine: {
      In: sineCurve,
      Out: invertCurve(sineCurve)
    },
    step: {
      In: stairsCurve,
      Out: invertCurve(stairsCurve)
    }
  };
})();

// node_modules/tone/build/esm/instrument/Instrument.js
class Instrument extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Instrument.getDefaults(), arguments));
    this._scheduledEvents = [];
    this._synced = false;
    this._original_triggerAttack = this.triggerAttack;
    this._original_triggerRelease = this.triggerRelease;
    const options = optionsFromArguments(Instrument.getDefaults(), arguments);
    this._volume = this.output = new Volume({
      context: this.context,
      volume: options.volume
    });
    this.volume = this._volume.volume;
    readOnly(this, "volume");
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      volume: 0
    });
  }
  sync() {
    if (this._syncState()) {
      this._syncMethod("triggerAttack", 1);
      this._syncMethod("triggerRelease", 0);
    }
    return this;
  }
  _syncState() {
    let changed = false;
    if (!this._synced) {
      this._synced = true;
      changed = true;
    }
    return changed;
  }
  _syncMethod(method, timePosition) {
    const originalMethod = this["_original_" + method] = this[method];
    this[method] = (...args) => {
      const time = args[timePosition];
      const id = this.context.transport.schedule((t) => {
        args[timePosition] = t;
        originalMethod.apply(this, args);
      }, time);
      this._scheduledEvents.push(id);
    };
  }
  unsync() {
    this._scheduledEvents.forEach((id) => this.context.transport.clear(id));
    this._scheduledEvents = [];
    if (this._synced) {
      this._synced = false;
      this.triggerAttack = this._original_triggerAttack;
      this.triggerRelease = this._original_triggerRelease;
    }
    return this;
  }
  triggerAttackRelease(note, duration, time, velocity) {
    const computedTime = this.toSeconds(time);
    const computedDuration = this.toSeconds(duration);
    this.triggerAttack(note, computedTime, velocity);
    this.triggerRelease(computedTime + computedDuration);
    return this;
  }
  dispose() {
    super.dispose();
    this._volume.dispose();
    this.unsync();
    this._scheduledEvents = [];
    return this;
  }
}

// node_modules/tone/build/esm/instrument/Monophonic.js
class Monophonic extends Instrument {
  constructor() {
    super(optionsFromArguments(Monophonic.getDefaults(), arguments));
    const options = optionsFromArguments(Monophonic.getDefaults(), arguments);
    this.portamento = options.portamento;
    this.onsilence = options.onsilence;
  }
  static getDefaults() {
    return Object.assign(Instrument.getDefaults(), {
      detune: 0,
      onsilence: noOp,
      portamento: 0
    });
  }
  triggerAttack(note, time, velocity = 1) {
    this.log("triggerAttack", note, time, velocity);
    const seconds = this.toSeconds(time);
    this._triggerEnvelopeAttack(seconds, velocity);
    this.setNote(note, seconds);
    return this;
  }
  triggerRelease(time) {
    this.log("triggerRelease", time);
    const seconds = this.toSeconds(time);
    this._triggerEnvelopeRelease(seconds);
    return this;
  }
  setNote(note, time) {
    const computedTime = this.toSeconds(time);
    const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;
    if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {
      const portTime = this.toSeconds(this.portamento);
      this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);
    } else {
      this.frequency.setValueAtTime(computedFrequency, computedTime);
    }
    return this;
  }
}
__decorate([
  timeRange(0)
], Monophonic.prototype, "portamento", undefined);

// node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js
class AmplitudeEnvelope extends Envelope {
  constructor() {
    super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
    this.name = "AmplitudeEnvelope";
    this._gainNode = new Gain({
      context: this.context,
      gain: 0
    });
    this.output = this._gainNode;
    this.input = this._gainNode;
    this._sig.connect(this._gainNode.gain);
    this.output = this._gainNode;
    this.input = this._gainNode;
  }
  dispose() {
    super.dispose();
    this._gainNode.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/instrument/Synth.js
class Synth extends Monophonic {
  constructor() {
    super(optionsFromArguments(Synth.getDefaults(), arguments));
    this.name = "Synth";
    const options = optionsFromArguments(Synth.getDefaults(), arguments);
    this.oscillator = new OmniOscillator(Object.assign({
      context: this.context,
      detune: options.detune,
      onstop: () => this.onsilence(this)
    }, options.oscillator));
    this.frequency = this.oscillator.frequency;
    this.detune = this.oscillator.detune;
    this.envelope = new AmplitudeEnvelope(Object.assign({
      context: this.context
    }, options.envelope));
    this.oscillator.chain(this.envelope, this.output);
    readOnly(this, ["oscillator", "frequency", "detune", "envelope"]);
  }
  static getDefaults() {
    return Object.assign(Monophonic.getDefaults(), {
      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {
        attack: 0.005,
        decay: 0.1,
        release: 1,
        sustain: 0.3
      }),
      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), "frequency", "detune"]), {
        type: "triangle"
      })
    });
  }
  _triggerEnvelopeAttack(time, velocity) {
    this.envelope.triggerAttack(time, velocity);
    this.oscillator.start(time);
    if (this.envelope.sustain === 0) {
      const computedAttack = this.toSeconds(this.envelope.attack);
      const computedDecay = this.toSeconds(this.envelope.decay);
      this.oscillator.stop(time + computedAttack + computedDecay);
    }
  }
  _triggerEnvelopeRelease(time) {
    this.envelope.triggerRelease(time);
    this.oscillator.stop(time + this.toSeconds(this.envelope.release));
  }
  getLevelAtTime(time) {
    time = this.toSeconds(time);
    return this.envelope.getValueAtTime(time);
  }
  dispose() {
    super.dispose();
    this.oscillator.dispose();
    this.envelope.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/instrument/MembraneSynth.js
class MembraneSynth extends Synth {
  constructor() {
    super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));
    this.name = "MembraneSynth";
    this.portamento = 0;
    const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);
    this.pitchDecay = options.pitchDecay;
    this.octaves = options.octaves;
    readOnly(this, ["oscillator", "envelope"]);
  }
  static getDefaults() {
    return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {
      envelope: {
        attack: 0.001,
        attackCurve: "exponential",
        decay: 0.4,
        release: 1.4,
        sustain: 0.01
      },
      octaves: 10,
      oscillator: {
        type: "sine"
      },
      pitchDecay: 0.05
    });
  }
  setNote(note, time) {
    const seconds = this.toSeconds(time);
    const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);
    const maxNote = hertz * this.octaves;
    this.oscillator.frequency.setValueAtTime(maxNote, seconds);
    this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));
    return this;
  }
  dispose() {
    super.dispose();
    return this;
  }
}
__decorate([
  range(0)
], MembraneSynth.prototype, "octaves", undefined);
__decorate([
  timeRange(0)
], MembraneSynth.prototype, "pitchDecay", undefined);
// node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js
function addToWorklet(classOrFunction) {
  workletContext.add(classOrFunction);
}
function registerProcessor(name, classDesc) {
  const processor = `registerProcessor("${name}", ${classDesc})`;
  workletContext.add(processor);
}
var workletContext = new Set;

// node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js
var toneAudioWorkletProcessor = `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
addToWorklet(toneAudioWorkletProcessor);

// node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js
var singleIOProcess = `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
addToWorklet(singleIOProcess);

// node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js
var delayLine = `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
addToWorklet(delayLine);

// node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js
var workletName = "feedback-comb-filter";
var feedbackCombFilter = `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
registerProcessor(workletName, feedbackCombFilter);
// node_modules/tone/build/esm/instrument/Sampler.js
class Sampler extends Instrument {
  constructor() {
    super(optionsFromArguments(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls"));
    this.name = "Sampler";
    this._activeSources = new Map;
    const options = optionsFromArguments(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
    const urlMap = {};
    Object.keys(options.urls).forEach((note) => {
      const noteNumber = parseInt(note, 10);
      assert(isNote(note) || isNumber(noteNumber) && isFinite(noteNumber), `url key is neither a note or midi pitch: ${note}`);
      if (isNote(note)) {
        const mid = new FrequencyClass(this.context, note).toMidi();
        urlMap[mid] = options.urls[note];
      } else if (isNumber(noteNumber) && isFinite(noteNumber)) {
        urlMap[noteNumber] = options.urls[noteNumber];
      }
    });
    this._buffers = new ToneAudioBuffers({
      urls: urlMap,
      onload: options.onload,
      baseUrl: options.baseUrl,
      onerror: options.onerror
    });
    this.attack = options.attack;
    this.release = options.release;
    this.curve = options.curve;
    if (this._buffers.loaded) {
      Promise.resolve().then(options.onload);
    }
  }
  static getDefaults() {
    return Object.assign(Instrument.getDefaults(), {
      attack: 0,
      baseUrl: "",
      curve: "exponential",
      onload: noOp,
      onerror: noOp,
      release: 0.1,
      urls: {}
    });
  }
  _findClosest(midi) {
    const MAX_INTERVAL = 96;
    let interval = 0;
    while (interval < MAX_INTERVAL) {
      if (this._buffers.has(midi + interval)) {
        return -interval;
      } else if (this._buffers.has(midi - interval)) {
        return interval;
      }
      interval++;
    }
    throw new Error(`No available buffers for note: ${midi}`);
  }
  triggerAttack(notes, time, velocity = 1) {
    this.log("triggerAttack", notes, time, velocity);
    if (!Array.isArray(notes)) {
      notes = [notes];
    }
    notes.forEach((note) => {
      const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());
      const midi = Math.round(midiFloat);
      const remainder = midiFloat - midi;
      const difference = this._findClosest(midi);
      const closestNote = midi - difference;
      const buffer = this._buffers.get(closestNote);
      const playbackRate = intervalToFrequencyRatio(difference + remainder);
      const source = new ToneBufferSource({
        url: buffer,
        context: this.context,
        curve: this.curve,
        fadeIn: this.attack,
        fadeOut: this.release,
        playbackRate
      }).connect(this.output);
      source.start(time, 0, buffer.duration / playbackRate, velocity);
      if (!isArray(this._activeSources.get(midi))) {
        this._activeSources.set(midi, []);
      }
      this._activeSources.get(midi).push(source);
      source.onended = () => {
        if (this._activeSources && this._activeSources.has(midi)) {
          const sources = this._activeSources.get(midi);
          const index = sources.indexOf(source);
          if (index !== -1) {
            sources.splice(index, 1);
          }
        }
      };
    });
    return this;
  }
  triggerRelease(notes, time) {
    this.log("triggerRelease", notes, time);
    if (!Array.isArray(notes)) {
      notes = [notes];
    }
    notes.forEach((note) => {
      const midi = new FrequencyClass(this.context, note).toMidi();
      if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {
        const sources = this._activeSources.get(midi);
        time = this.toSeconds(time);
        sources.forEach((source) => {
          source.stop(time);
        });
        this._activeSources.set(midi, []);
      }
    });
    return this;
  }
  releaseAll(time) {
    const computedTime = this.toSeconds(time);
    this._activeSources.forEach((sources) => {
      while (sources.length) {
        const source = sources.shift();
        source.stop(computedTime);
      }
    });
    return this;
  }
  sync() {
    if (this._syncState()) {
      this._syncMethod("triggerAttack", 1);
      this._syncMethod("triggerRelease", 1);
    }
    return this;
  }
  triggerAttackRelease(notes, duration, time, velocity = 1) {
    const computedTime = this.toSeconds(time);
    this.triggerAttack(notes, computedTime, velocity);
    if (isArray(duration)) {
      assert(isArray(notes), "notes must be an array when duration is array");
      notes.forEach((note, index) => {
        const d = duration[Math.min(index, duration.length - 1)];
        this.triggerRelease(note, computedTime + this.toSeconds(d));
      });
    } else {
      this.triggerRelease(notes, computedTime + this.toSeconds(duration));
    }
    return this;
  }
  add(note, url, callback) {
    assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);
    if (isNote(note)) {
      const mid = new FrequencyClass(this.context, note).toMidi();
      this._buffers.add(mid, url, callback);
    } else {
      this._buffers.add(note, url, callback);
    }
    return this;
  }
  get loaded() {
    return this._buffers.loaded;
  }
  dispose() {
    super.dispose();
    this._buffers.dispose();
    this._activeSources.forEach((sources) => {
      sources.forEach((source) => source.dispose());
    });
    this._activeSources.clear();
    return this;
  }
}
__decorate([
  timeRange(0)
], Sampler.prototype, "attack", undefined);
__decorate([
  timeRange(0)
], Sampler.prototype, "release", undefined);
// node_modules/tone/build/esm/component/channel/Panner.js
class Panner extends ToneAudioNode {
  constructor() {
    super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, ["pan"])));
    this.name = "Panner";
    this._panner = this.context.createStereoPanner();
    this.input = this._panner;
    this.output = this._panner;
    const options = optionsFromArguments(Panner.getDefaults(), arguments, ["pan"]);
    this.pan = new Param({
      context: this.context,
      param: this._panner.pan,
      value: options.pan,
      minValue: -1,
      maxValue: 1
    });
    this._panner.channelCount = options.channelCount;
    this._panner.channelCountMode = "explicit";
    readOnly(this, "pan");
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      pan: 0,
      channelCount: 1
    });
  }
  dispose() {
    super.dispose();
    this._panner.disconnect();
    this.pan.dispose();
    return this;
  }
}
// node_modules/tone/build/esm/effect/BitCrusher.worklet.js
var workletName2 = "bit-crusher";
var bitCrusherWorklet = `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
registerProcessor(workletName2, bitCrusherWorklet);
// node_modules/tone/build/esm/effect/Freeverb.js
var combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];
// node_modules/tone/build/esm/effect/JCReverb.js
var combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];
// node_modules/tone/build/esm/component/channel/Solo.js
class Solo extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Solo.getDefaults(), arguments, ["solo"]));
    this.name = "Solo";
    const options = optionsFromArguments(Solo.getDefaults(), arguments, ["solo"]);
    this.input = this.output = new Gain({
      context: this.context
    });
    if (!Solo._allSolos.has(this.context)) {
      Solo._allSolos.set(this.context, new Set);
    }
    Solo._allSolos.get(this.context).add(this);
    this.solo = options.solo;
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      solo: false
    });
  }
  get solo() {
    return this._isSoloed();
  }
  set solo(solo) {
    if (solo) {
      this._addSolo();
    } else {
      this._removeSolo();
    }
    Solo._allSolos.get(this.context).forEach((instance) => instance._updateSolo());
  }
  get muted() {
    return this.input.gain.value === 0;
  }
  _addSolo() {
    if (!Solo._soloed.has(this.context)) {
      Solo._soloed.set(this.context, new Set);
    }
    Solo._soloed.get(this.context).add(this);
  }
  _removeSolo() {
    if (Solo._soloed.has(this.context)) {
      Solo._soloed.get(this.context).delete(this);
    }
  }
  _isSoloed() {
    return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);
  }
  _noSolos() {
    return !Solo._soloed.has(this.context) || Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;
  }
  _updateSolo() {
    if (this._isSoloed()) {
      this.input.gain.value = 1;
    } else if (this._noSolos()) {
      this.input.gain.value = 1;
    } else {
      this.input.gain.value = 0;
    }
  }
  dispose() {
    super.dispose();
    Solo._allSolos.get(this.context).delete(this);
    this._removeSolo();
    return this;
  }
}
Solo._allSolos = new Map;
Solo._soloed = new Map;

// node_modules/tone/build/esm/component/channel/PanVol.js
class PanVol extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(PanVol.getDefaults(), arguments, ["pan", "volume"]));
    this.name = "PanVol";
    const options = optionsFromArguments(PanVol.getDefaults(), arguments, ["pan", "volume"]);
    this._panner = this.input = new Panner({
      context: this.context,
      pan: options.pan,
      channelCount: options.channelCount
    });
    this.pan = this._panner.pan;
    this._volume = this.output = new Volume({
      context: this.context,
      volume: options.volume
    });
    this.volume = this._volume.volume;
    this._panner.connect(this._volume);
    this.mute = options.mute;
    readOnly(this, ["pan", "volume"]);
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      mute: false,
      pan: 0,
      volume: 0,
      channelCount: 1
    });
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(mute) {
    this._volume.mute = mute;
  }
  dispose() {
    super.dispose();
    this._panner.dispose();
    this.pan.dispose();
    this._volume.dispose();
    this.volume.dispose();
    return this;
  }
}

// node_modules/tone/build/esm/component/channel/Channel.js
class Channel extends ToneAudioNode {
  constructor() {
    super(optionsFromArguments(Channel.getDefaults(), arguments, ["volume", "pan"]));
    this.name = "Channel";
    const options = optionsFromArguments(Channel.getDefaults(), arguments, ["volume", "pan"]);
    this._solo = this.input = new Solo({
      solo: options.solo,
      context: this.context
    });
    this._panVol = this.output = new PanVol({
      context: this.context,
      pan: options.pan,
      volume: options.volume,
      mute: options.mute,
      channelCount: options.channelCount
    });
    this.pan = this._panVol.pan;
    this.volume = this._panVol.volume;
    this._solo.connect(this._panVol);
    readOnly(this, ["pan", "volume"]);
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      pan: 0,
      volume: 0,
      mute: false,
      solo: false,
      channelCount: 1
    });
  }
  get solo() {
    return this._solo.solo;
  }
  set solo(solo) {
    this._solo.solo = solo;
  }
  get muted() {
    return this._solo.muted || this.mute;
  }
  get mute() {
    return this._panVol.mute;
  }
  set mute(mute) {
    this._panVol.mute = mute;
  }
  _getBus(name) {
    if (!Channel.buses.has(name)) {
      Channel.buses.set(name, new Gain({ context: this.context }));
    }
    return Channel.buses.get(name);
  }
  send(name, volume = 0) {
    const bus = this._getBus(name);
    const sendKnob = new Gain({
      context: this.context,
      units: "decibels",
      gain: volume
    });
    this.connect(sendKnob);
    sendKnob.connect(bus);
    return sendKnob;
  }
  receive(name) {
    const bus = this._getBus(name);
    bus.connect(this);
    return this;
  }
  dispose() {
    super.dispose();
    this._panVol.dispose();
    this.pan.dispose();
    this.volume.dispose();
    this._solo.dispose();
    return this;
  }
}
Channel.buses = new Map;
// node_modules/tone/build/esm/core/context/Listener.js
class Listener extends ToneAudioNode {
  constructor() {
    super(...arguments);
    this.name = "Listener";
    this.positionX = new Param({
      context: this.context,
      param: this.context.rawContext.listener.positionX
    });
    this.positionY = new Param({
      context: this.context,
      param: this.context.rawContext.listener.positionY
    });
    this.positionZ = new Param({
      context: this.context,
      param: this.context.rawContext.listener.positionZ
    });
    this.forwardX = new Param({
      context: this.context,
      param: this.context.rawContext.listener.forwardX
    });
    this.forwardY = new Param({
      context: this.context,
      param: this.context.rawContext.listener.forwardY
    });
    this.forwardZ = new Param({
      context: this.context,
      param: this.context.rawContext.listener.forwardZ
    });
    this.upX = new Param({
      context: this.context,
      param: this.context.rawContext.listener.upX
    });
    this.upY = new Param({
      context: this.context,
      param: this.context.rawContext.listener.upY
    });
    this.upZ = new Param({
      context: this.context,
      param: this.context.rawContext.listener.upZ
    });
  }
  static getDefaults() {
    return Object.assign(ToneAudioNode.getDefaults(), {
      positionX: 0,
      positionY: 0,
      positionZ: 0,
      forwardX: 0,
      forwardY: 0,
      forwardZ: -1,
      upX: 0,
      upY: 1,
      upZ: 0
    });
  }
  dispose() {
    super.dispose();
    this.positionX.dispose();
    this.positionY.dispose();
    this.positionZ.dispose();
    this.forwardX.dispose();
    this.forwardY.dispose();
    this.forwardZ.dispose();
    this.upX.dispose();
    this.upY.dispose();
    this.upZ.dispose();
    return this;
  }
}
onContextInit((context2) => {
  context2.listener = new Listener({ context: context2 });
});
onContextClose((context2) => {
  context2.listener.dispose();
});
// node_modules/tone/build/esm/index.js
var Transport4 = getContext().transport;
var Destination3 = getContext().destination;
var Master = getContext().destination;
var Listener3 = getContext().listener;
var Draw3 = getContext().draw;
var context2 = getContext();

// src/index.ts
var import_p5 = __toESM(require_p5_min(), 1);

// src/watch.ts
var watch = function() {
  const ws = new WebSocket("ws://localhost:8080/ws");
  ws.onopen = () => {
    ws.send("Ricardo");
  };
  ws.onmessage = (event2) => {
    console.log(`Message from server: ${event2.data}`);
    if (event2.data === "update")
      location.reload();
  };
  ws.onclose = () => {
    console.log("WebSocket closed");
  };
  ws.onerror = (event2) => {
    console.error("WebSocket error observed:", event2);
  };
};

// src/index.ts
var setup = function() {
  createCanvas(400, 400);
};
var draw = function() {
  background(0);
  ellipse(x, y, 50, 50);
  x += speed;
  y += speed;
  if (x > width)
    x = 0;
  if (y > height)
    y = 0;
};
var playNote = function(note, time, delay) {
  console.log(note, time, delay);
  synth.triggerAttackRelease(note, `${time}n`, delay ? `+${delay}n` : undefined);
};
watch();
var synth = new Synth().toDestination();
var x = 50;
var y = 50;
var speed = 3;
new import_p5.default((p) => {
  p.mouseClicked = () => {
    const song = [
      "Db5",
      "Bb4",
      "F4"
    ];
    const noteType = 8;
    song.forEach((note, i) => {
      playNote(note, noteType, i * noteType);
    });
  };
  p.setup = setup;
  p.draw = draw;
});
